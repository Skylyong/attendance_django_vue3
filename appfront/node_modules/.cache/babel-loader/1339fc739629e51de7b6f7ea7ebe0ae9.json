{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport { createCommentVNode, defineComponent, h, ref, inject, nextTick, onBeforeUnmount, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { VXETable } from '../../v-x-e-table';\nimport { mergeBodyMethod, getRowid, getPropClass, removeScrollListener, restoreScrollListener } from './util';\nimport { updateCellTitle } from '../../tools/dom';\nimport { isEnableConf } from '../../tools/utils';\nvar renderType = 'body';\nvar lineOffsetSizes = {\n  mini: 3,\n  small: 2,\n  medium: 1\n};\nexport default defineComponent({\n  name: 'VxeTableBody',\n  props: {\n    tableData: Array,\n    tableColumn: Array,\n    fixedColumn: Array,\n    fixedType: {\n      type: String,\n      default: null\n    }\n  },\n  setup: function (props) {\n    var $xetable = inject('$xetable', {});\n    var xesize = inject('xesize', null);\n    var xID = $xetable.xID,\n        tableProps = $xetable.props,\n        tableContext = $xetable.context,\n        tableReactData = $xetable.reactData,\n        tableInternalData = $xetable.internalData;\n\n    var _a = $xetable.getRefMaps(),\n        refTableHeader = _a.refTableHeader,\n        refTableBody = _a.refTableBody,\n        refTableFooter = _a.refTableFooter,\n        refTableLeftBody = _a.refTableLeftBody,\n        refTableRightBody = _a.refTableRightBody,\n        refValidTooltip = _a.refValidTooltip;\n\n    var _b = $xetable.getComputeMaps(),\n        computeEditOpts = _b.computeEditOpts,\n        computeMouseOpts = _b.computeMouseOpts,\n        computeSYOpts = _b.computeSYOpts,\n        computeEmptyOpts = _b.computeEmptyOpts,\n        computeKeyboardOpts = _b.computeKeyboardOpts,\n        computeTooltipOpts = _b.computeTooltipOpts,\n        computeRadioOpts = _b.computeRadioOpts,\n        computeTreeOpts = _b.computeTreeOpts,\n        computeCheckboxOpts = _b.computeCheckboxOpts,\n        computeValidOpts = _b.computeValidOpts,\n        computeRowOpts = _b.computeRowOpts,\n        computeColumnOpts = _b.computeColumnOpts;\n\n    var refElem = ref();\n    var refBodyTable = ref();\n    var refBodyColgroup = ref();\n    var refBodyTBody = ref();\n    var refBodyXSpace = ref();\n    var refBodyYSpace = ref();\n    var refBodyEmptyBlock = ref();\n\n    var getOffsetSize = function () {\n      if (xesize) {\n        var vSize = xesize.value;\n\n        if (vSize) {\n          return lineOffsetSizes[vSize] || 0;\n        }\n      }\n\n      return 0;\n    };\n\n    var countTreeExpand = function (prevRow, params) {\n      var count = 1;\n\n      if (!prevRow) {\n        return count;\n      }\n\n      var treeOpts = computeTreeOpts.value;\n      var rowChildren = prevRow[treeOpts.children];\n\n      if ($xetable.isTreeExpandByRow(prevRow)) {\n        for (var index = 0; index < rowChildren.length; index++) {\n          count += countTreeExpand(rowChildren[index], params);\n        }\n      }\n\n      return count;\n    };\n\n    var calcTreeLine = function (params, items, rIndex) {\n      var expandSize = 1;\n\n      if (rIndex) {\n        expandSize = countTreeExpand(items[rIndex - 1], params);\n      }\n\n      return tableReactData.rowHeight * expandSize - (rIndex ? 1 : 12 - getOffsetSize());\n    }; // 滚动、拖动过程中不需要触发\n\n\n    var isOperateMouse = function () {\n      var delayHover = tableProps.delayHover;\n      var lastScrollTime = tableInternalData.lastScrollTime,\n          _isResize = tableInternalData._isResize;\n      return _isResize || lastScrollTime && Date.now() < lastScrollTime + delayHover;\n    };\n\n    var renderLine = function (params) {\n      var row = params.row,\n          column = params.column;\n      var treeConfig = tableProps.treeConfig;\n      var treeOpts = computeTreeOpts.value;\n      var slots = column.slots,\n          treeNode = column.treeNode;\n      var fullAllDataRowIdData = tableInternalData.fullAllDataRowIdData;\n      var rowid = getRowid($xetable, row);\n      var rest = fullAllDataRowIdData[rowid];\n      var rLevel = 0;\n      var rIndex = 0;\n      var items = [];\n\n      if (rest) {\n        rLevel = rest.level;\n        rIndex = rest._index;\n        items = rest.items;\n      }\n\n      if (slots && slots.line) {\n        return $xetable.callSlot(slots.line, params);\n      }\n\n      if (treeConfig && treeNode && treeOpts.line) {\n        return [h('div', {\n          class: 'vxe-tree--line-wrapper'\n        }, [h('div', {\n          class: 'vxe-tree--line',\n          style: {\n            height: calcTreeLine(params, items, rIndex) + \"px\",\n            left: rLevel * treeOpts.indent + (rLevel ? 2 - getOffsetSize() : 0) + 16 + \"px\"\n          }\n        })])];\n      }\n\n      return [];\n    };\n    /**\n     * 渲染列\n     */\n\n\n    var renderColumn = function (seq, rowid, fixedType, rowLevel, row, rowIndex, $rowIndex, _rowIndex, column, $columnIndex, columns, items) {\n      var _a;\n\n      var columnKey = tableProps.columnKey,\n          height = tableProps.height,\n          allColumnOverflow = tableProps.showOverflow,\n          cellClassName = tableProps.cellClassName,\n          cellStyle = tableProps.cellStyle,\n          allAlign = tableProps.align,\n          spanMethod = tableProps.spanMethod,\n          mouseConfig = tableProps.mouseConfig,\n          editConfig = tableProps.editConfig,\n          editRules = tableProps.editRules,\n          tooltipConfig = tableProps.tooltipConfig;\n      var tableData = tableReactData.tableData,\n          overflowX = tableReactData.overflowX,\n          scrollYLoad = tableReactData.scrollYLoad,\n          currentColumn = tableReactData.currentColumn,\n          mergeList = tableReactData.mergeList,\n          editStore = tableReactData.editStore,\n          validStore = tableReactData.validStore,\n          isAllOverflow = tableReactData.isAllOverflow;\n      var afterFullData = tableInternalData.afterFullData;\n      var validOpts = computeValidOpts.value;\n      var checkboxOpts = computeCheckboxOpts.value;\n      var editOpts = computeEditOpts.value;\n      var tooltipOpts = computeTooltipOpts.value;\n      var rowOpts = computeRowOpts.value;\n      var sYOpts = computeSYOpts.value;\n      var columnOpts = computeColumnOpts.value;\n      var type = column.type,\n          cellRender = column.cellRender,\n          editRender = column.editRender,\n          align = column.align,\n          showOverflow = column.showOverflow,\n          className = column.className,\n          treeNode = column.treeNode;\n      var actived = editStore.actived;\n      var scrollYRHeight = sYOpts.rHeight;\n      var rowHeight = rowOpts.height;\n      var showAllTip = tooltipOpts.showAll;\n      var columnIndex = $xetable.getColumnIndex(column);\n\n      var _columnIndex = $xetable.getVTColumnIndex(column);\n\n      var isEdit = isEnableConf(editRender);\n      var fixedHiddenColumn = fixedType ? column.fixed !== fixedType : column.fixed && overflowX;\n      var cellOverflow = XEUtils.isUndefined(showOverflow) || XEUtils.isNull(showOverflow) ? allColumnOverflow : showOverflow;\n      var showEllipsis = cellOverflow === 'ellipsis';\n      var showTitle = cellOverflow === 'title';\n      var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';\n      var hasEllipsis = showTitle || showTooltip || showEllipsis;\n      var isDirty;\n      var tdOns = {};\n      var cellAlign = align || allAlign;\n      var hasValidError = validStore.row === row && validStore.column === column;\n      var showValidTip = editRules && validOpts.showMessage && (validOpts.message === 'default' ? height || tableData.length > 1 : validOpts.message === 'inline');\n      var attrs = {\n        colid: column.id\n      };\n      var params = {\n        $table: $xetable,\n        seq: seq,\n        rowid: rowid,\n        row: row,\n        rowIndex: rowIndex,\n        $rowIndex: $rowIndex,\n        _rowIndex: _rowIndex,\n        column: column,\n        columnIndex: columnIndex,\n        $columnIndex: $columnIndex,\n        _columnIndex: _columnIndex,\n        fixed: fixedType,\n        type: renderType,\n        isHidden: fixedHiddenColumn,\n        level: rowLevel,\n        visibleData: afterFullData,\n        data: tableData,\n        items: items\n      }; // 虚拟滚动不支持动态高度\n\n      if (scrollYLoad && !hasEllipsis) {\n        showEllipsis = hasEllipsis = true;\n      } // hover 进入事件\n\n\n      if (showTitle || showTooltip || showAllTip || tooltipConfig) {\n        tdOns.onMouseenter = function (evnt) {\n          if (isOperateMouse()) {\n            return;\n          }\n\n          if (showTitle) {\n            updateCellTitle(evnt.currentTarget, column);\n          } else if (showTooltip || showAllTip) {\n            // 如果配置了显示 tooltip\n            $xetable.triggerBodyTooltipEvent(evnt, params);\n          }\n\n          $xetable.dispatchEvent('cell-mouseenter', Object.assign({\n            cell: evnt.currentTarget\n          }, params), evnt);\n        };\n      } // hover 退出事件\n\n\n      if (showTooltip || showAllTip || tooltipConfig) {\n        tdOns.onMouseleave = function (evnt) {\n          if (isOperateMouse()) {\n            return;\n          }\n\n          if (showTooltip || showAllTip) {\n            $xetable.handleTargetLeaveEvent(evnt);\n          }\n\n          $xetable.dispatchEvent('cell-mouseleave', Object.assign({\n            cell: evnt.currentTarget\n          }, params), evnt);\n        };\n      } // 按下事件处理\n\n\n      if (checkboxOpts.range || mouseConfig) {\n        tdOns.onMousedown = function (evnt) {\n          $xetable.triggerCellMousedownEvent(evnt, params);\n        };\n      } // 点击事件处理\n\n\n      tdOns.onClick = function (evnt) {\n        $xetable.triggerCellClickEvent(evnt, params);\n      }; // 双击事件处理\n\n\n      tdOns.onDblclick = function (evnt) {\n        $xetable.triggerCellDblclickEvent(evnt, params);\n      }; // 合并行或列\n\n\n      if (mergeList.length) {\n        var spanRest = mergeBodyMethod(mergeList, _rowIndex, _columnIndex);\n\n        if (spanRest) {\n          var rowspan = spanRest.rowspan,\n              colspan = spanRest.colspan;\n\n          if (!rowspan || !colspan) {\n            return null;\n          }\n\n          if (rowspan > 1) {\n            attrs.rowspan = rowspan;\n          }\n\n          if (colspan > 1) {\n            attrs.colspan = colspan;\n          }\n        }\n      } else if (spanMethod) {\n        // 自定义合并行或列的方法\n        var _b = spanMethod(params) || {},\n            _c = _b.rowspan,\n            rowspan = _c === void 0 ? 1 : _c,\n            _d = _b.colspan,\n            colspan = _d === void 0 ? 1 : _d;\n\n        if (!rowspan || !colspan) {\n          return null;\n        }\n\n        if (rowspan > 1) {\n          attrs.rowspan = rowspan;\n        }\n\n        if (colspan > 1) {\n          attrs.colspan = colspan;\n        }\n      } // 如果被合并不可隐藏\n\n\n      if (fixedHiddenColumn && mergeList) {\n        if (attrs.colspan > 1 || attrs.rowspan > 1) {\n          fixedHiddenColumn = false;\n        }\n      } // 如果编辑列开启显示状态\n\n\n      if (!fixedHiddenColumn && editConfig && (editRender || cellRender) && (editOpts.showStatus || editOpts.showUpdateStatus)) {\n        isDirty = $xetable.isUpdateByRow(row, column.property);\n      }\n\n      var tdVNs = [];\n\n      if (fixedHiddenColumn && (allColumnOverflow ? isAllOverflow : allColumnOverflow)) {\n        tdVNs.push(h('div', {\n          class: ['vxe-cell', {\n            'c--title': showTitle,\n            'c--tooltip': showTooltip,\n            'c--ellipsis': showEllipsis\n          }],\n          style: {\n            maxHeight: hasEllipsis && (scrollYRHeight || rowHeight) ? (scrollYRHeight || rowHeight) + \"px\" : ''\n          }\n        }));\n      } else {\n        // 渲染单元格\n        tdVNs.push.apply(tdVNs, __spreadArray(__spreadArray([], renderLine(params)), [h('div', {\n          class: ['vxe-cell', {\n            'c--title': showTitle,\n            'c--tooltip': showTooltip,\n            'c--ellipsis': showEllipsis\n          }],\n          style: {\n            maxHeight: hasEllipsis && (scrollYRHeight || rowHeight) ? (scrollYRHeight || rowHeight) + \"px\" : ''\n          },\n          title: showTitle ? $xetable.getCellLabel(row, column) : null\n        }, column.renderCell(params))]));\n\n        if (showValidTip && hasValidError) {\n          tdVNs.push(h('div', {\n            class: 'vxe-cell--valid',\n            style: validStore.rule && validStore.rule.maxWidth ? {\n              width: validStore.rule.maxWidth + \"px\"\n            } : null\n          }, [h('span', {\n            class: 'vxe-cell--valid-msg'\n          }, validStore.content)]));\n        }\n      }\n\n      return h('td', __assign(__assign(__assign({\n        class: ['vxe-body--column', column.id, (_a = {}, _a[\"col--\" + cellAlign] = cellAlign, _a[\"col--\" + type] = type, _a['col--last'] = $columnIndex === columns.length - 1, _a['col--tree-node'] = treeNode, _a['col--edit'] = isEdit, _a['col--ellipsis'] = hasEllipsis, _a['fixed--hidden'] = fixedHiddenColumn, _a['col--dirty'] = isDirty, _a['col--actived'] = editConfig && isEdit && actived.row === row && (actived.column === column || editOpts.mode === 'row'), _a['col--valid-error'] = hasValidError, _a['col--current'] = currentColumn === column, _a), getPropClass(className, params), getPropClass(cellClassName, params)],\n        key: columnKey || columnOpts.useKey ? column.id : $columnIndex\n      }, attrs), {\n        style: Object.assign({\n          height: hasEllipsis && (scrollYRHeight || rowHeight) ? (scrollYRHeight || rowHeight) + \"px\" : ''\n        }, cellStyle ? XEUtils.isFunction(cellStyle) ? cellStyle(params) : cellStyle : null)\n      }), tdOns), tdVNs);\n    };\n\n    var renderRows = function (fixedType, tableData, tableColumn) {\n      var stripe = tableProps.stripe,\n          rowKey = tableProps.rowKey,\n          highlightHoverRow = tableProps.highlightHoverRow,\n          rowClassName = tableProps.rowClassName,\n          rowStyle = tableProps.rowStyle,\n          allColumnOverflow = tableProps.showOverflow,\n          editConfig = tableProps.editConfig,\n          treeConfig = tableProps.treeConfig;\n      var hasFixedColumn = tableReactData.hasFixedColumn,\n          treeExpandeds = tableReactData.treeExpandeds,\n          scrollYLoad = tableReactData.scrollYLoad,\n          editStore = tableReactData.editStore,\n          rowExpandeds = tableReactData.rowExpandeds,\n          expandColumn = tableReactData.expandColumn,\n          selectRow = tableReactData.selectRow;\n      var fullAllDataRowIdData = tableInternalData.fullAllDataRowIdData;\n      var checkboxOpts = computeCheckboxOpts.value;\n      var radioOpts = computeRadioOpts.value;\n      var treeOpts = computeTreeOpts.value;\n      var editOpts = computeEditOpts.value;\n      var rowOpts = computeRowOpts.value;\n      var transform = treeOpts.transform;\n      var rows = [];\n      tableData.forEach(function (row, $rowIndex) {\n        var trOn = {};\n        var rowIndex = $rowIndex; // 确保任何情况下 rowIndex 都精准指向真实 data 索引\n\n        rowIndex = $xetable.getRowIndex(row); // 事件绑定\n\n        if (rowOpts.isHover || highlightHoverRow) {\n          trOn.onMouseenter = function (evnt) {\n            if (isOperateMouse()) {\n              return;\n            }\n\n            $xetable.triggerHoverEvent(evnt, {\n              row: row,\n              rowIndex: rowIndex\n            });\n          };\n\n          trOn.onMouseleave = function () {\n            if (isOperateMouse()) {\n              return;\n            }\n\n            $xetable.clearHoverRow();\n          };\n        }\n\n        var rowid = getRowid($xetable, row);\n        var rest = fullAllDataRowIdData[rowid];\n        var rowLevel = 0;\n        var seq = -1;\n        var _rowIndex = 0;\n\n        if (rest) {\n          rowLevel = rest.level;\n          seq = rest.seq;\n          _rowIndex = rest._index;\n        }\n\n        var params = {\n          $table: $xetable,\n          seq: seq,\n          rowid: rowid,\n          fixed: fixedType,\n          type: renderType,\n          level: rowLevel,\n          row: row,\n          rowIndex: rowIndex,\n          $rowIndex: $rowIndex,\n          _rowIndex: _rowIndex\n        }; // 处理新增状态\n\n        var isNewRow = false;\n\n        if (editConfig) {\n          isNewRow = $xetable.findRowIndexOf(editStore.insertList, row) > -1;\n        }\n\n        rows.push(h('tr', __assign({\n          class: ['vxe-body--row', {\n            'row--stripe': stripe && ($xetable.getVTRowIndex(row) + 1) % 2 === 0,\n            'is--new': isNewRow,\n            'row--new': isNewRow && (editOpts.showStatus || editOpts.showInsertStatus),\n            'row--radio': radioOpts.highlight && selectRow === row,\n            'row--checked': checkboxOpts.highlight && $xetable.isCheckedByCheckboxRow(row)\n          }, rowClassName ? XEUtils.isFunction(rowClassName) ? rowClassName(params) : rowClassName : ''],\n          rowid: rowid,\n          style: rowStyle ? XEUtils.isFunction(rowStyle) ? rowStyle(params) : rowStyle : null,\n          key: rowKey || rowOpts.useKey || treeConfig ? rowid : $rowIndex\n        }, trOn), tableColumn.map(function (column, $columnIndex) {\n          return renderColumn(seq, rowid, fixedType, rowLevel, row, rowIndex, $rowIndex, _rowIndex, column, $columnIndex, tableColumn, tableData);\n        }))); // 如果行被展开了\n\n        if (expandColumn && rowExpandeds.length && $xetable.findRowIndexOf(rowExpandeds, row) > -1) {\n          var cellStyle = void 0;\n\n          if (treeConfig) {\n            cellStyle = {\n              paddingLeft: rowLevel * treeOpts.indent + 30 + \"px\"\n            };\n          }\n\n          var showOverflow = expandColumn.showOverflow;\n          var hasEllipsis = XEUtils.isUndefined(showOverflow) || XEUtils.isNull(showOverflow) ? allColumnOverflow : showOverflow;\n          var expandParams = {\n            $table: $xetable,\n            seq: seq,\n            column: expandColumn,\n            fixed: fixedType,\n            type: renderType,\n            level: rowLevel,\n            row: row,\n            rowIndex: rowIndex,\n            $rowIndex: $rowIndex,\n            _rowIndex: _rowIndex\n          };\n          rows.push(h('tr', __assign({\n            class: 'vxe-body--expanded-row',\n            key: \"expand_\" + rowid,\n            style: rowStyle ? XEUtils.isFunction(rowStyle) ? rowStyle(expandParams) : rowStyle : null\n          }, trOn), [h('td', {\n            class: ['vxe-body--expanded-column', {\n              'fixed--hidden': fixedType && !hasFixedColumn,\n              'col--ellipsis': hasEllipsis\n            }],\n            colspan: tableColumn.length\n          }, [h('div', {\n            class: 'vxe-body--expanded-cell',\n            style: cellStyle\n          }, [expandColumn.renderData(expandParams)])])]));\n        } // 如果是树形表格\n\n\n        if (treeConfig && !scrollYLoad && !transform && treeExpandeds.length) {\n          var rowChildren = row[treeOpts.children];\n\n          if (rowChildren && rowChildren.length && $xetable.findRowIndexOf(treeExpandeds, row) > -1) {\n            rows.push.apply(rows, renderRows(fixedType, rowChildren, tableColumn));\n          }\n        }\n      });\n      return rows;\n    };\n    /**\n     * 同步滚动条\n     */\n\n\n    var scrollProcessTimeout;\n\n    var syncBodyScroll = function (fixedType, scrollTop, elem1, elem2) {\n      if (elem1 || elem2) {\n        if (elem1) {\n          removeScrollListener(elem1);\n          elem1.scrollTop = scrollTop;\n        }\n\n        if (elem2) {\n          removeScrollListener(elem2);\n          elem2.scrollTop = scrollTop;\n        }\n\n        clearTimeout(scrollProcessTimeout);\n        scrollProcessTimeout = setTimeout(function () {\n          // const tableBody = refTableBody.value\n          // const leftBody = refTableLeftBody.value\n          // const rightBody = refTableRightBody.value\n          // const bodyElem = tableBody.$el as XEBodyScrollElement\n          // const leftElem = leftBody ? leftBody.$el as XEBodyScrollElement : null\n          // const rightElem = rightBody ? rightBody.$el as XEBodyScrollElement : null\n          restoreScrollListener(elem1);\n          restoreScrollListener(elem2); // 检查滚动条是的同步\n          // let targetTop = bodyElem.scrollTop\n          // if (fixedType === 'left') {\n          //   if (leftElem) {\n          //     targetTop = leftElem.scrollTop\n          //   }\n          // } else if (fixedType === 'right') {\n          //   if (rightElem) {\n          //     targetTop = rightElem.scrollTop\n          //   }\n          // }\n          // setScrollTop(bodyElem, targetTop)\n          // setScrollTop(leftElem, targetTop)\n          // setScrollTop(rightElem, targetTop)\n        }, 300);\n      }\n    };\n    /**\n     * 滚动处理\n     * 如果存在列固定左侧，同步更新滚动状态\n     * 如果存在列固定右侧，同步更新滚动状态\n     */\n\n\n    var scrollEvent = function (evnt) {\n      var fixedType = props.fixedType;\n      var highlightHoverRow = tableProps.highlightHoverRow;\n      var scrollXLoad = tableReactData.scrollXLoad,\n          scrollYLoad = tableReactData.scrollYLoad;\n      var elemStore = tableInternalData.elemStore,\n          lastScrollTop = tableInternalData.lastScrollTop,\n          lastScrollLeft = tableInternalData.lastScrollLeft;\n      var rowOpts = computeRowOpts.value;\n      var tableHeader = refTableHeader.value;\n      var tableBody = refTableBody.value;\n      var tableFooter = refTableFooter.value;\n      var leftBody = refTableLeftBody.value;\n      var rightBody = refTableRightBody.value;\n      var validTip = refValidTooltip.value;\n      var scrollBodyElem = refElem.value;\n      var headerElem = tableHeader ? tableHeader.$el : null;\n      var footerElem = tableFooter ? tableFooter.$el : null;\n      var bodyElem = tableBody.$el;\n      var leftElem = leftBody ? leftBody.$el : null;\n      var rightElem = rightBody ? rightBody.$el : null;\n      var bodyYElem = elemStore['main-body-ySpace'];\n      var bodyXElem = elemStore['main-body-xSpace'];\n      var bodyHeight = scrollYLoad && bodyYElem ? bodyYElem.clientHeight : bodyElem.clientHeight;\n      var bodyWidth = scrollXLoad && bodyXElem ? bodyXElem.clientWidth : bodyElem.clientWidth;\n      var scrollTop = scrollBodyElem.scrollTop;\n      var scrollLeft = bodyElem.scrollLeft;\n      var isRollX = scrollLeft !== lastScrollLeft;\n      var isRollY = scrollTop !== lastScrollTop;\n      tableInternalData.lastScrollTop = scrollTop;\n      tableInternalData.lastScrollLeft = scrollLeft;\n      tableInternalData.lastScrollTime = Date.now();\n\n      if (rowOpts.isHover || highlightHoverRow) {\n        $xetable.clearHoverRow();\n      }\n\n      if (leftElem && fixedType === 'left') {\n        scrollTop = leftElem.scrollTop;\n        syncBodyScroll(fixedType, scrollTop, bodyElem, rightElem);\n      } else if (rightElem && fixedType === 'right') {\n        scrollTop = rightElem.scrollTop;\n        syncBodyScroll(fixedType, scrollTop, bodyElem, leftElem);\n      } else {\n        if (isRollX) {\n          if (headerElem) {\n            headerElem.scrollLeft = bodyElem.scrollLeft;\n          }\n\n          if (footerElem) {\n            footerElem.scrollLeft = bodyElem.scrollLeft;\n          }\n        }\n\n        if (leftElem || rightElem) {\n          $xetable.checkScrolling();\n\n          if (isRollY) {\n            syncBodyScroll(fixedType, scrollTop, leftElem, rightElem);\n          }\n        }\n      }\n\n      if (scrollXLoad && isRollX) {\n        $xetable.triggerScrollXEvent(evnt);\n      }\n\n      if (scrollYLoad && isRollY) {\n        $xetable.triggerScrollYEvent(evnt);\n      }\n\n      if (isRollX && validTip && validTip.reactData.visible) {\n        validTip.updatePlacement();\n      }\n\n      $xetable.dispatchEvent('scroll', {\n        type: renderType,\n        fixed: fixedType,\n        scrollTop: scrollTop,\n        scrollLeft: scrollLeft,\n        scrollHeight: bodyElem.scrollHeight,\n        scrollWidth: bodyElem.scrollWidth,\n        bodyHeight: bodyHeight,\n        bodyWidth: bodyWidth,\n        isX: isRollX,\n        isY: isRollY\n      }, evnt);\n    };\n\n    var wheelTime;\n    var wheelYSize = 0;\n    var wheelYInterval = 0;\n    var wheelYTotal = 0;\n    var isPrevWheelTop = false;\n\n    var handleWheel = function (evnt, isTopWheel, deltaTop, isRollX, isRollY) {\n      var elemStore = tableInternalData.elemStore;\n      var scrollXLoad = tableReactData.scrollXLoad,\n          scrollYLoad = tableReactData.scrollYLoad;\n      var tableBody = refTableBody.value;\n      var leftBody = refTableLeftBody.value;\n      var rightBody = refTableRightBody.value;\n      var leftElem = leftBody ? leftBody.$el : null;\n      var rightElem = rightBody ? rightBody.$el : null;\n      var bodyElem = tableBody.$el;\n      var bodyYElem = elemStore['main-body-ySpace'];\n      var bodyXElem = elemStore['main-body-xSpace'];\n      var bodyHeight = scrollYLoad && bodyYElem ? bodyYElem.clientHeight : bodyElem.clientHeight;\n      var bodyWidth = scrollXLoad && bodyXElem ? bodyXElem.clientWidth : bodyElem.clientWidth;\n      var remainSize = isPrevWheelTop === isTopWheel ? Math.max(0, wheelYSize - wheelYTotal) : 0;\n      isPrevWheelTop = isTopWheel;\n      wheelYSize = Math.abs(isTopWheel ? deltaTop - remainSize : deltaTop + remainSize);\n      wheelYInterval = 0;\n      wheelYTotal = 0;\n      clearTimeout(wheelTime);\n\n      var handleSmooth = function () {\n        if (wheelYTotal < wheelYSize) {\n          var fixedType = props.fixedType;\n          wheelYInterval = Math.max(5, Math.floor(wheelYInterval * 1.5));\n          wheelYTotal = wheelYTotal + wheelYInterval;\n\n          if (wheelYTotal > wheelYSize) {\n            wheelYInterval = wheelYInterval - (wheelYTotal - wheelYSize);\n          }\n\n          var scrollTop = bodyElem.scrollTop,\n              clientHeight = bodyElem.clientHeight,\n              scrollHeight = bodyElem.scrollHeight;\n          var targerTop = scrollTop + wheelYInterval * (isTopWheel ? -1 : 1);\n          bodyElem.scrollTop = targerTop;\n\n          if (leftElem) {\n            leftElem.scrollTop = targerTop;\n          }\n\n          if (rightElem) {\n            rightElem.scrollTop = targerTop;\n          }\n\n          if (isTopWheel ? targerTop < scrollHeight - clientHeight : targerTop >= 0) {\n            wheelTime = setTimeout(handleSmooth, 10);\n          }\n\n          $xetable.dispatchEvent('scroll', {\n            type: renderType,\n            fixed: fixedType,\n            scrollTop: bodyElem.scrollTop,\n            scrollLeft: bodyElem.scrollLeft,\n            scrollHeight: bodyElem.scrollHeight,\n            scrollWidth: bodyElem.scrollWidth,\n            bodyHeight: bodyHeight,\n            bodyWidth: bodyWidth,\n            isX: isRollX,\n            isY: isRollY\n          }, evnt);\n        }\n      };\n\n      handleSmooth();\n    };\n    /**\n     * 滚轮处理\n     */\n\n\n    var wheelEvent = function (evnt) {\n      var deltaY = evnt.deltaY,\n          deltaX = evnt.deltaX;\n      var highlightHoverRow = tableProps.highlightHoverRow;\n      var scrollYLoad = tableReactData.scrollYLoad;\n      var lastScrollTop = tableInternalData.lastScrollTop,\n          lastScrollLeft = tableInternalData.lastScrollLeft;\n      var rowOpts = computeRowOpts.value;\n      var tableBody = refTableBody.value;\n      var scrollBodyElem = refElem.value;\n      var bodyElem = tableBody.$el;\n      var deltaTop = deltaY;\n      var deltaLeft = deltaX;\n      var isTopWheel = deltaTop < 0; // 如果滚动位置已经是顶部或底部，则不需要触发\n\n      if (isTopWheel ? scrollBodyElem.scrollTop <= 0 : scrollBodyElem.scrollTop >= scrollBodyElem.scrollHeight - scrollBodyElem.clientHeight) {\n        return;\n      }\n\n      var scrollTop = scrollBodyElem.scrollTop + deltaTop;\n      var scrollLeft = bodyElem.scrollLeft + deltaLeft;\n      var isRollX = scrollLeft !== lastScrollLeft;\n      var isRollY = scrollTop !== lastScrollTop; // 用于鼠标纵向滚轮处理\n\n      if (isRollY) {\n        evnt.preventDefault();\n        tableInternalData.lastScrollTop = scrollTop;\n        tableInternalData.lastScrollLeft = scrollLeft;\n        tableInternalData.lastScrollTime = Date.now();\n\n        if (rowOpts.isHover || highlightHoverRow) {\n          $xetable.clearHoverRow();\n        }\n\n        handleWheel(evnt, isTopWheel, deltaTop, isRollX, isRollY);\n\n        if (scrollYLoad) {\n          $xetable.triggerScrollYEvent(evnt);\n        }\n      }\n    };\n\n    onMounted(function () {\n      nextTick(function () {\n        var fixedType = props.fixedType;\n        var elemStore = tableInternalData.elemStore;\n        var prefix = (fixedType || 'main') + \"-body-\";\n        var el = refElem.value;\n        elemStore[prefix + \"wrapper\"] = refElem.value;\n        elemStore[prefix + \"table\"] = refBodyTable.value;\n        elemStore[prefix + \"colgroup\"] = refBodyColgroup.value;\n        elemStore[prefix + \"list\"] = refBodyTBody.value;\n        elemStore[prefix + \"xSpace\"] = refBodyXSpace.value;\n        elemStore[prefix + \"ySpace\"] = refBodyYSpace.value;\n        elemStore[prefix + \"emptyBlock\"] = refBodyEmptyBlock.value;\n        el.onscroll = scrollEvent;\n        el._onscroll = scrollEvent;\n      });\n    });\n    onBeforeUnmount(function () {\n      var el = refElem.value;\n      clearTimeout(wheelTime);\n      el._onscroll = null;\n      el.onscroll = null;\n    });\n    onUnmounted(function () {\n      var fixedType = props.fixedType;\n      var elemStore = tableInternalData.elemStore;\n      var prefix = (fixedType || 'main') + \"-body-\";\n      elemStore[prefix + \"wrapper\"] = null;\n      elemStore[prefix + \"table\"] = null;\n      elemStore[prefix + \"colgroup\"] = null;\n      elemStore[prefix + \"list\"] = null;\n      elemStore[prefix + \"xSpace\"] = null;\n      elemStore[prefix + \"ySpace\"] = null;\n      elemStore[prefix + \"emptyBlock\"] = null;\n    });\n\n    var renderVN = function () {\n      var fixedColumn = props.fixedColumn,\n          fixedType = props.fixedType,\n          tableColumn = props.tableColumn;\n      var keyboardConfig = tableProps.keyboardConfig,\n          allColumnOverflow = tableProps.showOverflow,\n          spanMethod = tableProps.spanMethod,\n          mouseConfig = tableProps.mouseConfig;\n      var tableData = tableReactData.tableData,\n          mergeList = tableReactData.mergeList,\n          scrollYLoad = tableReactData.scrollYLoad,\n          isAllOverflow = tableReactData.isAllOverflow;\n      var visibleColumn = tableInternalData.visibleColumn;\n      var slots = tableContext.slots;\n      var sYOpts = computeSYOpts.value;\n      var emptyOpts = computeEmptyOpts.value;\n      var keyboardOpts = computeKeyboardOpts.value;\n      var mouseOpts = computeMouseOpts.value; // const isMergeLeftFixedExceeded = computeIsMergeLeftFixedExceeded.value\n      // const isMergeRightFixedExceeded = computeIsMergeRightFixedExceeded.value\n      // 如果是使用优化模式\n\n      if (fixedType) {\n        if (scrollYLoad || (allColumnOverflow ? isAllOverflow : allColumnOverflow)) {\n          if (!mergeList.length && !spanMethod && !(keyboardConfig && keyboardOpts.isMerge)) {\n            tableColumn = fixedColumn;\n          } else {\n            tableColumn = visibleColumn; // 检查固定列是否被合并，合并范围是否超出固定列\n            // if (mergeList.length && !isMergeLeftFixedExceeded && fixedType === 'left') {\n            //   tableColumn = fixedColumn\n            // } else if (mergeList.length && !isMergeRightFixedExceeded && fixedType === 'right') {\n            //   tableColumn = fixedColumn\n            // } else {\n            //   tableColumn = visibleColumn\n            // }\n          }\n        } else {\n          tableColumn = visibleColumn;\n        }\n      }\n\n      var emptyContent;\n\n      if (slots.empty) {\n        emptyContent = $xetable.callSlot(slots.empty, {\n          $table: $xetable\n        });\n      } else {\n        var compConf = emptyOpts.name ? VXETable.renderer.get(emptyOpts.name) : null;\n        var renderEmpty = compConf ? compConf.renderEmpty : null;\n\n        if (renderEmpty) {\n          emptyContent = renderEmpty(emptyOpts, {\n            $table: $xetable\n          });\n        } else {\n          emptyContent = tableProps.emptyText || GlobalConfig.i18n('vxe.table.emptyText');\n        }\n      }\n\n      return h('div', __assign({\n        ref: refElem,\n        class: ['vxe-table--body-wrapper', fixedType ? \"fixed-\" + fixedType + \"--wrapper\" : 'body--wrapper'],\n        xid: xID\n      }, sYOpts.mode === 'wheel' ? {\n        onWheel: wheelEvent\n      } : {}), [fixedType ? createCommentVNode() : h('div', {\n        ref: refBodyXSpace,\n        class: 'vxe-body--x-space'\n      }), h('div', {\n        ref: refBodyYSpace,\n        class: 'vxe-body--y-space'\n      }), h('table', {\n        ref: refBodyTable,\n        class: 'vxe-table--body',\n        xid: xID,\n        cellspacing: 0,\n        cellpadding: 0,\n        border: 0\n      }, [\n      /**\n       * 列宽\n       */\n      h('colgroup', {\n        ref: refBodyColgroup\n      }, tableColumn.map(function (column, $columnIndex) {\n        return h('col', {\n          name: column.id,\n          key: $columnIndex\n        });\n      })),\n      /**\n       * 内容\n       */\n      h('tbody', {\n        ref: refBodyTBody\n      }, renderRows(fixedType, tableData, tableColumn))]), h('div', {\n        class: 'vxe-table--checkbox-range'\n      }), mouseConfig && mouseOpts.area ? h('div', {\n        class: 'vxe-table--cell-area'\n      }, [h('span', {\n        class: 'vxe-table--cell-main-area'\n      }, mouseOpts.extension ? [h('span', {\n        class: 'vxe-table--cell-main-area-btn',\n        onMousedown: function (evnt) {\n          $xetable.triggerCellExtendMousedownEvent(evnt, {\n            $table: $xetable,\n            fixed: fixedType,\n            type: renderType\n          });\n        }\n      })] : []), h('span', {\n        class: 'vxe-table--cell-copy-area'\n      }), h('span', {\n        class: 'vxe-table--cell-extend-area'\n      }), h('span', {\n        class: 'vxe-table--cell-multi-area'\n      }), h('span', {\n        class: 'vxe-table--cell-active-area'\n      })]) : null, !fixedType ? h('div', {\n        class: 'vxe-table--empty-block',\n        ref: refBodyEmptyBlock\n      }, [h('div', {\n        class: 'vxe-table--empty-content'\n      }, emptyContent)]) : null]);\n    };\n\n    return renderVN;\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/table/src/body.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","il","j","createCommentVNode","defineComponent","h","ref","inject","nextTick","onBeforeUnmount","onMounted","onUnmounted","XEUtils","GlobalConfig","VXETable","mergeBodyMethod","getRowid","getPropClass","removeScrollListener","restoreScrollListener","updateCellTitle","isEnableConf","renderType","lineOffsetSizes","mini","small","medium","name","props","tableData","Array","tableColumn","fixedColumn","fixedType","type","String","default","setup","$xetable","xesize","xID","tableProps","tableContext","context","tableReactData","reactData","tableInternalData","internalData","_a","getRefMaps","refTableHeader","refTableBody","refTableFooter","refTableLeftBody","refTableRightBody","refValidTooltip","_b","getComputeMaps","computeEditOpts","computeMouseOpts","computeSYOpts","computeEmptyOpts","computeKeyboardOpts","computeTooltipOpts","computeRadioOpts","computeTreeOpts","computeCheckboxOpts","computeValidOpts","computeRowOpts","computeColumnOpts","refElem","refBodyTable","refBodyColgroup","refBodyTBody","refBodyXSpace","refBodyYSpace","refBodyEmptyBlock","getOffsetSize","vSize","value","countTreeExpand","prevRow","params","count","treeOpts","rowChildren","children","isTreeExpandByRow","index","calcTreeLine","items","rIndex","expandSize","rowHeight","isOperateMouse","delayHover","lastScrollTime","_isResize","Date","now","renderLine","row","column","treeConfig","slots","treeNode","fullAllDataRowIdData","rowid","rest","rLevel","level","_index","line","callSlot","class","style","height","left","indent","renderColumn","seq","rowLevel","rowIndex","$rowIndex","_rowIndex","$columnIndex","columns","columnKey","allColumnOverflow","showOverflow","cellClassName","cellStyle","allAlign","align","spanMethod","mouseConfig","editConfig","editRules","tooltipConfig","overflowX","scrollYLoad","currentColumn","mergeList","editStore","validStore","isAllOverflow","afterFullData","validOpts","checkboxOpts","editOpts","tooltipOpts","rowOpts","sYOpts","columnOpts","cellRender","editRender","className","actived","scrollYRHeight","rHeight","showAllTip","showAll","columnIndex","getColumnIndex","_columnIndex","getVTColumnIndex","isEdit","fixedHiddenColumn","fixed","cellOverflow","isUndefined","isNull","showEllipsis","showTitle","showTooltip","hasEllipsis","isDirty","tdOns","cellAlign","hasValidError","showValidTip","showMessage","message","attrs","colid","id","$table","isHidden","visibleData","data","onMouseenter","evnt","currentTarget","triggerBodyTooltipEvent","dispatchEvent","cell","onMouseleave","handleTargetLeaveEvent","range","onMousedown","triggerCellMousedownEvent","onClick","triggerCellClickEvent","onDblclick","triggerCellDblclickEvent","spanRest","rowspan","colspan","_c","_d","showStatus","showUpdateStatus","isUpdateByRow","property","tdVNs","push","maxHeight","title","getCellLabel","renderCell","rule","maxWidth","width","content","mode","key","useKey","isFunction","renderRows","stripe","rowKey","highlightHoverRow","rowClassName","rowStyle","hasFixedColumn","treeExpandeds","rowExpandeds","expandColumn","selectRow","radioOpts","transform","rows","forEach","trOn","getRowIndex","isHover","triggerHoverEvent","clearHoverRow","isNewRow","findRowIndexOf","insertList","getVTRowIndex","showInsertStatus","highlight","isCheckedByCheckboxRow","map","paddingLeft","expandParams","renderData","scrollProcessTimeout","syncBodyScroll","scrollTop","elem1","elem2","clearTimeout","setTimeout","scrollEvent","scrollXLoad","elemStore","lastScrollTop","lastScrollLeft","tableHeader","tableBody","tableFooter","leftBody","rightBody","validTip","scrollBodyElem","headerElem","$el","footerElem","bodyElem","leftElem","rightElem","bodyYElem","bodyXElem","bodyHeight","clientHeight","bodyWidth","clientWidth","scrollLeft","isRollX","isRollY","checkScrolling","triggerScrollXEvent","triggerScrollYEvent","visible","updatePlacement","scrollHeight","scrollWidth","isX","isY","wheelTime","wheelYSize","wheelYInterval","wheelYTotal","isPrevWheelTop","handleWheel","isTopWheel","deltaTop","remainSize","Math","max","abs","handleSmooth","floor","targerTop","wheelEvent","deltaY","deltaX","deltaLeft","preventDefault","prefix","el","onscroll","_onscroll","renderVN","keyboardConfig","visibleColumn","emptyOpts","keyboardOpts","mouseOpts","isMerge","emptyContent","empty","compConf","renderer","get","renderEmpty","emptyText","i18n","xid","onWheel","cellspacing","cellpadding","border","area","extension","triggerCellExtendMousedownEvent"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { createCommentVNode, defineComponent, h, ref, inject, nextTick, onBeforeUnmount, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { VXETable } from '../../v-x-e-table';\nimport { mergeBodyMethod, getRowid, getPropClass, removeScrollListener, restoreScrollListener } from './util';\nimport { updateCellTitle } from '../../tools/dom';\nimport { isEnableConf } from '../../tools/utils';\nvar renderType = 'body';\nvar lineOffsetSizes = {\n    mini: 3,\n    small: 2,\n    medium: 1\n};\nexport default defineComponent({\n    name: 'VxeTableBody',\n    props: {\n        tableData: Array,\n        tableColumn: Array,\n        fixedColumn: Array,\n        fixedType: { type: String, default: null }\n    },\n    setup: function (props) {\n        var $xetable = inject('$xetable', {});\n        var xesize = inject('xesize', null);\n        var xID = $xetable.xID, tableProps = $xetable.props, tableContext = $xetable.context, tableReactData = $xetable.reactData, tableInternalData = $xetable.internalData;\n        var _a = $xetable.getRefMaps(), refTableHeader = _a.refTableHeader, refTableBody = _a.refTableBody, refTableFooter = _a.refTableFooter, refTableLeftBody = _a.refTableLeftBody, refTableRightBody = _a.refTableRightBody, refValidTooltip = _a.refValidTooltip;\n        var _b = $xetable.getComputeMaps(), computeEditOpts = _b.computeEditOpts, computeMouseOpts = _b.computeMouseOpts, computeSYOpts = _b.computeSYOpts, computeEmptyOpts = _b.computeEmptyOpts, computeKeyboardOpts = _b.computeKeyboardOpts, computeTooltipOpts = _b.computeTooltipOpts, computeRadioOpts = _b.computeRadioOpts, computeTreeOpts = _b.computeTreeOpts, computeCheckboxOpts = _b.computeCheckboxOpts, computeValidOpts = _b.computeValidOpts, computeRowOpts = _b.computeRowOpts, computeColumnOpts = _b.computeColumnOpts;\n        var refElem = ref();\n        var refBodyTable = ref();\n        var refBodyColgroup = ref();\n        var refBodyTBody = ref();\n        var refBodyXSpace = ref();\n        var refBodyYSpace = ref();\n        var refBodyEmptyBlock = ref();\n        var getOffsetSize = function () {\n            if (xesize) {\n                var vSize = xesize.value;\n                if (vSize) {\n                    return lineOffsetSizes[vSize] || 0;\n                }\n            }\n            return 0;\n        };\n        var countTreeExpand = function (prevRow, params) {\n            var count = 1;\n            if (!prevRow) {\n                return count;\n            }\n            var treeOpts = computeTreeOpts.value;\n            var rowChildren = prevRow[treeOpts.children];\n            if ($xetable.isTreeExpandByRow(prevRow)) {\n                for (var index = 0; index < rowChildren.length; index++) {\n                    count += countTreeExpand(rowChildren[index], params);\n                }\n            }\n            return count;\n        };\n        var calcTreeLine = function (params, items, rIndex) {\n            var expandSize = 1;\n            if (rIndex) {\n                expandSize = countTreeExpand(items[rIndex - 1], params);\n            }\n            return tableReactData.rowHeight * expandSize - (rIndex ? 1 : (12 - getOffsetSize()));\n        };\n        // 滚动、拖动过程中不需要触发\n        var isOperateMouse = function () {\n            var delayHover = tableProps.delayHover;\n            var lastScrollTime = tableInternalData.lastScrollTime, _isResize = tableInternalData._isResize;\n            return _isResize || (lastScrollTime && Date.now() < lastScrollTime + delayHover);\n        };\n        var renderLine = function (params) {\n            var row = params.row, column = params.column;\n            var treeConfig = tableProps.treeConfig;\n            var treeOpts = computeTreeOpts.value;\n            var slots = column.slots, treeNode = column.treeNode;\n            var fullAllDataRowIdData = tableInternalData.fullAllDataRowIdData;\n            var rowid = getRowid($xetable, row);\n            var rest = fullAllDataRowIdData[rowid];\n            var rLevel = 0;\n            var rIndex = 0;\n            var items = [];\n            if (rest) {\n                rLevel = rest.level;\n                rIndex = rest._index;\n                items = rest.items;\n            }\n            if (slots && slots.line) {\n                return $xetable.callSlot(slots.line, params);\n            }\n            if (treeConfig && treeNode && treeOpts.line) {\n                return [\n                    h('div', {\n                        class: 'vxe-tree--line-wrapper'\n                    }, [\n                        h('div', {\n                            class: 'vxe-tree--line',\n                            style: {\n                                height: calcTreeLine(params, items, rIndex) + \"px\",\n                                left: (rLevel * treeOpts.indent) + (rLevel ? 2 - getOffsetSize() : 0) + 16 + \"px\"\n                            }\n                        })\n                    ])\n                ];\n            }\n            return [];\n        };\n        /**\n         * 渲染列\n         */\n        var renderColumn = function (seq, rowid, fixedType, rowLevel, row, rowIndex, $rowIndex, _rowIndex, column, $columnIndex, columns, items) {\n            var _a;\n            var columnKey = tableProps.columnKey, height = tableProps.height, allColumnOverflow = tableProps.showOverflow, cellClassName = tableProps.cellClassName, cellStyle = tableProps.cellStyle, allAlign = tableProps.align, spanMethod = tableProps.spanMethod, mouseConfig = tableProps.mouseConfig, editConfig = tableProps.editConfig, editRules = tableProps.editRules, tooltipConfig = tableProps.tooltipConfig;\n            var tableData = tableReactData.tableData, overflowX = tableReactData.overflowX, scrollYLoad = tableReactData.scrollYLoad, currentColumn = tableReactData.currentColumn, mergeList = tableReactData.mergeList, editStore = tableReactData.editStore, validStore = tableReactData.validStore, isAllOverflow = tableReactData.isAllOverflow;\n            var afterFullData = tableInternalData.afterFullData;\n            var validOpts = computeValidOpts.value;\n            var checkboxOpts = computeCheckboxOpts.value;\n            var editOpts = computeEditOpts.value;\n            var tooltipOpts = computeTooltipOpts.value;\n            var rowOpts = computeRowOpts.value;\n            var sYOpts = computeSYOpts.value;\n            var columnOpts = computeColumnOpts.value;\n            var type = column.type, cellRender = column.cellRender, editRender = column.editRender, align = column.align, showOverflow = column.showOverflow, className = column.className, treeNode = column.treeNode;\n            var actived = editStore.actived;\n            var scrollYRHeight = sYOpts.rHeight;\n            var rowHeight = rowOpts.height;\n            var showAllTip = tooltipOpts.showAll;\n            var columnIndex = $xetable.getColumnIndex(column);\n            var _columnIndex = $xetable.getVTColumnIndex(column);\n            var isEdit = isEnableConf(editRender);\n            var fixedHiddenColumn = fixedType ? column.fixed !== fixedType : column.fixed && overflowX;\n            var cellOverflow = (XEUtils.isUndefined(showOverflow) || XEUtils.isNull(showOverflow)) ? allColumnOverflow : showOverflow;\n            var showEllipsis = cellOverflow === 'ellipsis';\n            var showTitle = cellOverflow === 'title';\n            var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';\n            var hasEllipsis = showTitle || showTooltip || showEllipsis;\n            var isDirty;\n            var tdOns = {};\n            var cellAlign = align || allAlign;\n            var hasValidError = validStore.row === row && validStore.column === column;\n            var showValidTip = editRules && validOpts.showMessage && (validOpts.message === 'default' ? (height || tableData.length > 1) : validOpts.message === 'inline');\n            var attrs = { colid: column.id };\n            var params = { $table: $xetable, seq: seq, rowid: rowid, row: row, rowIndex: rowIndex, $rowIndex: $rowIndex, _rowIndex: _rowIndex, column: column, columnIndex: columnIndex, $columnIndex: $columnIndex, _columnIndex: _columnIndex, fixed: fixedType, type: renderType, isHidden: fixedHiddenColumn, level: rowLevel, visibleData: afterFullData, data: tableData, items: items };\n            // 虚拟滚动不支持动态高度\n            if (scrollYLoad && !hasEllipsis) {\n                showEllipsis = hasEllipsis = true;\n            }\n            // hover 进入事件\n            if (showTitle || showTooltip || showAllTip || tooltipConfig) {\n                tdOns.onMouseenter = function (evnt) {\n                    if (isOperateMouse()) {\n                        return;\n                    }\n                    if (showTitle) {\n                        updateCellTitle(evnt.currentTarget, column);\n                    }\n                    else if (showTooltip || showAllTip) {\n                        // 如果配置了显示 tooltip\n                        $xetable.triggerBodyTooltipEvent(evnt, params);\n                    }\n                    $xetable.dispatchEvent('cell-mouseenter', Object.assign({ cell: evnt.currentTarget }, params), evnt);\n                };\n            }\n            // hover 退出事件\n            if (showTooltip || showAllTip || tooltipConfig) {\n                tdOns.onMouseleave = function (evnt) {\n                    if (isOperateMouse()) {\n                        return;\n                    }\n                    if (showTooltip || showAllTip) {\n                        $xetable.handleTargetLeaveEvent(evnt);\n                    }\n                    $xetable.dispatchEvent('cell-mouseleave', Object.assign({ cell: evnt.currentTarget }, params), evnt);\n                };\n            }\n            // 按下事件处理\n            if (checkboxOpts.range || mouseConfig) {\n                tdOns.onMousedown = function (evnt) {\n                    $xetable.triggerCellMousedownEvent(evnt, params);\n                };\n            }\n            // 点击事件处理\n            tdOns.onClick = function (evnt) {\n                $xetable.triggerCellClickEvent(evnt, params);\n            };\n            // 双击事件处理\n            tdOns.onDblclick = function (evnt) {\n                $xetable.triggerCellDblclickEvent(evnt, params);\n            };\n            // 合并行或列\n            if (mergeList.length) {\n                var spanRest = mergeBodyMethod(mergeList, _rowIndex, _columnIndex);\n                if (spanRest) {\n                    var rowspan = spanRest.rowspan, colspan = spanRest.colspan;\n                    if (!rowspan || !colspan) {\n                        return null;\n                    }\n                    if (rowspan > 1) {\n                        attrs.rowspan = rowspan;\n                    }\n                    if (colspan > 1) {\n                        attrs.colspan = colspan;\n                    }\n                }\n            }\n            else if (spanMethod) {\n                // 自定义合并行或列的方法\n                var _b = spanMethod(params) || {}, _c = _b.rowspan, rowspan = _c === void 0 ? 1 : _c, _d = _b.colspan, colspan = _d === void 0 ? 1 : _d;\n                if (!rowspan || !colspan) {\n                    return null;\n                }\n                if (rowspan > 1) {\n                    attrs.rowspan = rowspan;\n                }\n                if (colspan > 1) {\n                    attrs.colspan = colspan;\n                }\n            }\n            // 如果被合并不可隐藏\n            if (fixedHiddenColumn && mergeList) {\n                if (attrs.colspan > 1 || attrs.rowspan > 1) {\n                    fixedHiddenColumn = false;\n                }\n            }\n            // 如果编辑列开启显示状态\n            if (!fixedHiddenColumn && editConfig && (editRender || cellRender) && (editOpts.showStatus || editOpts.showUpdateStatus)) {\n                isDirty = $xetable.isUpdateByRow(row, column.property);\n            }\n            var tdVNs = [];\n            if (fixedHiddenColumn && (allColumnOverflow ? isAllOverflow : allColumnOverflow)) {\n                tdVNs.push(h('div', {\n                    class: ['vxe-cell', {\n                            'c--title': showTitle,\n                            'c--tooltip': showTooltip,\n                            'c--ellipsis': showEllipsis\n                        }],\n                    style: {\n                        maxHeight: hasEllipsis && (scrollYRHeight || rowHeight) ? (scrollYRHeight || rowHeight) + \"px\" : ''\n                    }\n                }));\n            }\n            else {\n                // 渲染单元格\n                tdVNs.push.apply(tdVNs, __spreadArray(__spreadArray([], renderLine(params)), [h('div', {\n                        class: ['vxe-cell', {\n                                'c--title': showTitle,\n                                'c--tooltip': showTooltip,\n                                'c--ellipsis': showEllipsis\n                            }],\n                        style: {\n                            maxHeight: hasEllipsis && (scrollYRHeight || rowHeight) ? (scrollYRHeight || rowHeight) + \"px\" : ''\n                        },\n                        title: showTitle ? $xetable.getCellLabel(row, column) : null\n                    }, column.renderCell(params))]));\n                if (showValidTip && hasValidError) {\n                    tdVNs.push(h('div', {\n                        class: 'vxe-cell--valid',\n                        style: validStore.rule && validStore.rule.maxWidth ? {\n                            width: validStore.rule.maxWidth + \"px\"\n                        } : null\n                    }, [\n                        h('span', {\n                            class: 'vxe-cell--valid-msg'\n                        }, validStore.content)\n                    ]));\n                }\n            }\n            return h('td', __assign(__assign(__assign({ class: ['vxe-body--column', column.id, (_a = {},\n                        _a[\"col--\" + cellAlign] = cellAlign,\n                        _a[\"col--\" + type] = type,\n                        _a['col--last'] = $columnIndex === columns.length - 1,\n                        _a['col--tree-node'] = treeNode,\n                        _a['col--edit'] = isEdit,\n                        _a['col--ellipsis'] = hasEllipsis,\n                        _a['fixed--hidden'] = fixedHiddenColumn,\n                        _a['col--dirty'] = isDirty,\n                        _a['col--actived'] = editConfig && isEdit && (actived.row === row && (actived.column === column || editOpts.mode === 'row')),\n                        _a['col--valid-error'] = hasValidError,\n                        _a['col--current'] = currentColumn === column,\n                        _a), getPropClass(className, params), getPropClass(cellClassName, params)], key: columnKey || columnOpts.useKey ? column.id : $columnIndex }, attrs), { style: Object.assign({\n                    height: hasEllipsis && (scrollYRHeight || rowHeight) ? (scrollYRHeight || rowHeight) + \"px\" : ''\n                }, cellStyle ? (XEUtils.isFunction(cellStyle) ? cellStyle(params) : cellStyle) : null) }), tdOns), tdVNs);\n        };\n        var renderRows = function (fixedType, tableData, tableColumn) {\n            var stripe = tableProps.stripe, rowKey = tableProps.rowKey, highlightHoverRow = tableProps.highlightHoverRow, rowClassName = tableProps.rowClassName, rowStyle = tableProps.rowStyle, allColumnOverflow = tableProps.showOverflow, editConfig = tableProps.editConfig, treeConfig = tableProps.treeConfig;\n            var hasFixedColumn = tableReactData.hasFixedColumn, treeExpandeds = tableReactData.treeExpandeds, scrollYLoad = tableReactData.scrollYLoad, editStore = tableReactData.editStore, rowExpandeds = tableReactData.rowExpandeds, expandColumn = tableReactData.expandColumn, selectRow = tableReactData.selectRow;\n            var fullAllDataRowIdData = tableInternalData.fullAllDataRowIdData;\n            var checkboxOpts = computeCheckboxOpts.value;\n            var radioOpts = computeRadioOpts.value;\n            var treeOpts = computeTreeOpts.value;\n            var editOpts = computeEditOpts.value;\n            var rowOpts = computeRowOpts.value;\n            var transform = treeOpts.transform;\n            var rows = [];\n            tableData.forEach(function (row, $rowIndex) {\n                var trOn = {};\n                var rowIndex = $rowIndex;\n                // 确保任何情况下 rowIndex 都精准指向真实 data 索引\n                rowIndex = $xetable.getRowIndex(row);\n                // 事件绑定\n                if (rowOpts.isHover || highlightHoverRow) {\n                    trOn.onMouseenter = function (evnt) {\n                        if (isOperateMouse()) {\n                            return;\n                        }\n                        $xetable.triggerHoverEvent(evnt, { row: row, rowIndex: rowIndex });\n                    };\n                    trOn.onMouseleave = function () {\n                        if (isOperateMouse()) {\n                            return;\n                        }\n                        $xetable.clearHoverRow();\n                    };\n                }\n                var rowid = getRowid($xetable, row);\n                var rest = fullAllDataRowIdData[rowid];\n                var rowLevel = 0;\n                var seq = -1;\n                var _rowIndex = 0;\n                if (rest) {\n                    rowLevel = rest.level;\n                    seq = rest.seq;\n                    _rowIndex = rest._index;\n                }\n                var params = { $table: $xetable, seq: seq, rowid: rowid, fixed: fixedType, type: renderType, level: rowLevel, row: row, rowIndex: rowIndex, $rowIndex: $rowIndex, _rowIndex: _rowIndex };\n                // 处理新增状态\n                var isNewRow = false;\n                if (editConfig) {\n                    isNewRow = $xetable.findRowIndexOf(editStore.insertList, row) > -1;\n                }\n                rows.push(h('tr', __assign({ class: ['vxe-body--row', {\n                            'row--stripe': stripe && ($xetable.getVTRowIndex(row) + 1) % 2 === 0,\n                            'is--new': isNewRow,\n                            'row--new': isNewRow && (editOpts.showStatus || editOpts.showInsertStatus),\n                            'row--radio': radioOpts.highlight && selectRow === row,\n                            'row--checked': checkboxOpts.highlight && $xetable.isCheckedByCheckboxRow(row)\n                        }, rowClassName ? (XEUtils.isFunction(rowClassName) ? rowClassName(params) : rowClassName) : ''], rowid: rowid, style: rowStyle ? (XEUtils.isFunction(rowStyle) ? rowStyle(params) : rowStyle) : null, key: (rowKey || rowOpts.useKey) || treeConfig ? rowid : $rowIndex }, trOn), tableColumn.map(function (column, $columnIndex) {\n                    return renderColumn(seq, rowid, fixedType, rowLevel, row, rowIndex, $rowIndex, _rowIndex, column, $columnIndex, tableColumn, tableData);\n                })));\n                // 如果行被展开了\n                if (expandColumn && rowExpandeds.length && $xetable.findRowIndexOf(rowExpandeds, row) > -1) {\n                    var cellStyle = void 0;\n                    if (treeConfig) {\n                        cellStyle = {\n                            paddingLeft: (rowLevel * treeOpts.indent) + 30 + \"px\"\n                        };\n                    }\n                    var showOverflow = expandColumn.showOverflow;\n                    var hasEllipsis = (XEUtils.isUndefined(showOverflow) || XEUtils.isNull(showOverflow)) ? allColumnOverflow : showOverflow;\n                    var expandParams = { $table: $xetable, seq: seq, column: expandColumn, fixed: fixedType, type: renderType, level: rowLevel, row: row, rowIndex: rowIndex, $rowIndex: $rowIndex, _rowIndex: _rowIndex };\n                    rows.push(h('tr', __assign({ class: 'vxe-body--expanded-row', key: \"expand_\" + rowid, style: rowStyle ? (XEUtils.isFunction(rowStyle) ? rowStyle(expandParams) : rowStyle) : null }, trOn), [\n                        h('td', {\n                            class: ['vxe-body--expanded-column', {\n                                    'fixed--hidden': fixedType && !hasFixedColumn,\n                                    'col--ellipsis': hasEllipsis\n                                }],\n                            colspan: tableColumn.length\n                        }, [\n                            h('div', {\n                                class: 'vxe-body--expanded-cell',\n                                style: cellStyle\n                            }, [\n                                expandColumn.renderData(expandParams)\n                            ])\n                        ])\n                    ]));\n                }\n                // 如果是树形表格\n                if (treeConfig && !scrollYLoad && !transform && treeExpandeds.length) {\n                    var rowChildren = row[treeOpts.children];\n                    if (rowChildren && rowChildren.length && $xetable.findRowIndexOf(treeExpandeds, row) > -1) {\n                        rows.push.apply(rows, renderRows(fixedType, rowChildren, tableColumn));\n                    }\n                }\n            });\n            return rows;\n        };\n        /**\n         * 同步滚动条\n         */\n        var scrollProcessTimeout;\n        var syncBodyScroll = function (fixedType, scrollTop, elem1, elem2) {\n            if (elem1 || elem2) {\n                if (elem1) {\n                    removeScrollListener(elem1);\n                    elem1.scrollTop = scrollTop;\n                }\n                if (elem2) {\n                    removeScrollListener(elem2);\n                    elem2.scrollTop = scrollTop;\n                }\n                clearTimeout(scrollProcessTimeout);\n                scrollProcessTimeout = setTimeout(function () {\n                    // const tableBody = refTableBody.value\n                    // const leftBody = refTableLeftBody.value\n                    // const rightBody = refTableRightBody.value\n                    // const bodyElem = tableBody.$el as XEBodyScrollElement\n                    // const leftElem = leftBody ? leftBody.$el as XEBodyScrollElement : null\n                    // const rightElem = rightBody ? rightBody.$el as XEBodyScrollElement : null\n                    restoreScrollListener(elem1);\n                    restoreScrollListener(elem2);\n                    // 检查滚动条是的同步\n                    // let targetTop = bodyElem.scrollTop\n                    // if (fixedType === 'left') {\n                    //   if (leftElem) {\n                    //     targetTop = leftElem.scrollTop\n                    //   }\n                    // } else if (fixedType === 'right') {\n                    //   if (rightElem) {\n                    //     targetTop = rightElem.scrollTop\n                    //   }\n                    // }\n                    // setScrollTop(bodyElem, targetTop)\n                    // setScrollTop(leftElem, targetTop)\n                    // setScrollTop(rightElem, targetTop)\n                }, 300);\n            }\n        };\n        /**\n         * 滚动处理\n         * 如果存在列固定左侧，同步更新滚动状态\n         * 如果存在列固定右侧，同步更新滚动状态\n         */\n        var scrollEvent = function (evnt) {\n            var fixedType = props.fixedType;\n            var highlightHoverRow = tableProps.highlightHoverRow;\n            var scrollXLoad = tableReactData.scrollXLoad, scrollYLoad = tableReactData.scrollYLoad;\n            var elemStore = tableInternalData.elemStore, lastScrollTop = tableInternalData.lastScrollTop, lastScrollLeft = tableInternalData.lastScrollLeft;\n            var rowOpts = computeRowOpts.value;\n            var tableHeader = refTableHeader.value;\n            var tableBody = refTableBody.value;\n            var tableFooter = refTableFooter.value;\n            var leftBody = refTableLeftBody.value;\n            var rightBody = refTableRightBody.value;\n            var validTip = refValidTooltip.value;\n            var scrollBodyElem = refElem.value;\n            var headerElem = tableHeader ? tableHeader.$el : null;\n            var footerElem = tableFooter ? tableFooter.$el : null;\n            var bodyElem = tableBody.$el;\n            var leftElem = leftBody ? leftBody.$el : null;\n            var rightElem = rightBody ? rightBody.$el : null;\n            var bodyYElem = elemStore['main-body-ySpace'];\n            var bodyXElem = elemStore['main-body-xSpace'];\n            var bodyHeight = scrollYLoad && bodyYElem ? bodyYElem.clientHeight : bodyElem.clientHeight;\n            var bodyWidth = scrollXLoad && bodyXElem ? bodyXElem.clientWidth : bodyElem.clientWidth;\n            var scrollTop = scrollBodyElem.scrollTop;\n            var scrollLeft = bodyElem.scrollLeft;\n            var isRollX = scrollLeft !== lastScrollLeft;\n            var isRollY = scrollTop !== lastScrollTop;\n            tableInternalData.lastScrollTop = scrollTop;\n            tableInternalData.lastScrollLeft = scrollLeft;\n            tableInternalData.lastScrollTime = Date.now();\n            if (rowOpts.isHover || highlightHoverRow) {\n                $xetable.clearHoverRow();\n            }\n            if (leftElem && fixedType === 'left') {\n                scrollTop = leftElem.scrollTop;\n                syncBodyScroll(fixedType, scrollTop, bodyElem, rightElem);\n            }\n            else if (rightElem && fixedType === 'right') {\n                scrollTop = rightElem.scrollTop;\n                syncBodyScroll(fixedType, scrollTop, bodyElem, leftElem);\n            }\n            else {\n                if (isRollX) {\n                    if (headerElem) {\n                        headerElem.scrollLeft = bodyElem.scrollLeft;\n                    }\n                    if (footerElem) {\n                        footerElem.scrollLeft = bodyElem.scrollLeft;\n                    }\n                }\n                if (leftElem || rightElem) {\n                    $xetable.checkScrolling();\n                    if (isRollY) {\n                        syncBodyScroll(fixedType, scrollTop, leftElem, rightElem);\n                    }\n                }\n            }\n            if (scrollXLoad && isRollX) {\n                $xetable.triggerScrollXEvent(evnt);\n            }\n            if (scrollYLoad && isRollY) {\n                $xetable.triggerScrollYEvent(evnt);\n            }\n            if (isRollX && validTip && validTip.reactData.visible) {\n                validTip.updatePlacement();\n            }\n            $xetable.dispatchEvent('scroll', {\n                type: renderType,\n                fixed: fixedType,\n                scrollTop: scrollTop,\n                scrollLeft: scrollLeft,\n                scrollHeight: bodyElem.scrollHeight,\n                scrollWidth: bodyElem.scrollWidth,\n                bodyHeight: bodyHeight,\n                bodyWidth: bodyWidth,\n                isX: isRollX,\n                isY: isRollY\n            }, evnt);\n        };\n        var wheelTime;\n        var wheelYSize = 0;\n        var wheelYInterval = 0;\n        var wheelYTotal = 0;\n        var isPrevWheelTop = false;\n        var handleWheel = function (evnt, isTopWheel, deltaTop, isRollX, isRollY) {\n            var elemStore = tableInternalData.elemStore;\n            var scrollXLoad = tableReactData.scrollXLoad, scrollYLoad = tableReactData.scrollYLoad;\n            var tableBody = refTableBody.value;\n            var leftBody = refTableLeftBody.value;\n            var rightBody = refTableRightBody.value;\n            var leftElem = leftBody ? leftBody.$el : null;\n            var rightElem = rightBody ? rightBody.$el : null;\n            var bodyElem = tableBody.$el;\n            var bodyYElem = elemStore['main-body-ySpace'];\n            var bodyXElem = elemStore['main-body-xSpace'];\n            var bodyHeight = scrollYLoad && bodyYElem ? bodyYElem.clientHeight : bodyElem.clientHeight;\n            var bodyWidth = scrollXLoad && bodyXElem ? bodyXElem.clientWidth : bodyElem.clientWidth;\n            var remainSize = isPrevWheelTop === isTopWheel ? Math.max(0, wheelYSize - wheelYTotal) : 0;\n            isPrevWheelTop = isTopWheel;\n            wheelYSize = Math.abs(isTopWheel ? deltaTop - remainSize : deltaTop + remainSize);\n            wheelYInterval = 0;\n            wheelYTotal = 0;\n            clearTimeout(wheelTime);\n            var handleSmooth = function () {\n                if (wheelYTotal < wheelYSize) {\n                    var fixedType = props.fixedType;\n                    wheelYInterval = Math.max(5, Math.floor(wheelYInterval * 1.5));\n                    wheelYTotal = wheelYTotal + wheelYInterval;\n                    if (wheelYTotal > wheelYSize) {\n                        wheelYInterval = wheelYInterval - (wheelYTotal - wheelYSize);\n                    }\n                    var scrollTop = bodyElem.scrollTop, clientHeight = bodyElem.clientHeight, scrollHeight = bodyElem.scrollHeight;\n                    var targerTop = scrollTop + (wheelYInterval * (isTopWheel ? -1 : 1));\n                    bodyElem.scrollTop = targerTop;\n                    if (leftElem) {\n                        leftElem.scrollTop = targerTop;\n                    }\n                    if (rightElem) {\n                        rightElem.scrollTop = targerTop;\n                    }\n                    if (isTopWheel ? targerTop < scrollHeight - clientHeight : targerTop >= 0) {\n                        wheelTime = setTimeout(handleSmooth, 10);\n                    }\n                    $xetable.dispatchEvent('scroll', {\n                        type: renderType,\n                        fixed: fixedType,\n                        scrollTop: bodyElem.scrollTop,\n                        scrollLeft: bodyElem.scrollLeft,\n                        scrollHeight: bodyElem.scrollHeight,\n                        scrollWidth: bodyElem.scrollWidth,\n                        bodyHeight: bodyHeight,\n                        bodyWidth: bodyWidth,\n                        isX: isRollX,\n                        isY: isRollY\n                    }, evnt);\n                }\n            };\n            handleSmooth();\n        };\n        /**\n         * 滚轮处理\n         */\n        var wheelEvent = function (evnt) {\n            var deltaY = evnt.deltaY, deltaX = evnt.deltaX;\n            var highlightHoverRow = tableProps.highlightHoverRow;\n            var scrollYLoad = tableReactData.scrollYLoad;\n            var lastScrollTop = tableInternalData.lastScrollTop, lastScrollLeft = tableInternalData.lastScrollLeft;\n            var rowOpts = computeRowOpts.value;\n            var tableBody = refTableBody.value;\n            var scrollBodyElem = refElem.value;\n            var bodyElem = tableBody.$el;\n            var deltaTop = deltaY;\n            var deltaLeft = deltaX;\n            var isTopWheel = deltaTop < 0;\n            // 如果滚动位置已经是顶部或底部，则不需要触发\n            if (isTopWheel ? scrollBodyElem.scrollTop <= 0 : scrollBodyElem.scrollTop >= scrollBodyElem.scrollHeight - scrollBodyElem.clientHeight) {\n                return;\n            }\n            var scrollTop = scrollBodyElem.scrollTop + deltaTop;\n            var scrollLeft = bodyElem.scrollLeft + deltaLeft;\n            var isRollX = scrollLeft !== lastScrollLeft;\n            var isRollY = scrollTop !== lastScrollTop;\n            // 用于鼠标纵向滚轮处理\n            if (isRollY) {\n                evnt.preventDefault();\n                tableInternalData.lastScrollTop = scrollTop;\n                tableInternalData.lastScrollLeft = scrollLeft;\n                tableInternalData.lastScrollTime = Date.now();\n                if (rowOpts.isHover || highlightHoverRow) {\n                    $xetable.clearHoverRow();\n                }\n                handleWheel(evnt, isTopWheel, deltaTop, isRollX, isRollY);\n                if (scrollYLoad) {\n                    $xetable.triggerScrollYEvent(evnt);\n                }\n            }\n        };\n        onMounted(function () {\n            nextTick(function () {\n                var fixedType = props.fixedType;\n                var elemStore = tableInternalData.elemStore;\n                var prefix = (fixedType || 'main') + \"-body-\";\n                var el = refElem.value;\n                elemStore[prefix + \"wrapper\"] = refElem.value;\n                elemStore[prefix + \"table\"] = refBodyTable.value;\n                elemStore[prefix + \"colgroup\"] = refBodyColgroup.value;\n                elemStore[prefix + \"list\"] = refBodyTBody.value;\n                elemStore[prefix + \"xSpace\"] = refBodyXSpace.value;\n                elemStore[prefix + \"ySpace\"] = refBodyYSpace.value;\n                elemStore[prefix + \"emptyBlock\"] = refBodyEmptyBlock.value;\n                el.onscroll = scrollEvent;\n                el._onscroll = scrollEvent;\n            });\n        });\n        onBeforeUnmount(function () {\n            var el = refElem.value;\n            clearTimeout(wheelTime);\n            el._onscroll = null;\n            el.onscroll = null;\n        });\n        onUnmounted(function () {\n            var fixedType = props.fixedType;\n            var elemStore = tableInternalData.elemStore;\n            var prefix = (fixedType || 'main') + \"-body-\";\n            elemStore[prefix + \"wrapper\"] = null;\n            elemStore[prefix + \"table\"] = null;\n            elemStore[prefix + \"colgroup\"] = null;\n            elemStore[prefix + \"list\"] = null;\n            elemStore[prefix + \"xSpace\"] = null;\n            elemStore[prefix + \"ySpace\"] = null;\n            elemStore[prefix + \"emptyBlock\"] = null;\n        });\n        var renderVN = function () {\n            var fixedColumn = props.fixedColumn, fixedType = props.fixedType, tableColumn = props.tableColumn;\n            var keyboardConfig = tableProps.keyboardConfig, allColumnOverflow = tableProps.showOverflow, spanMethod = tableProps.spanMethod, mouseConfig = tableProps.mouseConfig;\n            var tableData = tableReactData.tableData, mergeList = tableReactData.mergeList, scrollYLoad = tableReactData.scrollYLoad, isAllOverflow = tableReactData.isAllOverflow;\n            var visibleColumn = tableInternalData.visibleColumn;\n            var slots = tableContext.slots;\n            var sYOpts = computeSYOpts.value;\n            var emptyOpts = computeEmptyOpts.value;\n            var keyboardOpts = computeKeyboardOpts.value;\n            var mouseOpts = computeMouseOpts.value;\n            // const isMergeLeftFixedExceeded = computeIsMergeLeftFixedExceeded.value\n            // const isMergeRightFixedExceeded = computeIsMergeRightFixedExceeded.value\n            // 如果是使用优化模式\n            if (fixedType) {\n                if (scrollYLoad || (allColumnOverflow ? isAllOverflow : allColumnOverflow)) {\n                    if (!mergeList.length && !spanMethod && !(keyboardConfig && keyboardOpts.isMerge)) {\n                        tableColumn = fixedColumn;\n                    }\n                    else {\n                        tableColumn = visibleColumn;\n                        // 检查固定列是否被合并，合并范围是否超出固定列\n                        // if (mergeList.length && !isMergeLeftFixedExceeded && fixedType === 'left') {\n                        //   tableColumn = fixedColumn\n                        // } else if (mergeList.length && !isMergeRightFixedExceeded && fixedType === 'right') {\n                        //   tableColumn = fixedColumn\n                        // } else {\n                        //   tableColumn = visibleColumn\n                        // }\n                    }\n                }\n                else {\n                    tableColumn = visibleColumn;\n                }\n            }\n            var emptyContent;\n            if (slots.empty) {\n                emptyContent = $xetable.callSlot(slots.empty, { $table: $xetable });\n            }\n            else {\n                var compConf = emptyOpts.name ? VXETable.renderer.get(emptyOpts.name) : null;\n                var renderEmpty = compConf ? compConf.renderEmpty : null;\n                if (renderEmpty) {\n                    emptyContent = renderEmpty(emptyOpts, { $table: $xetable });\n                }\n                else {\n                    emptyContent = tableProps.emptyText || GlobalConfig.i18n('vxe.table.emptyText');\n                }\n            }\n            return h('div', __assign({ ref: refElem, class: ['vxe-table--body-wrapper', fixedType ? \"fixed-\" + fixedType + \"--wrapper\" : 'body--wrapper'], xid: xID }, (sYOpts.mode === 'wheel' ? { onWheel: wheelEvent } : {})), [\n                fixedType ? createCommentVNode() : h('div', {\n                    ref: refBodyXSpace,\n                    class: 'vxe-body--x-space'\n                }),\n                h('div', {\n                    ref: refBodyYSpace,\n                    class: 'vxe-body--y-space'\n                }),\n                h('table', {\n                    ref: refBodyTable,\n                    class: 'vxe-table--body',\n                    xid: xID,\n                    cellspacing: 0,\n                    cellpadding: 0,\n                    border: 0\n                }, [\n                    /**\n                     * 列宽\n                     */\n                    h('colgroup', {\n                        ref: refBodyColgroup\n                    }, tableColumn.map(function (column, $columnIndex) {\n                        return h('col', {\n                            name: column.id,\n                            key: $columnIndex\n                        });\n                    })),\n                    /**\n                     * 内容\n                     */\n                    h('tbody', {\n                        ref: refBodyTBody\n                    }, renderRows(fixedType, tableData, tableColumn))\n                ]),\n                h('div', {\n                    class: 'vxe-table--checkbox-range'\n                }),\n                mouseConfig && mouseOpts.area ? h('div', {\n                    class: 'vxe-table--cell-area'\n                }, [\n                    h('span', {\n                        class: 'vxe-table--cell-main-area'\n                    }, mouseOpts.extension ? [\n                        h('span', {\n                            class: 'vxe-table--cell-main-area-btn',\n                            onMousedown: function (evnt) {\n                                $xetable.triggerCellExtendMousedownEvent(evnt, { $table: $xetable, fixed: fixedType, type: renderType });\n                            }\n                        })\n                    ] : []),\n                    h('span', {\n                        class: 'vxe-table--cell-copy-area'\n                    }),\n                    h('span', {\n                        class: 'vxe-table--cell-extend-area'\n                    }),\n                    h('span', {\n                        class: 'vxe-table--cell-multi-area'\n                    }),\n                    h('span', {\n                        class: 'vxe-table--cell-active-area'\n                    })\n                ]) : null,\n                !fixedType ? h('div', {\n                    class: 'vxe-table--empty-block',\n                    ref: refBodyEmptyBlock\n                }, [\n                    h('div', {\n                        class: 'vxe-table--empty-content'\n                    }, emptyContent)\n                ]) : null\n            ]);\n        };\n        return renderVN;\n    }\n});\n"]},"metadata":{},"sourceType":"module"}