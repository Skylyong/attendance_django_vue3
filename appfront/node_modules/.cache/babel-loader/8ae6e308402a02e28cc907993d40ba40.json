{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport Button from '../button';\nimport BaseMixin from '../_util/BaseMixin';\nimport { convertLegacyProps } from '../button/buttonTypes';\nimport { getSlot, findDOMNode } from '../_util/props-util';\nvar ActionButtonProps = {\n  type: {\n    type: String\n  },\n  actionFn: PropTypes.func,\n  closeModal: PropTypes.func,\n  autofocus: PropTypes.looseBool,\n  buttonProps: PropTypes.object\n};\nexport default defineComponent({\n  mixins: [BaseMixin],\n  props: ActionButtonProps,\n  setup: function setup() {\n    return {\n      timeoutId: undefined\n    };\n  },\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.autofocus) {\n      this.timeoutId = setTimeout(function () {\n        return findDOMNode(_this).focus();\n      });\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    clearTimeout(this.timeoutId);\n  },\n  methods: {\n    onClick: function onClick() {\n      var _this2 = this;\n\n      var actionFn = this.actionFn,\n          closeModal = this.closeModal;\n\n      if (actionFn) {\n        var ret;\n\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n\n          if (!ret) {\n            closeModal();\n          }\n        }\n\n        if (ret && ret.then) {\n          this.setState({\n            loading: true\n          });\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(void 0, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e); // See: https://github.com/ant-design/ant-design/issues/6183\n\n            _this2.setState({\n              loading: false\n            });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var type = this.type,\n        loading = this.loading,\n        buttonProps = this.buttonProps;\n\n    var props = _extends(_extends(_extends({}, convertLegacyProps(type)), {\n      onClick: this.onClick,\n      loading: loading\n    }), buttonProps);\n\n    return _createVNode(Button, props, {\n      default: function _default() {\n        return [getSlot(_this3)];\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/modal/ActionButton.js"],"names":["_extends","createVNode","_createVNode","defineComponent","PropTypes","Button","BaseMixin","convertLegacyProps","getSlot","findDOMNode","ActionButtonProps","type","String","actionFn","func","closeModal","autofocus","looseBool","buttonProps","object","mixins","props","setup","timeoutId","undefined","data","loading","mounted","_this","setTimeout","focus","beforeUnmount","clearTimeout","methods","onClick","_this2","ret","length","then","setState","apply","arguments","e","console","error","render","_this3","default","_default"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport Button from '../button';\nimport BaseMixin from '../_util/BaseMixin';\nimport { convertLegacyProps } from '../button/buttonTypes';\nimport { getSlot, findDOMNode } from '../_util/props-util';\nvar ActionButtonProps = {\n  type: {\n    type: String\n  },\n  actionFn: PropTypes.func,\n  closeModal: PropTypes.func,\n  autofocus: PropTypes.looseBool,\n  buttonProps: PropTypes.object\n};\nexport default defineComponent({\n  mixins: [BaseMixin],\n  props: ActionButtonProps,\n  setup: function setup() {\n    return {\n      timeoutId: undefined\n    };\n  },\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.autofocus) {\n      this.timeoutId = setTimeout(function () {\n        return findDOMNode(_this).focus();\n      });\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    clearTimeout(this.timeoutId);\n  },\n  methods: {\n    onClick: function onClick() {\n      var _this2 = this;\n\n      var actionFn = this.actionFn,\n          closeModal = this.closeModal;\n\n      if (actionFn) {\n        var ret;\n\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n\n          if (!ret) {\n            closeModal();\n          }\n        }\n\n        if (ret && ret.then) {\n          this.setState({\n            loading: true\n          });\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(void 0, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e); // See: https://github.com/ant-design/ant-design/issues/6183\n\n            _this2.setState({\n              loading: false\n            });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var type = this.type,\n        loading = this.loading,\n        buttonProps = this.buttonProps;\n\n    var props = _extends(_extends(_extends({}, convertLegacyProps(type)), {\n      onClick: this.onClick,\n      loading: loading\n    }), buttonProps);\n\n    return _createVNode(Button, props, {\n      default: function _default() {\n        return [getSlot(_this3)];\n      }\n    });\n  }\n});"]},"metadata":{},"sourceType":"module"}