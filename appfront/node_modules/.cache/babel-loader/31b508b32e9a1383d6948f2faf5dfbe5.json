{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createBlock(_component_a_table, {\n    columns: _ctx.columns,\n    \"data-source\": _ctx.dataSource,\n    onChange: _ctx.handleTableChange\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" <template #bodyCell=\\\"{ column, text }\\\">\\n      <template v-if=\\\"column.dataIndex === 'name'\\\">{{ text.first }} {{ text.last }}</template>\\n    </template> \"), _createCommentVNode(\" <template v-if=\\\"column.dataIndex === 'operation'\\\">\\n        <a-popconfirm\\n          v-if=\\\"dataSource.length\\\"\\n          title=\\\"确定删除吗?\\\"\\n          @confirm=\\\"onDelete(record.key)\\\"\\n        >\\n          <a>删除</a>\\n        </a-popconfirm>\\n      </template> \")]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"columns\", \"data-source\", \"onChange\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aAoBUC,kBApBV,EAoBU;AAnBPC,WAAO,EAAEC,YAmBF;AAlBP,mBAAaA,eAkBN;AAjBPC,YAAM,EAAED;AAiBD,GApBV;sBAKE,MAEe,CAFfE,qLAEe,EAEnBA,+RAFmB;;;;GAPjB;;AAAA","names":["_createBlock","_component_a_table","columns","_ctx","onChange","_createCommentVNode"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/worker/workerApplyHistory.vue"],"sourcesContent":["<template>\n  <a-table\n    :columns=\"columns\"\n    :data-source=\"dataSource\"\n    @change=\"handleTableChange\"\n  >\n    <!-- <template #bodyCell=\"{ column, text }\">\n      <template v-if=\"column.dataIndex === 'name'\">{{ text.first }} {{ text.last }}</template>\n    </template> -->\n\n<!-- <template v-if=\"column.dataIndex === 'operation'\">\n        <a-popconfirm\n          v-if=\"dataSource.length\"\n          title=\"确定删除吗?\"\n          @confirm=\"onDelete(record.key)\"\n        >\n          <a>删除</a>\n        </a-popconfirm>\n      </template> -->\n\n\n  </a-table>\n</template>\n\n<script>\n\n\nimport { usePagination } from 'vue-request';\nimport{getworkerApplyHistory} from '../../api/api.js'\nimport { computed, defineComponent,ref } from 'vue';\nimport { cloneDeep } from 'lodash-es';\nimport axios from 'axios';\nconst columns = [\n{\n  title: '序号',\n  dataIndex: 'id',\n  sorter: true,\n  width: '8%',\n  sorter: (a, b) => a.id - b.id,\n} ,\n{\n  title: '开始时间',\n  dataIndex: 'applyStartTime',\n  sorter: true,\n  width: '8%',\n} ,\n{\n  title: '结束时间',\n  dataIndex: 'applyEndTime',\n  sorter: true,\n  width: '8%',\n} \n,\n{\n  title: '申请时长',\n  dataIndex: 'name',\n  sorter: true,\n  width: '8%',\n}\n,\n{\n  title: '休假状态',\n  dataIndex: 'applyType',\n  filters: [{\n    text: '公休',\n    value: '公休',\n  }, {\n    text: '值班加班',\n    value: '值班加班',\n  }],\n  sorter: true,\n  width: '8%',\n},\n{\n  title: '假期种类',\n  dataIndex: 'holidayType',\n  filters: [{\n    text: '公休请假',\n    value: '公休请假',\n  }, {\n    text: '加班换积休',\n    value: '加班换积休',\n  },\n  {\n    text: '值班换积休',\n    value: '值班换积休',\n  }\n  ],\n  sorter: true,\n  width: '8%',\n}\n,\n{\n  title: '申请原因',\n  dataIndex: 'name',\n  sorter: true,\n  width: '10%',\n},\n{\n  title: '审批状态',\n  dataIndex: 'approveState',\n  sorter: true,\n  width: '10%',\n    filters: [{\n    text: '通过',\n    value: '通过',\n  }, {\n    text: '不通过',\n    value: '不通过',\n  },{\n    text: '未审批',\n    value: '未审批',\n  },\n  \n  ],\n}\n,\n{\n  title: '批注',\n  dataIndex: 'applyReason',\n  sorter: true,\n  width: '10%',\n},\n{\n      title: '操作',\n      dataIndex: 'operation',\n    }\n];\n\n\nexport default defineComponent({\n  setup() {\n  //  const onDelete = key => {\n  //     dataSource.value = dataSource.value.filter(item => item.key !== key);\n  //   };\n\n    const handleTableChange = (pag, filters, sorter) => {\n      run({\n        results: pag.pageSize,\n        page: pag?.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    };\n\n    let dataSource = ref()\n\n    getworkerApplyHistory(2).then (\n       response =>{\n         if (response['code'] == 1){\n        //    data.value = \n        dataSource.value = response['data']\n        \n         }\n       \n       }\n       \n       )\n\n\n\n    return {\n      dataSource,\n      // pagination,\n      // loading,\n      columns,\n      handleTableChange,\n    };\n  },\n\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}