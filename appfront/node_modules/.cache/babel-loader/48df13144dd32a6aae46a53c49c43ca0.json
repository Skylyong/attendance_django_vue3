{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createVNode as _createVNode } from \"vue\";\nimport PropTypes from '../../_util/vue-types';\nimport BaseMixin from '../../_util/BaseMixin';\nimport shallowEqual from '../../_util/shallowequal';\nimport TableRow from './TableRow';\nimport { remove } from './utils';\nimport { initDefaultProps, getOptionProps, getSlot } from '../../_util/props-util';\nimport { inject } from 'vue';\nexport var ExpandableTableProps = function ExpandableTableProps() {\n  return {\n    expandIconAsCell: PropTypes.looseBool,\n    expandRowByClick: PropTypes.looseBool,\n    expandedRowKeys: PropTypes.array,\n    expandedRowClassName: PropTypes.func,\n    defaultExpandAllRows: PropTypes.looseBool,\n    defaultExpandedRowKeys: PropTypes.array,\n    expandIconColumnIndex: PropTypes.number,\n    expandedRowRender: PropTypes.func,\n    expandIcon: PropTypes.func,\n    childrenColumnName: PropTypes.string,\n    indentSize: PropTypes.number,\n    // onExpand: PropTypes.func,\n    // onExpandedRowsChange: PropTypes.func,\n    columnManager: PropTypes.object.isRequired,\n    prefixCls: PropTypes.string.isRequired,\n    data: PropTypes.array,\n    getRowKey: PropTypes.func\n  };\n};\nvar ExpandableTable = {\n  name: 'ExpandableTable',\n  inheritAttrs: false,\n  mixins: [BaseMixin],\n  props: initDefaultProps(ExpandableTableProps(), {\n    expandIconAsCell: false,\n    expandedRowClassName: function expandedRowClassName() {\n      return '';\n    },\n    expandIconColumnIndex: 0,\n    defaultExpandAllRows: false,\n    defaultExpandedRowKeys: [],\n    childrenColumnName: 'children',\n    indentSize: 15\n  }),\n  setup: function setup(props) {\n    var store = inject('table-store', function () {\n      return {};\n    });\n    var data = props.data,\n        childrenColumnName = props.childrenColumnName,\n        defaultExpandAllRows = props.defaultExpandAllRows,\n        expandedRowKeys = props.expandedRowKeys,\n        defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n        getRowKey = props.getRowKey;\n    var finalExpandedRowKeys = [];\n\n    var rows = _toConsumableArray(data);\n\n    if (defaultExpandAllRows) {\n      for (var i = 0; i < rows.length; i += 1) {\n        var row = rows[i];\n        finalExpandedRowKeys.push(getRowKey(row, i));\n        rows = rows.concat(row[childrenColumnName] || []);\n      }\n    } else {\n      finalExpandedRowKeys = expandedRowKeys || defaultExpandedRowKeys;\n    }\n\n    _extends(store, {\n      expandedRowsHeight: {},\n      expandedRowKeys: finalExpandedRowKeys\n    });\n\n    return {\n      store: store\n    };\n  },\n  mounted: function mounted() {\n    this.handleUpdated();\n  },\n  updated: function updated() {\n    this.handleUpdated();\n  },\n  watch: {\n    expandedRowKeys: function expandedRowKeys(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.store.expandedRowKeys = val;\n      });\n    }\n  },\n  methods: {\n    handleUpdated: function handleUpdated() {\n      // We should record latest expanded rows to avoid multiple rows remove cause `onExpandedRowsChange` trigger many times\n      this.latestExpandedRows = null;\n    },\n    handleExpandChange: function handleExpandChange(expanded, record, event, rowKey) {\n      var destroy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      var expandedRowKeys = this.store.expandedRowKeys;\n\n      if (expanded) {\n        // row was expaned\n        expandedRowKeys = [].concat(_toConsumableArray(expandedRowKeys), [rowKey]);\n      } else {\n        // row was collapse\n        var expandedRowIndex = expandedRowKeys.indexOf(rowKey);\n\n        if (expandedRowIndex !== -1) {\n          expandedRowKeys = remove(expandedRowKeys, rowKey);\n        }\n      }\n\n      if (!this.expandedRowKeys) {\n        this.store.expandedRowKeys = expandedRowKeys;\n      } // De-dup of repeat call\n\n\n      if (!this.latestExpandedRows || !shallowEqual(this.latestExpandedRows, expandedRowKeys)) {\n        this.latestExpandedRows = expandedRowKeys;\n\n        this.__emit('expandedRowsChange', expandedRowKeys);\n      }\n\n      if (!destroy) {\n        this.__emit('expand', expanded, record);\n      }\n    },\n    renderExpandIndentCell: function renderExpandIndentCell(rows, fixed) {\n      var prefixCls = this.prefixCls,\n          expandIconAsCell = this.expandIconAsCell;\n\n      if (!expandIconAsCell || fixed === 'right' || !rows.length) {\n        return;\n      }\n\n      var iconColumn = {\n        key: 'rc-table-expand-icon-cell',\n        className: \"\".concat(prefixCls, \"-expand-icon-th\"),\n        title: '',\n        rowSpan: rows.length\n      };\n      rows[0].unshift(_extends(_extends({}, iconColumn), {\n        column: iconColumn\n      }));\n    },\n    renderExpandedRow: function renderExpandedRow(record, index, expandedRowRender, className, ancestorKeys, indent, fixed) {\n      var _this2 = this;\n\n      var prefixCls = this.prefixCls,\n          expandIconAsCell = this.expandIconAsCell,\n          indentSize = this.indentSize;\n      var parentKey = ancestorKeys[ancestorKeys.length - 1];\n      var rowKey = \"\".concat(parentKey, \"-extra-row\");\n      var components = {\n        body: {\n          row: 'tr',\n          cell: 'td'\n        }\n      };\n      var colCount;\n\n      if (fixed === 'left') {\n        colCount = this.columnManager.leftLeafColumns.value.length;\n      } else if (fixed === 'right') {\n        colCount = this.columnManager.rightLeafColumns.value.length;\n      } else {\n        colCount = this.columnManager.leafColumns.value.length;\n      }\n\n      var columns = [{\n        key: 'extra-row',\n        customRender: function customRender() {\n          var expandedRowKeys = _this2.store.expandedRowKeys;\n          var expanded = expandedRowKeys.includes(parentKey);\n          return {\n            props: {\n              colSpan: colCount\n            },\n            children: fixed !== 'right' ? expandedRowRender({\n              record: record,\n              index: index,\n              indent: indent,\n              expanded: expanded\n            }) : '&nbsp;'\n          };\n        }\n      }];\n\n      if (expandIconAsCell && fixed !== 'right') {\n        columns.unshift({\n          key: 'expand-icon-placeholder',\n          customRender: function customRender() {\n            return null;\n          }\n        });\n      }\n\n      return _createVNode(TableRow, {\n        \"key\": rowKey,\n        \"columns\": columns,\n        \"class\": className,\n        \"rowKey\": rowKey,\n        \"ancestorKeys\": ancestorKeys,\n        \"prefixCls\": \"\".concat(prefixCls, \"-expanded-row\"),\n        \"indentSize\": indentSize,\n        \"indent\": indent,\n        \"fixed\": fixed,\n        \"components\": components,\n        \"expandedRow\": true,\n        \"hasExpandIcon\": function hasExpandIcon() {}\n      }, null);\n    },\n    renderRows: function renderRows(_renderRows, rows, record, index, indent, fixed, parentKey, ancestorKeys) {\n      var expandedRowClassName = this.expandedRowClassName,\n          expandedRowRender = this.expandedRowRender,\n          childrenColumnName = this.childrenColumnName;\n      var childrenData = record[childrenColumnName];\n      var nextAncestorKeys = [].concat(_toConsumableArray(ancestorKeys), [parentKey]);\n      var nextIndent = indent + 1;\n\n      if (expandedRowRender) {\n        rows.push(this.renderExpandedRow(record, index, expandedRowRender, expandedRowClassName(record, index, indent), nextAncestorKeys, nextIndent, fixed));\n      }\n\n      if (childrenData) {\n        rows.push.apply(rows, _toConsumableArray(_renderRows(childrenData, nextIndent, nextAncestorKeys)));\n      }\n    }\n  },\n  render: function render() {\n    var data = this.data,\n        childrenColumnName = this.childrenColumnName;\n    var props = getOptionProps(this);\n    var needIndentSpaced = data.some(function (record) {\n      return record[childrenColumnName];\n    });\n    return getSlot(this, 'default', {\n      props: _extends(_extends({}, props), this.$attrs),\n      needIndentSpaced: needIndentSpaced,\n      renderRows: this.renderRows,\n      handleExpandChange: this.handleExpandChange,\n      renderExpandIndentCell: this.renderExpandIndentCell\n    });\n  }\n};\nexport default ExpandableTable;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/vc-table/src/ExpandableTable.js"],"names":["_extends","_toConsumableArray","createVNode","_createVNode","PropTypes","BaseMixin","shallowEqual","TableRow","remove","initDefaultProps","getOptionProps","getSlot","inject","ExpandableTableProps","expandIconAsCell","looseBool","expandRowByClick","expandedRowKeys","array","expandedRowClassName","func","defaultExpandAllRows","defaultExpandedRowKeys","expandIconColumnIndex","number","expandedRowRender","expandIcon","childrenColumnName","string","indentSize","columnManager","object","isRequired","prefixCls","data","getRowKey","ExpandableTable","name","inheritAttrs","mixins","props","setup","store","finalExpandedRowKeys","rows","i","length","row","push","concat","expandedRowsHeight","mounted","handleUpdated","updated","watch","val","_this","$nextTick","methods","latestExpandedRows","handleExpandChange","expanded","record","event","rowKey","destroy","arguments","undefined","preventDefault","stopPropagation","expandedRowIndex","indexOf","__emit","renderExpandIndentCell","fixed","iconColumn","key","className","title","rowSpan","unshift","column","renderExpandedRow","index","ancestorKeys","indent","_this2","parentKey","components","body","cell","colCount","leftLeafColumns","value","rightLeafColumns","leafColumns","columns","customRender","includes","colSpan","children","hasExpandIcon","renderRows","_renderRows","childrenData","nextAncestorKeys","nextIndent","apply","render","needIndentSpaced","some","$attrs"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createVNode as _createVNode } from \"vue\";\nimport PropTypes from '../../_util/vue-types';\nimport BaseMixin from '../../_util/BaseMixin';\nimport shallowEqual from '../../_util/shallowequal';\nimport TableRow from './TableRow';\nimport { remove } from './utils';\nimport { initDefaultProps, getOptionProps, getSlot } from '../../_util/props-util';\nimport { inject } from 'vue';\nexport var ExpandableTableProps = function ExpandableTableProps() {\n  return {\n    expandIconAsCell: PropTypes.looseBool,\n    expandRowByClick: PropTypes.looseBool,\n    expandedRowKeys: PropTypes.array,\n    expandedRowClassName: PropTypes.func,\n    defaultExpandAllRows: PropTypes.looseBool,\n    defaultExpandedRowKeys: PropTypes.array,\n    expandIconColumnIndex: PropTypes.number,\n    expandedRowRender: PropTypes.func,\n    expandIcon: PropTypes.func,\n    childrenColumnName: PropTypes.string,\n    indentSize: PropTypes.number,\n    // onExpand: PropTypes.func,\n    // onExpandedRowsChange: PropTypes.func,\n    columnManager: PropTypes.object.isRequired,\n    prefixCls: PropTypes.string.isRequired,\n    data: PropTypes.array,\n    getRowKey: PropTypes.func\n  };\n};\nvar ExpandableTable = {\n  name: 'ExpandableTable',\n  inheritAttrs: false,\n  mixins: [BaseMixin],\n  props: initDefaultProps(ExpandableTableProps(), {\n    expandIconAsCell: false,\n    expandedRowClassName: function expandedRowClassName() {\n      return '';\n    },\n    expandIconColumnIndex: 0,\n    defaultExpandAllRows: false,\n    defaultExpandedRowKeys: [],\n    childrenColumnName: 'children',\n    indentSize: 15\n  }),\n  setup: function setup(props) {\n    var store = inject('table-store', function () {\n      return {};\n    });\n    var data = props.data,\n        childrenColumnName = props.childrenColumnName,\n        defaultExpandAllRows = props.defaultExpandAllRows,\n        expandedRowKeys = props.expandedRowKeys,\n        defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n        getRowKey = props.getRowKey;\n    var finalExpandedRowKeys = [];\n\n    var rows = _toConsumableArray(data);\n\n    if (defaultExpandAllRows) {\n      for (var i = 0; i < rows.length; i += 1) {\n        var row = rows[i];\n        finalExpandedRowKeys.push(getRowKey(row, i));\n        rows = rows.concat(row[childrenColumnName] || []);\n      }\n    } else {\n      finalExpandedRowKeys = expandedRowKeys || defaultExpandedRowKeys;\n    }\n\n    _extends(store, {\n      expandedRowsHeight: {},\n      expandedRowKeys: finalExpandedRowKeys\n    });\n\n    return {\n      store: store\n    };\n  },\n  mounted: function mounted() {\n    this.handleUpdated();\n  },\n  updated: function updated() {\n    this.handleUpdated();\n  },\n  watch: {\n    expandedRowKeys: function expandedRowKeys(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.store.expandedRowKeys = val;\n      });\n    }\n  },\n  methods: {\n    handleUpdated: function handleUpdated() {\n      // We should record latest expanded rows to avoid multiple rows remove cause `onExpandedRowsChange` trigger many times\n      this.latestExpandedRows = null;\n    },\n    handleExpandChange: function handleExpandChange(expanded, record, event, rowKey) {\n      var destroy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      var expandedRowKeys = this.store.expandedRowKeys;\n\n      if (expanded) {\n        // row was expaned\n        expandedRowKeys = [].concat(_toConsumableArray(expandedRowKeys), [rowKey]);\n      } else {\n        // row was collapse\n        var expandedRowIndex = expandedRowKeys.indexOf(rowKey);\n\n        if (expandedRowIndex !== -1) {\n          expandedRowKeys = remove(expandedRowKeys, rowKey);\n        }\n      }\n\n      if (!this.expandedRowKeys) {\n        this.store.expandedRowKeys = expandedRowKeys;\n      } // De-dup of repeat call\n\n\n      if (!this.latestExpandedRows || !shallowEqual(this.latestExpandedRows, expandedRowKeys)) {\n        this.latestExpandedRows = expandedRowKeys;\n\n        this.__emit('expandedRowsChange', expandedRowKeys);\n      }\n\n      if (!destroy) {\n        this.__emit('expand', expanded, record);\n      }\n    },\n    renderExpandIndentCell: function renderExpandIndentCell(rows, fixed) {\n      var prefixCls = this.prefixCls,\n          expandIconAsCell = this.expandIconAsCell;\n\n      if (!expandIconAsCell || fixed === 'right' || !rows.length) {\n        return;\n      }\n\n      var iconColumn = {\n        key: 'rc-table-expand-icon-cell',\n        className: \"\".concat(prefixCls, \"-expand-icon-th\"),\n        title: '',\n        rowSpan: rows.length\n      };\n      rows[0].unshift(_extends(_extends({}, iconColumn), {\n        column: iconColumn\n      }));\n    },\n    renderExpandedRow: function renderExpandedRow(record, index, expandedRowRender, className, ancestorKeys, indent, fixed) {\n      var _this2 = this;\n\n      var prefixCls = this.prefixCls,\n          expandIconAsCell = this.expandIconAsCell,\n          indentSize = this.indentSize;\n      var parentKey = ancestorKeys[ancestorKeys.length - 1];\n      var rowKey = \"\".concat(parentKey, \"-extra-row\");\n      var components = {\n        body: {\n          row: 'tr',\n          cell: 'td'\n        }\n      };\n      var colCount;\n\n      if (fixed === 'left') {\n        colCount = this.columnManager.leftLeafColumns.value.length;\n      } else if (fixed === 'right') {\n        colCount = this.columnManager.rightLeafColumns.value.length;\n      } else {\n        colCount = this.columnManager.leafColumns.value.length;\n      }\n\n      var columns = [{\n        key: 'extra-row',\n        customRender: function customRender() {\n          var expandedRowKeys = _this2.store.expandedRowKeys;\n          var expanded = expandedRowKeys.includes(parentKey);\n          return {\n            props: {\n              colSpan: colCount\n            },\n            children: fixed !== 'right' ? expandedRowRender({\n              record: record,\n              index: index,\n              indent: indent,\n              expanded: expanded\n            }) : '&nbsp;'\n          };\n        }\n      }];\n\n      if (expandIconAsCell && fixed !== 'right') {\n        columns.unshift({\n          key: 'expand-icon-placeholder',\n          customRender: function customRender() {\n            return null;\n          }\n        });\n      }\n\n      return _createVNode(TableRow, {\n        \"key\": rowKey,\n        \"columns\": columns,\n        \"class\": className,\n        \"rowKey\": rowKey,\n        \"ancestorKeys\": ancestorKeys,\n        \"prefixCls\": \"\".concat(prefixCls, \"-expanded-row\"),\n        \"indentSize\": indentSize,\n        \"indent\": indent,\n        \"fixed\": fixed,\n        \"components\": components,\n        \"expandedRow\": true,\n        \"hasExpandIcon\": function hasExpandIcon() {}\n      }, null);\n    },\n    renderRows: function renderRows(_renderRows, rows, record, index, indent, fixed, parentKey, ancestorKeys) {\n      var expandedRowClassName = this.expandedRowClassName,\n          expandedRowRender = this.expandedRowRender,\n          childrenColumnName = this.childrenColumnName;\n      var childrenData = record[childrenColumnName];\n      var nextAncestorKeys = [].concat(_toConsumableArray(ancestorKeys), [parentKey]);\n      var nextIndent = indent + 1;\n\n      if (expandedRowRender) {\n        rows.push(this.renderExpandedRow(record, index, expandedRowRender, expandedRowClassName(record, index, indent), nextAncestorKeys, nextIndent, fixed));\n      }\n\n      if (childrenData) {\n        rows.push.apply(rows, _toConsumableArray(_renderRows(childrenData, nextIndent, nextAncestorKeys)));\n      }\n    }\n  },\n  render: function render() {\n    var data = this.data,\n        childrenColumnName = this.childrenColumnName;\n    var props = getOptionProps(this);\n    var needIndentSpaced = data.some(function (record) {\n      return record[childrenColumnName];\n    });\n    return getSlot(this, 'default', {\n      props: _extends(_extends({}, props), this.$attrs),\n      needIndentSpaced: needIndentSpaced,\n      renderRows: this.renderRows,\n      handleExpandChange: this.handleExpandChange,\n      renderExpandIndentCell: this.renderExpandIndentCell\n    });\n  }\n};\nexport default ExpandableTable;"]},"metadata":{},"sourceType":"module"}