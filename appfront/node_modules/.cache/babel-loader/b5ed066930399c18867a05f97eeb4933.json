{"ast":null,"code":"/**\r\n  * 节流函数；当被调用 n 毫秒后才会执行，如果在这时间内又被调用则至少每隔 n 秒毫秒调用一次该函数\r\n  *\r\n  * @param {Function} callback 回调\r\n  * @param {Number} wait 多少秒毫\r\n  * @param {Object} options 参数{leading: 是否在之前执行, trailing: 是否在之后执行}\r\n  * @return {Function}\r\n  */\nfunction throttle(callback, wait, options) {\n  var args, context;\n  var opts = options || {};\n  var runFlag = false;\n  var timeout = 0;\n  var optLeading = 'leading' in opts ? opts.leading : true;\n  var optTrailing = 'trailing' in opts ? opts.trailing : false;\n\n  var runFn = function () {\n    runFlag = true;\n    callback.apply(context, args);\n    timeout = setTimeout(endFn, wait);\n  };\n\n  var endFn = function () {\n    timeout = 0;\n\n    if (!runFlag && optTrailing === true) {\n      runFn();\n    }\n  };\n\n  var cancelFn = function () {\n    var rest = timeout !== 0;\n    clearTimeout(timeout);\n    runFlag = false;\n    timeout = 0;\n    return rest;\n  };\n\n  var throttled = function () {\n    args = arguments;\n    context = this;\n    runFlag = false;\n\n    if (timeout === 0) {\n      if (optLeading === true) {\n        runFn();\n      } else if (optTrailing === true) {\n        timeout = setTimeout(endFn, wait);\n      }\n    }\n  };\n\n  throttled.cancel = cancelFn;\n  return throttled;\n}\n\nmodule.exports = throttle;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/throttle.js"],"names":["throttle","callback","wait","options","args","context","opts","runFlag","timeout","optLeading","leading","optTrailing","trailing","runFn","apply","setTimeout","endFn","cancelFn","rest","clearTimeout","throttled","arguments","cancel","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4C;AAC1C,MAAIC,IAAJ,EAAUC,OAAV;AACA,MAAIC,IAAI,GAAGH,OAAO,IAAI,EAAtB;AACA,MAAII,OAAO,GAAG,KAAd;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,UAAU,GAAG,aAAaH,IAAb,GAAoBA,IAAI,CAACI,OAAzB,GAAmC,IAApD;AACA,MAAIC,WAAW,GAAG,cAAcL,IAAd,GAAqBA,IAAI,CAACM,QAA1B,GAAqC,KAAvD;;AACA,MAAIC,KAAK,GAAG,YAAY;AACtBN,IAAAA,OAAO,GAAG,IAAV;AACAN,IAAAA,QAAQ,CAACa,KAAT,CAAeT,OAAf,EAAwBD,IAAxB;AACAI,IAAAA,OAAO,GAAGO,UAAU,CAACC,KAAD,EAAQd,IAAR,CAApB;AACD,GAJD;;AAKA,MAAIc,KAAK,GAAG,YAAY;AACtBR,IAAAA,OAAO,GAAG,CAAV;;AACA,QAAI,CAACD,OAAD,IAAYI,WAAW,KAAK,IAAhC,EAAsC;AACpCE,MAAAA,KAAK;AACN;AACF,GALD;;AAMA,MAAII,QAAQ,GAAG,YAAY;AACzB,QAAIC,IAAI,GAAGV,OAAO,KAAK,CAAvB;AACAW,IAAAA,YAAY,CAACX,OAAD,CAAZ;AACAD,IAAAA,OAAO,GAAG,KAAV;AACAC,IAAAA,OAAO,GAAG,CAAV;AACA,WAAOU,IAAP;AACD,GAND;;AAOA,MAAIE,SAAS,GAAG,YAAY;AAC1BhB,IAAAA,IAAI,GAAGiB,SAAP;AACAhB,IAAAA,OAAO,GAAG,IAAV;AACAE,IAAAA,OAAO,GAAG,KAAV;;AACA,QAAIC,OAAO,KAAK,CAAhB,EAAmB;AACjB,UAAIC,UAAU,KAAK,IAAnB,EAAyB;AACvBI,QAAAA,KAAK;AACN,OAFD,MAEO,IAAIF,WAAW,KAAK,IAApB,EAA0B;AAC/BH,QAAAA,OAAO,GAAGO,UAAU,CAACC,KAAD,EAAQd,IAAR,CAApB;AACD;AACF;AACF,GAXD;;AAYAkB,EAAAA,SAAS,CAACE,MAAV,GAAmBL,QAAnB;AACA,SAAOG,SAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["/**\r\n  * 节流函数；当被调用 n 毫秒后才会执行，如果在这时间内又被调用则至少每隔 n 秒毫秒调用一次该函数\r\n  *\r\n  * @param {Function} callback 回调\r\n  * @param {Number} wait 多少秒毫\r\n  * @param {Object} options 参数{leading: 是否在之前执行, trailing: 是否在之后执行}\r\n  * @return {Function}\r\n  */\r\nfunction throttle (callback, wait, options) {\r\n  var args, context\r\n  var opts = options || {}\r\n  var runFlag = false\r\n  var timeout = 0\r\n  var optLeading = 'leading' in opts ? opts.leading : true\r\n  var optTrailing = 'trailing' in opts ? opts.trailing : false\r\n  var runFn = function () {\r\n    runFlag = true\r\n    callback.apply(context, args)\r\n    timeout = setTimeout(endFn, wait)\r\n  }\r\n  var endFn = function () {\r\n    timeout = 0\r\n    if (!runFlag && optTrailing === true) {\r\n      runFn()\r\n    }\r\n  }\r\n  var cancelFn = function () {\r\n    var rest = timeout !== 0\r\n    clearTimeout(timeout)\r\n    runFlag = false\r\n    timeout = 0\r\n    return rest\r\n  }\r\n  var throttled = function () {\r\n    args = arguments\r\n    context = this\r\n    runFlag = false\r\n    if (timeout === 0) {\r\n      if (optLeading === true) {\r\n        runFn()\r\n      } else if (optTrailing === true) {\r\n        timeout = setTimeout(endFn, wait)\r\n      }\r\n    }\r\n  }\r\n  throttled.cancel = cancelFn\r\n  return throttled\r\n}\r\n\r\nmodule.exports = throttle\r\n"]},"metadata":{},"sourceType":"script"}