{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent, onUnmounted, reactive, ref, watch } from 'vue';\nimport classNames from '../_util/classNames';\n\nfunction UnitNumber(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      current = _ref.current,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset;\n  var style;\n\n  if (offset) {\n    style = {\n      position: 'absolute',\n      top: \"\".concat(offset, \"00%\"),\n      left: 0\n    };\n  }\n\n  return _createVNode(\"p\", {\n    \"style\": style,\n    \"class\": classNames(\"\".concat(prefixCls, \"-only-unit\"), {\n      current: current\n    })\n  }, [value]);\n}\n\nfunction getOffset(start, end, unit) {\n  var index = start;\n  var offset = 0;\n\n  while ((index + 10) % 10 !== end) {\n    index += unit;\n    offset += unit;\n  }\n\n  return offset;\n}\n\nexport default defineComponent({\n  name: 'SingleNumber',\n  props: {\n    prefixCls: String,\n    value: String,\n    count: Number\n  },\n  setup: function setup(props) {\n    var originValue = computed(function () {\n      return Number(props.value);\n    });\n    var originCount = computed(function () {\n      return Math.abs(props.count);\n    });\n    var state = reactive({\n      prevValue: originValue.value,\n      prevCount: originCount.value\n    }); // ============================= Events =============================\n\n    var onTransitionEnd = function onTransitionEnd() {\n      state.prevValue = originValue.value;\n      state.prevCount = originCount.value;\n    };\n\n    var timeout = ref(); // Fallback if transition event not support\n\n    watch(originValue, function () {\n      clearTimeout(timeout.value);\n      timeout.value = setTimeout(function () {\n        onTransitionEnd();\n      }, 1000);\n    }, {\n      flush: 'post'\n    });\n    onUnmounted(function () {\n      clearTimeout(timeout.value);\n    });\n    return function () {\n      var unitNodes;\n      var offsetStyle = {};\n      var value = originValue.value;\n\n      if (state.prevValue === value || Number.isNaN(value) || Number.isNaN(state.prevValue)) {\n        // Nothing to change\n        unitNodes = [UnitNumber(_extends(_extends({}, props), {\n          current: true\n        }))];\n        offsetStyle = {\n          transition: 'none'\n        };\n      } else {\n        unitNodes = []; // Fill basic number units\n\n        var end = value + 10;\n        var unitNumberList = [];\n\n        for (var index = value; index <= end; index += 1) {\n          unitNumberList.push(index);\n        } // Fill with number unit nodes\n\n\n        var prevIndex = unitNumberList.findIndex(function (n) {\n          return n % 10 === state.prevValue;\n        });\n        unitNodes = unitNumberList.map(function (n, index) {\n          var singleUnit = n % 10;\n          return UnitNumber(_extends(_extends({}, props), {\n            value: singleUnit,\n            offset: index - prevIndex,\n            current: index === prevIndex\n          }));\n        }); // Calculate container offset value\n\n        var unit = state.prevCount < originCount.value ? 1 : -1;\n        offsetStyle = {\n          transform: \"translateY(\".concat(-getOffset(state.prevValue, value, unit), \"00%)\")\n        };\n      }\n\n      return _createVNode(\"span\", {\n        \"class\": \"\".concat(props.prefixCls, \"-only\"),\n        \"style\": offsetStyle,\n        \"onTransitionend\": function onTransitionend() {\n          return onTransitionEnd();\n        }\n      }, [unitNodes]);\n    };\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/badge/SingleNumber.js"],"names":["_extends","createVNode","_createVNode","computed","defineComponent","onUnmounted","reactive","ref","watch","classNames","UnitNumber","_ref","prefixCls","value","current","_ref$offset","offset","style","position","top","concat","left","getOffset","start","end","unit","index","name","props","String","count","Number","setup","originValue","originCount","Math","abs","state","prevValue","prevCount","onTransitionEnd","timeout","clearTimeout","setTimeout","flush","unitNodes","offsetStyle","isNaN","transition","unitNumberList","push","prevIndex","findIndex","n","map","singleUnit","transform","onTransitionend"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent, onUnmounted, reactive, ref, watch } from 'vue';\nimport classNames from '../_util/classNames';\n\nfunction UnitNumber(_ref) {\n  var prefixCls = _ref.prefixCls,\n      value = _ref.value,\n      current = _ref.current,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset;\n  var style;\n\n  if (offset) {\n    style = {\n      position: 'absolute',\n      top: \"\".concat(offset, \"00%\"),\n      left: 0\n    };\n  }\n\n  return _createVNode(\"p\", {\n    \"style\": style,\n    \"class\": classNames(\"\".concat(prefixCls, \"-only-unit\"), {\n      current: current\n    })\n  }, [value]);\n}\n\nfunction getOffset(start, end, unit) {\n  var index = start;\n  var offset = 0;\n\n  while ((index + 10) % 10 !== end) {\n    index += unit;\n    offset += unit;\n  }\n\n  return offset;\n}\n\nexport default defineComponent({\n  name: 'SingleNumber',\n  props: {\n    prefixCls: String,\n    value: String,\n    count: Number\n  },\n  setup: function setup(props) {\n    var originValue = computed(function () {\n      return Number(props.value);\n    });\n    var originCount = computed(function () {\n      return Math.abs(props.count);\n    });\n    var state = reactive({\n      prevValue: originValue.value,\n      prevCount: originCount.value\n    }); // ============================= Events =============================\n\n    var onTransitionEnd = function onTransitionEnd() {\n      state.prevValue = originValue.value;\n      state.prevCount = originCount.value;\n    };\n\n    var timeout = ref(); // Fallback if transition event not support\n\n    watch(originValue, function () {\n      clearTimeout(timeout.value);\n      timeout.value = setTimeout(function () {\n        onTransitionEnd();\n      }, 1000);\n    }, {\n      flush: 'post'\n    });\n    onUnmounted(function () {\n      clearTimeout(timeout.value);\n    });\n    return function () {\n      var unitNodes;\n      var offsetStyle = {};\n      var value = originValue.value;\n\n      if (state.prevValue === value || Number.isNaN(value) || Number.isNaN(state.prevValue)) {\n        // Nothing to change\n        unitNodes = [UnitNumber(_extends(_extends({}, props), {\n          current: true\n        }))];\n        offsetStyle = {\n          transition: 'none'\n        };\n      } else {\n        unitNodes = []; // Fill basic number units\n\n        var end = value + 10;\n        var unitNumberList = [];\n\n        for (var index = value; index <= end; index += 1) {\n          unitNumberList.push(index);\n        } // Fill with number unit nodes\n\n\n        var prevIndex = unitNumberList.findIndex(function (n) {\n          return n % 10 === state.prevValue;\n        });\n        unitNodes = unitNumberList.map(function (n, index) {\n          var singleUnit = n % 10;\n          return UnitNumber(_extends(_extends({}, props), {\n            value: singleUnit,\n            offset: index - prevIndex,\n            current: index === prevIndex\n          }));\n        }); // Calculate container offset value\n\n        var unit = state.prevCount < originCount.value ? 1 : -1;\n        offsetStyle = {\n          transform: \"translateY(\".concat(-getOffset(state.prevValue, value, unit), \"00%)\")\n        };\n      }\n\n      return _createVNode(\"span\", {\n        \"class\": \"\".concat(props.prefixCls, \"-only\"),\n        \"style\": offsetStyle,\n        \"onTransitionend\": function onTransitionend() {\n          return onTransitionEnd();\n        }\n      }, [unitNodes]);\n    };\n  }\n});"]},"metadata":{},"sourceType":"module"}