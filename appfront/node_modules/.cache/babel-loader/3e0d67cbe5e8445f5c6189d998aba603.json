{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component\";\nimport VanImagePreview from \"./ImagePreview\";\nlet instance;\nconst defaultConfig = {\n  loop: true,\n  images: [],\n  maxZoom: 3,\n  minZoom: 1 / 3,\n  onScale: void 0,\n  onClose: void 0,\n  onChange: void 0,\n  teleport: \"body\",\n  className: \"\",\n  showIndex: true,\n  closeable: false,\n  closeIcon: \"clear\",\n  transition: void 0,\n  beforeClose: void 0,\n  overlayStyle: void 0,\n  overlayClass: void 0,\n  startPosition: 0,\n  swipeDuration: 300,\n  showIndicators: false,\n  closeOnPopstate: true,\n  closeIconPosition: \"top-right\"\n};\n\nfunction initInstance() {\n  ({\n    instance\n  } = mountComponent({\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n\n      const onClosed = () => {\n        state.images = [];\n      };\n\n      return () => _createVNode(VanImagePreview, _mergeProps(state, {\n        \"onClosed\": onClosed,\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n\n  }));\n}\n\nconst ImagePreview = (options, startPosition = 0) => {\n  if (!inBrowser) {\n    return;\n  }\n\n  if (!instance) {\n    initInstance();\n  }\n\n  options = Array.isArray(options) ? {\n    images: options,\n    startPosition\n  } : options;\n  instance.open(extend({}, defaultConfig, options));\n  return instance;\n};\n\nImagePreview.Component = withInstall(VanImagePreview);\n\nImagePreview.install = app => {\n  app.use(ImagePreview.Component);\n};\n\nexport { ImagePreview };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/image-preview/function-call.js"],"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","inBrowser","withInstall","mountComponent","usePopupState","VanImagePreview","instance","defaultConfig","loop","images","maxZoom","minZoom","onScale","onClose","onChange","teleport","className","showIndex","closeable","closeIcon","transition","beforeClose","overlayStyle","overlayClass","startPosition","swipeDuration","showIndicators","closeOnPopstate","closeIconPosition","initInstance","setup","state","toggle","onClosed","ImagePreview","options","Array","isArray","open","Component","install","app","use"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,EAAsCC,UAAU,IAAIC,WAApD,QAAuE,KAAvE;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,UAA/C;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,IAAIC,QAAJ;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,MAAM,EAAE,EAFY;AAGpBC,EAAAA,OAAO,EAAE,CAHW;AAIpBC,EAAAA,OAAO,EAAE,IAAI,CAJO;AAKpBC,EAAAA,OAAO,EAAE,KAAK,CALM;AAMpBC,EAAAA,OAAO,EAAE,KAAK,CANM;AAOpBC,EAAAA,QAAQ,EAAE,KAAK,CAPK;AAQpBC,EAAAA,QAAQ,EAAE,MARU;AASpBC,EAAAA,SAAS,EAAE,EATS;AAUpBC,EAAAA,SAAS,EAAE,IAVS;AAWpBC,EAAAA,SAAS,EAAE,KAXS;AAYpBC,EAAAA,SAAS,EAAE,OAZS;AAapBC,EAAAA,UAAU,EAAE,KAAK,CAbG;AAcpBC,EAAAA,WAAW,EAAE,KAAK,CAdE;AAepBC,EAAAA,YAAY,EAAE,KAAK,CAfC;AAgBpBC,EAAAA,YAAY,EAAE,KAAK,CAhBC;AAiBpBC,EAAAA,aAAa,EAAE,CAjBK;AAkBpBC,EAAAA,aAAa,EAAE,GAlBK;AAmBpBC,EAAAA,cAAc,EAAE,KAnBI;AAoBpBC,EAAAA,eAAe,EAAE,IApBG;AAqBpBC,EAAAA,iBAAiB,EAAE;AArBC,CAAtB;;AAuBA,SAASC,YAAT,GAAwB;AACtB,GAAC;AACCvB,IAAAA;AADD,MAEGH,cAAc,CAAC;AACjB2B,IAAAA,KAAK,GAAG;AACN,YAAM;AACJC,QAAAA,KADI;AAEJC,QAAAA;AAFI,UAGF5B,aAAa,EAHjB;;AAIA,YAAM6B,QAAQ,GAAG,MAAM;AACrBF,QAAAA,KAAK,CAACtB,MAAN,GAAe,EAAf;AACD,OAFD;;AAGA,aAAO,MAAMZ,YAAY,CAACQ,eAAD,EAAkBN,WAAW,CAACgC,KAAD,EAAQ;AAC5D,oBAAYE,QADgD;AAE5D,yBAAiBD;AAF2C,OAAR,CAA7B,EAGrB,IAHqB,CAAzB;AAID;;AAbgB,GAAD,CAFlB;AAiBD;;AACD,MAAME,YAAY,GAAG,CAACC,OAAD,EAAUX,aAAa,GAAG,CAA1B,KAAgC;AACnD,MAAI,CAACvB,SAAL,EAAgB;AACd;AACD;;AACD,MAAI,CAACK,QAAL,EAAe;AACbuB,IAAAA,YAAY;AACb;;AACDM,EAAAA,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyB;AACjC1B,IAAAA,MAAM,EAAE0B,OADyB;AAEjCX,IAAAA;AAFiC,GAAzB,GAGNW,OAHJ;AAIA7B,EAAAA,QAAQ,CAACgC,IAAT,CAActC,MAAM,CAAC,EAAD,EAAKO,aAAL,EAAoB4B,OAApB,CAApB;AACA,SAAO7B,QAAP;AACD,CAbD;;AAcA4B,YAAY,CAACK,SAAb,GAAyBrC,WAAW,CAACG,eAAD,CAApC;;AACA6B,YAAY,CAACM,OAAb,GAAwBC,GAAD,IAAS;AAC9BA,EAAAA,GAAG,CAACC,GAAJ,CAAQR,YAAY,CAACK,SAArB;AACD,CAFD;;AAGA,SACEL,YADF","sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component\";\nimport VanImagePreview from \"./ImagePreview\";\nlet instance;\nconst defaultConfig = {\n  loop: true,\n  images: [],\n  maxZoom: 3,\n  minZoom: 1 / 3,\n  onScale: void 0,\n  onClose: void 0,\n  onChange: void 0,\n  teleport: \"body\",\n  className: \"\",\n  showIndex: true,\n  closeable: false,\n  closeIcon: \"clear\",\n  transition: void 0,\n  beforeClose: void 0,\n  overlayStyle: void 0,\n  overlayClass: void 0,\n  startPosition: 0,\n  swipeDuration: 300,\n  showIndicators: false,\n  closeOnPopstate: true,\n  closeIconPosition: \"top-right\"\n};\nfunction initInstance() {\n  ({\n    instance\n  } = mountComponent({\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      const onClosed = () => {\n        state.images = [];\n      };\n      return () => _createVNode(VanImagePreview, _mergeProps(state, {\n        \"onClosed\": onClosed,\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  }));\n}\nconst ImagePreview = (options, startPosition = 0) => {\n  if (!inBrowser) {\n    return;\n  }\n  if (!instance) {\n    initInstance();\n  }\n  options = Array.isArray(options) ? {\n    images: options,\n    startPosition\n  } : options;\n  instance.open(extend({}, defaultConfig, options));\n  return instance;\n};\nImagePreview.Component = withInstall(VanImagePreview);\nImagePreview.install = (app) => {\n  app.use(ImagePreview.Component);\n};\nexport {\n  ImagePreview\n};\n"]},"metadata":{},"sourceType":"module"}