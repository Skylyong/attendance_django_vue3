{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { pick, extend, truthProp, makeArrayProp, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { popupSharedProps, popupSharedPropKeys } from \"../popup/shared\";\nimport { Popup } from \"../popup\";\nconst PRESET_ICONS = [\"qq\", \"link\", \"weibo\", \"wechat\", \"poster\", \"qrcode\", \"weapp-qrcode\", \"wechat-moments\"];\nconst popupInheritKeys = [...popupSharedPropKeys, \"round\", \"closeOnPopstate\", \"safeAreaInsetBottom\"];\n\nfunction getIconURL(icon) {\n  if (PRESET_ICONS.includes(icon)) {\n    return `https://img.yzcdn.cn/vant/share-sheet-${icon}.png`;\n  }\n\n  return icon;\n}\n\nconst [name, bem, t] = createNamespace(\"share-sheet\");\nconst shareSheetProps = extend({}, popupSharedProps, {\n  title: String,\n  round: truthProp,\n  options: makeArrayProp(),\n  cancelText: String,\n  description: String,\n  closeOnPopstate: truthProp,\n  safeAreaInsetBottom: truthProp\n});\nvar stdin_default = defineComponent({\n  name,\n  props: shareSheetProps,\n  emits: [\"cancel\", \"select\", \"update:show\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const updateShow = value => emit(\"update:show\", value);\n\n    const onCancel = () => {\n      updateShow(false);\n      emit(\"cancel\");\n    };\n\n    const onSelect = (option, index) => emit(\"select\", option, index);\n\n    const renderHeader = () => {\n      const title = slots.title ? slots.title() : props.title;\n      const description = slots.description ? slots.description() : props.description;\n\n      if (title || description) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"header\")\n        }, [title && _createVNode(\"h2\", {\n          \"class\": bem(\"title\")\n        }, [title]), description && _createVNode(\"span\", {\n          \"class\": bem(\"description\")\n        }, [description])]);\n      }\n    };\n\n    const renderOption = (option, index) => {\n      const {\n        name: name2,\n        icon,\n        className,\n        description\n      } = option;\n      return _createVNode(\"div\", {\n        \"role\": \"button\",\n        \"tabindex\": 0,\n        \"class\": [bem(\"option\"), className, HAPTICS_FEEDBACK],\n        \"onClick\": () => onSelect(option, index)\n      }, [_createVNode(\"img\", {\n        \"src\": getIconURL(icon),\n        \"class\": bem(\"icon\")\n      }, null), name2 && _createVNode(\"span\", {\n        \"class\": bem(\"name\")\n      }, [name2]), description && _createVNode(\"span\", {\n        \"class\": bem(\"option-description\")\n      }, [description])]);\n    };\n\n    const renderOptions = (options, border) => _createVNode(\"div\", {\n      \"class\": bem(\"options\", {\n        border\n      })\n    }, [options.map(renderOption)]);\n\n    const renderRows = () => {\n      const {\n        options\n      } = props;\n\n      if (Array.isArray(options[0])) {\n        return options.map((item, index) => renderOptions(item, index !== 0));\n      }\n\n      return renderOptions(options);\n    };\n\n    const renderCancelButton = () => {\n      var _a;\n\n      const cancelText = (_a = props.cancelText) != null ? _a : t(\"cancel\");\n\n      if (slots.cancel || cancelText) {\n        return _createVNode(\"button\", {\n          \"type\": \"button\",\n          \"class\": bem(\"cancel\"),\n          \"onClick\": onCancel\n        }, [slots.cancel ? slots.cancel() : cancelText]);\n      }\n    };\n\n    return () => _createVNode(Popup, _mergeProps({\n      \"class\": bem(),\n      \"position\": \"bottom\",\n      \"onUpdate:show\": updateShow\n    }, pick(props, popupInheritKeys)), {\n      default: () => [renderHeader(), renderRows(), renderCancelButton()]\n    });\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/share-sheet/ShareSheet.js"],"names":["mergeProps","_mergeProps","createVNode","_createVNode","defineComponent","pick","extend","truthProp","makeArrayProp","createNamespace","HAPTICS_FEEDBACK","popupSharedProps","popupSharedPropKeys","Popup","PRESET_ICONS","popupInheritKeys","getIconURL","icon","includes","name","bem","t","shareSheetProps","title","String","round","options","cancelText","description","closeOnPopstate","safeAreaInsetBottom","stdin_default","props","emits","setup","emit","slots","updateShow","value","onCancel","onSelect","option","index","renderHeader","renderOption","name2","className","renderOptions","border","map","renderRows","Array","isArray","item","renderCancelButton","_a","cancel","default"],"mappings":"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","sourcesContent":["import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { pick, extend, truthProp, makeArrayProp, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { popupSharedProps, popupSharedPropKeys } from \"../popup/shared\";\nimport { Popup } from \"../popup\";\nconst PRESET_ICONS = [\"qq\", \"link\", \"weibo\", \"wechat\", \"poster\", \"qrcode\", \"weapp-qrcode\", \"wechat-moments\"];\nconst popupInheritKeys = [...popupSharedPropKeys, \"round\", \"closeOnPopstate\", \"safeAreaInsetBottom\"];\nfunction getIconURL(icon) {\n  if (PRESET_ICONS.includes(icon)) {\n    return `https://img.yzcdn.cn/vant/share-sheet-${icon}.png`;\n  }\n  return icon;\n}\nconst [name, bem, t] = createNamespace(\"share-sheet\");\nconst shareSheetProps = extend({}, popupSharedProps, {\n  title: String,\n  round: truthProp,\n  options: makeArrayProp(),\n  cancelText: String,\n  description: String,\n  closeOnPopstate: truthProp,\n  safeAreaInsetBottom: truthProp\n});\nvar stdin_default = defineComponent({\n  name,\n  props: shareSheetProps,\n  emits: [\"cancel\", \"select\", \"update:show\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const updateShow = (value) => emit(\"update:show\", value);\n    const onCancel = () => {\n      updateShow(false);\n      emit(\"cancel\");\n    };\n    const onSelect = (option, index) => emit(\"select\", option, index);\n    const renderHeader = () => {\n      const title = slots.title ? slots.title() : props.title;\n      const description = slots.description ? slots.description() : props.description;\n      if (title || description) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"header\")\n        }, [title && _createVNode(\"h2\", {\n          \"class\": bem(\"title\")\n        }, [title]), description && _createVNode(\"span\", {\n          \"class\": bem(\"description\")\n        }, [description])]);\n      }\n    };\n    const renderOption = (option, index) => {\n      const {\n        name: name2,\n        icon,\n        className,\n        description\n      } = option;\n      return _createVNode(\"div\", {\n        \"role\": \"button\",\n        \"tabindex\": 0,\n        \"class\": [bem(\"option\"), className, HAPTICS_FEEDBACK],\n        \"onClick\": () => onSelect(option, index)\n      }, [_createVNode(\"img\", {\n        \"src\": getIconURL(icon),\n        \"class\": bem(\"icon\")\n      }, null), name2 && _createVNode(\"span\", {\n        \"class\": bem(\"name\")\n      }, [name2]), description && _createVNode(\"span\", {\n        \"class\": bem(\"option-description\")\n      }, [description])]);\n    };\n    const renderOptions = (options, border) => _createVNode(\"div\", {\n      \"class\": bem(\"options\", {\n        border\n      })\n    }, [options.map(renderOption)]);\n    const renderRows = () => {\n      const {\n        options\n      } = props;\n      if (Array.isArray(options[0])) {\n        return options.map((item, index) => renderOptions(item, index !== 0));\n      }\n      return renderOptions(options);\n    };\n    const renderCancelButton = () => {\n      var _a;\n      const cancelText = (_a = props.cancelText) != null ? _a : t(\"cancel\");\n      if (slots.cancel || cancelText) {\n        return _createVNode(\"button\", {\n          \"type\": \"button\",\n          \"class\": bem(\"cancel\"),\n          \"onClick\": onCancel\n        }, [slots.cancel ? slots.cancel() : cancelText]);\n      }\n    };\n    return () => _createVNode(Popup, _mergeProps({\n      \"class\": bem(),\n      \"position\": \"bottom\",\n      \"onUpdate:show\": updateShow\n    }, pick(props, popupInheritKeys)), {\n      default: () => [renderHeader(), renderRows(), renderCancelButton()]\n    });\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}