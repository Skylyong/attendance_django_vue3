{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, ref, withDirectives } from 'vue';\nimport antInput from './antInputDirective';\nimport PropTypes from './vue-types';\nvar BaseInput = defineComponent({\n  props: {\n    value: PropTypes.string.def('')\n  },\n  emits: ['change', 'input'],\n  setup: function setup(_p, _ref) {\n    var emit = _ref.emit;\n    var inputRef = ref(null);\n\n    var handleChange = function handleChange(e) {\n      var composing = e.target.composing;\n\n      if (e.isComposing || composing) {\n        emit('input', e);\n      } else {\n        emit('input', e);\n        emit('change', e);\n      }\n    };\n\n    return {\n      inputRef: inputRef,\n      focus: function focus() {\n        if (inputRef.value) {\n          inputRef.value.focus();\n        }\n      },\n      blur: function blur() {\n        if (inputRef.value) {\n          inputRef.value.blur();\n        }\n      },\n      handleChange: handleChange\n    };\n  },\n  render: function render() {\n    return withDirectives(_createVNode(\"input\", _objectSpread(_objectSpread(_objectSpread({}, this.$props), this.$attrs), {}, {\n      \"onInput\": this.handleChange,\n      \"onChange\": this.handleChange,\n      \"ref\": \"inputRef\"\n    }), null), [[antInput]]);\n  }\n});\nexport default BaseInput;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/_util/BaseInput.js"],"names":["_objectSpread","createVNode","_createVNode","defineComponent","ref","withDirectives","antInput","PropTypes","BaseInput","props","value","string","def","emits","setup","_p","_ref","emit","inputRef","handleChange","e","composing","target","isComposing","focus","blur","render","$props","$attrs"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,SAASC,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,SAASC,eAAT,EAA0BC,GAA1B,EAA+BC,cAA/B,QAAqD,KAArD;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,IAAIC,SAAS,GAAGL,eAAe,CAAC;AAC9BM,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEH,SAAS,CAACI,MAAV,CAAiBC,GAAjB,CAAqB,EAArB;AADF,GADuB;AAI9BC,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,OAAX,CAJuB;AAK9BC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,EAAf,EAAmBC,IAAnB,EAAyB;AAC9B,QAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,QAAIC,QAAQ,GAAGd,GAAG,CAAC,IAAD,CAAlB;;AAEA,QAAIe,YAAY,GAAG,SAASA,YAAT,CAAsBC,CAAtB,EAAyB;AAC1C,UAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASD,SAAzB;;AAEA,UAAID,CAAC,CAACG,WAAF,IAAiBF,SAArB,EAAgC;AAC9BJ,QAAAA,IAAI,CAAC,OAAD,EAAUG,CAAV,CAAJ;AACD,OAFD,MAEO;AACLH,QAAAA,IAAI,CAAC,OAAD,EAAUG,CAAV,CAAJ;AACAH,QAAAA,IAAI,CAAC,QAAD,EAAWG,CAAX,CAAJ;AACD;AACF,KATD;;AAWA,WAAO;AACLF,MAAAA,QAAQ,EAAEA,QADL;AAELM,MAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,YAAIN,QAAQ,CAACR,KAAb,EAAoB;AAClBQ,UAAAA,QAAQ,CAACR,KAAT,CAAec,KAAf;AACD;AACF,OANI;AAOLC,MAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,YAAIP,QAAQ,CAACR,KAAb,EAAoB;AAClBQ,UAAAA,QAAQ,CAACR,KAAT,CAAee,IAAf;AACD;AACF,OAXI;AAYLN,MAAAA,YAAY,EAAEA;AAZT,KAAP;AAcD,GAlC6B;AAmC9BO,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAOrB,cAAc,CAACH,YAAY,CAAC,OAAD,EAAUF,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK,KAAK2B,MAAV,CAAd,EAAiC,KAAKC,MAAtC,CAAd,EAA6D,EAA7D,EAAiE;AACxH,iBAAW,KAAKT,YADwG;AAExH,kBAAY,KAAKA,YAFuG;AAGxH,aAAO;AAHiH,KAAjE,CAAvB,EAI9B,IAJ8B,CAAb,EAIV,CAAC,CAACb,QAAD,CAAD,CAJU,CAArB;AAKD;AAzC6B,CAAD,CAA/B;AA2CA,eAAeE,SAAf","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, ref, withDirectives } from 'vue';\nimport antInput from './antInputDirective';\nimport PropTypes from './vue-types';\nvar BaseInput = defineComponent({\n  props: {\n    value: PropTypes.string.def('')\n  },\n  emits: ['change', 'input'],\n  setup: function setup(_p, _ref) {\n    var emit = _ref.emit;\n    var inputRef = ref(null);\n\n    var handleChange = function handleChange(e) {\n      var composing = e.target.composing;\n\n      if (e.isComposing || composing) {\n        emit('input', e);\n      } else {\n        emit('input', e);\n        emit('change', e);\n      }\n    };\n\n    return {\n      inputRef: inputRef,\n      focus: function focus() {\n        if (inputRef.value) {\n          inputRef.value.focus();\n        }\n      },\n      blur: function blur() {\n        if (inputRef.value) {\n          inputRef.value.blur();\n        }\n      },\n      handleChange: handleChange\n    };\n  },\n  render: function render() {\n    return withDirectives(_createVNode(\"input\", _objectSpread(_objectSpread(_objectSpread({}, this.$props), this.$attrs), {}, {\n      \"onInput\": this.handleChange,\n      \"onChange\": this.handleChange,\n      \"ref\": \"inputRef\"\n    }), null), [[antInput]]);\n  }\n});\nexport default BaseInput;"]},"metadata":{},"sourceType":"module"}