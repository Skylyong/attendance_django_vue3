{"ast":null,"code":"import axios from '@axios';\n\nconst queryData = params => {\n  return axios.get('https://randomuser.me/api', {\n    params: params\n  });\n};\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: true,\n  width: '20%',\n  scopedSlots: {\n    customRender: 'name'\n  }\n}, {\n  title: 'Gender',\n  dataIndex: 'gender',\n  filters: [{\n    text: 'Male',\n    value: 'male'\n  }, {\n    text: 'Female',\n    value: 'female'\n  }],\n  width: '20%'\n}, {\n  title: 'Email',\n  dataIndex: 'email'\n}];\nexport default {\n  data() {\n    return {\n      data: [],\n      pagination: {},\n      loading: false,\n      columns\n    };\n  },\n\n  mounted() {\n    this.fetch();\n  },\n\n  methods: {\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = { ...this.pagination\n      };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    },\n\n    fetch(params = {}) {\n      this.loading = true;\n      queryData({\n        results: 10,\n        ...params\n      }).then(({\n        data\n      }) => {\n        const pagination = { ...this.pagination\n        }; // Read total count from server\n        // pagination.total = data.totalCount;\n\n        pagination.total = 200;\n        this.loading = false;\n        this.data = data.results;\n        this.pagination = pagination;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA,OAAOA,KAAP,MAAkB,QAAlB;;AAEA,MAAMC,SAAQ,GAAIC,MAAK,IAAK;AAC1B,SAAOF,KAAK,CAACG,GAAN,CAAU,2BAAV,EAAuC;AAAED,UAAM,EAAEA;AAAV,GAAvC,CAAP;AACD,CAFD;;AAGA,MAAME,OAAM,GAAI,CACd;AACEC,OAAK,EAAE,MADT;AAEEC,WAAS,EAAE,MAFb;AAGEC,QAAM,EAAE,IAHV;AAIEC,OAAK,EAAE,KAJT;AAKEC,aAAW,EAAE;AAAEC,gBAAY,EAAE;AAAhB;AALf,CADc,EAQd;AACEL,OAAK,EAAE,QADT;AAEEC,WAAS,EAAE,QAFb;AAGEK,SAAO,EAAE,CACP;AAAEC,QAAI,EAAE,MAAR;AAAgBC,SAAK,EAAE;AAAvB,GADO,EAEP;AAAED,QAAI,EAAE,QAAR;AAAkBC,SAAK,EAAE;AAAzB,GAFO,CAHX;AAOEL,OAAK,EAAE;AAPT,CARc,EAiBd;AACEH,OAAK,EAAE,OADT;AAEEC,WAAS,EAAE;AAFb,CAjBc,CAAhB;AAuBA,eAAe;AACbQ,MAAI,GAAG;AACL,WAAO;AACLA,UAAI,EAAE,EADD;AAELC,gBAAU,EAAE,EAFP;AAGLC,aAAO,EAAE,KAHJ;AAILZ;AAJK,KAAP;AAMD,GARY;;AASba,SAAO,GAAG;AACR,SAAKC,KAAL;AACD,GAXY;;AAYbC,SAAO,EAAE;AACPC,qBAAiB,CAACL,UAAD,EAAaJ,OAAb,EAAsBJ,MAAtB,EAA8B;AAC7Cc,aAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,YAAMQ,KAAI,GAAI,EAAE,GAAG,KAAKR;AAAV,OAAd;AACAQ,WAAK,CAACC,OAAN,GAAgBT,UAAU,CAACS,OAA3B;AACA,WAAKT,UAAL,GAAkBQ,KAAlB;AACA,WAAKL,KAAL,CAAW;AACTO,eAAO,EAAEV,UAAU,CAACW,QADX;AAETC,YAAI,EAAEZ,UAAU,CAACS,OAFR;AAGTI,iBAAS,EAAErB,MAAM,CAACsB,KAHT;AAITC,iBAAS,EAAEvB,MAAM,CAACwB,KAJT;AAKT,WAAGpB;AALM,OAAX;AAOD,KAbM;;AAcPO,SAAK,CAAChB,MAAK,GAAI,EAAV,EAAc;AACjB,WAAKc,OAAL,GAAe,IAAf;AACAf,eAAS,CAAC;AACRwB,eAAO,EAAE,EADD;AAER,WAAGvB;AAFK,OAAD,CAAT,CAGG8B,IAHH,CAGQ,CAAC;AAAElB;AAAF,OAAD,KAAc;AACpB,cAAMC,UAAS,GAAI,EAAE,GAAG,KAAKA;AAAV,SAAnB,CADoB,CAEpB;AACA;;AACAA,kBAAU,CAACkB,KAAX,GAAmB,GAAnB;AACA,aAAKjB,OAAL,GAAe,KAAf;AACA,aAAKF,IAAL,GAAYA,IAAI,CAACW,OAAjB;AACA,aAAKV,UAAL,GAAkBA,UAAlB;AACD,OAXD;AAYD;;AA5BM;AAZI,CAAf","names":["axios","queryData","params","get","columns","title","dataIndex","sorter","width","scopedSlots","customRender","filters","text","value","data","pagination","loading","mounted","fetch","methods","handleTableChange","console","log","pager","current","results","pageSize","page","sortField","field","sortOrder","order","then","total"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/src/components/worker/workerDetailData.vue"],"sourcesContent":["<template>\n  <a-table\n    :columns=\"columns\"\n    :row-key=\"record => record.login.uuid\"\n    :data-source=\"data\"\n    :pagination=\"pagination\"\n    :loading=\"loading\"\n    @change=\"handleTableChange\"\n  >\n    <template slot=\"name\" slot-scope=\"name\"> {{ name.first }} {{ name.last }} </template>\n  </a-table>\n</template>\n<script>\nimport axios from '@axios';\n\nconst queryData = params => {\n  return axios.get('https://randomuser.me/api', { params: params });\n};\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: true,\n    width: '20%',\n    scopedSlots: { customRender: 'name' },\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'gender',\n    filters: [\n      { text: 'Male', value: 'male' },\n      { text: 'Female', value: 'female' },\n    ],\n    width: '20%',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n  },\n];\n\nexport default {\n  data() {\n    return {\n      data: [],\n      pagination: {},\n      loading: false,\n      columns,\n    };\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = { ...this.pagination };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    },\n    fetch(params = {}) {\n      this.loading = true;\n      queryData({\n        results: 10,\n        ...params,\n      }).then(({ data }) => {\n        const pagination = { ...this.pagination };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = 200;\n        this.loading = false;\n        this.data = data.results;\n        this.pagination = pagination;\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}