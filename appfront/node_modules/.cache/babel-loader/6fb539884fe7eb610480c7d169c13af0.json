{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, getSizeStyle, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"skeleton\");\nconst DEFAULT_ROW_WIDTH = \"100%\";\nconst DEFAULT_LAST_ROW_WIDTH = \"60%\";\nconst skeletonProps = {\n  row: makeNumericProp(0),\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  loading: truthProp,\n  animate: truthProp,\n  avatarSize: numericProp,\n  titleWidth: numericProp,\n  avatarShape: makeStringProp(\"round\"),\n  rowWidth: {\n    type: [Number, String, Array],\n    default: DEFAULT_ROW_WIDTH\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: skeletonProps,\n\n  setup(props, {\n    slots\n  }) {\n    const renderAvatar = () => {\n      if (props.avatar) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"avatar\", props.avatarShape),\n          \"style\": getSizeStyle(props.avatarSize)\n        }, null);\n      }\n    };\n\n    const renderTitle = () => {\n      if (props.title) {\n        return _createVNode(\"h3\", {\n          \"class\": bem(\"title\"),\n          \"style\": {\n            width: addUnit(props.titleWidth)\n          }\n        }, null);\n      }\n    };\n\n    const getRowWidth = index => {\n      const {\n        rowWidth\n      } = props;\n\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n\n      return rowWidth;\n    };\n\n    const renderRows = () => Array(+props.row).fill(\"\").map((_, i) => _createVNode(\"div\", {\n      \"class\": bem(\"row\"),\n      \"style\": {\n        width: addUnit(getRowWidth(i))\n      }\n    }, null));\n\n    return () => {\n      var _a;\n\n      if (!props.loading) {\n        return (_a = slots.default) == null ? void 0 : _a.call(slots);\n      }\n\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          animate: props.animate,\n          round: props.round\n        })\n      }, [renderAvatar(), _createVNode(\"div\", {\n        \"class\": bem(\"content\")\n      }, [renderTitle(), renderRows()])]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/skeleton/Skeleton.js"],"names":["createVNode","_createVNode","defineComponent","addUnit","truthProp","numericProp","getSizeStyle","makeStringProp","makeNumericProp","createNamespace","name","bem","DEFAULT_ROW_WIDTH","DEFAULT_LAST_ROW_WIDTH","skeletonProps","row","title","Boolean","round","avatar","loading","animate","avatarSize","titleWidth","avatarShape","rowWidth","type","Number","String","Array","default","stdin_default","props","setup","slots","renderAvatar","renderTitle","width","getRowWidth","index","isArray","renderRows","fill","map","_","i","_a","call"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, getSizeStyle, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"skeleton\");\nconst DEFAULT_ROW_WIDTH = \"100%\";\nconst DEFAULT_LAST_ROW_WIDTH = \"60%\";\nconst skeletonProps = {\n  row: makeNumericProp(0),\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  loading: truthProp,\n  animate: truthProp,\n  avatarSize: numericProp,\n  titleWidth: numericProp,\n  avatarShape: makeStringProp(\"round\"),\n  rowWidth: {\n    type: [Number, String, Array],\n    default: DEFAULT_ROW_WIDTH\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: skeletonProps,\n  setup(props, {\n    slots\n  }) {\n    const renderAvatar = () => {\n      if (props.avatar) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"avatar\", props.avatarShape),\n          \"style\": getSizeStyle(props.avatarSize)\n        }, null);\n      }\n    };\n    const renderTitle = () => {\n      if (props.title) {\n        return _createVNode(\"h3\", {\n          \"class\": bem(\"title\"),\n          \"style\": {\n            width: addUnit(props.titleWidth)\n          }\n        }, null);\n      }\n    };\n    const getRowWidth = (index) => {\n      const {\n        rowWidth\n      } = props;\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n      return rowWidth;\n    };\n    const renderRows = () => Array(+props.row).fill(\"\").map((_, i) => _createVNode(\"div\", {\n      \"class\": bem(\"row\"),\n      \"style\": {\n        width: addUnit(getRowWidth(i))\n      }\n    }, null));\n    return () => {\n      var _a;\n      if (!props.loading) {\n        return (_a = slots.default) == null ? void 0 : _a.call(slots);\n      }\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          animate: props.animate,\n          round: props.round\n        })\n      }, [renderAvatar(), _createVNode(\"div\", {\n        \"class\": bem(\"content\")\n      }, [renderTitle(), renderRows()])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}