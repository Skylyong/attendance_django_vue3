{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { extend, addUnit, numericProp, getSizeStyle, makeStringProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"loading\");\nconst SpinIcon = Array(12).fill(null).map((_, index) => _createVNode(\"i\", {\n  \"class\": bem(\"line\", String(index + 1))\n}, null));\n\nconst CircularIcon = _createVNode(\"svg\", {\n  \"class\": bem(\"circular\"),\n  \"viewBox\": \"25 25 50 50\"\n}, [_createVNode(\"circle\", {\n  \"cx\": \"50\",\n  \"cy\": \"50\",\n  \"r\": \"20\",\n  \"fill\": \"none\"\n}, null)]);\n\nconst loadingProps = {\n  size: numericProp,\n  type: makeStringProp(\"circular\"),\n  color: String,\n  vertical: Boolean,\n  textSize: numericProp,\n  textColor: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: loadingProps,\n\n  setup(props, {\n    slots\n  }) {\n    const spinnerStyle = computed(() => extend({\n      color: props.color\n    }, getSizeStyle(props.size)));\n\n    const renderText = () => {\n      var _a;\n\n      if (slots.default) {\n        return _createVNode(\"span\", {\n          \"class\": bem(\"text\"),\n          \"style\": {\n            fontSize: addUnit(props.textSize),\n            color: (_a = props.textColor) != null ? _a : props.color\n          }\n        }, [slots.default()]);\n      }\n    };\n\n    return () => {\n      const {\n        type,\n        vertical\n      } = props;\n      return _createVNode(\"div\", {\n        \"class\": bem([type, {\n          vertical\n        }])\n      }, [_createVNode(\"span\", {\n        \"class\": bem(\"spinner\", type),\n        \"style\": spinnerStyle.value\n      }, [type === \"spinner\" ? SpinIcon : CircularIcon]), renderText()]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/loading/Loading.js"],"names":["createVNode","_createVNode","computed","defineComponent","extend","addUnit","numericProp","getSizeStyle","makeStringProp","createNamespace","name","bem","SpinIcon","Array","fill","map","_","index","String","CircularIcon","loadingProps","size","type","color","vertical","Boolean","textSize","textColor","stdin_default","props","setup","slots","spinnerStyle","renderText","_a","default","fontSize","value"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { extend, addUnit, numericProp, getSizeStyle, makeStringProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"loading\");\nconst SpinIcon = Array(12).fill(null).map((_, index) => _createVNode(\"i\", {\n  \"class\": bem(\"line\", String(index + 1))\n}, null));\nconst CircularIcon = _createVNode(\"svg\", {\n  \"class\": bem(\"circular\"),\n  \"viewBox\": \"25 25 50 50\"\n}, [_createVNode(\"circle\", {\n  \"cx\": \"50\",\n  \"cy\": \"50\",\n  \"r\": \"20\",\n  \"fill\": \"none\"\n}, null)]);\nconst loadingProps = {\n  size: numericProp,\n  type: makeStringProp(\"circular\"),\n  color: String,\n  vertical: Boolean,\n  textSize: numericProp,\n  textColor: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: loadingProps,\n  setup(props, {\n    slots\n  }) {\n    const spinnerStyle = computed(() => extend({\n      color: props.color\n    }, getSizeStyle(props.size)));\n    const renderText = () => {\n      var _a;\n      if (slots.default) {\n        return _createVNode(\"span\", {\n          \"class\": bem(\"text\"),\n          \"style\": {\n            fontSize: addUnit(props.textSize),\n            color: (_a = props.textColor) != null ? _a : props.color\n          }\n        }, [slots.default()]);\n      }\n    };\n    return () => {\n      const {\n        type,\n        vertical\n      } = props;\n      return _createVNode(\"div\", {\n        \"class\": bem([type, {\n          vertical\n        }])\n      }, [_createVNode(\"span\", {\n        \"class\": bem(\"spinner\", type),\n        \"style\": spinnerStyle.value\n      }, [type === \"spinner\" ? SpinIcon : CircularIcon]), renderText()]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}