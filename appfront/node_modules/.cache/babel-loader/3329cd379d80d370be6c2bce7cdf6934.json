{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, nextTick, defineComponent } from \"vue\";\nimport { extend, truthProp, numericProp, makeArrayProp, makeStringProp, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { Tab } from \"../tab\";\nimport { Tabs } from \"../tabs\";\nimport { Icon } from \"../icon\";\nconst [name, bem, t] = createNamespace(\"cascader\");\nconst cascaderProps = {\n  title: String,\n  options: makeArrayProp(),\n  closeable: truthProp,\n  swipeable: truthProp,\n  closeIcon: makeStringProp(\"cross\"),\n  showHeader: truthProp,\n  modelValue: numericProp,\n  fieldNames: Object,\n  placeholder: String,\n  activeColor: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: cascaderProps,\n  emits: [\"close\", \"change\", \"finish\", \"click-tab\", \"update:modelValue\"],\n\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const tabs = ref([]);\n    const activeTab = ref(0);\n    const {\n      text: textKey,\n      value: valueKey,\n      children: childrenKey\n    } = extend({\n      text: \"text\",\n      value: \"value\",\n      children: \"children\"\n    }, props.fieldNames);\n\n    const getSelectedOptionsByValue = (options, value) => {\n      for (const option of options) {\n        if (option[valueKey] === value) {\n          return [option];\n        }\n\n        if (option[childrenKey]) {\n          const selectedOptions = getSelectedOptionsByValue(option[childrenKey], value);\n\n          if (selectedOptions) {\n            return [option, ...selectedOptions];\n          }\n        }\n      }\n    };\n\n    const updateTabs = () => {\n      const {\n        options,\n        modelValue\n      } = props;\n\n      if (modelValue !== void 0) {\n        const selectedOptions = getSelectedOptionsByValue(options, modelValue);\n\n        if (selectedOptions) {\n          let optionsCursor = options;\n          tabs.value = selectedOptions.map(option => {\n            const tab = {\n              options: optionsCursor,\n              selected: option\n            };\n            const next = optionsCursor.find(item => item[valueKey] === option[valueKey]);\n\n            if (next) {\n              optionsCursor = next[childrenKey];\n            }\n\n            return tab;\n          });\n\n          if (optionsCursor) {\n            tabs.value.push({\n              options: optionsCursor,\n              selected: null\n            });\n          }\n\n          nextTick(() => {\n            activeTab.value = tabs.value.length - 1;\n          });\n          return;\n        }\n      }\n\n      tabs.value = [{\n        options,\n        selected: null\n      }];\n    };\n\n    const onSelect = (option, tabIndex) => {\n      if (option.disabled) {\n        return;\n      }\n\n      tabs.value[tabIndex].selected = option;\n\n      if (tabs.value.length > tabIndex + 1) {\n        tabs.value = tabs.value.slice(0, tabIndex + 1);\n      }\n\n      if (option[childrenKey]) {\n        const nextTab = {\n          options: option[childrenKey],\n          selected: null\n        };\n\n        if (tabs.value[tabIndex + 1]) {\n          tabs.value[tabIndex + 1] = nextTab;\n        } else {\n          tabs.value.push(nextTab);\n        }\n\n        nextTick(() => {\n          activeTab.value++;\n        });\n      }\n\n      const selectedOptions = tabs.value.map(tab => tab.selected).filter(Boolean);\n      emit(\"update:modelValue\", option[valueKey]);\n      const params = {\n        value: option[valueKey],\n        tabIndex,\n        selectedOptions\n      };\n      emit(\"change\", params);\n\n      if (!option[childrenKey]) {\n        emit(\"finish\", params);\n      }\n    };\n\n    const onClose = () => emit(\"close\");\n\n    const onClickTab = ({\n      name: name2,\n      title\n    }) => emit(\"click-tab\", name2, title);\n\n    const renderHeader = () => props.showHeader ? _createVNode(\"div\", {\n      \"class\": bem(\"header\")\n    }, [_createVNode(\"h2\", {\n      \"class\": bem(\"title\")\n    }, [slots.title ? slots.title() : props.title]), props.closeable ? _createVNode(Icon, {\n      \"name\": props.closeIcon,\n      \"class\": [bem(\"close-icon\"), HAPTICS_FEEDBACK],\n      \"onClick\": onClose\n    }, null) : null]) : null;\n\n    const renderOption = (option, selectedOption, tabIndex) => {\n      const {\n        disabled\n      } = option;\n      const selected = !!(selectedOption && option[valueKey] === selectedOption[valueKey]);\n      const color = option.color || (selected ? props.activeColor : void 0);\n      const Text = slots.option ? slots.option({\n        option,\n        selected\n      }) : _createVNode(\"span\", null, [option[textKey]]);\n      return _createVNode(\"li\", {\n        \"role\": \"menuitemradio\",\n        \"class\": [bem(\"option\", {\n          selected,\n          disabled\n        }), option.className],\n        \"style\": {\n          color\n        },\n        \"tabindex\": disabled ? void 0 : selected ? 0 : -1,\n        \"aria-checked\": selected,\n        \"aria-disabled\": disabled || void 0,\n        \"onClick\": () => onSelect(option, tabIndex)\n      }, [Text, selected ? _createVNode(Icon, {\n        \"name\": \"success\",\n        \"class\": bem(\"selected-icon\")\n      }, null) : null]);\n    };\n\n    const renderOptions = (options, selectedOption, tabIndex) => _createVNode(\"ul\", {\n      \"role\": \"menu\",\n      \"class\": bem(\"options\")\n    }, [options.map(option => renderOption(option, selectedOption, tabIndex))]);\n\n    const renderTab = (tab, tabIndex) => {\n      const {\n        options,\n        selected\n      } = tab;\n      const placeholder = props.placeholder || t(\"select\");\n      const title = selected ? selected[textKey] : placeholder;\n      return _createVNode(Tab, {\n        \"title\": title,\n        \"titleClass\": bem(\"tab\", {\n          unselected: !selected\n        })\n      }, {\n        default: () => {\n          var _a, _b;\n\n          return [(_a = slots[\"options-top\"]) == null ? void 0 : _a.call(slots, {\n            tabIndex\n          }), renderOptions(options, selected, tabIndex), (_b = slots[\"options-bottom\"]) == null ? void 0 : _b.call(slots, {\n            tabIndex\n          })];\n        }\n      });\n    };\n\n    const renderTabs = () => _createVNode(Tabs, {\n      \"active\": activeTab.value,\n      \"onUpdate:active\": $event => activeTab.value = $event,\n      \"shrink\": true,\n      \"animated\": true,\n      \"class\": bem(\"tabs\"),\n      \"color\": props.activeColor,\n      \"swipeable\": props.swipeable,\n      \"onClick-tab\": onClickTab\n    }, {\n      default: () => [tabs.value.map(renderTab)]\n    });\n\n    updateTabs();\n    watch(() => props.options, updateTabs, {\n      deep: true\n    });\n    watch(() => props.modelValue, value => {\n      if (value !== void 0) {\n        const values = tabs.value.map(tab => {\n          var _a;\n\n          return (_a = tab.selected) == null ? void 0 : _a[valueKey];\n        });\n\n        if (values.includes(value)) {\n          return;\n        }\n      }\n\n      updateTabs();\n    });\n    return () => _createVNode(\"div\", {\n      \"class\": bem()\n    }, [renderHeader(), renderTabs()]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/cascader/Cascader.js"],"names":["createVNode","_createVNode","ref","watch","nextTick","defineComponent","extend","truthProp","numericProp","makeArrayProp","makeStringProp","createNamespace","HAPTICS_FEEDBACK","Tab","Tabs","Icon","name","bem","t","cascaderProps","title","String","options","closeable","swipeable","closeIcon","showHeader","modelValue","fieldNames","Object","placeholder","activeColor","stdin_default","props","emits","setup","slots","emit","tabs","activeTab","text","textKey","value","valueKey","children","childrenKey","getSelectedOptionsByValue","option","selectedOptions","updateTabs","optionsCursor","map","tab","selected","next","find","item","push","length","onSelect","tabIndex","disabled","slice","nextTab","filter","Boolean","params","onClose","onClickTab","name2","renderHeader","renderOption","selectedOption","color","Text","className","renderOptions","renderTab","unselected","default","_a","_b","call","renderTabs","$event","deep","values","includes"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, nextTick, defineComponent } from \"vue\";\nimport { extend, truthProp, numericProp, makeArrayProp, makeStringProp, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { Tab } from \"../tab\";\nimport { Tabs } from \"../tabs\";\nimport { Icon } from \"../icon\";\nconst [name, bem, t] = createNamespace(\"cascader\");\nconst cascaderProps = {\n  title: String,\n  options: makeArrayProp(),\n  closeable: truthProp,\n  swipeable: truthProp,\n  closeIcon: makeStringProp(\"cross\"),\n  showHeader: truthProp,\n  modelValue: numericProp,\n  fieldNames: Object,\n  placeholder: String,\n  activeColor: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: cascaderProps,\n  emits: [\"close\", \"change\", \"finish\", \"click-tab\", \"update:modelValue\"],\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const tabs = ref([]);\n    const activeTab = ref(0);\n    const {\n      text: textKey,\n      value: valueKey,\n      children: childrenKey\n    } = extend({\n      text: \"text\",\n      value: \"value\",\n      children: \"children\"\n    }, props.fieldNames);\n    const getSelectedOptionsByValue = (options, value) => {\n      for (const option of options) {\n        if (option[valueKey] === value) {\n          return [option];\n        }\n        if (option[childrenKey]) {\n          const selectedOptions = getSelectedOptionsByValue(option[childrenKey], value);\n          if (selectedOptions) {\n            return [option, ...selectedOptions];\n          }\n        }\n      }\n    };\n    const updateTabs = () => {\n      const {\n        options,\n        modelValue\n      } = props;\n      if (modelValue !== void 0) {\n        const selectedOptions = getSelectedOptionsByValue(options, modelValue);\n        if (selectedOptions) {\n          let optionsCursor = options;\n          tabs.value = selectedOptions.map((option) => {\n            const tab = {\n              options: optionsCursor,\n              selected: option\n            };\n            const next = optionsCursor.find((item) => item[valueKey] === option[valueKey]);\n            if (next) {\n              optionsCursor = next[childrenKey];\n            }\n            return tab;\n          });\n          if (optionsCursor) {\n            tabs.value.push({\n              options: optionsCursor,\n              selected: null\n            });\n          }\n          nextTick(() => {\n            activeTab.value = tabs.value.length - 1;\n          });\n          return;\n        }\n      }\n      tabs.value = [{\n        options,\n        selected: null\n      }];\n    };\n    const onSelect = (option, tabIndex) => {\n      if (option.disabled) {\n        return;\n      }\n      tabs.value[tabIndex].selected = option;\n      if (tabs.value.length > tabIndex + 1) {\n        tabs.value = tabs.value.slice(0, tabIndex + 1);\n      }\n      if (option[childrenKey]) {\n        const nextTab = {\n          options: option[childrenKey],\n          selected: null\n        };\n        if (tabs.value[tabIndex + 1]) {\n          tabs.value[tabIndex + 1] = nextTab;\n        } else {\n          tabs.value.push(nextTab);\n        }\n        nextTick(() => {\n          activeTab.value++;\n        });\n      }\n      const selectedOptions = tabs.value.map((tab) => tab.selected).filter(Boolean);\n      emit(\"update:modelValue\", option[valueKey]);\n      const params = {\n        value: option[valueKey],\n        tabIndex,\n        selectedOptions\n      };\n      emit(\"change\", params);\n      if (!option[childrenKey]) {\n        emit(\"finish\", params);\n      }\n    };\n    const onClose = () => emit(\"close\");\n    const onClickTab = ({\n      name: name2,\n      title\n    }) => emit(\"click-tab\", name2, title);\n    const renderHeader = () => props.showHeader ? _createVNode(\"div\", {\n      \"class\": bem(\"header\")\n    }, [_createVNode(\"h2\", {\n      \"class\": bem(\"title\")\n    }, [slots.title ? slots.title() : props.title]), props.closeable ? _createVNode(Icon, {\n      \"name\": props.closeIcon,\n      \"class\": [bem(\"close-icon\"), HAPTICS_FEEDBACK],\n      \"onClick\": onClose\n    }, null) : null]) : null;\n    const renderOption = (option, selectedOption, tabIndex) => {\n      const {\n        disabled\n      } = option;\n      const selected = !!(selectedOption && option[valueKey] === selectedOption[valueKey]);\n      const color = option.color || (selected ? props.activeColor : void 0);\n      const Text = slots.option ? slots.option({\n        option,\n        selected\n      }) : _createVNode(\"span\", null, [option[textKey]]);\n      return _createVNode(\"li\", {\n        \"role\": \"menuitemradio\",\n        \"class\": [bem(\"option\", {\n          selected,\n          disabled\n        }), option.className],\n        \"style\": {\n          color\n        },\n        \"tabindex\": disabled ? void 0 : selected ? 0 : -1,\n        \"aria-checked\": selected,\n        \"aria-disabled\": disabled || void 0,\n        \"onClick\": () => onSelect(option, tabIndex)\n      }, [Text, selected ? _createVNode(Icon, {\n        \"name\": \"success\",\n        \"class\": bem(\"selected-icon\")\n      }, null) : null]);\n    };\n    const renderOptions = (options, selectedOption, tabIndex) => _createVNode(\"ul\", {\n      \"role\": \"menu\",\n      \"class\": bem(\"options\")\n    }, [options.map((option) => renderOption(option, selectedOption, tabIndex))]);\n    const renderTab = (tab, tabIndex) => {\n      const {\n        options,\n        selected\n      } = tab;\n      const placeholder = props.placeholder || t(\"select\");\n      const title = selected ? selected[textKey] : placeholder;\n      return _createVNode(Tab, {\n        \"title\": title,\n        \"titleClass\": bem(\"tab\", {\n          unselected: !selected\n        })\n      }, {\n        default: () => {\n          var _a, _b;\n          return [(_a = slots[\"options-top\"]) == null ? void 0 : _a.call(slots, {\n            tabIndex\n          }), renderOptions(options, selected, tabIndex), (_b = slots[\"options-bottom\"]) == null ? void 0 : _b.call(slots, {\n            tabIndex\n          })];\n        }\n      });\n    };\n    const renderTabs = () => _createVNode(Tabs, {\n      \"active\": activeTab.value,\n      \"onUpdate:active\": ($event) => activeTab.value = $event,\n      \"shrink\": true,\n      \"animated\": true,\n      \"class\": bem(\"tabs\"),\n      \"color\": props.activeColor,\n      \"swipeable\": props.swipeable,\n      \"onClick-tab\": onClickTab\n    }, {\n      default: () => [tabs.value.map(renderTab)]\n    });\n    updateTabs();\n    watch(() => props.options, updateTabs, {\n      deep: true\n    });\n    watch(() => props.modelValue, (value) => {\n      if (value !== void 0) {\n        const values = tabs.value.map((tab) => {\n          var _a;\n          return (_a = tab.selected) == null ? void 0 : _a[valueKey];\n        });\n        if (values.includes(value)) {\n          return;\n        }\n      }\n      updateTabs();\n    });\n    return () => _createVNode(\"div\", {\n      \"class\": bem()\n    }, [renderHeader(), renderTabs()]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}