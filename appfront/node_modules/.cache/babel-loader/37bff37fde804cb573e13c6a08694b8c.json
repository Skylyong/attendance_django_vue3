{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createBlock(_component_a_table, {\n    columns: _ctx.columns,\n    \"data-source\": _ctx.data,\n    class: \"components-table-demo-nested\",\n    rowKey: item => item.groupId\n  }, {\n    expandedRowRender: _withCtx(() => [_createCommentVNode(\" =\\\"{ record }\\\"> \"), _createCommentVNode(\" <template  #operation=\\\"{  record  }\\\"> \"), _createCommentVNode(\" <div  v-if=\\\"data.userId=innerData.userId\\\"> \"), _createVNode(_component_a_table, {\n      columns: _ctx.innerColumns,\n      \"data-source\": _ctx.data.groupItem,\n      rowKey: item => item.pushuserName,\n      pagination: false\n    }, null, 8\n    /* PROPS */\n    , [\"columns\", \"data-source\", \"rowKey\"]), _createCommentVNode(\" </div> \"), _createCommentVNode(\" <a-table :columns=\\\"innerColumns\\\" :data-source=\\\"innerData\\\" :pagination=\\\"false\\\"> \"), _createCommentVNode(\" </a-table> \"), _createCommentVNode(\" </template> \")]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"columns\", \"data-source\", \"rowKey\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aA0BUC,kBA1BV,EA0BU;AA1BAC,WAAO,EAAEC,YA0BT;AA1BmB,mBAAaA,SA0BhC;AA1BsCC,SAAK,EAAC,8BA0B5C;AA1B4EC,UAAM,EAAEC,IAAI,IAAIA,IAAI,CAACC;AA0BjG,GA1BV;AAIaC,qBAAiB,WAC1B,MAAuB,CAAvBC,yCAAuB,EACvBA,gEADuB,EAEvBA,qEAFuB,EAGrBC,aAOUT,kBAPV,EAOU;AALTC,aAAO,EAAEC,iBAKA;AAJT,qBAAaA,UAAKQ,SAIT;AAHTN,YAAM,EAAEC,IAAI,IAAIA,IAAI,CAACM,YAGZ;AAFTC,gBAAU,EAAE;AAEH,KAPV;;AAAA,2CAHqB,EAgBvBJ,+BAhBuB,EAiBvBA,6GAjBuB,EAkBvBA,mCAlBuB,EAmBvBA,oCAnBuB,CADG;;;;GAJ9B;;AAAA","names":["_createBlock","_component_a_table","columns","_ctx","class","rowKey","item","groupId","expandedRowRender","_createCommentVNode","_createVNode","groupItem","pushuserName","pagination"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/allWorkerStatisticsData.vue"],"sourcesContent":["<template>\n  <a-table :columns=\"columns\" :data-source=\"data\" class=\"components-table-demo-nested\" :rowKey=\"item => item.groupId\" >\n    <!-- <template #operation> -->\n      <!-- <a>Publish</a> -->\n    <!-- </template> -->\n    <template #expandedRowRender > \n      <!-- =\"{ record }\"> -->\n      <!-- <template  #operation=\"{  record  }\"> -->\n      <!-- <div  v-if=\"data.userId=innerData.userId\"> -->\n        <a-table \n       \n        :columns=\"innerColumns\" \n        :data-source=\"data.groupItem\" \n        :rowKey=\"item => item.pushuserName\"\n        :pagination=\"false\">\n        \n        </a-table>\n\n\n\n\n        \n      <!-- </div> -->\n      <!-- <a-table :columns=\"innerColumns\" :data-source=\"innerData\" :pagination=\"false\"> -->\n      <!-- </a-table> -->\n      <!-- </template> -->\n    </template>\n  </a-table>\n</template>\n<script>\nimport { DownOutlined } from '@ant-design/icons-vue';\nimport{getworkerApplyHistory, getPoolData} from '../../api/api.js'\nimport { defineComponent,ref } from 'vue';\nconst columns = [\n  {\n  title: '员工号',\n  dataIndex: 'userId',\n  width: '8%',\n},\n\n  {\n  title: '姓名',\n  dataIndex: 'name',\n  width: '8%',\n},\n  {\n  \n  title: '公休总天数(2022年)',\n  dataIndex: 'generalHolidayTotal',\n  width: '10%',\n}, {\n  title: '公休剩余(天:时)',\n  dataIndex: 'generalHolidayRemainder',\n  width: '10%',\n}, {\n  title: '积休剩余(天:时)',\n  dataIndex: 'accumulateHolidayRemainder',\n   width: '10%',\n},\n{\n  title: '积休已经用(天:时)',\n  dataIndex: 'accumulateHolidayUsed',\n   width: '15%',\n},\n{\n  title: '值班加班换积休(天:时)',\n  dataIndex: 'barterAccumulateHolidayDays',\n   width: '15%',\n},\n{\n  title: '总休息池(天:时)',\n  dataIndex: 'restPoolTotal',\n}\n];\n\n\n// const columns = [\n//   {\n//     title: 'Name',\n//     dataIndex: 'name',\n//     key: 'name',\n//   },\n//   {\n//     title: 'Platform',\n//     dataIndex: 'platform',\n//     key: 'platform',\n//   },\n//   {\n//     title: 'Version',\n//     dataIndex: 'version',\n//     key: 'version',\n//   },\n//   {\n//     title: 'Upgraded',\n//     dataIndex: 'upgradeNum',\n//     key: 'upgradeNum',\n//   },\n//   {\n//     title: 'Creator',\n//     dataIndex: 'creator',\n//     key: 'creator',\n//   },\n//   {\n//     title: 'Date',\n//     dataIndex: 'createdAt',\n//     key: 'createdAt',\n//   },\n//   {\n//     title: 'Action',\n//     key: 'operation',\n//     slots: {\n//       customRender: 'operation',\n//     },\n//   },\n// ];\n// const data = [];\n\n// for (let i = 0; i < 3; ++i) {\n//   data.push({\n//     key: i,\n//     name: 'Screem',\n//     platform: 'iOS',\n//     version: '10.3.4.5654',\n//     upgradeNum: 500,\n//     creator: 'Jack',\n//     createdAt: '2014-12-24 23:12:00',\n//   });\n// }\n\n\n\nconst innerColumns = [\n  {\n  title: '序号',\n  dataIndex: 'id',\n  width: '5%',\n  sorter: (a, b) => a.id - b.id,\n} ,\n { title: '员工号',\n  dataIndex: 'userId',\n  width: '8%'},\n  {\n  title: '申请时间',\n  dataIndex: 'applyTime',\n  width: '7%',\n  sorter: (a, b) => a.id - b.id,\n} ,\n\n{\n  title: '开始时间',\n  dataIndex: 'applyStartTime',\n  sorter: true,\n  width: '8%',\n  sorter: (a, b) => a.applyStartTime - b.applyStartTime,\n} ,\n{\n  title: '结束时间',\n  dataIndex: 'applyEndTime',\n  sorter: true,\n  width: '8%',\n  sorter: (a, b) => a.applyEndTime - b.applyEndTime,\n} \n,\n{\n  title: '申请时长',\n  dataIndex: 'applyTimeLast',\n  sorter: true,\n  width: '8%',\n  sorter: (a, b) => a.timeLast - b.timeLast,\n}\n,\n{\n  title: '类型',\n  dataIndex: 'applyType',\n  filters: [{\n    text: '公休',\n    value: '公休',\n  }, {\n    text: '值班加班',\n    value: '值班加班',\n  }],\n  onFilter: (value, record) => record.applyType.indexOf(value) === 0,\n  // sorter: (a, b) => a.applyType.length - b.applyType.length,\n  width: '10%',\n},\n{\n  title: '休期种类',\n  dataIndex: 'holidayType',\n  filters: [{\n    text: '公休请假',\n    value: '公休请假',\n  }, {\n    text: '加班换积休',\n    value: '加班换积休',\n  },\n  {\n    text: '值班换积休',\n    value: '值班换积休',\n  }\n  ],\n  onFilter: (value, record) => record.holidayType.indexOf(value) === 0,\n  // sorter: (a, b) => a.holidayType.length - b.holidayType.length,\n  width: '10%',\n}\n,\n{\n  title: '申请原因',\n  dataIndex: 'applyReason',\n  width: '15%',\n  sorter: (a, b) => a.applyReason.length - b.applyReason.length,\n},\n{\n  title: '审批状态',\n  dataIndex: 'approveState',\n  // sorter: (a, b) => a.approveState.length - b.approveState.length,\n  onFilter: (value, record) => record.approveState.indexOf(value) === 0,\n  width: '8%',\n    filters: [{\n    text: '通过',\n    value: '通过',\n  }, {\n    text: '不通过',\n    value: '不通过',\n  },{\n    text: '未审批',\n    value: '未审批',\n  },\n  \n  ],\n}\n,\n{\n  title: '批注',\n  dataIndex: 'approveNote',\n  sorter: true,\n  width: '10%',\n  sorter: (a, b) => a.applyReason.length - b.applyReason.length,\n},\n];\n\nexport default defineComponent({\n  components: {\n    DownOutlined,\n  },\n\n  setup() {\n    let data = ref()\n    let innerData = ref()\n    let getid = localStorage.getItem(\"Userid\");\n     getworkerApplyHistory(getid, 1).then (\n       response =>{\n         if (response['code'] == 1){\n           \n            innerData.value = response['data']\n            // console.log(response['data'])\n         }})\n\n      let dataGroups = ref()\n      getPoolData(getid).then(\n        response =>{\n          if(response['code'] == 1){\n            data.value = response['data']\n            dataGroups.value = response['data']\n            console.log(dataGroups)\n          }\n        }\n      )\n\n    \n    return {\n      dataGroups,\n      getPoolData,\n      getworkerApplyHistory,\n      data,\n      columns,\n      innerColumns,\n      innerData,\n    };\n  },\n});\n</script>"]},"metadata":{},"sourceType":"module"}