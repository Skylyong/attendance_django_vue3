{"ast":null,"code":"import { computed, defineComponent, reactive, ref } from 'vue';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons-vue';\nimport { cloneDeep } from 'lodash-es';\nimport { message } from 'ant-design-vue';\nexport default defineComponent({\n  components: {\n    CheckOutlined,\n    EditOutlined\n  },\n\n  setup() {\n    const options = ref([{\n      value: '1',\n      label: '通过'\n    }, {\n      value: '2',\n      label: '不通过'\n    }]);\n    const dataSource = ref([{\n      key: '0',\n      name: 'Edward King 0',\n      age: 32,\n      address: 'London, Park Lane no. 0'\n    }, {\n      key: '1',\n      name: 'Edward King 1',\n      age: 32,\n      address: 'London, Park Lane no. 1'\n    }]);\n    const count = computed(() => dataSource.value.length + 1);\n    const editableData = reactive({});\n\n    const edit = key => {\n      editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n      message.success(editableData);\n    };\n\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n\n    const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    const handleAdd = () => {\n      const newData = {\n        key: `${count.value}`,\n        name: `Edward King ${count.value}`,\n        age: 32,\n        address: `London, Park Lane no. ${count.value}`\n      };\n      dataSource.value.push(newData);\n    };\n\n    return {\n      options,\n      columns,\n      onDelete,\n      handleAdd,\n      dataSource,\n      editableData,\n      count,\n      edit,\n      save\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAkEA,SAASA,QAAT,EAAmBC,eAAnB,EAAoCC,QAApC,EAA8CC,GAA9C,QAAyD,KAAzD;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,uBAA5C;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,eAAeN,eAAe,CAAC;AAC7BO,YAAU,EAAE;AACVJ,iBADU;AAEVC;AAFU,GADiB;;AAM7BI,OAAK,GAAG;AACN,UAAMC,OAAM,GAAIP,GAAG,CAAC,CAClB;AACEQ,WAAK,EAAE,GADT;AAEEC,WAAK,EAAE;AAFT,KADkB,EAKlB;AACED,WAAK,EAAE,GADT;AAEEC,WAAK,EAAE;AAFT,KALkB,CAAD,CAAnB;AAaA,UAAMC,UAAS,GAAIV,GAAG,CAAC,CACrB;AACEW,SAAG,EAAE,GADP;AAEEC,UAAI,EAAE,eAFR;AAGEC,SAAG,EAAE,EAHP;AAIEC,aAAO,EAAE;AAJX,KADqB,EAOrB;AACEH,SAAG,EAAE,GADP;AAEEC,UAAI,EAAE,eAFR;AAGEC,SAAG,EAAE,EAHP;AAIEC,aAAO,EAAE;AAJX,KAPqB,CAAD,CAAtB;AAcA,UAAMC,KAAI,GAAIlB,QAAQ,CAAC,MAAMa,UAAU,CAACF,KAAX,CAAiBQ,MAAjB,GAA0B,CAAjC,CAAtB;AACA,UAAMC,YAAW,GAAIlB,QAAQ,CAAC,EAAD,CAA7B;;AAEA,UAAMmB,IAAG,GAAIP,GAAE,IAAK;AAClBM,kBAAY,CAACN,GAAD,CAAZ,GAAoBR,SAAS,CAACO,UAAU,CAACF,KAAX,CAAiBW,MAAjB,CAAwBC,IAAG,IAAKT,GAAE,KAAMS,IAAI,CAACT,GAA7C,EAAkD,CAAlD,CAAD,CAA7B;AACAP,aAAO,CAACiB,OAAR,CAAgBJ,YAAhB;AACD,KAHD;;AAKA,UAAMK,IAAG,GAAIX,GAAE,IAAK;AAClBY,YAAM,CAACC,MAAP,CAAcd,UAAU,CAACF,KAAX,CAAiBW,MAAjB,CAAwBC,IAAG,IAAKT,GAAE,KAAMS,IAAI,CAACT,GAA7C,EAAkD,CAAlD,CAAd,EAAoEM,YAAY,CAACN,GAAD,CAAhF;AACA,aAAOM,YAAY,CAACN,GAAD,CAAnB;AACD,KAHD;;AAMA,UAAMc,QAAO,GAAId,GAAE,IAAK;AACtBD,gBAAU,CAACF,KAAX,GAAmBE,UAAU,CAACF,KAAX,CAAiBW,MAAjB,CAAwBC,IAAG,IAAKA,IAAI,CAACT,GAAL,KAAaA,GAA7C,CAAnB;AACD,KAFD;;AAIA,UAAMe,SAAQ,GAAI,MAAM;AACtB,YAAMC,OAAM,GAAI;AACdhB,WAAG,EAAG,GAAEI,KAAK,CAACP,KAAM,EADN;AAEdI,YAAI,EAAG,eAAcG,KAAK,CAACP,KAAM,EAFnB;AAGdK,WAAG,EAAE,EAHS;AAIdC,eAAO,EAAG,yBAAwBC,KAAK,CAACP,KAAM;AAJhC,OAAhB;AAMAE,gBAAU,CAACF,KAAX,CAAiBoB,IAAjB,CAAsBD,OAAtB;AACD,KARD;;AAUA,WAAO;AACLpB,aADK;AAELsB,aAFK;AAGLJ,cAHK;AAILC,eAJK;AAKLhB,gBALK;AAMLO,kBANK;AAOLF,WAPK;AAQLG,UARK;AASLI;AATK,KAAP;AAWD;;AAzE4B,CAAD,CAA9B","names":["computed","defineComponent","reactive","ref","CheckOutlined","EditOutlined","cloneDeep","message","components","setup","options","value","label","dataSource","key","name","age","address","count","length","editableData","edit","filter","item","success","save","Object","assign","onDelete","handleAdd","newData","push","columns"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n  <a-button class=\"editable-add-btn\" @click=\"handleAdd\" style=\"margin-bottom: 8px\">Add</a-button>\n  <a-table bordered :data-source=\"dataSource\" :columns=\"columns\">\n    <template #name=\"{ text, record }\">\n      <div class=\"editable-cell\">\n        <div v-if=\"editableData[record.key]\" class=\"editable-cell-input-wrapper\">\n          <a-input v-model:value=\"editableData[record.key].name\" @pressEnter=\"save(record.key)\" />\n          <check-outlined class=\"editable-cell-icon-check\" @click=\"save(record.key)\" />   \n      </div>\n        <div v-else class=\"editable-cell-text-wrapper\">\n          {{ text || ' ' }}\n          <edit-outlined class=\"editable-cell-icon\" @click=\"edit(record.key)\" />\n        </div>\n      </div>\n    </template>\n\n\n   <template #age=\"{text, record }\">\n      <div class=\"editable-cell\">\n        <div v-if=\"editableData[record.key]\" class=\"editable-cell-input-wrapper\">\n          <check-outlined class=\"editable-cell-icon-check\" @click=\"save(record.key)\" />     \n        <a-select\n            v-model:value=\"editableData[record.key].age\"\n            label-in-value\n            style=\"width: 120px\"\n            :options=\"options\"\n            @pressEnter=\"save(record.key)\"\n          >\n          </a-select>\n\n      </div>\n        <div v-else class=\"editable-cell-text-wrapper\">\n          {{ text || ' ' }}\n          <edit-outlined class=\"editable-cell-icon\" @click=\"edit(record.key)\" />\n        </div> \n      </div> \n    </template>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <template #operation=\"{ record }\">\n      <a-popconfirm\n        v-if=\"dataSource.length\"\n        title=\"Sure to delete?\"\n        @confirm=\"onDelete(record.key)\"\n      >\n        <a>Delete</a>\n      </a-popconfirm>\n    </template>\n  </a-table>\n</template>\n<script>\nimport { computed, defineComponent, reactive, ref } from 'vue';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons-vue';\nimport { cloneDeep } from 'lodash-es';\nimport { message } from 'ant-design-vue';\nexport default defineComponent({\n  components: {\n    CheckOutlined,\n    EditOutlined,\n  },\n\n  setup() {\n    const options = ref([\n      {\n        value: '1',\n        label: '通过',\n      },\n      {\n        value: '2',\n        label: '不通过',\n      },\n    ]);\n\n  \n  \n    const dataSource = ref([\n      {\n        key: '0',\n        name: 'Edward King 0',\n        age: 32,\n        address: 'London, Park Lane no. 0',\n      },\n      {\n        key: '1',\n        name: 'Edward King 1',\n        age: 32,\n        address: 'London, Park Lane no. 1',\n      },\n    ]);\n    const count = computed(() => dataSource.value.length + 1);\n    const editableData = reactive({});\n\n    const edit = key => {\n      editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n      message.success(editableData)\n    };\n\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n    \n\n    const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    const handleAdd = () => {\n      const newData = {\n        key: `${count.value}`,\n        name: `Edward King ${count.value}`,\n        age: 32,\n        address: `London, Park Lane no. ${count.value}`,\n      };\n      dataSource.value.push(newData);\n    };\n\n    return {\n      options,\n      columns,\n      onDelete,\n      handleAdd,\n      dataSource,\n      editableData,\n      count,\n      edit,\n      save,\n    };\n  },\n});\n</script>\n<style lang=\"less\">\n.editable-cell {\n  position: relative;\n  .editable-cell-input-wrapper,\n  .editable-cell-text-wrapper {\n    padding-right: 24px;\n  }\n\n  .editable-cell-text-wrapper {\n    padding: 5px 24px 5px 5px;\n  }\n\n  .editable-cell-icon,\n  .editable-cell-icon-check {\n    position: absolute;\n    right: 0;\n    width: 20px;\n    cursor: pointer;\n  }\n\n  .editable-cell-icon {\n    margin-top: 4px;\n    display: none;\n  }\n\n  .editable-cell-icon-check {\n    line-height: 28px;\n  }\n\n  .editable-cell-icon:hover,\n  .editable-cell-icon-check:hover {\n    color: #108ee9;\n  }\n\n  .editable-add-btn {\n    margin-bottom: 8px;\n  }\n}\n.editable-cell:hover .editable-cell-icon {\n  display: inline-block;\n}\n</style>"]},"metadata":{},"sourceType":"module"}