{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport Antd from 'ant-design-vue';\nimport 'ant-design-vue/dist/antd.css'; // import Button from 'ant-design-vue/lib/button';\n// import 'ant-design-vue/dist/antd.css';\n// Vue.component(Button.name, Button);\n// createApp(App).use(store).use(router).mount('#app')\n// const app = createApp(App);\n// app.use(Antd).mount('#app');\n//路由守卫\n// router.beforeEach((to, from, next)=>{\n//     //路由中设置的needLogin字段就在to当中 \n//     if(window.sessionStorage.data){\n//       console.log(window.sessionStorage);\n//       // console.log(to.path) //每次跳转的路径\n//       if(to.path === '/'){\n//         //登录状态下 访问login.vue页面 会跳到index.vue\n//         next({path: '/worker'});\n//       }else{\n//         next();\n//       }\n//     }else{\n//       // 如果没有session ,访问任何页面。都会进入到 登录页\n//       if (to.path === '/') { // 如果是登录页面的话，直接next() -->解决注销后的循环执行bug\n//         next();\n//       } else { // 否则 跳转到登录页面\n//         next({ path: '/' });\n//       }\n//     }\n// })\n// router.beforeEach((to, from, next) => {\n//   //获取用户登录成功后储存的登录标志\n//   let getFlag = localStorage.getItem(\"Flag\");\n//   let getid = localStorage.getItem(\"Userid\");\n//   let userType = localStorage.getItem(\"userType\");\n//   //如果登录标志存在且为isLogin，即用户已登录\n//   console.log(userType, getFlag,getid)\n//   if (getFlag === \"isLogin\"&&getid !== null) {\n//       //设置vuex登录状态为已登录\n//       store.state.isLogin = true;\n//       if (userType == 2){\n//           next(\n//             {\n//               path: '/manager'\n//             }\n//           )\n//       }\n//       else if(userType == 1){\n//         next({\n//           path: '/worker'\n//       })\n//       }\n//       else{\n//         next()\n//       }\n//       //如果已登录，还想想进入登录注册界面，则定向回首页\n//       if (!to.meta.isLogin) {\n//           //iViewUi友好提示\n//           // iView.Message.error('请先退出登录');\n//           if (userType == 2){\n//             next({\n//               path: '/manager'\n//           })\n//           }\n//           else if(userType == 1){\n//             next({\n//               path: '/worker'\n//           })\n//           }\n//           else{\n//             next({\n//               path: '/'\n//           })\n//           }\n//       }\n//       //如果登录标志不存在，即未登录\n//   } else {\n//       //用户想进入需要登录的页面，则定向回登录界面\n//       if (to.meta.isLogin) {\n//           next({\n//               path: '/',\n//           })\n//           //用户进入无需登录的界面，则跳转继续\n//       } else {\n//           next()\n//       }\n//   }\n// });\n// router.afterEach(() => {\n//   window.scroll(0, 0);\n// });\n// 路由守卫\n\nrouter.beforeEach((to, from, next) => {\n  let getFlag = localStorage.getItem(\"Flag\");\n  let getid = localStorage.getItem(\"Userid\");\n  let userType = localStorage.getItem(\"userType\"); //路由中设置的needLogin字段就在to当中 \n\n  if (getFlag === \"isLogin\" && getid !== null) {\n    store.state.isLogin = true; // console.log(window.sessionStorage);\n\n    console.log(to.path); //每次跳转的路径\n\n    console.log(getFlag);\n\n    if (to.path === '/') {\n      //登录状态下 访问login.vue页面 会跳到index.vue\n      next({\n        path: '/'\n      });\n    } else {\n      next();\n    }\n  } else {\n    // 如果没有session ,访问任何页面。都会进入到 登录页\n    if (to.path === '/') {\n      // 如果是登录页面的话，直接next() -->解决注销后的循环执行bug\n      console.log('aaaaaa');\n      next();\n    } else {\n      // 否则 跳转到登录页面\n      next({\n        path: '/'\n      });\n    }\n  }\n});\nconst app = createApp(App).use(Antd).use(router).use(store);\napp.mount(\"#app\");","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/src/main.js"],"names":["createApp","App","router","store","Antd","beforeEach","to","from","next","getFlag","localStorage","getItem","getid","userType","state","isLogin","console","log","path","app","use","mount"],"mappings":"AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,8BAAP,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAIA;;AACAF,MAAM,CAACG,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAkB;AAElC,MAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;AACA,MAAIC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AACA,MAAIE,QAAQ,GAAGH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf,CAJkC,CAKhC;;AAEA,MAAGF,OAAO,KAAK,SAAZ,IAAuBG,KAAK,KAAK,IAApC,EAAyC;AACvCT,IAAAA,KAAK,CAACW,KAAN,CAAYC,OAAZ,GAAsB,IAAtB,CADuC,CAEvC;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,EAAE,CAACY,IAAf,EAHuC,CAGlB;;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;;AAEA,QAAGH,EAAE,CAACY,IAAH,KAAY,GAAf,EAAmB;AACjB;AACAV,MAAAA,IAAI,CAAC;AAACU,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAJ;AACD,KAHD,MAGK;AACHV,MAAAA,IAAI;AACL;AACF,GAZD,MAYK;AACH;AACA,QAAIF,EAAE,CAACY,IAAH,KAAY,GAAhB,EAAqB;AAAE;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,MAAAA,IAAI;AACL,KAHD,MAGO;AAAE;AACPA,MAAAA,IAAI,CAAC;AAAEU,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;AACD;AACF;AACJ,CA5BD;AA8BA,MAAMC,GAAG,GAAGnB,SAAS,CAACC,GAAD,CAAT,CAAemB,GAAf,CAAmBhB,IAAnB,EAAyBgB,GAAzB,CAA6BlB,MAA7B,EAAqCkB,GAArC,CAAyCjB,KAAzC,CAAZ;AACAgB,GAAG,CAACE,KAAJ,CAAU,MAAV","sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport Antd from 'ant-design-vue'\nimport 'ant-design-vue/dist/antd.css'\n\n// import Button from 'ant-design-vue/lib/button';\n// import 'ant-design-vue/dist/antd.css';\n\n// Vue.component(Button.name, Button);\n// createApp(App).use(store).use(router).mount('#app')\n// const app = createApp(App);\n\n// app.use(Antd).mount('#app');\n\n\n\n//路由守卫\n// router.beforeEach((to, from, next)=>{\n//     //路由中设置的needLogin字段就在to当中 \n//     if(window.sessionStorage.data){\n//       console.log(window.sessionStorage);\n//       // console.log(to.path) //每次跳转的路径\n//       if(to.path === '/'){\n//         //登录状态下 访问login.vue页面 会跳到index.vue\n//         next({path: '/worker'});\n//       }else{\n//         next();\n//       }\n//     }else{\n//       // 如果没有session ,访问任何页面。都会进入到 登录页\n//       if (to.path === '/') { // 如果是登录页面的话，直接next() -->解决注销后的循环执行bug\n//         next();\n//       } else { // 否则 跳转到登录页面\n//         next({ path: '/' });\n//       }\n//     }\n// })\n\n// router.beforeEach((to, from, next) => {\n \n//   //获取用户登录成功后储存的登录标志\n//   let getFlag = localStorage.getItem(\"Flag\");\n//   let getid = localStorage.getItem(\"Userid\");\n//   let userType = localStorage.getItem(\"userType\");\n//   //如果登录标志存在且为isLogin，即用户已登录\n//   console.log(userType, getFlag,getid)\n//   if (getFlag === \"isLogin\"&&getid !== null) {\n\n//       //设置vuex登录状态为已登录\n//       store.state.isLogin = true;\n//       if (userType == 2){\n//           next(\n//             {\n//               path: '/manager'\n//             }\n//           )\n//       }\n//       else if(userType == 1){\n//         next({\n//           path: '/worker'\n//       })\n//       }\n//       else{\n//         next()\n//       }\n     \n//       //如果已登录，还想想进入登录注册界面，则定向回首页\n//       if (!to.meta.isLogin) {\n//           //iViewUi友好提示\n//           // iView.Message.error('请先退出登录');\n//           if (userType == 2){\n//             next({\n//               path: '/manager'\n//           })\n//           }\n//           else if(userType == 1){\n//             next({\n//               path: '/worker'\n//           })\n//           }\n//           else{\n//             next({\n//               path: '/'\n//           })\n//           }\n         \n//       }\n\n//       //如果登录标志不存在，即未登录\n//   } else {\n\n//       //用户想进入需要登录的页面，则定向回登录界面\n//       if (to.meta.isLogin) {\n//           next({\n//               path: '/',\n//           })\n//           //用户进入无需登录的界面，则跳转继续\n//       } else {\n//           next()\n//       }\n\n//   }\n\n// });\n\n// router.afterEach(() => {\n//   window.scroll(0, 0);\n// });\n\n\n\n// 路由守卫\nrouter.beforeEach((to, from, next)=>{\n\n  let getFlag = localStorage.getItem(\"Flag\");\n  let getid = localStorage.getItem(\"Userid\"); \n  let userType = localStorage.getItem(\"userType\");\n    //路由中设置的needLogin字段就在to当中 \n\n    if(getFlag === \"isLogin\"&&getid !== null){\n      store.state.isLogin = true;\n      // console.log(window.sessionStorage);\n      console.log(to.path) //每次跳转的路径\n      console.log(getFlag)\n\n      if(to.path === '/'){\n        //登录状态下 访问login.vue页面 会跳到index.vue\n        next({path: '/'});\n      }else{\n        next();\n      }\n    }else{\n      // 如果没有session ,访问任何页面。都会进入到 登录页\n      if (to.path === '/') { // 如果是登录页面的话，直接next() -->解决注销后的循环执行bug\n        console.log('aaaaaa')\n        next();\n      } else { // 否则 跳转到登录页面\n        next({ path: '/' });\n      }\n    }\n})\n\nconst app = createApp(App).use(Antd).use(router).use(store);\napp.mount(\"#app\");"]},"metadata":{},"sourceType":"module"}