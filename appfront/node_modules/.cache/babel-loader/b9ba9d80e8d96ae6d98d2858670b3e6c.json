{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { defineComponent, inject } from 'vue';\nimport classNames from '../_util/classNames';\nimport LoadingOutlined from '@ant-design/icons-vue/LoadingOutlined';\nimport FileOutlined from '@ant-design/icons-vue/FileOutlined';\nimport CaretDownFilled from '@ant-design/icons-vue/CaretDownFilled';\nimport MinusSquareOutlined from '@ant-design/icons-vue/MinusSquareOutlined';\nimport PlusSquareOutlined from '@ant-design/icons-vue/PlusSquareOutlined';\nimport VcTree from '../vc-tree';\nimport animation from '../_util/openAnimation';\nimport PropTypes from '../_util/vue-types';\nimport { getOptionProps, getComponent, getSlot } from '../_util/props-util';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { cloneElement } from '../_util/vnode';\nimport { defaultConfigProvider } from '../config-provider';\nvar TreeNode = VcTree.TreeNode;\n\nfunction TreeProps() {\n  return {\n    showLine: PropTypes.looseBool,\n\n    /** 是否支持多选 */\n    multiple: PropTypes.looseBool,\n\n    /** 是否自动展开父节点 */\n    autoExpandParent: PropTypes.looseBool,\n\n    /** checkable状态下节点选择完全受控（父子节点选中状态不再关联）*/\n    checkStrictly: PropTypes.looseBool,\n\n    /** 是否支持选中 */\n    checkable: PropTypes.looseBool,\n\n    /** 是否禁用树 */\n    disabled: PropTypes.looseBool,\n\n    /** 默认展开所有树节点 */\n    defaultExpandAll: PropTypes.looseBool,\n\n    /** 默认展开对应树节点 */\n    defaultExpandParent: PropTypes.looseBool,\n\n    /** 默认展开指定的树节点 */\n    defaultExpandedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** （受控）展开指定的树节点 */\n    expandedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** （受控）选中复选框的树节点 */\n    checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.shape({\n      checked: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n      halfChecked: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n    }).loose]),\n\n    /** 默认选中复选框的树节点 */\n    defaultCheckedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** （受控）设置选中的树节点 */\n    selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** 默认选中的树节点 */\n    defaultSelectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    selectable: PropTypes.looseBool,\n\n    /** filter some AntTreeNodes as you need. it should return true */\n    filterAntTreeNode: PropTypes.func,\n\n    /** 异步加载数据 */\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    // onLoaded: (loadedKeys: string[], info: { event: 'load', node: AntTreeNode; }) => void,\n\n    /** 响应右键点击 */\n    // onRightClick: (options: AntTreeNodeMouseEvent) => void,\n\n    /** 设置节点可拖拽（IE>8）*/\n    draggable: PropTypes.looseBool,\n    // /** 开始拖拽时调用 */\n    // onDragStart: (options: AntTreeNodeMouseEvent) => void,\n    // /** dragenter 触发时调用 */\n    // onDragEnter: (options: AntTreeNodeMouseEvent) => void,\n    // /** dragover 触发时调用 */\n    // onDragOver: (options: AntTreeNodeMouseEvent) => void,\n    // /** dragleave 触发时调用 */\n    // onDragLeave: (options: AntTreeNodeMouseEvent) => void,\n    // /** drop 触发时调用 */\n    // onDrop: (options: AntTreeNodeMouseEvent) => void,\n    showIcon: PropTypes.looseBool,\n    icon: PropTypes.func,\n    switcherIcon: PropTypes.any,\n    prefixCls: PropTypes.string,\n    filterTreeNode: PropTypes.func,\n    openAnimation: PropTypes.any,\n    treeData: {\n      type: Array\n    },\n\n    /**\n     * @default{title,key,children}\n     * 替换treeNode中 title,key,children字段为treeData中对应的字段\n     */\n    replaceFields: PropTypes.object,\n    blockNode: PropTypes.looseBool,\n\n    /** 展开/收起节点时触发 */\n    onExpand: PropTypes.func,\n\n    /** 点击复选框触发 */\n    onCheck: PropTypes.func,\n\n    /** 点击树节点触发 */\n    onSelect: PropTypes.func,\n\n    /** 单击树节点触发 */\n    onClick: PropTypes.func,\n\n    /** 双击树节点触发 */\n    onDoubleclick: PropTypes.func,\n    onDblclick: PropTypes.func,\n    'onUpdate:selectedKeys': PropTypes.func,\n    'onUpdate:checkedKeys': PropTypes.func,\n    'onUpdate:expandedKeys': PropTypes.func\n  };\n}\n\nexport { TreeProps };\nexport default defineComponent({\n  name: 'ATree',\n  inheritAttrs: false,\n  props: initDefaultProps(TreeProps(), {\n    checkable: false,\n    showIcon: false,\n    openAnimation: _extends(_extends({}, animation), {\n      appear: null\n    }),\n    blockNode: false\n  }),\n  setup: function setup() {\n    return {\n      tree: null,\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  TreeNode: TreeNode,\n  methods: {\n    renderSwitcherIcon: function renderSwitcherIcon(prefixCls, switcherIcon, _ref) {\n      var isLeaf = _ref.isLeaf,\n          loading = _ref.loading,\n          expanded = _ref.expanded;\n      var showLine = this.$props.showLine;\n\n      if (loading) {\n        return _createVNode(LoadingOutlined, {\n          \"class\": \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        }, null);\n      }\n\n      if (isLeaf) {\n        return showLine ? _createVNode(FileOutlined, {\n          \"class\": \"\".concat(prefixCls, \"-switcher-line-icon\")\n        }, null) : null;\n      }\n\n      var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n\n      if (switcherIcon) {\n        return cloneElement(switcherIcon, {\n          class: switcherCls\n        });\n      }\n\n      return showLine ? expanded ? _createVNode(MinusSquareOutlined, {\n        \"class\": \"\".concat(prefixCls, \"-switcher-line-icon\")\n      }, null) : _createVNode(PlusSquareOutlined, {\n        \"class\": \"\".concat(prefixCls, \"-switcher-line-icon\")\n      }, null) : _createVNode(CaretDownFilled, {\n        \"class\": switcherCls\n      }, null);\n    },\n    updateTreeData: function updateTreeData(treeData) {\n      var _this = this;\n\n      var $slots = this.$slots;\n      var defaultFields = {\n        children: 'children',\n        title: 'title',\n        key: 'key'\n      };\n\n      var replaceFields = _extends(_extends({}, defaultFields), this.$props.replaceFields);\n\n      return treeData.map(function (item) {\n        var key = item[replaceFields.key];\n        var children = item[replaceFields.children];\n\n        var _item$slots = item.slots,\n            slots = _item$slots === void 0 ? {} : _item$slots,\n            cls = item.class,\n            style = item.style,\n            restProps = __rest(item, [\"slots\", \"class\", \"style\"]);\n\n        var treeNodeProps = _extends(_extends({}, restProps), {\n          icon: $slots[slots.icon] || restProps.icon,\n          switcherIcon: $slots[slots.switcherIcon] || restProps.switcherIcon,\n          title: $slots[slots.title] || $slots.title || restProps[replaceFields.title],\n          dataRef: item,\n          key: key,\n          class: cls,\n          style: style\n        });\n\n        if (children) {\n          return _extends(_extends({}, treeNodeProps), {\n            children: _this.updateTreeData(children)\n          });\n        }\n\n        return treeNodeProps;\n      });\n    },\n    setTreeRef: function setTreeRef(node) {\n      this.tree = node;\n    },\n    handleCheck: function handleCheck(checkedObj, eventObj) {\n      this.$emit('update:checkedKeys', checkedObj);\n      this.$emit('check', checkedObj, eventObj);\n    },\n    handleExpand: function handleExpand(expandedKeys, eventObj) {\n      this.$emit('update:expandedKeys', expandedKeys);\n      this.$emit('expand', expandedKeys, eventObj);\n    },\n    handleSelect: function handleSelect(selectedKeys, eventObj) {\n      this.$emit('update:selectedKeys', selectedKeys);\n      this.$emit('select', selectedKeys, eventObj);\n    }\n  },\n  render: function render() {\n    var _this2 = this,\n        _classNames;\n\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n        showIcon = props.showIcon,\n        treeNodes = props.treeNodes,\n        blockNode = props.blockNode;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('tree', customizePrefixCls);\n\n    var _switcherIcon = getComponent(this, 'switcherIcon');\n\n    var checkable = props.checkable;\n    var treeData = props.treeData || treeNodes;\n\n    if (treeData) {\n      treeData = this.updateTreeData(treeData);\n    }\n\n    var _a = this.$attrs,\n        className = _a.class,\n        restAttrs = __rest(_a, [\"class\"]);\n\n    var vcTreeProps = _extends(_extends(_extends(_extends({}, props), {\n      prefixCls: prefixCls,\n      checkable: checkable ? _createVNode(\"span\", {\n        \"class\": \"\".concat(prefixCls, \"-checkbox-inner\")\n      }, null) : checkable,\n      children: getSlot(this),\n      switcherIcon: function switcherIcon(nodeProps) {\n        return _this2.renderSwitcherIcon(prefixCls, _switcherIcon, nodeProps);\n      },\n      ref: this.setTreeRef\n    }), restAttrs), {\n      class: classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _classNames)),\n      onCheck: this.handleCheck,\n      onExpand: this.handleExpand,\n      onSelect: this.handleSelect\n    });\n\n    if (treeData) {\n      vcTreeProps.treeData = treeData;\n    }\n\n    return _createVNode(VcTree, _objectSpread(_objectSpread({}, vcTreeProps), {}, {\n      \"__propsSymbol__\": []\n    }), null);\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/tree/Tree.js"],"names":["_objectSpread","_defineProperty","_extends","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineComponent","inject","classNames","LoadingOutlined","FileOutlined","CaretDownFilled","MinusSquareOutlined","PlusSquareOutlined","VcTree","animation","PropTypes","getOptionProps","getComponent","getSlot","initDefaultProps","cloneElement","defaultConfigProvider","TreeNode","TreeProps","showLine","looseBool","multiple","autoExpandParent","checkStrictly","checkable","disabled","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","arrayOf","oneOfType","string","number","expandedKeys","checkedKeys","shape","checked","halfChecked","loose","defaultCheckedKeys","selectedKeys","defaultSelectedKeys","selectable","filterAntTreeNode","func","loadData","loadedKeys","draggable","showIcon","icon","switcherIcon","any","prefixCls","filterTreeNode","openAnimation","treeData","type","Array","replaceFields","object","blockNode","onExpand","onCheck","onSelect","onClick","onDoubleclick","onDblclick","name","inheritAttrs","props","appear","setup","tree","configProvider","methods","renderSwitcherIcon","_ref","isLeaf","loading","expanded","$props","concat","switcherCls","class","updateTreeData","_this","$slots","defaultFields","children","title","key","map","item","_item$slots","slots","cls","style","restProps","treeNodeProps","dataRef","setTreeRef","node","handleCheck","checkedObj","eventObj","$emit","handleExpand","handleSelect","render","_this2","_classNames","customizePrefixCls","treeNodes","getPrefixCls","_switcherIcon","_a","$attrs","className","restAttrs","vcTreeProps","nodeProps","ref"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { defineComponent, inject } from 'vue';\nimport classNames from '../_util/classNames';\nimport LoadingOutlined from '@ant-design/icons-vue/LoadingOutlined';\nimport FileOutlined from '@ant-design/icons-vue/FileOutlined';\nimport CaretDownFilled from '@ant-design/icons-vue/CaretDownFilled';\nimport MinusSquareOutlined from '@ant-design/icons-vue/MinusSquareOutlined';\nimport PlusSquareOutlined from '@ant-design/icons-vue/PlusSquareOutlined';\nimport VcTree from '../vc-tree';\nimport animation from '../_util/openAnimation';\nimport PropTypes from '../_util/vue-types';\nimport { getOptionProps, getComponent, getSlot } from '../_util/props-util';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { cloneElement } from '../_util/vnode';\nimport { defaultConfigProvider } from '../config-provider';\nvar TreeNode = VcTree.TreeNode;\n\nfunction TreeProps() {\n  return {\n    showLine: PropTypes.looseBool,\n\n    /** 是否支持多选 */\n    multiple: PropTypes.looseBool,\n\n    /** 是否自动展开父节点 */\n    autoExpandParent: PropTypes.looseBool,\n\n    /** checkable状态下节点选择完全受控（父子节点选中状态不再关联）*/\n    checkStrictly: PropTypes.looseBool,\n\n    /** 是否支持选中 */\n    checkable: PropTypes.looseBool,\n\n    /** 是否禁用树 */\n    disabled: PropTypes.looseBool,\n\n    /** 默认展开所有树节点 */\n    defaultExpandAll: PropTypes.looseBool,\n\n    /** 默认展开对应树节点 */\n    defaultExpandParent: PropTypes.looseBool,\n\n    /** 默认展开指定的树节点 */\n    defaultExpandedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** （受控）展开指定的树节点 */\n    expandedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** （受控）选中复选框的树节点 */\n    checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.shape({\n      checked: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n      halfChecked: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n    }).loose]),\n\n    /** 默认选中复选框的树节点 */\n    defaultCheckedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** （受控）设置选中的树节点 */\n    selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n    /** 默认选中的树节点 */\n    defaultSelectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    selectable: PropTypes.looseBool,\n\n    /** filter some AntTreeNodes as you need. it should return true */\n    filterAntTreeNode: PropTypes.func,\n\n    /** 异步加载数据 */\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    // onLoaded: (loadedKeys: string[], info: { event: 'load', node: AntTreeNode; }) => void,\n\n    /** 响应右键点击 */\n    // onRightClick: (options: AntTreeNodeMouseEvent) => void,\n\n    /** 设置节点可拖拽（IE>8）*/\n    draggable: PropTypes.looseBool,\n    // /** 开始拖拽时调用 */\n    // onDragStart: (options: AntTreeNodeMouseEvent) => void,\n    // /** dragenter 触发时调用 */\n    // onDragEnter: (options: AntTreeNodeMouseEvent) => void,\n    // /** dragover 触发时调用 */\n    // onDragOver: (options: AntTreeNodeMouseEvent) => void,\n    // /** dragleave 触发时调用 */\n    // onDragLeave: (options: AntTreeNodeMouseEvent) => void,\n    // /** drop 触发时调用 */\n    // onDrop: (options: AntTreeNodeMouseEvent) => void,\n    showIcon: PropTypes.looseBool,\n    icon: PropTypes.func,\n    switcherIcon: PropTypes.any,\n    prefixCls: PropTypes.string,\n    filterTreeNode: PropTypes.func,\n    openAnimation: PropTypes.any,\n    treeData: {\n      type: Array\n    },\n\n    /**\n     * @default{title,key,children}\n     * 替换treeNode中 title,key,children字段为treeData中对应的字段\n     */\n    replaceFields: PropTypes.object,\n    blockNode: PropTypes.looseBool,\n\n    /** 展开/收起节点时触发 */\n    onExpand: PropTypes.func,\n\n    /** 点击复选框触发 */\n    onCheck: PropTypes.func,\n\n    /** 点击树节点触发 */\n    onSelect: PropTypes.func,\n\n    /** 单击树节点触发 */\n    onClick: PropTypes.func,\n\n    /** 双击树节点触发 */\n    onDoubleclick: PropTypes.func,\n    onDblclick: PropTypes.func,\n    'onUpdate:selectedKeys': PropTypes.func,\n    'onUpdate:checkedKeys': PropTypes.func,\n    'onUpdate:expandedKeys': PropTypes.func\n  };\n}\n\nexport { TreeProps };\nexport default defineComponent({\n  name: 'ATree',\n  inheritAttrs: false,\n  props: initDefaultProps(TreeProps(), {\n    checkable: false,\n    showIcon: false,\n    openAnimation: _extends(_extends({}, animation), {\n      appear: null\n    }),\n    blockNode: false\n  }),\n  setup: function setup() {\n    return {\n      tree: null,\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  TreeNode: TreeNode,\n  methods: {\n    renderSwitcherIcon: function renderSwitcherIcon(prefixCls, switcherIcon, _ref) {\n      var isLeaf = _ref.isLeaf,\n          loading = _ref.loading,\n          expanded = _ref.expanded;\n      var showLine = this.$props.showLine;\n\n      if (loading) {\n        return _createVNode(LoadingOutlined, {\n          \"class\": \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        }, null);\n      }\n\n      if (isLeaf) {\n        return showLine ? _createVNode(FileOutlined, {\n          \"class\": \"\".concat(prefixCls, \"-switcher-line-icon\")\n        }, null) : null;\n      }\n\n      var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n\n      if (switcherIcon) {\n        return cloneElement(switcherIcon, {\n          class: switcherCls\n        });\n      }\n\n      return showLine ? expanded ? _createVNode(MinusSquareOutlined, {\n        \"class\": \"\".concat(prefixCls, \"-switcher-line-icon\")\n      }, null) : _createVNode(PlusSquareOutlined, {\n        \"class\": \"\".concat(prefixCls, \"-switcher-line-icon\")\n      }, null) : _createVNode(CaretDownFilled, {\n        \"class\": switcherCls\n      }, null);\n    },\n    updateTreeData: function updateTreeData(treeData) {\n      var _this = this;\n\n      var $slots = this.$slots;\n      var defaultFields = {\n        children: 'children',\n        title: 'title',\n        key: 'key'\n      };\n\n      var replaceFields = _extends(_extends({}, defaultFields), this.$props.replaceFields);\n\n      return treeData.map(function (item) {\n        var key = item[replaceFields.key];\n        var children = item[replaceFields.children];\n\n        var _item$slots = item.slots,\n            slots = _item$slots === void 0 ? {} : _item$slots,\n            cls = item.class,\n            style = item.style,\n            restProps = __rest(item, [\"slots\", \"class\", \"style\"]);\n\n        var treeNodeProps = _extends(_extends({}, restProps), {\n          icon: $slots[slots.icon] || restProps.icon,\n          switcherIcon: $slots[slots.switcherIcon] || restProps.switcherIcon,\n          title: $slots[slots.title] || $slots.title || restProps[replaceFields.title],\n          dataRef: item,\n          key: key,\n          class: cls,\n          style: style\n        });\n\n        if (children) {\n          return _extends(_extends({}, treeNodeProps), {\n            children: _this.updateTreeData(children)\n          });\n        }\n\n        return treeNodeProps;\n      });\n    },\n    setTreeRef: function setTreeRef(node) {\n      this.tree = node;\n    },\n    handleCheck: function handleCheck(checkedObj, eventObj) {\n      this.$emit('update:checkedKeys', checkedObj);\n      this.$emit('check', checkedObj, eventObj);\n    },\n    handleExpand: function handleExpand(expandedKeys, eventObj) {\n      this.$emit('update:expandedKeys', expandedKeys);\n      this.$emit('expand', expandedKeys, eventObj);\n    },\n    handleSelect: function handleSelect(selectedKeys, eventObj) {\n      this.$emit('update:selectedKeys', selectedKeys);\n      this.$emit('select', selectedKeys, eventObj);\n    }\n  },\n  render: function render() {\n    var _this2 = this,\n        _classNames;\n\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n        showIcon = props.showIcon,\n        treeNodes = props.treeNodes,\n        blockNode = props.blockNode;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('tree', customizePrefixCls);\n\n    var _switcherIcon = getComponent(this, 'switcherIcon');\n\n    var checkable = props.checkable;\n    var treeData = props.treeData || treeNodes;\n\n    if (treeData) {\n      treeData = this.updateTreeData(treeData);\n    }\n\n    var _a = this.$attrs,\n        className = _a.class,\n        restAttrs = __rest(_a, [\"class\"]);\n\n    var vcTreeProps = _extends(_extends(_extends(_extends({}, props), {\n      prefixCls: prefixCls,\n      checkable: checkable ? _createVNode(\"span\", {\n        \"class\": \"\".concat(prefixCls, \"-checkbox-inner\")\n      }, null) : checkable,\n      children: getSlot(this),\n      switcherIcon: function switcherIcon(nodeProps) {\n        return _this2.renderSwitcherIcon(prefixCls, _switcherIcon, nodeProps);\n      },\n      ref: this.setTreeRef\n    }), restAttrs), {\n      class: classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _classNames)),\n      onCheck: this.handleCheck,\n      onExpand: this.handleExpand,\n      onSelect: this.handleSelect\n    });\n\n    if (treeData) {\n      vcTreeProps.treeData = treeData;\n    }\n\n    return _createVNode(VcTree, _objectSpread(_objectSpread({}, vcTreeProps), {}, {\n      \"__propsSymbol__\": []\n    }), null);\n  }\n});"]},"metadata":{},"sourceType":"module"}