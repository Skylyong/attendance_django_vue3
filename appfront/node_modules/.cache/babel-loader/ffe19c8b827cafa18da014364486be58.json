{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, BORDER_LEFT, makeStringProp, BORDER_SURROUND, createNamespace, makeNumericProp } from \"../utils\";\nconst [name, bem] = createNamespace(\"password-input\");\nconst passwordInputProps = {\n  info: String,\n  mask: truthProp,\n  value: makeStringProp(\"\"),\n  gutter: numericProp,\n  length: makeNumericProp(6),\n  focused: Boolean,\n  errorInfo: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: passwordInputProps,\n  emits: [\"focus\"],\n\n  setup(props, {\n    emit\n  }) {\n    const onTouchStart = event => {\n      event.stopPropagation();\n      emit(\"focus\", event);\n    };\n\n    const renderPoints = () => {\n      const Points = [];\n      const {\n        mask,\n        value,\n        length,\n        gutter,\n        focused\n      } = props;\n\n      for (let i = 0; i < length; i++) {\n        const char = value[i];\n        const showBorder = i !== 0 && !gutter;\n        const showCursor = focused && i === value.length;\n        let style;\n\n        if (i !== 0 && gutter) {\n          style = {\n            marginLeft: addUnit(gutter)\n          };\n        }\n\n        Points.push(_createVNode(\"li\", {\n          \"class\": [{\n            [BORDER_LEFT]: showBorder\n          }, bem(\"item\", {\n            focus: showCursor\n          })],\n          \"style\": style\n        }, [mask ? _createVNode(\"i\", {\n          \"style\": {\n            visibility: char ? \"visible\" : \"hidden\"\n          }\n        }, null) : char, showCursor && _createVNode(\"div\", {\n          \"class\": bem(\"cursor\")\n        }, null)]));\n      }\n\n      return Points;\n    };\n\n    return () => {\n      const info = props.errorInfo || props.info;\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [_createVNode(\"ul\", {\n        \"class\": [bem(\"security\"), {\n          [BORDER_SURROUND]: !props.gutter\n        }],\n        \"onTouchstart\": onTouchStart\n      }, [renderPoints()]), info && _createVNode(\"div\", {\n        \"class\": bem(props.errorInfo ? \"error-info\" : \"info\")\n      }, [info])]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/password-input/PasswordInput.js"],"names":["createVNode","_createVNode","defineComponent","addUnit","truthProp","numericProp","BORDER_LEFT","makeStringProp","BORDER_SURROUND","createNamespace","makeNumericProp","name","bem","passwordInputProps","info","String","mask","value","gutter","length","focused","Boolean","errorInfo","stdin_default","props","emits","setup","emit","onTouchStart","event","stopPropagation","renderPoints","Points","i","char","showBorder","showCursor","style","marginLeft","push","focus","visibility","default"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, BORDER_LEFT, makeStringProp, BORDER_SURROUND, createNamespace, makeNumericProp } from \"../utils\";\nconst [name, bem] = createNamespace(\"password-input\");\nconst passwordInputProps = {\n  info: String,\n  mask: truthProp,\n  value: makeStringProp(\"\"),\n  gutter: numericProp,\n  length: makeNumericProp(6),\n  focused: Boolean,\n  errorInfo: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: passwordInputProps,\n  emits: [\"focus\"],\n  setup(props, {\n    emit\n  }) {\n    const onTouchStart = (event) => {\n      event.stopPropagation();\n      emit(\"focus\", event);\n    };\n    const renderPoints = () => {\n      const Points = [];\n      const {\n        mask,\n        value,\n        length,\n        gutter,\n        focused\n      } = props;\n      for (let i = 0; i < length; i++) {\n        const char = value[i];\n        const showBorder = i !== 0 && !gutter;\n        const showCursor = focused && i === value.length;\n        let style;\n        if (i !== 0 && gutter) {\n          style = {\n            marginLeft: addUnit(gutter)\n          };\n        }\n        Points.push(_createVNode(\"li\", {\n          \"class\": [{\n            [BORDER_LEFT]: showBorder\n          }, bem(\"item\", {\n            focus: showCursor\n          })],\n          \"style\": style\n        }, [mask ? _createVNode(\"i\", {\n          \"style\": {\n            visibility: char ? \"visible\" : \"hidden\"\n          }\n        }, null) : char, showCursor && _createVNode(\"div\", {\n          \"class\": bem(\"cursor\")\n        }, null)]));\n      }\n      return Points;\n    };\n    return () => {\n      const info = props.errorInfo || props.info;\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [_createVNode(\"ul\", {\n        \"class\": [bem(\"security\"), {\n          [BORDER_SURROUND]: !props.gutter\n        }],\n        \"onTouchstart\": onTouchStart\n      }, [renderPoints()]), info && _createVNode(\"div\", {\n        \"class\": bem(props.errorInfo ? \"error-info\" : \"info\")\n      }, [info])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}