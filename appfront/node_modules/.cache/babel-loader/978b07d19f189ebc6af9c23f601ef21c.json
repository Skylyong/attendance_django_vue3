{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_vxe_button = _resolveComponent(\"vxe-button\");\n\n  const _component_vxe_toolbar = _resolveComponent(\"vxe-toolbar\");\n\n  const _component_vxe_column = _resolveComponent(\"vxe-column\");\n\n  const _component_vxe_input = _resolveComponent(\"vxe-input\");\n\n  const _component_vxe_select = _resolveComponent(\"vxe-select\");\n\n  const _component_vxe_table = _resolveComponent(\"vxe-table\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_vxe_toolbar, {\n    ref: \"xToolbar\",\n    loading: _ctx.demo1.loading\n  }, {\n    buttons: _withCtx(() => [_createVNode(_component_vxe_button, {\n      status: \"primary\",\n      content: \"临时新增\",\n      onClick: _ctx.insertEvent\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_vxe_button, {\n      status: \"warning\",\n      content: \"临时删除\",\n      onClick: _ctx.removeSelectEvent\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_vxe_button, {\n      status: \"danger\",\n      content: \"直接删除\",\n      onClick: _ctx.deleteSelectEvent\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_vxe_button, {\n      content: \"提交（将临时操作持久化）\",\n      onClick: _ctx.saveEvent\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"loading\"]), _createVNode(_component_vxe_table, {\n    border: \"\",\n    \"show-overflow\": \"\",\n    \"keep-source\": \"\",\n    ref: \"xTable\",\n    height: \"500\",\n    \"column-config\": {\n      resizable: true\n    },\n    loading: _ctx.demo1.loading,\n    data: _ctx.demo1.tableData,\n    \"edit-rules\": _ctx.demo1.validRules,\n    \"edit-config\": {\n      trigger: 'click',\n      mode: 'row',\n      showUpdateStatus: true,\n      showInsertStatus: true\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_vxe_column, {\n      type: \"checkbox\",\n      width: \"60\"\n    }), _createVNode(_component_vxe_column, {\n      field: \"name\",\n      title: \"Name\",\n      \"edit-render\": {}\n    }, {\n      edit: _withCtx(({\n        row\n      }) => [_createVNode(_component_vxe_input, {\n        modelValue: row.name,\n        \"onUpdate:modelValue\": $event => row.name = $event,\n        type: \"text\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"onUpdate:modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_vxe_column, {\n      field: \"nickname\",\n      title: \"Nickname\",\n      \"edit-render\": {}\n    }, {\n      edit: _withCtx(({\n        row\n      }) => [_createVNode(_component_vxe_input, {\n        modelValue: row.nickname,\n        \"onUpdate:modelValue\": $event => row.nickname = $event,\n        type: \"text\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"onUpdate:modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_vxe_column, {\n      field: \"sex\",\n      title: \"Sex\",\n      \"edit-render\": {}\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createElementVNode(\"span\", null, _toDisplayString(_ctx.formatSex(row.sex)), 1\n      /* TEXT */\n      )]),\n      edit: _withCtx(({\n        row\n      }) => [_createVNode(_component_vxe_select, {\n        modelValue: row.sex,\n        \"onUpdate:modelValue\": $event => row.sex = $event,\n        type: \"text\",\n        options: _ctx.demo1.sexList,\n        transfer: \"\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"onUpdate:modelValue\", \"options\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_vxe_column, {\n      field: \"amount\",\n      title: \"Amount\",\n      \"edit-render\": {}\n    }, {\n      edit: _withCtx(({\n        row\n      }) => [_createVNode(_component_vxe_input, {\n        modelValue: row.amount,\n        \"onUpdate:modelValue\": $event => row.amount = $event,\n        type: \"float\",\n        digits: 2\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"onUpdate:modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_vxe_column, {\n      field: \"updateDate\",\n      title: \"Date\",\n      \"edit-render\": {}\n    }, {\n      edit: _withCtx(({\n        row\n      }) => [_createVNode(_component_vxe_input, {\n        modelValue: row.updateDate,\n        \"onUpdate:modelValue\": $event => row.updateDate = $event,\n        type: \"date\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"onUpdate:modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_vxe_column, {\n      title: \"操作\",\n      width: \"240\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_vxe_button, {\n        status: \"warning\",\n        content: \"临时删除\",\n        onClick: $event => _ctx.removeRowEvent(row)\n      }, null, 8\n      /* PROPS */\n      , [\"onClick\"]), _createVNode(_component_vxe_button, {\n        status: \"danger\",\n        content: \"直接删除\",\n        onClick: $event => _ctx.deleteRowEvent(row)\n      }, null, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"loading\", \"data\", \"edit-rules\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createVNode","_component_vxe_toolbar","ref","loading","_ctx","buttons","_component_vxe_button","status","content","onClick","_component_vxe_table","border","height","resizable","data","tableData","validRules","trigger","mode","showUpdateStatus","showInsertStatus","_component_vxe_column","type","width","field","title","edit","row","_component_vxe_input","name","$event","nickname","default","_createElementVNode","_toDisplayString","sex","_component_vxe_select","options","sexList","transfer","amount","digits","updateDate"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n   <vxe-toolbar ref=\"xToolbar\" :loading=\"demo1.loading\">\n          <template #buttons>\n            <vxe-button status=\"primary\" content=\"临时新增\" @click=\"insertEvent\"></vxe-button>\n            <vxe-button status=\"warning\" content=\"临时删除\" @click=\"removeSelectEvent\"></vxe-button>\n            <vxe-button status=\"danger\" content=\"直接删除\" @click=\"deleteSelectEvent\"></vxe-button>\n            <vxe-button content=\"提交（将临时操作持久化）\" @click=\"saveEvent\"></vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          border\n          show-overflow\n          keep-source\n          ref=\"xTable\"\n          height=\"500\"\n          :column-config=\"{resizable: true}\"\n          :loading=\"demo1.loading\"\n          :data=\"demo1.tableData\"\n          :edit-rules=\"demo1.validRules\"\n          :edit-config=\"{trigger: 'click', mode: 'row', showUpdateStatus: true, showInsertStatus: true}\">\n          <vxe-column type=\"checkbox\" width=\"60\"></vxe-column>\n          <vxe-column field=\"name\" title=\"Name\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.name\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"nickname\" title=\"Nickname\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.nickname\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"sex\" title=\"Sex\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <span>{{ formatSex(row.sex) }}</span>\n            </template>\n            <template #edit=\"{ row }\">\n              <vxe-select v-model=\"row.sex\" type=\"text\" :options=\"demo1.sexList\" transfer></vxe-select>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"amount\" title=\"Amount\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.amount\" type=\"float\" :digits=\"2\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"updateDate\" title=\"Date\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.updateDate\" type=\"date\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column title=\"操作\" width=\"240\">\n            <template #default=\"{ row }\">\n              <vxe-button status=\"warning\" content=\"临时删除\" @click=\"removeRowEvent(row)\"></vxe-button>\n              <vxe-button status=\"danger\" content=\"直接删除\" @click=\"deleteRowEvent(row)\"></vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        \n</template>\n\n<script>\n import { defineComponent, reactive, ref, nextTick, computed } from 'vue'\n        import { useStore } from 'vuex'\n        import { VXETable, VxeTableInstance, VxeToolbarInstance } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const store = useStore()\n            const serveApiUrl = computed(() => store.state.serveApiUrl)\n\n            const xToolbar = ref({} as VxeToolbarInstance)\n            const xTable = ref({} as VxeTableInstance)\n\n            const demo1 = reactive({\n              loading: false,\n              tableData: [],\n              validRules: {\n                name: [\n                  { required: true, message: '名称必须填写' }\n                ]\n              },\n              sexList: [\n                { label: '男', value: '1' },\n                { label: '女', value: '0' }\n              ]\n            })\n\n            const formatSex = (value) => {\n              if (value === '1') {\n                return '男'\n              }\n              if (value === '0') {\n                return '女'\n              }\n              return ''\n            }\n\n            const loadList = async () => {\n              demo1.loading = true\n              try {\n                const res = await fetch(`${serveApiUrl.value}/api/pub/all`).then(response => response.json())\n                demo1.tableData = res\n              } catch (e) {\n                demo1.tableData = []\n              }\n              demo1.loading = false\n            }\n\n            const insertEvent = async () => {\n              const $table = xTable.value\n              const newRecord = {}\n              const { row: newRow } = await $table.insert(newRecord)\n              await $table.setActiveRow(newRow)\n            }\n\n            const removeSelectEvent = async () => {\n              const $table = xTable.value\n              await $table.removeCheckboxRow()\n            }\n\n            const deleteSelectEvent = async () => {\n              const type = await VXETable.modal.confirm('您确定要删除选中的数据?')\n              if (type !== 'confirm') {\n                return\n              }\n              const $table = xTable.value\n              const checkboxRecords = $table.getCheckboxRecords()\n              demo1.loading = true\n              try {\n                const body = { removeRecords: checkboxRecords }\n                await fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) })\n                await loadList()\n              } catch (e) {}\n              demo1.loading = false\n            }\n\n            const removeRowEvent = async (row) => {\n              const $table = xTable.value\n              await $table.remove(row)\n            }\n\n            const deleteRowEvent = async (row) => {\n              const type = await VXETable.modal.confirm('您确定要删除该数据?')\n              if (type !== 'confirm') {\n                return\n              }\n              demo1.loading = true\n              try {\n                const body = { removeRecords: [row] }\n                await fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) })\n                await loadList()\n              } catch (e) {}\n            }\n\n            const saveEvent = async () => {\n              const $table = xTable.value\n              const { insertRecords, removeRecords, updateRecords } = $table.getRecordset()\n              if (insertRecords.length <= 0 && removeRecords.length <= 0 && updateRecords.length <= 0) {\n                VXETable.modal.message({ content: '数据未改动！', status: 'warning' })\n                return\n              }\n              const errMap = await $table.validate()\n              if (errMap) {\n                return\n              }\n              demo1.loading = true\n              try {\n                const body = { insertRecords, removeRecords, updateRecords }\n                await fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) })\n                await loadList()\n                VXETable.modal.message({ content: `操作成功，新增 ${insertRecords.length} 条，更新 ${updateRecords.length} 条，删除 ${removeRecords.length} 条`, status: 'success' })\n              } catch (e) {\n                if (e && e.message) {\n                  VXETable.modal.message({ content: e.message, status: 'error' })\n                }\n              }\n              demo1.loading = false\n            }\n\n            nextTick(() => {\n              // 将表格和工具栏进行关联\n              const $table = xTable.value\n              const $toolbar = xToolbar.value\n              $table.connect($toolbar)\n            })\n\n            loadList()\n\n            return {\n              demo1,\n              xToolbar,\n              xTable,\n              formatSex,\n              insertEvent,\n              removeSelectEvent,\n              deleteSelectEvent,\n              removeRowEvent,\n              deleteRowEvent,\n              saveEvent\n            }\n          }\n        })\n        </script>"]},"metadata":{},"sourceType":"module"}