{"ast":null,"code":"import { defineComponent } from 'vue';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'Jim',\n    value: 'Jim'\n  }, {\n    text: 'Submenu',\n    value: 'Submenu',\n    children: [{\n      text: 'Green',\n      value: 'Green'\n    }, {\n      text: 'Black',\n      value: 'Black'\n    }]\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['descend']\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  defaultSortOrder: 'descend',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London'\n  }, {\n    text: 'New York',\n    value: 'New York'\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: ['descend', 'ascend']\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\nexport default defineComponent({\n  setup() {\n    const onChange = (pagination, filters, sorter) => {\n      console.log('params', pagination, filters, sorter);\n    };\n\n    return {\n      data,\n      columns,\n      onChange\n    };\n  }\n\n});","map":{"version":3,"mappings":"AASA,SAASA,eAAT,QAAgC,KAAhC;AACA,MAAMC,OAAM,GAAI,CAEZ;AACFC,OAAK,EAAE,MADL;AAEFC,WAAS,EAAE,MAFT;AAGFC,SAAO,EAAE,CAAC;AACRC,QAAI,EAAE,KADE;AAERC,SAAK,EAAE;AAFC,GAAD,EAGN;AACDD,QAAI,EAAE,KADL;AAEDC,SAAK,EAAE;AAFN,GAHM,EAMN;AACDD,QAAI,EAAE,SADL;AAEDC,SAAK,EAAE,SAFN;AAGDC,YAAQ,EAAE,CAAC;AACTF,UAAI,EAAE,OADG;AAETC,WAAK,EAAE;AAFE,KAAD,EAGP;AACDD,UAAI,EAAE,OADL;AAEDC,WAAK,EAAE;AAFN,KAHO;AAHT,GANM,CAHP;AAoBF;AACA;AACAE,UAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBL,KAApB,MAA+B,CAtB1D;AAuBFM,QAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,CAAOK,MAAP,GAAgBD,CAAC,CAACJ,IAAF,CAAOK,MAvBvC;AAwBFC,gBAAc,EAAE,CAAC,SAAD;AAxBd,CAFY,EA2Bb;AACDd,OAAK,EAAE,KADN;AAEDC,WAAS,EAAE,KAFV;AAGDc,kBAAgB,EAAE,SAHjB;AAIDL,QAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,GAAF,GAAQJ,CAAC,CAACI;AAJ3B,CA3Ba,EAgCb;AACDhB,OAAK,EAAE,SADN;AAEDC,WAAS,EAAE,SAFV;AAGDC,SAAO,EAAE,CAAC;AACRC,QAAI,EAAE,QADE;AAERC,SAAK,EAAE;AAFC,GAAD,EAGN;AACDD,QAAI,EAAE,UADL;AAEDC,SAAK,EAAE;AAFN,GAHM,CAHR;AAUDa,gBAAc,EAAE,KAVf;AAWDX,UAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACW,OAAP,CAAeT,OAAf,CAAuBL,KAAvB,MAAkC,CAX9D;AAYDM,QAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,OAAF,CAAUL,MAAV,GAAmBD,CAAC,CAACM,OAAF,CAAUL,MAZ9C;AAaDC,gBAAc,EAAE,CAAC,SAAD,EAAY,QAAZ;AAbf,CAhCa,CAAhB;AAsDA,MAAMK,IAAG,GAAI,CAAC;AACZC,KAAG,EAAE,GADO;AAEZZ,MAAI,EAAE,YAFM;AAGZQ,KAAG,EAAE,EAHO;AAIZE,SAAO,EAAE;AAJG,CAAD,EAKV;AACDE,KAAG,EAAE,GADJ;AAEDZ,MAAI,EAAE,WAFL;AAGDQ,KAAG,EAAE,EAHJ;AAIDE,SAAO,EAAE;AAJR,CALU,EAUV;AACDE,KAAG,EAAE,GADJ;AAEDZ,MAAI,EAAE,WAFL;AAGDQ,KAAG,EAAE,EAHJ;AAIDE,SAAO,EAAE;AAJR,CAVU,EAeV;AACDE,KAAG,EAAE,GADJ;AAEDZ,MAAI,EAAE,SAFL;AAGDQ,KAAG,EAAE,EAHJ;AAIDE,SAAO,EAAE;AAJR,CAfU,CAAb;AAwBA,eAAepB,eAAe,CAAC;AAC7BuB,OAAK,GAAG;AACN,UAAMC,QAAO,GAAI,CAACC,UAAD,EAAarB,OAAb,EAAsBQ,MAAtB,KAAiC;AAChDc,aAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,UAAtB,EAAkCrB,OAAlC,EAA2CQ,MAA3C;AACD,KAFD;;AAIA,WAAO;AACLS,UADK;AAELpB,aAFK;AAGLuB;AAHK,KAAP;AAKD;;AAX4B,CAAD,CAA9B","names":["defineComponent","columns","title","dataIndex","filters","text","value","children","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","filterMultiple","address","data","key","setup","onChange","pagination","console","log"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/worker/workerApplyHistory.vue"],"sourcesContent":["<template>\n  <a-table :columns=\"columns\" :data-source=\"data\" @change=\"onChange\" />\n</template>\n\n\n\n\n\n<script>\nimport { defineComponent } from 'vue';\nconst columns = [\n    \n    {\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe',\n  }, {\n    text: 'Jim',\n    value: 'Jim',\n  }, {\n    text: 'Submenu',\n    value: 'Submenu',\n    children: [{\n      text: 'Green',\n      value: 'Green',\n    }, {\n      text: 'Black',\n      value: 'Black',\n    }],\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['descend'],\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  defaultSortOrder: 'descend',\n  sorter: (a, b) => a.age - b.age,\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London',\n  }, {\n    text: 'New York',\n    value: 'New York',\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: ['descend', 'ascend'],\n}];\n\n\n\n\n\n\n\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park',\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park',\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park',\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park',\n}];\n\n\n\nexport default defineComponent({\n  setup() {\n    const onChange = (pagination, filters, sorter) => {\n      console.log('params', pagination, filters, sorter);\n    };\n\n    return {\n      data,\n      columns,\n      onChange,\n    };\n  },\n\n});\n</script>"]},"metadata":{},"sourceType":"module"}