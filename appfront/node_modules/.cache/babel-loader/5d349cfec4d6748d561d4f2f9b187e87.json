{"ast":null,"code":"import md5 from 'md5';\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha';\nimport { mapActions } from 'vuex';\nimport { timeFix } from '@/utils/util';\nimport { getSmsCaptcha, get2step } from '@/api/login';\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n\n  data() {\n    return {\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    };\n  },\n\n  created() {\n    get2step({}).then(res => {\n      this.requiredTwoStepCaptcha = res.result.stepCode;\n    }).catch(() => {\n      this.requiredTwoStepCaptcha = false;\n    }); // this.requiredTwoStepCaptcha = true\n  },\n\n  methods: { ...mapActions(['Login', 'Logout']),\n\n    // handler\n    handleUsernameOrEmail(rule, value, callback) {\n      const {\n        state\n      } = this;\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n\n      if (regex.test(value)) {\n        state.loginType = 0;\n      } else {\n        state.loginType = 1;\n      }\n\n      callback();\n    },\n\n    handleTabClick(key) {\n      this.customActiveKey = key; // this.form.resetFields()\n    },\n\n    handleSubmit(e) {\n      e.preventDefault();\n      const {\n        form: {\n          validateFields\n        },\n        state,\n        customActiveKey,\n        Login\n      } = this;\n      state.loginBtn = true;\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha'];\n      validateFields(validateFieldsKey, {\n        force: true\n      }, (err, values) => {\n        if (!err) {\n          console.log('login form', values);\n          const loginParams = { ...values\n          };\n          delete loginParams.username;\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username;\n          loginParams.password = md5(values.password);\n          Login(loginParams).then(res => this.loginSuccess(res)).catch(err => this.requestFailed(err)).finally(() => {\n            state.loginBtn = false;\n          });\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false;\n          }, 600);\n        }\n      });\n    },\n\n    getCaptcha(e) {\n      e.preventDefault();\n      const {\n        form: {\n          validateFields\n        },\n        state\n      } = this;\n      validateFields(['mobile'], {\n        force: true\n      }, (err, values) => {\n        if (!err) {\n          state.smsSendBtn = true;\n          const interval = window.setInterval(() => {\n            if (state.time-- <= 0) {\n              state.time = 60;\n              state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n          const hide = this.$message.loading('验证码发送中..', 0);\n          getSmsCaptcha({\n            mobile: values.mobile\n          }).then(res => {\n            setTimeout(hide, 2500);\n            this.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            });\n          }).catch(err => {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            state.time = 60;\n            state.smsSendBtn = false;\n            this.requestFailed(err);\n          });\n        }\n      });\n    },\n\n    stepCaptchaSuccess() {\n      this.loginSuccess();\n    },\n\n    stepCaptchaCancel() {\n      this.Logout().then(() => {\n        this.loginBtn = false;\n        this.stepCaptchaVisible = false;\n      });\n    },\n\n    loginSuccess(res) {\n      console.log(res); // check res.homePage define, set $router.push name res.homePage\n      // Why not enter onComplete\n\n      /*\n      this.$router.push({ name: 'analysis' }, () => {\n        console.log('onComplete')\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      })\n      */\n\n      this.$router.push({\n        path: '/'\n      }); // 延迟 1 秒显示欢迎信息\n\n      setTimeout(() => {\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        });\n      }, 1000);\n      this.isLoginError = false;\n    },\n\n    requestFailed(err) {\n      this.isLoginError = true;\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["md5","TwoStepCaptcha","mapActions","timeFix","getSmsCaptcha","get2step","components","data","customActiveKey","loginBtn","loginType","isLoginError","requiredTwoStepCaptcha","stepCaptchaVisible","form","$form","createForm","state","time","smsSendBtn","created","then","res","result","stepCode","catch","methods","handleUsernameOrEmail","rule","value","callback","regex","test","handleTabClick","key","handleSubmit","e","preventDefault","validateFields","Login","validateFieldsKey","force","err","values","console","log","loginParams","username","password","loginSuccess","requestFailed","finally","setTimeout","getCaptcha","interval","window","setInterval","clearInterval","hide","$message","loading","mobile","$notification","message","description","captcha","duration","stepCaptchaSuccess","stepCaptchaCancel","Logout","$router","push","path","success","response"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/src/views/login.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form\n      id=\"formLogin\"\n      class=\"user-layout-login\"\n      ref=\"formLogin\"\n      :form=\"form\"\n      @submit=\"handleSubmit\"\n    >\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\"\n      >\n        <a-tab-pane key=\"tab1\" :tab=\"$t('user.login.tab-login-credentials')\">\n          <a-alert v-if=\"isLoginError\" type=\"error\" showIcon style=\"margin-bottom: 24px;\" :message=\"$t('user.login.message-invalid-credentials')\" />\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              :placeholder=\"$t('user.login.username.placeholder')\"\n              v-decorator=\"[\n                'username',\n                {rules: [{ required: true, message: $t('user.userName.required') }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\n              ]\"\n            >\n              <a-icon v-slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input-password\n              size=\"large\"\n              :placeholder=\"$t('user.login.password.placeholder')\"\n              v-decorator=\"[\n                'password',\n                {rules: [{ required: true, message: $t('user.password.required') }], validateTrigger: 'blur'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input-password>\n          </a-form-item>\n        </a-tab-pane>\n        <a-tab-pane key=\"tab2\" :tab=\"$t('user.login.tab-login-mobile')\">\n          <a-form-item>\n            <a-input size=\"large\" type=\"text\" :placeholder=\"$t('user.login.mobile.placeholder')\" v-decorator=\"['mobile', {rules: [{ required: true, pattern: /^1[34578]\\d{9}$/, message: $t('user.login.mobile.placeholder') }], validateTrigger: 'change'}]\">\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input size=\"large\" type=\"text\" :placeholder=\"$t('user.login.mobile.verification-code.placeholder')\" v-decorator=\"['captcha', {rules: [{ required: true, message: $t('user.verification-code.required') }], validateTrigger: 'blur'}]\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <a-button\n                class=\"getCaptcha\"\n                tabindex=\"-1\"\n                :disabled=\"state.smsSendBtn\"\n                @click.stop.prevent=\"getCaptcha\"\n                v-text=\"!state.smsSendBtn && $t('user.register.get-verification-code') || (state.time+' s')\"\n              ></a-button>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe', { valuePropName: 'checked' }]\">{{ $t('user.login.remember-me') }}</a-checkbox>\n        <router-link\n          :to=\"{ name: 'recover', params: { user: 'aaa'} }\"\n          class=\"forge-password\"\n          style=\"float: right;\"\n        >{{ $t('user.login.forgot-password') }}</router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"state.loginBtn\"\n          :disabled=\"state.loginBtn\"\n        >{{ $t('user.login.login') }}</a-button>\n      </a-form-item>\n\n      <div class=\"user-login-other\">\n        <span>{{ $t('user.login.sign-in-with') }}</span>\n        <a>\n          <a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon>\n        </a>\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">{{ $t('user.login.signup') }}</router-link>\n      </div>\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"\n    ></two-step-captcha>\n  </div>\n</template>\n\n<script>\nimport md5 from 'md5'\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\nimport { getSmsCaptcha, get2step } from '@/api/login'\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n  data () {\n    return {\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    }\n  },\n  created () {\n    get2step({ })\n      .then(res => {\n        this.requiredTwoStepCaptcha = res.result.stepCode\n      })\n      .catch(() => {\n        this.requiredTwoStepCaptcha = false\n      })\n    // this.requiredTwoStepCaptcha = true\n  },\n  methods: {\n    ...mapActions(['Login', 'Logout']),\n    // handler\n    handleUsernameOrEmail (rule, value, callback) {\n      const { state } = this\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\n      if (regex.test(value)) {\n        state.loginType = 0\n      } else {\n        state.loginType = 1\n      }\n      callback()\n    },\n    handleTabClick (key) {\n      this.customActiveKey = key\n      // this.form.resetFields()\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      const {\n        form: { validateFields },\n        state,\n        customActiveKey,\n        Login\n      } = this\n      state.loginBtn = true\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha']\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\n        if (!err) {\n          console.log('login form', values)\n          const loginParams = { ...values }\n          delete loginParams.username\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username\n          loginParams.password = md5(values.password)\n          Login(loginParams)\n            .then((res) => this.loginSuccess(res))\n            .catch(err => this.requestFailed(err))\n            .finally(() => {\n              state.loginBtn = false\n            })\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false\n          }, 600)\n        }\n      })\n    },\n    getCaptcha (e) {\n      e.preventDefault()\n      const { form: { validateFields }, state } = this\n      validateFields(['mobile'], { force: true }, (err, values) => {\n        if (!err) {\n          state.smsSendBtn = true\n          const interval = window.setInterval(() => {\n            if (state.time-- <= 0) {\n              state.time = 60\n              state.smsSendBtn = false\n              window.clearInterval(interval)\n            }\n          }, 1000)\n          const hide = this.$message.loading('验证码发送中..', 0)\n          getSmsCaptcha({ mobile: values.mobile }).then(res => {\n            setTimeout(hide, 2500)\n            this.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            })\n          }).catch(err => {\n            setTimeout(hide, 1)\n            clearInterval(interval)\n            state.time = 60\n            state.smsSendBtn = false\n            this.requestFailed(err)\n          })\n        }\n      })\n    },\n    stepCaptchaSuccess () {\n      this.loginSuccess()\n    },\n    stepCaptchaCancel () {\n      this.Logout().then(() => {\n        this.loginBtn = false\n        this.stepCaptchaVisible = false\n      })\n    },\n    loginSuccess (res) {\n      console.log(res)\n      // check res.homePage define, set $router.push name res.homePage\n      // Why not enter onComplete\n      /*\n      this.$router.push({ name: 'analysis' }, () => {\n        console.log('onComplete')\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      })\n      */\n      this.$router.push({ path: '/' })\n      // 延迟 1 秒显示欢迎信息\n      setTimeout(() => {\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      }, 1000)\n      this.isLoginError = false\n    },\n    requestFailed (err) {\n      this.isLoginError = true\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n  .forge-password {\n    font-size: 14px;\n  }\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color 0.3s;\n      &:hover {\n        color: #1890ff;\n      }\n    }\n    .register {\n      float: right;\n    }\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}