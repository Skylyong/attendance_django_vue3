{"ast":null,"code":"import { inBrowser } from \"./basic\";\nimport { windowWidth, windowHeight } from \"./dom\";\nimport { isDef, isNumeric } from \"./validate\";\n\nfunction addUnit(value) {\n  if (isDef(value)) {\n    return isNumeric(value) ? `${value}px` : String(value);\n  }\n\n  return void 0;\n}\n\nfunction getSizeStyle(originSize) {\n  if (isDef(originSize)) {\n    const size = addUnit(originSize);\n    return {\n      width: size,\n      height: size\n    };\n  }\n}\n\nfunction getZIndexStyle(zIndex) {\n  const style = {};\n\n  if (zIndex !== void 0) {\n    style.zIndex = +zIndex;\n  }\n\n  return style;\n}\n\nlet rootFontSize;\n\nfunction getRootFontSize() {\n  if (!rootFontSize) {\n    const doc = document.documentElement;\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize;\n    rootFontSize = parseFloat(fontSize);\n  }\n\n  return rootFontSize;\n}\n\nfunction convertRem(value) {\n  value = value.replace(/rem/g, \"\");\n  return +value * getRootFontSize();\n}\n\nfunction convertVw(value) {\n  value = value.replace(/vw/g, \"\");\n  return +value * windowWidth.value / 100;\n}\n\nfunction convertVh(value) {\n  value = value.replace(/vh/g, \"\");\n  return +value * windowHeight.value / 100;\n}\n\nfunction unitToPx(value) {\n  if (typeof value === \"number\") {\n    return value;\n  }\n\n  if (inBrowser) {\n    if (value.includes(\"rem\")) {\n      return convertRem(value);\n    }\n\n    if (value.includes(\"vw\")) {\n      return convertVw(value);\n    }\n\n    if (value.includes(\"vh\")) {\n      return convertVh(value);\n    }\n  }\n\n  return parseFloat(value);\n}\n\nconst camelizeRE = /-(\\w)/g;\n\nconst camelize = str => str.replace(camelizeRE, (_, c) => c.toUpperCase());\n\nconst kebabCase = str => str.replace(/([A-Z])/g, \"-$1\").toLowerCase().replace(/^-/, \"\");\n\nfunction padZero(num, targetLength = 2) {\n  let str = num + \"\";\n\n  while (str.length < targetLength) {\n    str = \"0\" + str;\n  }\n\n  return str;\n}\n\nconst clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n\nfunction trimExtraChar(value, char, regExp) {\n  const index = value.indexOf(char);\n\n  if (index === -1) {\n    return value;\n  }\n\n  if (char === \"-\" && index !== 0) {\n    return value.slice(0, index);\n  }\n\n  return value.slice(0, index + 1) + value.slice(index).replace(regExp, \"\");\n}\n\nfunction formatNumber(value, allowDot = true, allowMinus = true) {\n  if (allowDot) {\n    value = trimExtraChar(value, \".\", /\\./g);\n  } else {\n    value = value.split(\".\")[0];\n  }\n\n  if (allowMinus) {\n    value = trimExtraChar(value, \"-\", /-/g);\n  } else {\n    value = value.replace(/-/, \"\");\n  }\n\n  const regExp = allowDot ? /[^-0-9.]/g : /[^-0-9]/g;\n  return value.replace(regExp, \"\");\n}\n\nfunction addNumber(num1, num2) {\n  const cardinal = 10 ** 10;\n  return Math.round((num1 + num2) * cardinal) / cardinal;\n}\n\nexport { addNumber, addUnit, camelize, clamp, formatNumber, getSizeStyle, getZIndexStyle, kebabCase, padZero, unitToPx };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/utils/format.js"],"names":["inBrowser","windowWidth","windowHeight","isDef","isNumeric","addUnit","value","String","getSizeStyle","originSize","size","width","height","getZIndexStyle","zIndex","style","rootFontSize","getRootFontSize","doc","document","documentElement","fontSize","window","getComputedStyle","parseFloat","convertRem","replace","convertVw","convertVh","unitToPx","includes","camelizeRE","camelize","str","_","c","toUpperCase","kebabCase","toLowerCase","padZero","num","targetLength","length","clamp","min","max","Math","trimExtraChar","char","regExp","index","indexOf","slice","formatNumber","allowDot","allowMinus","split","addNumber","num1","num2","cardinal","round"],"mappings":"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","sourcesContent":["import { inBrowser } from \"./basic\";\nimport { windowWidth, windowHeight } from \"./dom\";\nimport { isDef, isNumeric } from \"./validate\";\nfunction addUnit(value) {\n  if (isDef(value)) {\n    return isNumeric(value) ? `${value}px` : String(value);\n  }\n  return void 0;\n}\nfunction getSizeStyle(originSize) {\n  if (isDef(originSize)) {\n    const size = addUnit(originSize);\n    return {\n      width: size,\n      height: size\n    };\n  }\n}\nfunction getZIndexStyle(zIndex) {\n  const style = {};\n  if (zIndex !== void 0) {\n    style.zIndex = +zIndex;\n  }\n  return style;\n}\nlet rootFontSize;\nfunction getRootFontSize() {\n  if (!rootFontSize) {\n    const doc = document.documentElement;\n    const fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize;\n    rootFontSize = parseFloat(fontSize);\n  }\n  return rootFontSize;\n}\nfunction convertRem(value) {\n  value = value.replace(/rem/g, \"\");\n  return +value * getRootFontSize();\n}\nfunction convertVw(value) {\n  value = value.replace(/vw/g, \"\");\n  return +value * windowWidth.value / 100;\n}\nfunction convertVh(value) {\n  value = value.replace(/vh/g, \"\");\n  return +value * windowHeight.value / 100;\n}\nfunction unitToPx(value) {\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (inBrowser) {\n    if (value.includes(\"rem\")) {\n      return convertRem(value);\n    }\n    if (value.includes(\"vw\")) {\n      return convertVw(value);\n    }\n    if (value.includes(\"vh\")) {\n      return convertVh(value);\n    }\n  }\n  return parseFloat(value);\n}\nconst camelizeRE = /-(\\w)/g;\nconst camelize = (str) => str.replace(camelizeRE, (_, c) => c.toUpperCase());\nconst kebabCase = (str) => str.replace(/([A-Z])/g, \"-$1\").toLowerCase().replace(/^-/, \"\");\nfunction padZero(num, targetLength = 2) {\n  let str = num + \"\";\n  while (str.length < targetLength) {\n    str = \"0\" + str;\n  }\n  return str;\n}\nconst clamp = (num, min, max) => Math.min(Math.max(num, min), max);\nfunction trimExtraChar(value, char, regExp) {\n  const index = value.indexOf(char);\n  if (index === -1) {\n    return value;\n  }\n  if (char === \"-\" && index !== 0) {\n    return value.slice(0, index);\n  }\n  return value.slice(0, index + 1) + value.slice(index).replace(regExp, \"\");\n}\nfunction formatNumber(value, allowDot = true, allowMinus = true) {\n  if (allowDot) {\n    value = trimExtraChar(value, \".\", /\\./g);\n  } else {\n    value = value.split(\".\")[0];\n  }\n  if (allowMinus) {\n    value = trimExtraChar(value, \"-\", /-/g);\n  } else {\n    value = value.replace(/-/, \"\");\n  }\n  const regExp = allowDot ? /[^-0-9.]/g : /[^-0-9]/g;\n  return value.replace(regExp, \"\");\n}\nfunction addNumber(num1, num2) {\n  const cardinal = 10 ** 10;\n  return Math.round((num1 + num2) * cardinal) / cardinal;\n}\nexport {\n  addNumber,\n  addUnit,\n  camelize,\n  clamp,\n  formatNumber,\n  getSizeStyle,\n  getZIndexStyle,\n  kebabCase,\n  padZero,\n  unitToPx\n};\n"]},"metadata":{},"sourceType":"module"}