{"ast":null,"code":"import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, nextTick, reactive, defineComponent } from \"vue\";\nimport { extend, isObject, isMobile, truthProp, numericProp, makeArrayProp, makeNumericProp, createNamespace } from \"../utils\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Area } from \"../area\";\nimport { Cell } from \"../cell\";\nimport { Form } from \"../form\";\nimport { Field } from \"../field\";\nimport { Popup } from \"../popup\";\nimport { Toast } from \"../toast\";\nimport { Button } from \"../button\";\nimport { Switch } from \"../switch\";\nimport AddressEditDetail from \"./AddressEditDetail\";\nconst [name, bem, t] = createNamespace(\"address-edit\");\nconst DEFAULT_DATA = {\n  name: \"\",\n  tel: \"\",\n  city: \"\",\n  county: \"\",\n  country: \"\",\n  province: \"\",\n  areaCode: \"\",\n  isDefault: false,\n  postalCode: \"\",\n  addressDetail: \"\"\n};\n\nconst isPostal = value => /^\\d{6}$/.test(value);\n\nconst addressEditProps = {\n  areaList: Object,\n  isSaving: Boolean,\n  isDeleting: Boolean,\n  validator: Function,\n  showArea: truthProp,\n  showDetail: truthProp,\n  showDelete: Boolean,\n  showPostal: Boolean,\n  disableArea: Boolean,\n  searchResult: Array,\n  telMaxlength: numericProp,\n  showSetDefault: Boolean,\n  saveButtonText: String,\n  areaPlaceholder: String,\n  deleteButtonText: String,\n  showSearchResult: Boolean,\n  detailRows: makeNumericProp(1),\n  detailMaxlength: makeNumericProp(200),\n  areaColumnsPlaceholder: makeArrayProp(),\n  addressInfo: {\n    type: Object,\n    default: () => extend({}, DEFAULT_DATA)\n  },\n  telValidator: {\n    type: Function,\n    default: isMobile\n  },\n  postalValidator: {\n    type: Function,\n    default: isPostal\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: addressEditProps,\n  emits: [\"save\", \"focus\", \"delete\", \"click-area\", \"change-area\", \"change-detail\", \"select-search\", \"change-default\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const areaRef = ref();\n    const data = reactive({});\n    const showAreaPopup = ref(false);\n    const detailFocused = ref(false);\n    const areaListLoaded = computed(() => isObject(props.areaList) && Object.keys(props.areaList).length);\n    const areaText = computed(() => {\n      const {\n        country,\n        province,\n        city,\n        county,\n        areaCode\n      } = data;\n\n      if (areaCode) {\n        const arr = [country, province, city, county];\n\n        if (province && province === city) {\n          arr.splice(1, 1);\n        }\n\n        return arr.filter(Boolean).join(\"/\");\n      }\n\n      return \"\";\n    });\n    const hideBottomFields = computed(() => {\n      var _a;\n\n      return ((_a = props.searchResult) == null ? void 0 : _a.length) && detailFocused.value;\n    });\n\n    const assignAreaValues = () => {\n      if (areaRef.value) {\n        const detail = areaRef.value.getArea();\n        detail.areaCode = detail.code;\n        delete detail.code;\n        extend(data, detail);\n      }\n    };\n\n    const onFocus = key => {\n      detailFocused.value = key === \"addressDetail\";\n      emit(\"focus\", key);\n    };\n\n    const rules = computed(() => {\n      const {\n        validator,\n        telValidator,\n        postalValidator\n      } = props;\n\n      const makeRule = (name2, emptyMessage) => ({\n        validator: value => {\n          if (validator) {\n            const message = validator(name2, value);\n\n            if (message) {\n              return message;\n            }\n          }\n\n          if (!value) {\n            return emptyMessage;\n          }\n\n          return true;\n        }\n      });\n\n      return {\n        name: [makeRule(\"name\", t(\"nameEmpty\"))],\n        tel: [makeRule(\"tel\", t(\"telInvalid\")), {\n          validator: telValidator,\n          message: t(\"telInvalid\")\n        }],\n        areaCode: [makeRule(\"areaCode\", t(\"areaEmpty\"))],\n        addressDetail: [makeRule(\"addressDetail\", t(\"addressEmpty\"))],\n        postalCode: [makeRule(\"addressDetail\", t(\"postalEmpty\")), {\n          validator: postalValidator,\n          message: t(\"postalEmpty\")\n        }]\n      };\n    });\n\n    const onSave = () => emit(\"save\", data);\n\n    const onChangeDetail = val => {\n      data.addressDetail = val;\n      emit(\"change-detail\", val);\n    };\n\n    const onAreaConfirm = values => {\n      values = values.filter(Boolean);\n\n      if (values.some(value => !value.code)) {\n        Toast(t(\"areaEmpty\"));\n      } else {\n        showAreaPopup.value = false;\n        assignAreaValues();\n        emit(\"change-area\", values);\n      }\n    };\n\n    const onDelete = () => emit(\"delete\", data);\n\n    const getArea = () => {\n      var _a;\n\n      return ((_a = areaRef.value) == null ? void 0 : _a.getValues()) || [];\n    };\n\n    const setAreaCode = code => {\n      data.areaCode = code || \"\";\n\n      if (code) {\n        nextTick(assignAreaValues);\n      }\n    };\n\n    const onDetailBlur = () => {\n      setTimeout(() => {\n        detailFocused.value = false;\n      });\n    };\n\n    const setAddressDetail = value => {\n      data.addressDetail = value;\n    };\n\n    const renderSetDefaultCell = () => {\n      if (props.showSetDefault) {\n        const slots2 = {\n          \"right-icon\": () => _createVNode(Switch, {\n            \"modelValue\": data.isDefault,\n            \"onUpdate:modelValue\": $event => data.isDefault = $event,\n            \"size\": \"24\",\n            \"onChange\": event => emit(\"change-default\", event)\n          }, null)\n        };\n        return _withDirectives(_createVNode(Cell, {\n          \"center\": true,\n          \"title\": t(\"defaultAddress\"),\n          \"class\": bem(\"default\")\n        }, slots2), [[_vShow, !hideBottomFields.value]]);\n      }\n    };\n\n    useExpose({\n      getArea,\n      setAreaCode,\n      setAddressDetail\n    });\n    watch(() => props.areaList, () => setAreaCode(data.areaCode));\n    watch(() => props.addressInfo, value => {\n      extend(data, DEFAULT_DATA, value);\n      setAreaCode(value.areaCode);\n    }, {\n      deep: true,\n      immediate: true\n    });\n    return () => {\n      const {\n        disableArea\n      } = props;\n      return _createVNode(Form, {\n        \"class\": bem(),\n        \"onSubmit\": onSave\n      }, {\n        default: () => {\n          var _a;\n\n          return [_createVNode(\"div\", {\n            \"class\": bem(\"fields\")\n          }, [_createVNode(Field, {\n            \"modelValue\": data.name,\n            \"onUpdate:modelValue\": $event => data.name = $event,\n            \"clearable\": true,\n            \"label\": t(\"name\"),\n            \"rules\": rules.value.name,\n            \"placeholder\": t(\"name\"),\n            \"onFocus\": () => onFocus(\"name\")\n          }, null), _createVNode(Field, {\n            \"modelValue\": data.tel,\n            \"onUpdate:modelValue\": $event => data.tel = $event,\n            \"clearable\": true,\n            \"type\": \"tel\",\n            \"label\": t(\"tel\"),\n            \"rules\": rules.value.tel,\n            \"maxlength\": props.telMaxlength,\n            \"placeholder\": t(\"tel\"),\n            \"onFocus\": () => onFocus(\"tel\")\n          }, null), _withDirectives(_createVNode(Field, {\n            \"readonly\": true,\n            \"label\": t(\"area\"),\n            \"is-link\": !disableArea,\n            \"modelValue\": areaText.value,\n            \"rules\": rules.value.areaCode,\n            \"placeholder\": props.areaPlaceholder || t(\"area\"),\n            \"onFocus\": () => onFocus(\"areaCode\"),\n            \"onClick\": () => {\n              emit(\"click-area\");\n              showAreaPopup.value = !disableArea;\n            }\n          }, null), [[_vShow, props.showArea]]), _createVNode(AddressEditDetail, {\n            \"show\": props.showDetail,\n            \"rows\": props.detailRows,\n            \"rules\": rules.value.addressDetail,\n            \"value\": data.addressDetail,\n            \"focused\": detailFocused.value,\n            \"maxlength\": props.detailMaxlength,\n            \"searchResult\": props.searchResult,\n            \"showSearchResult\": props.showSearchResult,\n            \"onBlur\": onDetailBlur,\n            \"onFocus\": () => onFocus(\"addressDetail\"),\n            \"onInput\": onChangeDetail,\n            \"onSelect-search\": event => emit(\"select-search\", event)\n          }, null), props.showPostal && _withDirectives(_createVNode(Field, {\n            \"modelValue\": data.postalCode,\n            \"onUpdate:modelValue\": $event => data.postalCode = $event,\n            \"type\": \"tel\",\n            \"rules\": rules.value.postalCode,\n            \"label\": t(\"postal\"),\n            \"maxlength\": \"6\",\n            \"placeholder\": t(\"postal\"),\n            \"onFocus\": () => onFocus(\"postalCode\")\n          }, null), [[_vShow, !hideBottomFields.value]]), (_a = slots.default) == null ? void 0 : _a.call(slots)]), renderSetDefaultCell(), _withDirectives(_createVNode(\"div\", {\n            \"class\": bem(\"buttons\")\n          }, [_createVNode(Button, {\n            \"block\": true,\n            \"round\": true,\n            \"type\": \"danger\",\n            \"text\": props.saveButtonText || t(\"save\"),\n            \"class\": bem(\"button\"),\n            \"loading\": props.isSaving,\n            \"nativeType\": \"submit\"\n          }, null), props.showDelete && _createVNode(Button, {\n            \"block\": true,\n            \"round\": true,\n            \"class\": bem(\"button\"),\n            \"loading\": props.isDeleting,\n            \"text\": props.deleteButtonText || t(\"delete\"),\n            \"onClick\": onDelete\n          }, null)]), [[_vShow, !hideBottomFields.value]]), _createVNode(Popup, {\n            \"show\": showAreaPopup.value,\n            \"onUpdate:show\": $event => showAreaPopup.value = $event,\n            \"round\": true,\n            \"teleport\": \"body\",\n            \"position\": \"bottom\",\n            \"lazyRender\": false\n          }, {\n            default: () => [_createVNode(Area, {\n              \"ref\": areaRef,\n              \"value\": data.areaCode,\n              \"loading\": !areaListLoaded.value,\n              \"areaList\": props.areaList,\n              \"columnsPlaceholder\": props.areaColumnsPlaceholder,\n              \"onConfirm\": onAreaConfirm,\n              \"onCancel\": () => {\n                showAreaPopup.value = false;\n              }\n            }, null)]\n          })];\n        }\n      });\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/address-edit/AddressEdit.js"],"names":["withDirectives","_withDirectives","vShow","_vShow","createVNode","_createVNode","ref","watch","computed","nextTick","reactive","defineComponent","extend","isObject","isMobile","truthProp","numericProp","makeArrayProp","makeNumericProp","createNamespace","useExpose","Area","Cell","Form","Field","Popup","Toast","Button","Switch","AddressEditDetail","name","bem","t","DEFAULT_DATA","tel","city","county","country","province","areaCode","isDefault","postalCode","addressDetail","isPostal","value","test","addressEditProps","areaList","Object","isSaving","Boolean","isDeleting","validator","Function","showArea","showDetail","showDelete","showPostal","disableArea","searchResult","Array","telMaxlength","showSetDefault","saveButtonText","String","areaPlaceholder","deleteButtonText","showSearchResult","detailRows","detailMaxlength","areaColumnsPlaceholder","addressInfo","type","default","telValidator","postalValidator","stdin_default","props","emits","setup","emit","slots","areaRef","data","showAreaPopup","detailFocused","areaListLoaded","keys","length","areaText","arr","splice","filter","join","hideBottomFields","_a","assignAreaValues","detail","getArea","code","onFocus","key","rules","makeRule","name2","emptyMessage","message","onSave","onChangeDetail","val","onAreaConfirm","values","some","onDelete","getValues","setAreaCode","onDetailBlur","setTimeout","setAddressDetail","renderSetDefaultCell","slots2","$event","event","deep","immediate","call"],"mappings":"AAAA,SAASA,cAAc,IAAIC,eAA3B,EAA4CC,KAAK,IAAIC,MAArD,EAA6DC,WAAW,IAAIC,YAA5E,QAAgG,KAAhG;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmDC,eAAnD,QAA0E,KAA1E;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,WAAhD,EAA6DC,aAA7D,EAA4EC,eAA5E,EAA6FC,eAA7F,QAAoH,UAApH;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,EAAYC,CAAZ,IAAiBb,eAAe,CAAC,cAAD,CAAtC;AACA,MAAMc,YAAY,GAAG;AACnBH,EAAAA,IAAI,EAAE,EADa;AAEnBI,EAAAA,GAAG,EAAE,EAFc;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,OAAO,EAAE,EALU;AAMnBC,EAAAA,QAAQ,EAAE,EANS;AAOnBC,EAAAA,QAAQ,EAAE,EAPS;AAQnBC,EAAAA,SAAS,EAAE,KARQ;AASnBC,EAAAA,UAAU,EAAE,EATO;AAUnBC,EAAAA,aAAa,EAAE;AAVI,CAArB;;AAYA,MAAMC,QAAQ,GAAIC,KAAD,IAAW,UAAUC,IAAV,CAAeD,KAAf,CAA5B;;AACA,MAAME,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAEC,MADa;AAEvBC,EAAAA,QAAQ,EAAEC,OAFa;AAGvBC,EAAAA,UAAU,EAAED,OAHW;AAIvBE,EAAAA,SAAS,EAAEC,QAJY;AAKvBC,EAAAA,QAAQ,EAAEvC,SALa;AAMvBwC,EAAAA,UAAU,EAAExC,SANW;AAOvByC,EAAAA,UAAU,EAAEN,OAPW;AAQvBO,EAAAA,UAAU,EAAEP,OARW;AASvBQ,EAAAA,WAAW,EAAER,OATU;AAUvBS,EAAAA,YAAY,EAAEC,KAVS;AAWvBC,EAAAA,YAAY,EAAE7C,WAXS;AAYvB8C,EAAAA,cAAc,EAAEZ,OAZO;AAavBa,EAAAA,cAAc,EAAEC,MAbO;AAcvBC,EAAAA,eAAe,EAAED,MAdM;AAevBE,EAAAA,gBAAgB,EAAEF,MAfK;AAgBvBG,EAAAA,gBAAgB,EAAEjB,OAhBK;AAiBvBkB,EAAAA,UAAU,EAAElD,eAAe,CAAC,CAAD,CAjBJ;AAkBvBmD,EAAAA,eAAe,EAAEnD,eAAe,CAAC,GAAD,CAlBT;AAmBvBoD,EAAAA,sBAAsB,EAAErD,aAAa,EAnBd;AAoBvBsD,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAExB,MADK;AAEXyB,IAAAA,OAAO,EAAE,MAAM7D,MAAM,CAAC,EAAD,EAAKqB,YAAL;AAFV,GApBU;AAwBvByC,EAAAA,YAAY,EAAE;AACZF,IAAAA,IAAI,EAAEnB,QADM;AAEZoB,IAAAA,OAAO,EAAE3D;AAFG,GAxBS;AA4BvB6D,EAAAA,eAAe,EAAE;AACfH,IAAAA,IAAI,EAAEnB,QADS;AAEfoB,IAAAA,OAAO,EAAE9B;AAFM;AA5BM,CAAzB;AAiCA,IAAIiC,aAAa,GAAGjE,eAAe,CAAC;AAClCmB,EAAAA,IADkC;AAElC+C,EAAAA,KAAK,EAAE/B,gBAF2B;AAGlCgC,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,YAA5B,EAA0C,aAA1C,EAAyD,eAAzD,EAA0E,eAA1E,EAA2F,gBAA3F,CAH2B;;AAIlCC,EAAAA,KAAK,CAACF,KAAD,EAAQ;AACXG,IAAAA,IADW;AAEXC,IAAAA;AAFW,GAAR,EAGF;AACD,UAAMC,OAAO,GAAG5E,GAAG,EAAnB;AACA,UAAM6E,IAAI,GAAGzE,QAAQ,CAAC,EAAD,CAArB;AACA,UAAM0E,aAAa,GAAG9E,GAAG,CAAC,KAAD,CAAzB;AACA,UAAM+E,aAAa,GAAG/E,GAAG,CAAC,KAAD,CAAzB;AACA,UAAMgF,cAAc,GAAG9E,QAAQ,CAAC,MAAMK,QAAQ,CAACgE,KAAK,CAAC9B,QAAP,CAAR,IAA4BC,MAAM,CAACuC,IAAP,CAAYV,KAAK,CAAC9B,QAAlB,EAA4ByC,MAA/D,CAA/B;AACA,UAAMC,QAAQ,GAAGjF,QAAQ,CAAC,MAAM;AAC9B,YAAM;AACJ6B,QAAAA,OADI;AAEJC,QAAAA,QAFI;AAGJH,QAAAA,IAHI;AAIJC,QAAAA,MAJI;AAKJG,QAAAA;AALI,UAMF4C,IANJ;;AAOA,UAAI5C,QAAJ,EAAc;AACZ,cAAMmD,GAAG,GAAG,CAACrD,OAAD,EAAUC,QAAV,EAAoBH,IAApB,EAA0BC,MAA1B,CAAZ;;AACA,YAAIE,QAAQ,IAAIA,QAAQ,KAAKH,IAA7B,EAAmC;AACjCuD,UAAAA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAc,CAAd;AACD;;AACD,eAAOD,GAAG,CAACE,MAAJ,CAAW1C,OAAX,EAAoB2C,IAApB,CAAyB,GAAzB,CAAP;AACD;;AACD,aAAO,EAAP;AACD,KAhBwB,CAAzB;AAiBA,UAAMC,gBAAgB,GAAGtF,QAAQ,CAAC,MAAM;AACtC,UAAIuF,EAAJ;;AACA,aAAO,CAAC,CAACA,EAAE,GAAGlB,KAAK,CAAClB,YAAZ,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CoC,EAAE,CAACP,MAAjD,KAA4DH,aAAa,CAACzC,KAAjF;AACD,KAHgC,CAAjC;;AAIA,UAAMoD,gBAAgB,GAAG,MAAM;AAC7B,UAAId,OAAO,CAACtC,KAAZ,EAAmB;AACjB,cAAMqD,MAAM,GAAGf,OAAO,CAACtC,KAAR,CAAcsD,OAAd,EAAf;AACAD,QAAAA,MAAM,CAAC1D,QAAP,GAAkB0D,MAAM,CAACE,IAAzB;AACA,eAAOF,MAAM,CAACE,IAAd;AACAvF,QAAAA,MAAM,CAACuE,IAAD,EAAOc,MAAP,CAAN;AACD;AACF,KAPD;;AAQA,UAAMG,OAAO,GAAIC,GAAD,IAAS;AACvBhB,MAAAA,aAAa,CAACzC,KAAd,GAAsByD,GAAG,KAAK,eAA9B;AACArB,MAAAA,IAAI,CAAC,OAAD,EAAUqB,GAAV,CAAJ;AACD,KAHD;;AAIA,UAAMC,KAAK,GAAG9F,QAAQ,CAAC,MAAM;AAC3B,YAAM;AACJ4C,QAAAA,SADI;AAEJsB,QAAAA,YAFI;AAGJC,QAAAA;AAHI,UAIFE,KAJJ;;AAKA,YAAM0B,QAAQ,GAAG,CAACC,KAAD,EAAQC,YAAR,MAA0B;AACzCrD,QAAAA,SAAS,EAAGR,KAAD,IAAW;AACpB,cAAIQ,SAAJ,EAAe;AACb,kBAAMsD,OAAO,GAAGtD,SAAS,CAACoD,KAAD,EAAQ5D,KAAR,CAAzB;;AACA,gBAAI8D,OAAJ,EAAa;AACX,qBAAOA,OAAP;AACD;AACF;;AACD,cAAI,CAAC9D,KAAL,EAAY;AACV,mBAAO6D,YAAP;AACD;;AACD,iBAAO,IAAP;AACD;AAZwC,OAA1B,CAAjB;;AAcA,aAAO;AACL3E,QAAAA,IAAI,EAAE,CAACyE,QAAQ,CAAC,MAAD,EAASvE,CAAC,CAAC,WAAD,CAAV,CAAT,CADD;AAELE,QAAAA,GAAG,EAAE,CAACqE,QAAQ,CAAC,KAAD,EAAQvE,CAAC,CAAC,YAAD,CAAT,CAAT,EAAmC;AACtCoB,UAAAA,SAAS,EAAEsB,YAD2B;AAEtCgC,UAAAA,OAAO,EAAE1E,CAAC,CAAC,YAAD;AAF4B,SAAnC,CAFA;AAMLO,QAAAA,QAAQ,EAAE,CAACgE,QAAQ,CAAC,UAAD,EAAavE,CAAC,CAAC,WAAD,CAAd,CAAT,CANL;AAOLU,QAAAA,aAAa,EAAE,CAAC6D,QAAQ,CAAC,eAAD,EAAkBvE,CAAC,CAAC,cAAD,CAAnB,CAAT,CAPV;AAQLS,QAAAA,UAAU,EAAE,CAAC8D,QAAQ,CAAC,eAAD,EAAkBvE,CAAC,CAAC,aAAD,CAAnB,CAAT,EAA8C;AACxDoB,UAAAA,SAAS,EAAEuB,eAD6C;AAExD+B,UAAAA,OAAO,EAAE1E,CAAC,CAAC,aAAD;AAF8C,SAA9C;AARP,OAAP;AAaD,KAjCqB,CAAtB;;AAkCA,UAAM2E,MAAM,GAAG,MAAM3B,IAAI,CAAC,MAAD,EAASG,IAAT,CAAzB;;AACA,UAAMyB,cAAc,GAAIC,GAAD,IAAS;AAC9B1B,MAAAA,IAAI,CAACzC,aAAL,GAAqBmE,GAArB;AACA7B,MAAAA,IAAI,CAAC,eAAD,EAAkB6B,GAAlB,CAAJ;AACD,KAHD;;AAIA,UAAMC,aAAa,GAAIC,MAAD,IAAY;AAChCA,MAAAA,MAAM,GAAGA,MAAM,CAACnB,MAAP,CAAc1C,OAAd,CAAT;;AACA,UAAI6D,MAAM,CAACC,IAAP,CAAapE,KAAD,IAAW,CAACA,KAAK,CAACuD,IAA9B,CAAJ,EAAyC;AACvCzE,QAAAA,KAAK,CAACM,CAAC,CAAC,WAAD,CAAF,CAAL;AACD,OAFD,MAEO;AACLoD,QAAAA,aAAa,CAACxC,KAAd,GAAsB,KAAtB;AACAoD,QAAAA,gBAAgB;AAChBhB,QAAAA,IAAI,CAAC,aAAD,EAAgB+B,MAAhB,CAAJ;AACD;AACF,KATD;;AAUA,UAAME,QAAQ,GAAG,MAAMjC,IAAI,CAAC,QAAD,EAAWG,IAAX,CAA3B;;AACA,UAAMe,OAAO,GAAG,MAAM;AACpB,UAAIH,EAAJ;;AACA,aAAO,CAAC,CAACA,EAAE,GAAGb,OAAO,CAACtC,KAAd,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCmD,EAAE,CAACmB,SAAH,EAAzC,KAA4D,EAAnE;AACD,KAHD;;AAIA,UAAMC,WAAW,GAAIhB,IAAD,IAAU;AAC5BhB,MAAAA,IAAI,CAAC5C,QAAL,GAAgB4D,IAAI,IAAI,EAAxB;;AACA,UAAIA,IAAJ,EAAU;AACR1F,QAAAA,QAAQ,CAACuF,gBAAD,CAAR;AACD;AACF,KALD;;AAMA,UAAMoB,YAAY,GAAG,MAAM;AACzBC,MAAAA,UAAU,CAAC,MAAM;AACfhC,QAAAA,aAAa,CAACzC,KAAd,GAAsB,KAAtB;AACD,OAFS,CAAV;AAGD,KAJD;;AAKA,UAAM0E,gBAAgB,GAAI1E,KAAD,IAAW;AAClCuC,MAAAA,IAAI,CAACzC,aAAL,GAAqBE,KAArB;AACD,KAFD;;AAGA,UAAM2E,oBAAoB,GAAG,MAAM;AACjC,UAAI1C,KAAK,CAACf,cAAV,EAA0B;AACxB,cAAM0D,MAAM,GAAG;AACb,wBAAc,MAAMnH,YAAY,CAACuB,MAAD,EAAS;AACvC,0BAAcuD,IAAI,CAAC3C,SADoB;AAEvC,mCAAwBiF,MAAD,IAAYtC,IAAI,CAAC3C,SAAL,GAAiBiF,MAFb;AAGvC,oBAAQ,IAH+B;AAIvC,wBAAaC,KAAD,IAAW1C,IAAI,CAAC,gBAAD,EAAmB0C,KAAnB;AAJY,WAAT,EAK7B,IAL6B;AADnB,SAAf;AAQA,eAAOzH,eAAe,CAACI,YAAY,CAACiB,IAAD,EAAO;AACxC,oBAAU,IAD8B;AAExC,mBAASU,CAAC,CAAC,gBAAD,CAF8B;AAGxC,mBAASD,GAAG,CAAC,SAAD;AAH4B,SAAP,EAIhCyF,MAJgC,CAAb,EAIV,CAAC,CAACrH,MAAD,EAAS,CAAC2F,gBAAgB,CAAClD,KAA3B,CAAD,CAJU,CAAtB;AAKD;AACF,KAhBD;;AAiBAxB,IAAAA,SAAS,CAAC;AACR8E,MAAAA,OADQ;AAERiB,MAAAA,WAFQ;AAGRG,MAAAA;AAHQ,KAAD,CAAT;AAKA/G,IAAAA,KAAK,CAAC,MAAMsE,KAAK,CAAC9B,QAAb,EAAuB,MAAMoE,WAAW,CAAChC,IAAI,CAAC5C,QAAN,CAAxC,CAAL;AACAhC,IAAAA,KAAK,CAAC,MAAMsE,KAAK,CAACN,WAAb,EAA2B3B,KAAD,IAAW;AACxChC,MAAAA,MAAM,CAACuE,IAAD,EAAOlD,YAAP,EAAqBW,KAArB,CAAN;AACAuE,MAAAA,WAAW,CAACvE,KAAK,CAACL,QAAP,CAAX;AACD,KAHI,EAGF;AACDoF,MAAAA,IAAI,EAAE,IADL;AAEDC,MAAAA,SAAS,EAAE;AAFV,KAHE,CAAL;AAOA,WAAO,MAAM;AACX,YAAM;AACJlE,QAAAA;AADI,UAEFmB,KAFJ;AAGA,aAAOxE,YAAY,CAACkB,IAAD,EAAO;AACxB,iBAASQ,GAAG,EADY;AAExB,oBAAY4E;AAFY,OAAP,EAGhB;AACDlC,QAAAA,OAAO,EAAE,MAAM;AACb,cAAIsB,EAAJ;;AACA,iBAAO,CAAC1F,YAAY,CAAC,KAAD,EAAQ;AAC1B,qBAAS0B,GAAG,CAAC,QAAD;AADc,WAAR,EAEjB,CAAC1B,YAAY,CAACmB,KAAD,EAAQ;AACtB,0BAAc2D,IAAI,CAACrD,IADG;AAEtB,mCAAwB2F,MAAD,IAAYtC,IAAI,CAACrD,IAAL,GAAY2F,MAFzB;AAGtB,yBAAa,IAHS;AAItB,qBAASzF,CAAC,CAAC,MAAD,CAJY;AAKtB,qBAASsE,KAAK,CAAC1D,KAAN,CAAYd,IALC;AAMtB,2BAAeE,CAAC,CAAC,MAAD,CANM;AAOtB,uBAAW,MAAMoE,OAAO,CAAC,MAAD;AAPF,WAAR,EAQb,IARa,CAAb,EAQO/F,YAAY,CAACmB,KAAD,EAAQ;AAC5B,0BAAc2D,IAAI,CAACjD,GADS;AAE5B,mCAAwBuF,MAAD,IAAYtC,IAAI,CAACjD,GAAL,GAAWuF,MAFlB;AAG5B,yBAAa,IAHe;AAI5B,oBAAQ,KAJoB;AAK5B,qBAASzF,CAAC,CAAC,KAAD,CALkB;AAM5B,qBAASsE,KAAK,CAAC1D,KAAN,CAAYV,GANO;AAO5B,yBAAa2C,KAAK,CAAChB,YAPS;AAQ5B,2BAAe7B,CAAC,CAAC,KAAD,CARY;AAS5B,uBAAW,MAAMoE,OAAO,CAAC,KAAD;AATI,WAAR,EAUnB,IAVmB,CARnB,EAkBOnG,eAAe,CAACI,YAAY,CAACmB,KAAD,EAAQ;AAC5C,wBAAY,IADgC;AAE5C,qBAASQ,CAAC,CAAC,MAAD,CAFkC;AAG5C,uBAAW,CAAC0B,WAHgC;AAI5C,0BAAc+B,QAAQ,CAAC7C,KAJqB;AAK5C,qBAAS0D,KAAK,CAAC1D,KAAN,CAAYL,QALuB;AAM5C,2BAAesC,KAAK,CAACZ,eAAN,IAAyBjC,CAAC,CAAC,MAAD,CANG;AAO5C,uBAAW,MAAMoE,OAAO,CAAC,UAAD,CAPoB;AAQ5C,uBAAW,MAAM;AACfpB,cAAAA,IAAI,CAAC,YAAD,CAAJ;AACAI,cAAAA,aAAa,CAACxC,KAAd,GAAsB,CAACc,WAAvB;AACD;AAX2C,WAAR,EAYnC,IAZmC,CAAb,EAYf,CAAC,CAACvD,MAAD,EAAS0E,KAAK,CAACvB,QAAf,CAAD,CAZe,CAlBtB,EA8BoCjD,YAAY,CAACwB,iBAAD,EAAoB;AACrE,oBAAQgD,KAAK,CAACtB,UADuD;AAErE,oBAAQsB,KAAK,CAACT,UAFuD;AAGrE,qBAASkC,KAAK,CAAC1D,KAAN,CAAYF,aAHgD;AAIrE,qBAASyC,IAAI,CAACzC,aAJuD;AAKrE,uBAAW2C,aAAa,CAACzC,KAL4C;AAMrE,yBAAaiC,KAAK,CAACR,eANkD;AAOrE,4BAAgBQ,KAAK,CAAClB,YAP+C;AAQrE,gCAAoBkB,KAAK,CAACV,gBAR2C;AASrE,sBAAUiD,YAT2D;AAUrE,uBAAW,MAAMhB,OAAO,CAAC,eAAD,CAV6C;AAWrE,uBAAWQ,cAX0D;AAYrE,+BAAoBc,KAAD,IAAW1C,IAAI,CAAC,eAAD,EAAkB0C,KAAlB;AAZmC,WAApB,EAahD,IAbgD,CA9BhD,EA2CO7C,KAAK,CAACpB,UAAN,IAAoBxD,eAAe,CAACI,YAAY,CAACmB,KAAD,EAAQ;AAChE,0BAAc2D,IAAI,CAAC1C,UAD6C;AAEhE,mCAAwBgF,MAAD,IAAYtC,IAAI,CAAC1C,UAAL,GAAkBgF,MAFW;AAGhE,oBAAQ,KAHwD;AAIhE,qBAASnB,KAAK,CAAC1D,KAAN,CAAYH,UAJ2C;AAKhE,qBAAST,CAAC,CAAC,QAAD,CALsD;AAMhE,yBAAa,GANmD;AAOhE,2BAAeA,CAAC,CAAC,QAAD,CAPgD;AAQhE,uBAAW,MAAMoE,OAAO,CAAC,YAAD;AARwC,WAAR,EASvD,IATuD,CAAb,EASnC,CAAC,CAACjG,MAAD,EAAS,CAAC2F,gBAAgB,CAAClD,KAA3B,CAAD,CATmC,CA3C1C,EAoD6C,CAACmD,EAAE,GAAGd,KAAK,CAACR,OAAZ,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCsB,EAAE,CAAC8B,IAAH,CAAQ5C,KAAR,CApDrF,CAFiB,CAAb,EAsDmGsC,oBAAoB,EAtDvH,EAsD2HtH,eAAe,CAACI,YAAY,CAAC,KAAD,EAAQ;AACpK,qBAAS0B,GAAG,CAAC,SAAD;AADwJ,WAAR,EAE3J,CAAC1B,YAAY,CAACsB,MAAD,EAAS;AACvB,qBAAS,IADc;AAEvB,qBAAS,IAFc;AAGvB,oBAAQ,QAHe;AAIvB,oBAAQkD,KAAK,CAACd,cAAN,IAAwB/B,CAAC,CAAC,MAAD,CAJV;AAKvB,qBAASD,GAAG,CAAC,QAAD,CALW;AAMvB,uBAAW8C,KAAK,CAAC5B,QANM;AAOvB,0BAAc;AAPS,WAAT,EAQb,IARa,CAAb,EAQO4B,KAAK,CAACrB,UAAN,IAAoBnD,YAAY,CAACsB,MAAD,EAAS;AACjD,qBAAS,IADwC;AAEjD,qBAAS,IAFwC;AAGjD,qBAASI,GAAG,CAAC,QAAD,CAHqC;AAIjD,uBAAW8C,KAAK,CAAC1B,UAJgC;AAKjD,oBAAQ0B,KAAK,CAACX,gBAAN,IAA0BlC,CAAC,CAAC,QAAD,CALc;AAMjD,uBAAWiF;AANsC,WAAT,EAOvC,IAPuC,CARvC,CAF2J,CAAb,EAiBrI,CAAC,CAAC9G,MAAD,EAAS,CAAC2F,gBAAgB,CAAClD,KAA3B,CAAD,CAjBqI,CAtD1I,EAuE2CvC,YAAY,CAACoB,KAAD,EAAQ;AACpE,oBAAQ2D,aAAa,CAACxC,KAD8C;AAEpE,6BAAkB6E,MAAD,IAAYrC,aAAa,CAACxC,KAAd,GAAsB6E,MAFiB;AAGpE,qBAAS,IAH2D;AAIpE,wBAAY,MAJwD;AAKpE,wBAAY,QALwD;AAMpE,0BAAc;AANsD,WAAR,EAO3D;AACDhD,YAAAA,OAAO,EAAE,MAAM,CAACpE,YAAY,CAACgB,IAAD,EAAO;AACjC,qBAAO6D,OAD0B;AAEjC,uBAASC,IAAI,CAAC5C,QAFmB;AAGjC,yBAAW,CAAC+C,cAAc,CAAC1C,KAHM;AAIjC,0BAAYiC,KAAK,CAAC9B,QAJe;AAKjC,oCAAsB8B,KAAK,CAACP,sBALK;AAMjC,2BAAawC,aANoB;AAOjC,0BAAY,MAAM;AAChB1B,gBAAAA,aAAa,CAACxC,KAAd,GAAsB,KAAtB;AACD;AATgC,aAAP,EAUzB,IAVyB,CAAb;AADd,WAP2D,CAvEvD,CAAP;AA2FD;AA9FA,OAHgB,CAAnB;AAmGD,KAvGD;AAwGD;;AAxPiC,CAAD,CAAnC;AA0PA,SACEgC,aAAa,IAAIH,OADnB","sourcesContent":["import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, nextTick, reactive, defineComponent } from \"vue\";\nimport { extend, isObject, isMobile, truthProp, numericProp, makeArrayProp, makeNumericProp, createNamespace } from \"../utils\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Area } from \"../area\";\nimport { Cell } from \"../cell\";\nimport { Form } from \"../form\";\nimport { Field } from \"../field\";\nimport { Popup } from \"../popup\";\nimport { Toast } from \"../toast\";\nimport { Button } from \"../button\";\nimport { Switch } from \"../switch\";\nimport AddressEditDetail from \"./AddressEditDetail\";\nconst [name, bem, t] = createNamespace(\"address-edit\");\nconst DEFAULT_DATA = {\n  name: \"\",\n  tel: \"\",\n  city: \"\",\n  county: \"\",\n  country: \"\",\n  province: \"\",\n  areaCode: \"\",\n  isDefault: false,\n  postalCode: \"\",\n  addressDetail: \"\"\n};\nconst isPostal = (value) => /^\\d{6}$/.test(value);\nconst addressEditProps = {\n  areaList: Object,\n  isSaving: Boolean,\n  isDeleting: Boolean,\n  validator: Function,\n  showArea: truthProp,\n  showDetail: truthProp,\n  showDelete: Boolean,\n  showPostal: Boolean,\n  disableArea: Boolean,\n  searchResult: Array,\n  telMaxlength: numericProp,\n  showSetDefault: Boolean,\n  saveButtonText: String,\n  areaPlaceholder: String,\n  deleteButtonText: String,\n  showSearchResult: Boolean,\n  detailRows: makeNumericProp(1),\n  detailMaxlength: makeNumericProp(200),\n  areaColumnsPlaceholder: makeArrayProp(),\n  addressInfo: {\n    type: Object,\n    default: () => extend({}, DEFAULT_DATA)\n  },\n  telValidator: {\n    type: Function,\n    default: isMobile\n  },\n  postalValidator: {\n    type: Function,\n    default: isPostal\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: addressEditProps,\n  emits: [\"save\", \"focus\", \"delete\", \"click-area\", \"change-area\", \"change-detail\", \"select-search\", \"change-default\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const areaRef = ref();\n    const data = reactive({});\n    const showAreaPopup = ref(false);\n    const detailFocused = ref(false);\n    const areaListLoaded = computed(() => isObject(props.areaList) && Object.keys(props.areaList).length);\n    const areaText = computed(() => {\n      const {\n        country,\n        province,\n        city,\n        county,\n        areaCode\n      } = data;\n      if (areaCode) {\n        const arr = [country, province, city, county];\n        if (province && province === city) {\n          arr.splice(1, 1);\n        }\n        return arr.filter(Boolean).join(\"/\");\n      }\n      return \"\";\n    });\n    const hideBottomFields = computed(() => {\n      var _a;\n      return ((_a = props.searchResult) == null ? void 0 : _a.length) && detailFocused.value;\n    });\n    const assignAreaValues = () => {\n      if (areaRef.value) {\n        const detail = areaRef.value.getArea();\n        detail.areaCode = detail.code;\n        delete detail.code;\n        extend(data, detail);\n      }\n    };\n    const onFocus = (key) => {\n      detailFocused.value = key === \"addressDetail\";\n      emit(\"focus\", key);\n    };\n    const rules = computed(() => {\n      const {\n        validator,\n        telValidator,\n        postalValidator\n      } = props;\n      const makeRule = (name2, emptyMessage) => ({\n        validator: (value) => {\n          if (validator) {\n            const message = validator(name2, value);\n            if (message) {\n              return message;\n            }\n          }\n          if (!value) {\n            return emptyMessage;\n          }\n          return true;\n        }\n      });\n      return {\n        name: [makeRule(\"name\", t(\"nameEmpty\"))],\n        tel: [makeRule(\"tel\", t(\"telInvalid\")), {\n          validator: telValidator,\n          message: t(\"telInvalid\")\n        }],\n        areaCode: [makeRule(\"areaCode\", t(\"areaEmpty\"))],\n        addressDetail: [makeRule(\"addressDetail\", t(\"addressEmpty\"))],\n        postalCode: [makeRule(\"addressDetail\", t(\"postalEmpty\")), {\n          validator: postalValidator,\n          message: t(\"postalEmpty\")\n        }]\n      };\n    });\n    const onSave = () => emit(\"save\", data);\n    const onChangeDetail = (val) => {\n      data.addressDetail = val;\n      emit(\"change-detail\", val);\n    };\n    const onAreaConfirm = (values) => {\n      values = values.filter(Boolean);\n      if (values.some((value) => !value.code)) {\n        Toast(t(\"areaEmpty\"));\n      } else {\n        showAreaPopup.value = false;\n        assignAreaValues();\n        emit(\"change-area\", values);\n      }\n    };\n    const onDelete = () => emit(\"delete\", data);\n    const getArea = () => {\n      var _a;\n      return ((_a = areaRef.value) == null ? void 0 : _a.getValues()) || [];\n    };\n    const setAreaCode = (code) => {\n      data.areaCode = code || \"\";\n      if (code) {\n        nextTick(assignAreaValues);\n      }\n    };\n    const onDetailBlur = () => {\n      setTimeout(() => {\n        detailFocused.value = false;\n      });\n    };\n    const setAddressDetail = (value) => {\n      data.addressDetail = value;\n    };\n    const renderSetDefaultCell = () => {\n      if (props.showSetDefault) {\n        const slots2 = {\n          \"right-icon\": () => _createVNode(Switch, {\n            \"modelValue\": data.isDefault,\n            \"onUpdate:modelValue\": ($event) => data.isDefault = $event,\n            \"size\": \"24\",\n            \"onChange\": (event) => emit(\"change-default\", event)\n          }, null)\n        };\n        return _withDirectives(_createVNode(Cell, {\n          \"center\": true,\n          \"title\": t(\"defaultAddress\"),\n          \"class\": bem(\"default\")\n        }, slots2), [[_vShow, !hideBottomFields.value]]);\n      }\n    };\n    useExpose({\n      getArea,\n      setAreaCode,\n      setAddressDetail\n    });\n    watch(() => props.areaList, () => setAreaCode(data.areaCode));\n    watch(() => props.addressInfo, (value) => {\n      extend(data, DEFAULT_DATA, value);\n      setAreaCode(value.areaCode);\n    }, {\n      deep: true,\n      immediate: true\n    });\n    return () => {\n      const {\n        disableArea\n      } = props;\n      return _createVNode(Form, {\n        \"class\": bem(),\n        \"onSubmit\": onSave\n      }, {\n        default: () => {\n          var _a;\n          return [_createVNode(\"div\", {\n            \"class\": bem(\"fields\")\n          }, [_createVNode(Field, {\n            \"modelValue\": data.name,\n            \"onUpdate:modelValue\": ($event) => data.name = $event,\n            \"clearable\": true,\n            \"label\": t(\"name\"),\n            \"rules\": rules.value.name,\n            \"placeholder\": t(\"name\"),\n            \"onFocus\": () => onFocus(\"name\")\n          }, null), _createVNode(Field, {\n            \"modelValue\": data.tel,\n            \"onUpdate:modelValue\": ($event) => data.tel = $event,\n            \"clearable\": true,\n            \"type\": \"tel\",\n            \"label\": t(\"tel\"),\n            \"rules\": rules.value.tel,\n            \"maxlength\": props.telMaxlength,\n            \"placeholder\": t(\"tel\"),\n            \"onFocus\": () => onFocus(\"tel\")\n          }, null), _withDirectives(_createVNode(Field, {\n            \"readonly\": true,\n            \"label\": t(\"area\"),\n            \"is-link\": !disableArea,\n            \"modelValue\": areaText.value,\n            \"rules\": rules.value.areaCode,\n            \"placeholder\": props.areaPlaceholder || t(\"area\"),\n            \"onFocus\": () => onFocus(\"areaCode\"),\n            \"onClick\": () => {\n              emit(\"click-area\");\n              showAreaPopup.value = !disableArea;\n            }\n          }, null), [[_vShow, props.showArea]]), _createVNode(AddressEditDetail, {\n            \"show\": props.showDetail,\n            \"rows\": props.detailRows,\n            \"rules\": rules.value.addressDetail,\n            \"value\": data.addressDetail,\n            \"focused\": detailFocused.value,\n            \"maxlength\": props.detailMaxlength,\n            \"searchResult\": props.searchResult,\n            \"showSearchResult\": props.showSearchResult,\n            \"onBlur\": onDetailBlur,\n            \"onFocus\": () => onFocus(\"addressDetail\"),\n            \"onInput\": onChangeDetail,\n            \"onSelect-search\": (event) => emit(\"select-search\", event)\n          }, null), props.showPostal && _withDirectives(_createVNode(Field, {\n            \"modelValue\": data.postalCode,\n            \"onUpdate:modelValue\": ($event) => data.postalCode = $event,\n            \"type\": \"tel\",\n            \"rules\": rules.value.postalCode,\n            \"label\": t(\"postal\"),\n            \"maxlength\": \"6\",\n            \"placeholder\": t(\"postal\"),\n            \"onFocus\": () => onFocus(\"postalCode\")\n          }, null), [[_vShow, !hideBottomFields.value]]), (_a = slots.default) == null ? void 0 : _a.call(slots)]), renderSetDefaultCell(), _withDirectives(_createVNode(\"div\", {\n            \"class\": bem(\"buttons\")\n          }, [_createVNode(Button, {\n            \"block\": true,\n            \"round\": true,\n            \"type\": \"danger\",\n            \"text\": props.saveButtonText || t(\"save\"),\n            \"class\": bem(\"button\"),\n            \"loading\": props.isSaving,\n            \"nativeType\": \"submit\"\n          }, null), props.showDelete && _createVNode(Button, {\n            \"block\": true,\n            \"round\": true,\n            \"class\": bem(\"button\"),\n            \"loading\": props.isDeleting,\n            \"text\": props.deleteButtonText || t(\"delete\"),\n            \"onClick\": onDelete\n          }, null)]), [[_vShow, !hideBottomFields.value]]), _createVNode(Popup, {\n            \"show\": showAreaPopup.value,\n            \"onUpdate:show\": ($event) => showAreaPopup.value = $event,\n            \"round\": true,\n            \"teleport\": \"body\",\n            \"position\": \"bottom\",\n            \"lazyRender\": false\n          }, {\n            default: () => [_createVNode(Area, {\n              \"ref\": areaRef,\n              \"value\": data.areaCode,\n              \"loading\": !areaListLoaded.value,\n              \"areaList\": props.areaList,\n              \"columnsPlaceholder\": props.areaColumnsPlaceholder,\n              \"onConfirm\": onAreaConfirm,\n              \"onCancel\": () => {\n                showAreaPopup.value = false;\n              }\n            }, null)]\n          })];\n        }\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}