{"ast":null,"code":"import { extend } from \"../utils\";\nimport { pickerSharedProps } from \"../picker/Picker\";\nconst sharedProps = extend({}, pickerSharedProps, {\n  filter: Function,\n  columnsOrder: Array,\n  formatter: {\n    type: Function,\n    default: (type, value) => value\n  }\n});\nconst pickerInheritKeys = Object.keys(pickerSharedProps);\n\nfunction times(n, iteratee) {\n  if (n < 0) {\n    return [];\n  }\n\n  const result = Array(n);\n  let index = -1;\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nfunction getTrueValue(value) {\n  if (!value) {\n    return 0;\n  }\n\n  while (Number.isNaN(parseInt(value, 10))) {\n    if (value.length > 1) {\n      value = value.slice(1);\n    } else {\n      return 0;\n    }\n  }\n\n  return parseInt(value, 10);\n}\n\nconst getMonthEndDay = (year, month) => 32 - new Date(year, month - 1, 32).getDate();\n\nconst proxyPickerMethods = (picker, callback) => {\n  const methods = [\"setValues\", \"setIndexes\", \"setColumnIndex\", \"setColumnValue\"];\n  return new Proxy(picker, {\n    get: (target, prop) => {\n      if (methods.includes(prop)) {\n        return (...args) => {\n          target[prop](...args);\n          callback();\n        };\n      }\n\n      return target[prop];\n    }\n  });\n};\n\nexport { getMonthEndDay, getTrueValue, pickerInheritKeys, proxyPickerMethods, sharedProps, times };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/datetime-picker/utils.js"],"names":["extend","pickerSharedProps","sharedProps","filter","Function","columnsOrder","Array","formatter","type","default","value","pickerInheritKeys","Object","keys","times","n","iteratee","result","index","getTrueValue","Number","isNaN","parseInt","length","slice","getMonthEndDay","year","month","Date","getDate","proxyPickerMethods","picker","callback","methods","Proxy","get","target","prop","includes","args"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,MAAMC,WAAW,GAAGF,MAAM,CAAC,EAAD,EAAKC,iBAAL,EAAwB;AAChDE,EAAAA,MAAM,EAAEC,QADwC;AAEhDC,EAAAA,YAAY,EAAEC,KAFkC;AAGhDC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAEJ,QADG;AAETK,IAAAA,OAAO,EAAE,CAACD,IAAD,EAAOE,KAAP,KAAiBA;AAFjB;AAHqC,CAAxB,CAA1B;AAQA,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYZ,iBAAZ,CAA1B;;AACA,SAASa,KAAT,CAAeC,CAAf,EAAkBC,QAAlB,EAA4B;AAC1B,MAAID,CAAC,GAAG,CAAR,EAAW;AACT,WAAO,EAAP;AACD;;AACD,QAAME,MAAM,GAAGX,KAAK,CAACS,CAAD,CAApB;AACA,MAAIG,KAAK,GAAG,CAAC,CAAb;;AACA,SAAO,EAAEA,KAAF,GAAUH,CAAjB,EAAoB;AAClBE,IAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBF,QAAQ,CAACE,KAAD,CAAxB;AACD;;AACD,SAAOD,MAAP;AACD;;AACD,SAASE,YAAT,CAAsBT,KAAtB,EAA6B;AAC3B,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,CAAP;AACD;;AACD,SAAOU,MAAM,CAACC,KAAP,CAAaC,QAAQ,CAACZ,KAAD,EAAQ,EAAR,CAArB,CAAP,EAA0C;AACxC,QAAIA,KAAK,CAACa,MAAN,GAAe,CAAnB,EAAsB;AACpBb,MAAAA,KAAK,GAAGA,KAAK,CAACc,KAAN,CAAY,CAAZ,CAAR;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF;;AACD,SAAOF,QAAQ,CAACZ,KAAD,EAAQ,EAAR,CAAf;AACD;;AACD,MAAMe,cAAc,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB,KAAK,IAAIC,IAAJ,CAASF,IAAT,EAAeC,KAAK,GAAG,CAAvB,EAA0B,EAA1B,EAA8BE,OAA9B,EAA7C;;AACA,MAAMC,kBAAkB,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC/C,QAAMC,OAAO,GAAG,CACd,WADc,EAEd,YAFc,EAGd,gBAHc,EAId,gBAJc,CAAhB;AAMA,SAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;AACvBI,IAAAA,GAAG,EAAE,CAACC,MAAD,EAASC,IAAT,KAAkB;AACrB,UAAIJ,OAAO,CAACK,QAAR,CAAiBD,IAAjB,CAAJ,EAA4B;AAC1B,eAAO,CAAC,GAAGE,IAAJ,KAAa;AAClBH,UAAAA,MAAM,CAACC,IAAD,CAAN,CAAa,GAAGE,IAAhB;AACAP,UAAAA,QAAQ;AACT,SAHD;AAID;;AACD,aAAOI,MAAM,CAACC,IAAD,CAAb;AACD;AATsB,GAAlB,CAAP;AAWD,CAlBD;;AAmBA,SACEZ,cADF,EAEEN,YAFF,EAGER,iBAHF,EAIEmB,kBAJF,EAKE5B,WALF,EAMEY,KANF","sourcesContent":["import { extend } from \"../utils\";\nimport { pickerSharedProps } from \"../picker/Picker\";\nconst sharedProps = extend({}, pickerSharedProps, {\n  filter: Function,\n  columnsOrder: Array,\n  formatter: {\n    type: Function,\n    default: (type, value) => value\n  }\n});\nconst pickerInheritKeys = Object.keys(pickerSharedProps);\nfunction times(n, iteratee) {\n  if (n < 0) {\n    return [];\n  }\n  const result = Array(n);\n  let index = -1;\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\nfunction getTrueValue(value) {\n  if (!value) {\n    return 0;\n  }\n  while (Number.isNaN(parseInt(value, 10))) {\n    if (value.length > 1) {\n      value = value.slice(1);\n    } else {\n      return 0;\n    }\n  }\n  return parseInt(value, 10);\n}\nconst getMonthEndDay = (year, month) => 32 - new Date(year, month - 1, 32).getDate();\nconst proxyPickerMethods = (picker, callback) => {\n  const methods = [\n    \"setValues\",\n    \"setIndexes\",\n    \"setColumnIndex\",\n    \"setColumnValue\"\n  ];\n  return new Proxy(picker, {\n    get: (target, prop) => {\n      if (methods.includes(prop)) {\n        return (...args) => {\n          target[prop](...args);\n          callback();\n        };\n      }\n      return target[prop];\n    }\n  });\n};\nexport {\n  getMonthEndDay,\n  getTrueValue,\n  pickerInheritKeys,\n  proxyPickerMethods,\n  sharedProps,\n  times\n};\n"]},"metadata":{},"sourceType":"module"}