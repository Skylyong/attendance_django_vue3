{"ast":null,"code":"import { onMounted, ref } from 'vue';\n/**\n * Similar with `useLock`, but this hook will always execute last value.\n * When set to `true`, it will keep `true` for a short time even if `false` is set.\n */\n\nexport default function useDelayReset() {\n  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var bool = ref(false);\n  var delay;\n\n  var cancelLatest = function cancelLatest() {\n    window.clearTimeout(delay);\n  };\n\n  onMounted(function () {\n    cancelLatest();\n  });\n\n  var delaySetBool = function delaySetBool(value, callback) {\n    cancelLatest();\n    delay = window.setTimeout(function () {\n      bool.value = value;\n\n      if (callback) {\n        callback();\n      }\n    }, timeout);\n  };\n\n  return [bool, delaySetBool, cancelLatest];\n}","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-select/hooks/useDelayReset.js"],"names":["onMounted","ref","useDelayReset","timeout","arguments","length","undefined","bool","delay","cancelLatest","window","clearTimeout","delaySetBool","value","callback","setTimeout"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,KAA/B;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIG,IAAI,GAAGN,GAAG,CAAC,KAAD,CAAd;AACA,MAAIO,KAAJ;;AAEA,MAAIC,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzCC,IAAAA,MAAM,CAACC,YAAP,CAAoBH,KAApB;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,YAAY;AACpBS,IAAAA,YAAY;AACb,GAFQ,CAAT;;AAIA,MAAIG,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AACxDL,IAAAA,YAAY;AACZD,IAAAA,KAAK,GAAGE,MAAM,CAACK,UAAP,CAAkB,YAAY;AACpCR,MAAAA,IAAI,CAACM,KAAL,GAAaA,KAAb;;AAEA,UAAIC,QAAJ,EAAc;AACZA,QAAAA,QAAQ;AACT;AACF,KANO,EAMLX,OANK,CAAR;AAOD,GATD;;AAWA,SAAO,CAACI,IAAD,EAAOK,YAAP,EAAqBH,YAArB,CAAP;AACD","sourcesContent":["import { onMounted, ref } from 'vue';\n/**\n * Similar with `useLock`, but this hook will always execute last value.\n * When set to `true`, it will keep `true` for a short time even if `false` is set.\n */\n\nexport default function useDelayReset() {\n  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var bool = ref(false);\n  var delay;\n\n  var cancelLatest = function cancelLatest() {\n    window.clearTimeout(delay);\n  };\n\n  onMounted(function () {\n    cancelLatest();\n  });\n\n  var delaySetBool = function delaySetBool(value, callback) {\n    cancelLatest();\n    delay = window.setTimeout(function () {\n      bool.value = value;\n\n      if (callback) {\n        callback();\n      }\n    }, timeout);\n  };\n\n  return [bool, delaySetBool, cancelLatest];\n}"]},"metadata":{},"sourceType":"module"}