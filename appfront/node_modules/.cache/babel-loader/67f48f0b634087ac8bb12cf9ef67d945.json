{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { Transition, defineComponent } from \"vue\";\nimport { truthProp, makeStringProp, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { Icon } from \"../icon\";\nconst [name, bem] = createNamespace(\"tag\");\nconst tagProps = {\n  size: String,\n  mark: Boolean,\n  show: truthProp,\n  type: makeStringProp(\"default\"),\n  color: String,\n  plain: Boolean,\n  round: Boolean,\n  textColor: String,\n  closeable: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: tagProps,\n  emits: [\"close\"],\n\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const onClose = event => {\n      event.stopPropagation();\n      emit(\"close\", event);\n    };\n\n    const getStyle = () => {\n      if (props.plain) {\n        return {\n          color: props.textColor || props.color,\n          borderColor: props.color\n        };\n      }\n\n      return {\n        color: props.textColor,\n        background: props.color\n      };\n    };\n\n    const renderTag = () => {\n      var _a;\n\n      const {\n        type,\n        mark,\n        plain,\n        round,\n        size,\n        closeable\n      } = props;\n      const classes = {\n        mark,\n        plain,\n        round\n      };\n\n      if (size) {\n        classes[size] = size;\n      }\n\n      const CloseIcon = closeable && _createVNode(Icon, {\n        \"name\": \"cross\",\n        \"class\": [bem(\"close\"), HAPTICS_FEEDBACK],\n        \"onClick\": onClose\n      }, null);\n\n      return _createVNode(\"span\", {\n        \"style\": getStyle(),\n        \"class\": bem([classes, type])\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots), CloseIcon]);\n    };\n\n    return () => _createVNode(Transition, {\n      \"name\": props.closeable ? \"van-fade\" : void 0\n    }, {\n      default: () => [props.show ? renderTag() : null]\n    });\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/tag/Tag.js"],"names":["createVNode","_createVNode","Transition","defineComponent","truthProp","makeStringProp","createNamespace","HAPTICS_FEEDBACK","Icon","name","bem","tagProps","size","String","mark","Boolean","show","type","color","plain","round","textColor","closeable","stdin_default","props","emits","setup","slots","emit","onClose","event","stopPropagation","getStyle","borderColor","background","renderTag","_a","classes","CloseIcon","default","call"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { Transition, defineComponent } from \"vue\";\nimport { truthProp, makeStringProp, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { Icon } from \"../icon\";\nconst [name, bem] = createNamespace(\"tag\");\nconst tagProps = {\n  size: String,\n  mark: Boolean,\n  show: truthProp,\n  type: makeStringProp(\"default\"),\n  color: String,\n  plain: Boolean,\n  round: Boolean,\n  textColor: String,\n  closeable: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: tagProps,\n  emits: [\"close\"],\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const onClose = (event) => {\n      event.stopPropagation();\n      emit(\"close\", event);\n    };\n    const getStyle = () => {\n      if (props.plain) {\n        return {\n          color: props.textColor || props.color,\n          borderColor: props.color\n        };\n      }\n      return {\n        color: props.textColor,\n        background: props.color\n      };\n    };\n    const renderTag = () => {\n      var _a;\n      const {\n        type,\n        mark,\n        plain,\n        round,\n        size,\n        closeable\n      } = props;\n      const classes = {\n        mark,\n        plain,\n        round\n      };\n      if (size) {\n        classes[size] = size;\n      }\n      const CloseIcon = closeable && _createVNode(Icon, {\n        \"name\": \"cross\",\n        \"class\": [bem(\"close\"), HAPTICS_FEEDBACK],\n        \"onClick\": onClose\n      }, null);\n      return _createVNode(\"span\", {\n        \"style\": getStyle(),\n        \"class\": bem([classes, type])\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots), CloseIcon]);\n    };\n    return () => _createVNode(Transition, {\n      \"name\": props.closeable ? \"van-fade\" : void 0\n    }, {\n      default: () => [props.show ? renderTag() : null]\n    });\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}