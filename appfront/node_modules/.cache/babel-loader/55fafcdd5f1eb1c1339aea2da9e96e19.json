{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, onMounted, defineComponent } from \"vue\";\nimport { numericProp, makeRequiredProp, createNamespace } from \"../utils\";\nimport { Swipe } from \"../swipe\";\nconst [name, bem] = createNamespace(\"tabs\");\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    count: makeRequiredProp(Number),\n    inited: Boolean,\n    animated: Boolean,\n    duration: makeRequiredProp(numericProp),\n    swipeable: Boolean,\n    lazyRender: Boolean,\n    currentIndex: makeRequiredProp(Number)\n  },\n  emits: [\"change\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const swipeRef = ref();\n\n    const onChange = index => emit(\"change\", index);\n\n    const renderChildren = () => {\n      var _a;\n\n      const Content = (_a = slots.default) == null ? void 0 : _a.call(slots);\n\n      if (props.animated || props.swipeable) {\n        return _createVNode(Swipe, {\n          \"ref\": swipeRef,\n          \"loop\": false,\n          \"class\": bem(\"track\"),\n          \"duration\": +props.duration * 1e3,\n          \"touchable\": props.swipeable,\n          \"lazyRender\": props.lazyRender,\n          \"showIndicators\": false,\n          \"onChange\": onChange\n        }, {\n          default: () => [Content]\n        });\n      }\n\n      return Content;\n    };\n\n    const swipeToCurrentTab = index => {\n      const swipe = swipeRef.value;\n\n      if (swipe && swipe.state.active !== index) {\n        swipe.swipeTo(index, {\n          immediate: !props.inited\n        });\n      }\n    };\n\n    watch(() => props.currentIndex, swipeToCurrentTab);\n    onMounted(() => {\n      swipeToCurrentTab(props.currentIndex);\n    });\n    return () => _createVNode(\"div\", {\n      \"class\": bem(\"content\", {\n        animated: props.animated || props.swipeable\n      })\n    }, [renderChildren()]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/tabs/TabsContent.js"],"names":["createVNode","_createVNode","ref","watch","onMounted","defineComponent","numericProp","makeRequiredProp","createNamespace","Swipe","name","bem","stdin_default","props","count","Number","inited","Boolean","animated","duration","swipeable","lazyRender","currentIndex","emits","setup","emit","slots","swipeRef","onChange","index","renderChildren","_a","Content","default","call","swipeToCurrentTab","swipe","value","state","active","swipeTo","immediate"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, onMounted, defineComponent } from \"vue\";\nimport { numericProp, makeRequiredProp, createNamespace } from \"../utils\";\nimport { Swipe } from \"../swipe\";\nconst [name, bem] = createNamespace(\"tabs\");\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    count: makeRequiredProp(Number),\n    inited: Boolean,\n    animated: Boolean,\n    duration: makeRequiredProp(numericProp),\n    swipeable: Boolean,\n    lazyRender: Boolean,\n    currentIndex: makeRequiredProp(Number)\n  },\n  emits: [\"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const swipeRef = ref();\n    const onChange = (index) => emit(\"change\", index);\n    const renderChildren = () => {\n      var _a;\n      const Content = (_a = slots.default) == null ? void 0 : _a.call(slots);\n      if (props.animated || props.swipeable) {\n        return _createVNode(Swipe, {\n          \"ref\": swipeRef,\n          \"loop\": false,\n          \"class\": bem(\"track\"),\n          \"duration\": +props.duration * 1e3,\n          \"touchable\": props.swipeable,\n          \"lazyRender\": props.lazyRender,\n          \"showIndicators\": false,\n          \"onChange\": onChange\n        }, {\n          default: () => [Content]\n        });\n      }\n      return Content;\n    };\n    const swipeToCurrentTab = (index) => {\n      const swipe = swipeRef.value;\n      if (swipe && swipe.state.active !== index) {\n        swipe.swipeTo(index, {\n          immediate: !props.inited\n        });\n      }\n    };\n    watch(() => props.currentIndex, swipeToCurrentTab);\n    onMounted(() => {\n      swipeToCurrentTab(props.currentIndex);\n    });\n    return () => _createVNode(\"div\", {\n      \"class\": bem(\"content\", {\n        animated: props.animated || props.swipeable\n      })\n    }, [renderChildren()]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}