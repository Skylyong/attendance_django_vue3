{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport json2mq from '../../_util/json2mq';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { cloneElement } from '../../_util/vnode';\nimport InnerSlider from './inner-slider';\nimport defaultProps from './default-props';\nimport { canUseDOM } from './utils/innerSliderUtils';\nimport { getSlot } from '../../_util/props-util';\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Slider',\n  mixins: [BaseMixin],\n  inheritAttrs: false,\n  props: _extends({}, defaultProps),\n  data: function data() {\n    this._responsiveMediaHandlers = [];\n    return {\n      breakpoint: null\n    };\n  },\n  // handles responsive breakpoints\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    if (this.responsive) {\n      var breakpoints = this.responsive.map(function (breakpt) {\n        return breakpt.breakpoint;\n      }); // sort them in increasing order of their numerical value\n\n      breakpoints.sort(function (x, y) {\n        return x - y;\n      });\n      breakpoints.forEach(function (breakpoint, index) {\n        // media query for each breakpoint\n        var bQuery;\n\n        if (index === 0) {\n          bQuery = json2mq({\n            minWidth: 0,\n            maxWidth: breakpoint\n          });\n        } else {\n          bQuery = json2mq({\n            minWidth: breakpoints[index - 1] + 1,\n            maxWidth: breakpoint\n          });\n        } // when not using server side rendering\n\n\n        canUseDOM() && _this.media(bQuery, function () {\n          _this.setState({\n            breakpoint: breakpoint\n          });\n        });\n      }); // Register media query for full screen. Need to support resize from small to large\n      // convert javascript object to media query string\n\n      var query = json2mq({\n        minWidth: breakpoints.slice(-1)[0]\n      });\n      canUseDOM() && this.media(query, function () {\n        _this.setState({\n          breakpoint: null\n        });\n      });\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this._responsiveMediaHandlers.forEach(function (obj) {\n      obj.mql.removeListener(obj.listener);\n    });\n  },\n  methods: {\n    innerSliderRefHandler: function innerSliderRefHandler(ref) {\n      this.innerSlider = ref;\n    },\n    media: function media(query, handler) {\n      // javascript handler for  css media query\n      var mql = window.matchMedia(query);\n\n      var listener = function listener(_ref) {\n        var matches = _ref.matches;\n\n        if (matches) {\n          handler();\n        }\n      };\n\n      mql.addListener(listener);\n      listener(mql);\n\n      this._responsiveMediaHandlers.push({\n        mql: mql,\n        query: query,\n        listener: listener\n      });\n    },\n    slickPrev: function slickPrev() {\n      this.innerSlider.slickPrev();\n    },\n    slickNext: function slickNext() {\n      this.innerSlider.slickNext();\n    },\n    slickGoTo: function slickGoTo(slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.innerSlider.slickGoTo(slide, dontAnimate);\n    },\n    slickPause: function slickPause() {\n      this.innerSlider.pause('paused');\n    },\n    slickPlay: function slickPlay() {\n      this.innerSlider.handleAutoPlay('play');\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _a;\n\n    var settings;\n    var newProps;\n\n    if (this.breakpoint) {\n      newProps = this.responsive.filter(function (resp) {\n        return resp.breakpoint === _this2.breakpoint;\n      });\n      settings = newProps[0].settings === 'unslick' ? 'unslick' : _extends(_extends({}, this.$props), newProps[0].settings);\n    } else {\n      settings = _extends({}, this.$props);\n    } // force scrolling by one if centerMode is on\n\n\n    if (settings.centerMode) {\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn(\"slidesToScroll should be equal to 1 in centerMode, you are using \".concat(settings.slidesToScroll));\n      }\n\n      settings.slidesToScroll = 1;\n    } // force showing one slide and scrolling by one if the fade mode is on\n\n\n    if (settings.fade) {\n      if (settings.slidesToShow > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn(\"slidesToShow should be equal to 1 when fade is true, you're using \".concat(settings.slidesToShow));\n      }\n\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn(\"slidesToScroll should be equal to 1 when fade is true, you're using \".concat(settings.slidesToScroll));\n      }\n\n      settings.slidesToShow = 1;\n      settings.slidesToScroll = 1;\n    } // makes sure that children is an array, even when there is only 1 child\n\n\n    var children = getSlot(this) || []; // Children may contain false or null, so we should filter them\n    // children may also contain string filled with spaces (in certain cases where we use jsx strings)\n\n    children = children.filter(function (child) {\n      if (typeof child === 'string') {\n        return !!child.trim();\n      }\n\n      return !!child;\n    }); // rows and slidesPerRow logic is handled here\n\n    if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {\n      console.warn(\"variableWidth is not supported in case of rows > 1 or slidesPerRow > 1\");\n      settings.variableWidth = false;\n    }\n\n    var newChildren = [];\n    var currentWidth = null;\n\n    for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {\n      var newSlide = [];\n\n      for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {\n        var row = [];\n\n        for (var k = j; k < j + settings.slidesPerRow; k += 1) {\n          if (settings.variableWidth && ((_a = children[k].props) === null || _a === void 0 ? void 0 : _a.style)) {\n            currentWidth = children[k].props.style.width;\n          }\n\n          if (k >= children.length) break;\n          row.push(cloneElement(children[k], {\n            key: 100 * i + 10 * j + k,\n            tabindex: -1,\n            style: {\n              width: \"\".concat(100 / settings.slidesPerRow, \"%\"),\n              display: 'inline-block'\n            }\n          }));\n        }\n\n        newSlide.push(_createVNode(\"div\", {\n          \"key\": 10 * i + j\n        }, [row]));\n      }\n\n      if (settings.variableWidth) {\n        newChildren.push(_createVNode(\"div\", {\n          \"key\": i,\n          \"style\": {\n            width: currentWidth\n          }\n        }, [newSlide]));\n      } else {\n        newChildren.push(_createVNode(\"div\", {\n          \"key\": i\n        }, [newSlide]));\n      }\n    }\n\n    if (settings === 'unslick') {\n      var className = 'regular slider ' + (this.className || '');\n      return _createVNode(\"div\", {\n        \"class\": className\n      }, [newChildren]);\n    } else if (newChildren.length <= settings.slidesToShow) {\n      settings.unslick = true;\n    }\n\n    var sliderProps = _extends(_extends(_extends({}, this.$attrs), settings), {\n      children: newChildren,\n      ref: this.innerSliderRefHandler\n    });\n\n    return _createVNode(InnerSlider, _objectSpread(_objectSpread({}, sliderProps), {}, {\n      \"__propsSymbol__\": []\n    }), this.$slots);\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/vc-slick/src/slider.js"],"names":["_objectSpread","_extends","resolveDirective","_resolveDirective","createVNode","_createVNode","json2mq","BaseMixin","cloneElement","InnerSlider","defaultProps","canUseDOM","getSlot","defineComponent","name","mixins","inheritAttrs","props","data","_responsiveMediaHandlers","breakpoint","beforeMount","_this","responsive","breakpoints","map","breakpt","sort","x","y","forEach","index","bQuery","minWidth","maxWidth","media","setState","query","slice","beforeUnmount","obj","mql","removeListener","listener","methods","innerSliderRefHandler","ref","innerSlider","handler","window","matchMedia","_ref","matches","addListener","push","slickPrev","slickNext","slickGoTo","slide","dontAnimate","arguments","length","undefined","slickPause","pause","slickPlay","handleAutoPlay","render","_this2","_a","settings","newProps","filter","resp","$props","centerMode","slidesToScroll","process","env","NODE_ENV","console","warn","concat","fade","slidesToShow","children","child","trim","variableWidth","rows","slidesPerRow","newChildren","currentWidth","i","newSlide","j","row","k","style","width","key","tabindex","display","className","unslick","sliderProps","$attrs","$slots"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,gBAAgB,IAAIC,iBAA7B,EAAgDC,WAAW,IAAIC,YAA/D,QAAmF,KAAnF;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,eAAeA,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAE,QADuB;AAE7BC,EAAAA,MAAM,EAAE,CAACR,SAAD,CAFqB;AAG7BS,EAAAA,YAAY,EAAE,KAHe;AAI7BC,EAAAA,KAAK,EAAEhB,QAAQ,CAAC,EAAD,EAAKS,YAAL,CAJc;AAK7BQ,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,SAAKC,wBAAL,GAAgC,EAAhC;AACA,WAAO;AACLC,MAAAA,UAAU,EAAE;AADP,KAAP;AAGD,GAV4B;AAW7B;AACAC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,QAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAI,KAAKC,UAAT,EAAqB;AACnB,UAAIC,WAAW,GAAG,KAAKD,UAAL,CAAgBE,GAAhB,CAAoB,UAAUC,OAAV,EAAmB;AACvD,eAAOA,OAAO,CAACN,UAAf;AACD,OAFiB,CAAlB,CADmB,CAGf;;AAEJI,MAAAA,WAAW,CAACG,IAAZ,CAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC/B,eAAOD,CAAC,GAAGC,CAAX;AACD,OAFD;AAGAL,MAAAA,WAAW,CAACM,OAAZ,CAAoB,UAAUV,UAAV,EAAsBW,KAAtB,EAA6B;AAC/C;AACA,YAAIC,MAAJ;;AAEA,YAAID,KAAK,KAAK,CAAd,EAAiB;AACfC,UAAAA,MAAM,GAAG1B,OAAO,CAAC;AACf2B,YAAAA,QAAQ,EAAE,CADK;AAEfC,YAAAA,QAAQ,EAAEd;AAFK,WAAD,CAAhB;AAID,SALD,MAKO;AACLY,UAAAA,MAAM,GAAG1B,OAAO,CAAC;AACf2B,YAAAA,QAAQ,EAAET,WAAW,CAACO,KAAK,GAAG,CAAT,CAAX,GAAyB,CADpB;AAEfG,YAAAA,QAAQ,EAAEd;AAFK,WAAD,CAAhB;AAID,SAd8C,CAc7C;;;AAGFT,QAAAA,SAAS,MAAMW,KAAK,CAACa,KAAN,CAAYH,MAAZ,EAAoB,YAAY;AAC7CV,UAAAA,KAAK,CAACc,QAAN,CAAe;AACbhB,YAAAA,UAAU,EAAEA;AADC,WAAf;AAGD,SAJc,CAAf;AAKD,OAtBD,EARmB,CA8Bf;AACJ;;AAEA,UAAIiB,KAAK,GAAG/B,OAAO,CAAC;AAClB2B,QAAAA,QAAQ,EAAET,WAAW,CAACc,KAAZ,CAAkB,CAAC,CAAnB,EAAsB,CAAtB;AADQ,OAAD,CAAnB;AAGA3B,MAAAA,SAAS,MAAM,KAAKwB,KAAL,CAAWE,KAAX,EAAkB,YAAY;AAC3Cf,QAAAA,KAAK,CAACc,QAAN,CAAe;AACbhB,UAAAA,UAAU,EAAE;AADC,SAAf;AAGD,OAJc,CAAf;AAKD;AACF,GAzD4B;AA0D7BmB,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,SAAKpB,wBAAL,CAA8BW,OAA9B,CAAsC,UAAUU,GAAV,EAAe;AACnDA,MAAAA,GAAG,CAACC,GAAJ,CAAQC,cAAR,CAAuBF,GAAG,CAACG,QAA3B;AACD,KAFD;AAGD,GA9D4B;AA+D7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,GAA/B,EAAoC;AACzD,WAAKC,WAAL,GAAmBD,GAAnB;AACD,KAHM;AAIPX,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeE,KAAf,EAAsBW,OAAtB,EAA+B;AACpC;AACA,UAAIP,GAAG,GAAGQ,MAAM,CAACC,UAAP,CAAkBb,KAAlB,CAAV;;AAEA,UAAIM,QAAQ,GAAG,SAASA,QAAT,CAAkBQ,IAAlB,EAAwB;AACrC,YAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;;AAEA,YAAIA,OAAJ,EAAa;AACXJ,UAAAA,OAAO;AACR;AACF,OAND;;AAQAP,MAAAA,GAAG,CAACY,WAAJ,CAAgBV,QAAhB;AACAA,MAAAA,QAAQ,CAACF,GAAD,CAAR;;AAEA,WAAKtB,wBAAL,CAA8BmC,IAA9B,CAAmC;AACjCb,QAAAA,GAAG,EAAEA,GAD4B;AAEjCJ,QAAAA,KAAK,EAAEA,KAF0B;AAGjCM,QAAAA,QAAQ,EAAEA;AAHuB,OAAnC;AAKD,KAxBM;AAyBPY,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,WAAKR,WAAL,CAAiBQ,SAAjB;AACD,KA3BM;AA4BPC,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,WAAKT,WAAL,CAAiBS,SAAjB;AACD,KA9BM;AA+BPC,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACnC,UAAIC,WAAW,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAtF;AACA,WAAKb,WAAL,CAAiBU,SAAjB,CAA2BC,KAA3B,EAAkCC,WAAlC;AACD,KAlCM;AAmCPI,IAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,WAAKhB,WAAL,CAAiBiB,KAAjB,CAAuB,QAAvB;AACD,KArCM;AAsCPC,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,WAAKlB,WAAL,CAAiBmB,cAAjB,CAAgC,MAAhC;AACD;AAxCM,GA/DoB;AAyG7BC,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIC,EAAJ;;AAEA,QAAIC,QAAJ;AACA,QAAIC,QAAJ;;AAEA,QAAI,KAAKnD,UAAT,EAAqB;AACnBmD,MAAAA,QAAQ,GAAG,KAAKhD,UAAL,CAAgBiD,MAAhB,CAAuB,UAAUC,IAAV,EAAgB;AAChD,eAAOA,IAAI,CAACrD,UAAL,KAAoBgD,MAAM,CAAChD,UAAlC;AACD,OAFU,CAAX;AAGAkD,MAAAA,QAAQ,GAAGC,QAAQ,CAAC,CAAD,CAAR,CAAYD,QAAZ,KAAyB,SAAzB,GAAqC,SAArC,GAAiDrE,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK,KAAKyE,MAAV,CAAT,EAA4BH,QAAQ,CAAC,CAAD,CAAR,CAAYD,QAAxC,CAApE;AACD,KALD,MAKO;AACLA,MAAAA,QAAQ,GAAGrE,QAAQ,CAAC,EAAD,EAAK,KAAKyE,MAAV,CAAnB;AACD,KAfuB,CAetB;;;AAGF,QAAIJ,QAAQ,CAACK,UAAb,EAAyB;AACvB,UAAIL,QAAQ,CAACM,cAAT,GAA0B,CAA1B,IAA+BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA5D,EAA0E;AACxEC,QAAAA,OAAO,CAACC,IAAR,CAAa,oEAAoEC,MAApE,CAA2EZ,QAAQ,CAACM,cAApF,CAAb;AACD;;AAEDN,MAAAA,QAAQ,CAACM,cAAT,GAA0B,CAA1B;AACD,KAxBuB,CAwBtB;;;AAGF,QAAIN,QAAQ,CAACa,IAAb,EAAmB;AACjB,UAAIb,QAAQ,CAACc,YAAT,GAAwB,CAAxB,IAA6BP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1D,EAAwE;AACtEC,QAAAA,OAAO,CAACC,IAAR,CAAa,qEAAqEC,MAArE,CAA4EZ,QAAQ,CAACc,YAArF,CAAb;AACD;;AAED,UAAId,QAAQ,CAACM,cAAT,GAA0B,CAA1B,IAA+BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA5D,EAA0E;AACxEC,QAAAA,OAAO,CAACC,IAAR,CAAa,uEAAuEC,MAAvE,CAA8EZ,QAAQ,CAACM,cAAvF,CAAb;AACD;;AAEDN,MAAAA,QAAQ,CAACc,YAAT,GAAwB,CAAxB;AACAd,MAAAA,QAAQ,CAACM,cAAT,GAA0B,CAA1B;AACD,KAtCuB,CAsCtB;;;AAGF,QAAIS,QAAQ,GAAGzE,OAAO,CAAC,IAAD,CAAP,IAAiB,EAAhC,CAzCwB,CAyCY;AACpC;;AAEAyE,IAAAA,QAAQ,GAAGA,QAAQ,CAACb,MAAT,CAAgB,UAAUc,KAAV,EAAiB;AAC1C,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAO,CAAC,CAACA,KAAK,CAACC,IAAN,EAAT;AACD;;AAED,aAAO,CAAC,CAACD,KAAT;AACD,KANU,CAAX,CA5CwB,CAkDpB;;AAEJ,QAAIhB,QAAQ,CAACkB,aAAT,KAA2BlB,QAAQ,CAACmB,IAAT,GAAgB,CAAhB,IAAqBnB,QAAQ,CAACoB,YAAT,GAAwB,CAAxE,CAAJ,EAAgF;AAC9EV,MAAAA,OAAO,CAACC,IAAR,CAAa,wEAAb;AACAX,MAAAA,QAAQ,CAACkB,aAAT,GAAyB,KAAzB;AACD;;AAED,QAAIG,WAAW,GAAG,EAAlB;AACA,QAAIC,YAAY,GAAG,IAAnB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACxB,MAA7B,EAAqCgC,CAAC,IAAIvB,QAAQ,CAACmB,IAAT,GAAgBnB,QAAQ,CAACoB,YAAnE,EAAiF;AAC/E,UAAII,QAAQ,GAAG,EAAf;;AAEA,WAAK,IAAIC,CAAC,GAAGF,CAAb,EAAgBE,CAAC,GAAGF,CAAC,GAAGvB,QAAQ,CAACmB,IAAT,GAAgBnB,QAAQ,CAACoB,YAAjD,EAA+DK,CAAC,IAAIzB,QAAQ,CAACoB,YAA7E,EAA2F;AACzF,YAAIM,GAAG,GAAG,EAAV;;AAEA,aAAK,IAAIC,CAAC,GAAGF,CAAb,EAAgBE,CAAC,GAAGF,CAAC,GAAGzB,QAAQ,CAACoB,YAAjC,EAA+CO,CAAC,IAAI,CAApD,EAAuD;AACrD,cAAI3B,QAAQ,CAACkB,aAAT,KAA2B,CAACnB,EAAE,GAAGgB,QAAQ,CAACY,CAAD,CAAR,CAAYhF,KAAlB,MAA6B,IAA7B,IAAqCoD,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAAC6B,KAA5F,CAAJ,EAAwG;AACtGN,YAAAA,YAAY,GAAGP,QAAQ,CAACY,CAAD,CAAR,CAAYhF,KAAZ,CAAkBiF,KAAlB,CAAwBC,KAAvC;AACD;;AAED,cAAIF,CAAC,IAAIZ,QAAQ,CAACxB,MAAlB,EAA0B;AAC1BmC,UAAAA,GAAG,CAAC1C,IAAJ,CAAS9C,YAAY,CAAC6E,QAAQ,CAACY,CAAD,CAAT,EAAc;AACjCG,YAAAA,GAAG,EAAE,MAAMP,CAAN,GAAU,KAAKE,CAAf,GAAmBE,CADS;AAEjCI,YAAAA,QAAQ,EAAE,CAAC,CAFsB;AAGjCH,YAAAA,KAAK,EAAE;AACLC,cAAAA,KAAK,EAAE,GAAGjB,MAAH,CAAU,MAAMZ,QAAQ,CAACoB,YAAzB,EAAuC,GAAvC,CADF;AAELY,cAAAA,OAAO,EAAE;AAFJ;AAH0B,WAAd,CAArB;AAQD;;AAEDR,QAAAA,QAAQ,CAACxC,IAAT,CAAcjD,YAAY,CAAC,KAAD,EAAQ;AAChC,iBAAO,KAAKwF,CAAL,GAASE;AADgB,SAAR,EAEvB,CAACC,GAAD,CAFuB,CAA1B;AAGD;;AAED,UAAI1B,QAAQ,CAACkB,aAAb,EAA4B;AAC1BG,QAAAA,WAAW,CAACrC,IAAZ,CAAiBjD,YAAY,CAAC,KAAD,EAAQ;AACnC,iBAAOwF,CAD4B;AAEnC,mBAAS;AACPM,YAAAA,KAAK,EAAEP;AADA;AAF0B,SAAR,EAK1B,CAACE,QAAD,CAL0B,CAA7B;AAMD,OAPD,MAOO;AACLH,QAAAA,WAAW,CAACrC,IAAZ,CAAiBjD,YAAY,CAAC,KAAD,EAAQ;AACnC,iBAAOwF;AAD4B,SAAR,EAE1B,CAACC,QAAD,CAF0B,CAA7B;AAGD;AACF;;AAED,QAAIxB,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,UAAIiC,SAAS,GAAG,qBAAqB,KAAKA,SAAL,IAAkB,EAAvC,CAAhB;AACA,aAAOlG,YAAY,CAAC,KAAD,EAAQ;AACzB,iBAASkG;AADgB,OAAR,EAEhB,CAACZ,WAAD,CAFgB,CAAnB;AAGD,KALD,MAKO,IAAIA,WAAW,CAAC9B,MAAZ,IAAsBS,QAAQ,CAACc,YAAnC,EAAiD;AACtDd,MAAAA,QAAQ,CAACkC,OAAT,GAAmB,IAAnB;AACD;;AAED,QAAIC,WAAW,GAAGxG,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK,KAAKyG,MAAV,CAAT,EAA4BpC,QAA5B,CAAT,EAAgD;AACxEe,MAAAA,QAAQ,EAAEM,WAD8D;AAExE7C,MAAAA,GAAG,EAAE,KAAKD;AAF8D,KAAhD,CAA1B;;AAKA,WAAOxC,YAAY,CAACI,WAAD,EAAcT,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKyG,WAAL,CAAd,EAAiC,EAAjC,EAAqC;AACjF,yBAAmB;AAD8D,KAArC,CAA3B,EAEf,KAAKE,MAFU,CAAnB;AAGD;AA/N4B,CAAD,CAA9B","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport json2mq from '../../_util/json2mq';\nimport BaseMixin from '../../_util/BaseMixin';\nimport { cloneElement } from '../../_util/vnode';\nimport InnerSlider from './inner-slider';\nimport defaultProps from './default-props';\nimport { canUseDOM } from './utils/innerSliderUtils';\nimport { getSlot } from '../../_util/props-util';\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'Slider',\n  mixins: [BaseMixin],\n  inheritAttrs: false,\n  props: _extends({}, defaultProps),\n  data: function data() {\n    this._responsiveMediaHandlers = [];\n    return {\n      breakpoint: null\n    };\n  },\n  // handles responsive breakpoints\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    if (this.responsive) {\n      var breakpoints = this.responsive.map(function (breakpt) {\n        return breakpt.breakpoint;\n      }); // sort them in increasing order of their numerical value\n\n      breakpoints.sort(function (x, y) {\n        return x - y;\n      });\n      breakpoints.forEach(function (breakpoint, index) {\n        // media query for each breakpoint\n        var bQuery;\n\n        if (index === 0) {\n          bQuery = json2mq({\n            minWidth: 0,\n            maxWidth: breakpoint\n          });\n        } else {\n          bQuery = json2mq({\n            minWidth: breakpoints[index - 1] + 1,\n            maxWidth: breakpoint\n          });\n        } // when not using server side rendering\n\n\n        canUseDOM() && _this.media(bQuery, function () {\n          _this.setState({\n            breakpoint: breakpoint\n          });\n        });\n      }); // Register media query for full screen. Need to support resize from small to large\n      // convert javascript object to media query string\n\n      var query = json2mq({\n        minWidth: breakpoints.slice(-1)[0]\n      });\n      canUseDOM() && this.media(query, function () {\n        _this.setState({\n          breakpoint: null\n        });\n      });\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this._responsiveMediaHandlers.forEach(function (obj) {\n      obj.mql.removeListener(obj.listener);\n    });\n  },\n  methods: {\n    innerSliderRefHandler: function innerSliderRefHandler(ref) {\n      this.innerSlider = ref;\n    },\n    media: function media(query, handler) {\n      // javascript handler for  css media query\n      var mql = window.matchMedia(query);\n\n      var listener = function listener(_ref) {\n        var matches = _ref.matches;\n\n        if (matches) {\n          handler();\n        }\n      };\n\n      mql.addListener(listener);\n      listener(mql);\n\n      this._responsiveMediaHandlers.push({\n        mql: mql,\n        query: query,\n        listener: listener\n      });\n    },\n    slickPrev: function slickPrev() {\n      this.innerSlider.slickPrev();\n    },\n    slickNext: function slickNext() {\n      this.innerSlider.slickNext();\n    },\n    slickGoTo: function slickGoTo(slide) {\n      var dontAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.innerSlider.slickGoTo(slide, dontAnimate);\n    },\n    slickPause: function slickPause() {\n      this.innerSlider.pause('paused');\n    },\n    slickPlay: function slickPlay() {\n      this.innerSlider.handleAutoPlay('play');\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _a;\n\n    var settings;\n    var newProps;\n\n    if (this.breakpoint) {\n      newProps = this.responsive.filter(function (resp) {\n        return resp.breakpoint === _this2.breakpoint;\n      });\n      settings = newProps[0].settings === 'unslick' ? 'unslick' : _extends(_extends({}, this.$props), newProps[0].settings);\n    } else {\n      settings = _extends({}, this.$props);\n    } // force scrolling by one if centerMode is on\n\n\n    if (settings.centerMode) {\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn(\"slidesToScroll should be equal to 1 in centerMode, you are using \".concat(settings.slidesToScroll));\n      }\n\n      settings.slidesToScroll = 1;\n    } // force showing one slide and scrolling by one if the fade mode is on\n\n\n    if (settings.fade) {\n      if (settings.slidesToShow > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn(\"slidesToShow should be equal to 1 when fade is true, you're using \".concat(settings.slidesToShow));\n      }\n\n      if (settings.slidesToScroll > 1 && process.env.NODE_ENV !== 'production') {\n        console.warn(\"slidesToScroll should be equal to 1 when fade is true, you're using \".concat(settings.slidesToScroll));\n      }\n\n      settings.slidesToShow = 1;\n      settings.slidesToScroll = 1;\n    } // makes sure that children is an array, even when there is only 1 child\n\n\n    var children = getSlot(this) || []; // Children may contain false or null, so we should filter them\n    // children may also contain string filled with spaces (in certain cases where we use jsx strings)\n\n    children = children.filter(function (child) {\n      if (typeof child === 'string') {\n        return !!child.trim();\n      }\n\n      return !!child;\n    }); // rows and slidesPerRow logic is handled here\n\n    if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {\n      console.warn(\"variableWidth is not supported in case of rows > 1 or slidesPerRow > 1\");\n      settings.variableWidth = false;\n    }\n\n    var newChildren = [];\n    var currentWidth = null;\n\n    for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {\n      var newSlide = [];\n\n      for (var j = i; j < i + settings.rows * settings.slidesPerRow; j += settings.slidesPerRow) {\n        var row = [];\n\n        for (var k = j; k < j + settings.slidesPerRow; k += 1) {\n          if (settings.variableWidth && ((_a = children[k].props) === null || _a === void 0 ? void 0 : _a.style)) {\n            currentWidth = children[k].props.style.width;\n          }\n\n          if (k >= children.length) break;\n          row.push(cloneElement(children[k], {\n            key: 100 * i + 10 * j + k,\n            tabindex: -1,\n            style: {\n              width: \"\".concat(100 / settings.slidesPerRow, \"%\"),\n              display: 'inline-block'\n            }\n          }));\n        }\n\n        newSlide.push(_createVNode(\"div\", {\n          \"key\": 10 * i + j\n        }, [row]));\n      }\n\n      if (settings.variableWidth) {\n        newChildren.push(_createVNode(\"div\", {\n          \"key\": i,\n          \"style\": {\n            width: currentWidth\n          }\n        }, [newSlide]));\n      } else {\n        newChildren.push(_createVNode(\"div\", {\n          \"key\": i\n        }, [newSlide]));\n      }\n    }\n\n    if (settings === 'unslick') {\n      var className = 'regular slider ' + (this.className || '');\n      return _createVNode(\"div\", {\n        \"class\": className\n      }, [newChildren]);\n    } else if (newChildren.length <= settings.slidesToShow) {\n      settings.unslick = true;\n    }\n\n    var sliderProps = _extends(_extends(_extends({}, this.$attrs), settings), {\n      children: newChildren,\n      ref: this.innerSliderRefHandler\n    });\n\n    return _createVNode(InnerSlider, _objectSpread(_objectSpread({}, sliderProps), {}, {\n      \"__propsSymbol__\": []\n    }), this.$slots);\n  }\n});"]},"metadata":{},"sourceType":"module"}