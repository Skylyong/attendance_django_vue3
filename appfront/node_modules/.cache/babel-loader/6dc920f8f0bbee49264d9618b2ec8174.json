{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, inject } from 'vue';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport PropTypes from '../_util/vue-types';\nimport { defaultConfigProvider } from '../config-provider';\n\nfunction getMonthsLocale(value) {\n  var current = value.clone();\n  var localeData = value.localeData();\n  var months = [];\n\n  for (var i = 0; i < 12; i++) {\n    current.month(i);\n    months.push(localeData.monthsShort(current));\n  }\n\n  return months;\n}\n\nexport var HeaderProps = {\n  prefixCls: PropTypes.string,\n  locale: PropTypes.any,\n  fullscreen: PropTypes.looseBool,\n  yearSelectOffset: PropTypes.number,\n  yearSelectTotal: PropTypes.number,\n  type: PropTypes.string,\n  value: {\n    type: Object\n  },\n  validRange: {\n    type: Array\n  },\n  headerRender: PropTypes.func,\n  onValueChange: PropTypes.func,\n  onTypeChange: PropTypes.func\n};\nexport default defineComponent({\n  name: 'CalendarHeader',\n  inheritAttrs: false,\n  props: _extends(_extends({}, HeaderProps), {\n    yearSelectOffset: PropTypes.number.def(10),\n    yearSelectTotal: PropTypes.number.def(20)\n  }),\n  setup: function setup() {\n    return {\n      configProvider: inject('configProvider', defaultConfigProvider),\n      calendarHeaderNode: undefined\n    };\n  },\n  // private calendarHeaderNode: HTMLDivElement;\n  methods: {\n    getYearSelectElement: function getYearSelectElement(prefixCls, year) {\n      var _this = this;\n\n      var yearSelectOffset = this.yearSelectOffset,\n          yearSelectTotal = this.yearSelectTotal,\n          _this$locale = this.locale,\n          locale = _this$locale === void 0 ? {} : _this$locale,\n          fullscreen = this.fullscreen,\n          validRange = this.validRange;\n      var start = year - yearSelectOffset;\n      var end = start + yearSelectTotal;\n\n      if (validRange) {\n        start = validRange[0].get('year');\n        end = validRange[1].get('year') + 1;\n      }\n\n      var suffix = locale && locale.year === '年' ? '年' : '';\n      var options = [];\n\n      for (var index = start; index < end; index++) {\n        options.push({\n          label: \"\".concat(index).concat(suffix),\n          value: index\n        });\n      }\n\n      return _createVNode(Select, {\n        \"size\": fullscreen ? undefined : 'small',\n        \"class\": \"\".concat(prefixCls, \"-year-select\"),\n        \"onChange\": this.onYearChange,\n        \"value\": year,\n        \"options\": options,\n        \"getPopupContainer\": function getPopupContainer() {\n          return _this.calendarHeaderNode;\n        }\n      }, null);\n    },\n    getMonthSelectElement: function getMonthSelectElement(prefixCls, month, months) {\n      var _this2 = this;\n\n      var fullscreen = this.fullscreen,\n          validRange = this.validRange,\n          value = this.value;\n      var start = 0;\n      var end = 11;\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            rangeStart = _validRange[0],\n            rangeEnd = _validRange[1];\n\n        var currentYear = value.get('year');\n\n        if (rangeEnd.get('year') === currentYear) {\n          end = rangeEnd.get('month') + 1;\n        }\n\n        if (rangeStart.get('year') === currentYear) {\n          start = rangeStart.get('month');\n        }\n      }\n\n      var options = [];\n\n      for (var index = start; index <= end; index += 1) {\n        options.push({\n          label: months[index],\n          value: index\n        });\n      }\n\n      return _createVNode(Select, {\n        \"size\": fullscreen ? undefined : 'small',\n        \"class\": \"\".concat(prefixCls, \"-month-select\"),\n        \"value\": month,\n        \"options\": options,\n        \"onChange\": this.onMonthChange,\n        \"getPopupContainer\": function getPopupContainer() {\n          return _this2.calendarHeaderNode;\n        }\n      }, null);\n    },\n    onYearChange: function onYearChange(year) {\n      var value = this.value,\n          validRange = this.validRange;\n      var newValue = value.clone();\n      newValue.year(parseInt(year, 10)); // switch the month so that it remains within range when year changes\n\n      if (validRange) {\n        var _validRange2 = _slicedToArray(validRange, 2),\n            start = _validRange2[0],\n            end = _validRange2[1];\n\n        var newYear = newValue.get('year');\n        var newMonth = newValue.get('month');\n\n        if (newYear === end.get('year') && newMonth > end.get('month')) {\n          newValue.month(end.get('month'));\n        }\n\n        if (newYear === start.get('year') && newMonth < start.get('month')) {\n          newValue.month(start.get('month'));\n        }\n      }\n\n      this.$emit('valueChange', newValue);\n    },\n    onMonthChange: function onMonthChange(month) {\n      var newValue = this.value.clone();\n      newValue.month(parseInt(month, 10));\n      this.$emit('valueChange', newValue);\n    },\n    onInternalTypeChange: function onInternalTypeChange(e) {\n      this.triggerTypeChange(e.target.value);\n    },\n    triggerTypeChange: function triggerTypeChange(val) {\n      this.$emit('typeChange', val);\n    },\n    getMonthYearSelections: function getMonthYearSelections(getPrefixCls) {\n      var _this$$props = this.$props,\n          customizePrefixCls = _this$$props.prefixCls,\n          type = _this$$props.type,\n          value = _this$$props.value;\n      var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n      var yearReactNode = this.getYearSelectElement(prefixCls, value.year());\n      var monthReactNode = type === 'month' ? this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value)) : null;\n      return {\n        yearReactNode: yearReactNode,\n        monthReactNode: monthReactNode\n      };\n    },\n    getTypeSwitch: function getTypeSwitch() {\n      var _this$$props2 = this.$props,\n          _this$$props2$locale = _this$$props2.locale,\n          locale = _this$$props2$locale === void 0 ? {} : _this$$props2$locale,\n          type = _this$$props2.type,\n          fullscreen = _this$$props2.fullscreen;\n      var size = fullscreen ? 'default' : 'small';\n      return _createVNode(Group, {\n        \"onChange\": this.onInternalTypeChange,\n        \"value\": type,\n        \"size\": size\n      }, {\n        default: function _default() {\n          return [_createVNode(Button, {\n            \"value\": \"month\"\n          }, {\n            default: function _default() {\n              return [locale.month];\n            }\n          }), _createVNode(Button, {\n            \"value\": \"year\"\n          }, {\n            default: function _default() {\n              return [locale.year];\n            }\n          })];\n        }\n      });\n    },\n    triggerValueChange: function triggerValueChange() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.$emit.apply(this, ['valueChange'].concat(args));\n    },\n    saveCalendarHeaderNode: function saveCalendarHeaderNode(node) {\n      this.calendarHeaderNode = node;\n    },\n    headerRenderCustom: function headerRenderCustom(headerRender) {\n      var _this$$props3 = this.$props,\n          type = _this$$props3.type,\n          value = _this$$props3.value;\n      return headerRender({\n        value: value,\n        type: type || 'month',\n        onChange: this.triggerValueChange,\n        onTypeChange: this.triggerTypeChange\n      });\n    }\n  },\n  render: function render() {\n    var customizePrefixCls = this.prefixCls,\n        headerRender = this.headerRender;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n    var typeSwitch = this.getTypeSwitch();\n\n    var _this$getMonthYearSel = this.getMonthYearSelections(getPrefixCls),\n        yearReactNode = _this$getMonthYearSel.yearReactNode,\n        monthReactNode = _this$getMonthYearSel.monthReactNode;\n\n    return headerRender ? this.headerRenderCustom(headerRender) : _createVNode(\"div\", {\n      \"class\": \"\".concat(prefixCls, \"-header\"),\n      \"ref\": this.saveCalendarHeaderNode\n    }, [yearReactNode, monthReactNode, typeSwitch]);\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/calendar/Header.js"],"names":["_slicedToArray","_extends","createVNode","_createVNode","defineComponent","inject","Select","Group","Button","PropTypes","defaultConfigProvider","getMonthsLocale","value","current","clone","localeData","months","i","month","push","monthsShort","HeaderProps","prefixCls","string","locale","any","fullscreen","looseBool","yearSelectOffset","number","yearSelectTotal","type","Object","validRange","Array","headerRender","func","onValueChange","onTypeChange","name","inheritAttrs","props","def","setup","configProvider","calendarHeaderNode","undefined","methods","getYearSelectElement","year","_this","_this$locale","start","end","get","suffix","options","index","label","concat","onYearChange","getPopupContainer","getMonthSelectElement","_this2","_validRange","rangeStart","rangeEnd","currentYear","onMonthChange","newValue","parseInt","_validRange2","newYear","newMonth","$emit","onInternalTypeChange","e","triggerTypeChange","target","val","getMonthYearSelections","getPrefixCls","_this$$props","$props","customizePrefixCls","yearReactNode","monthReactNode","getTypeSwitch","_this$$props2","_this$$props2$locale","size","default","_default","triggerValueChange","_len","arguments","length","args","_key","apply","saveCalendarHeaderNode","node","headerRenderCustom","_this$$props3","onChange","render","typeSwitch","_this$getMonthYearSel"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, inject } from 'vue';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport PropTypes from '../_util/vue-types';\nimport { defaultConfigProvider } from '../config-provider';\n\nfunction getMonthsLocale(value) {\n  var current = value.clone();\n  var localeData = value.localeData();\n  var months = [];\n\n  for (var i = 0; i < 12; i++) {\n    current.month(i);\n    months.push(localeData.monthsShort(current));\n  }\n\n  return months;\n}\n\nexport var HeaderProps = {\n  prefixCls: PropTypes.string,\n  locale: PropTypes.any,\n  fullscreen: PropTypes.looseBool,\n  yearSelectOffset: PropTypes.number,\n  yearSelectTotal: PropTypes.number,\n  type: PropTypes.string,\n  value: {\n    type: Object\n  },\n  validRange: {\n    type: Array\n  },\n  headerRender: PropTypes.func,\n  onValueChange: PropTypes.func,\n  onTypeChange: PropTypes.func\n};\nexport default defineComponent({\n  name: 'CalendarHeader',\n  inheritAttrs: false,\n  props: _extends(_extends({}, HeaderProps), {\n    yearSelectOffset: PropTypes.number.def(10),\n    yearSelectTotal: PropTypes.number.def(20)\n  }),\n  setup: function setup() {\n    return {\n      configProvider: inject('configProvider', defaultConfigProvider),\n      calendarHeaderNode: undefined\n    };\n  },\n  // private calendarHeaderNode: HTMLDivElement;\n  methods: {\n    getYearSelectElement: function getYearSelectElement(prefixCls, year) {\n      var _this = this;\n\n      var yearSelectOffset = this.yearSelectOffset,\n          yearSelectTotal = this.yearSelectTotal,\n          _this$locale = this.locale,\n          locale = _this$locale === void 0 ? {} : _this$locale,\n          fullscreen = this.fullscreen,\n          validRange = this.validRange;\n      var start = year - yearSelectOffset;\n      var end = start + yearSelectTotal;\n\n      if (validRange) {\n        start = validRange[0].get('year');\n        end = validRange[1].get('year') + 1;\n      }\n\n      var suffix = locale && locale.year === '年' ? '年' : '';\n      var options = [];\n\n      for (var index = start; index < end; index++) {\n        options.push({\n          label: \"\".concat(index).concat(suffix),\n          value: index\n        });\n      }\n\n      return _createVNode(Select, {\n        \"size\": fullscreen ? undefined : 'small',\n        \"class\": \"\".concat(prefixCls, \"-year-select\"),\n        \"onChange\": this.onYearChange,\n        \"value\": year,\n        \"options\": options,\n        \"getPopupContainer\": function getPopupContainer() {\n          return _this.calendarHeaderNode;\n        }\n      }, null);\n    },\n    getMonthSelectElement: function getMonthSelectElement(prefixCls, month, months) {\n      var _this2 = this;\n\n      var fullscreen = this.fullscreen,\n          validRange = this.validRange,\n          value = this.value;\n      var start = 0;\n      var end = 11;\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            rangeStart = _validRange[0],\n            rangeEnd = _validRange[1];\n\n        var currentYear = value.get('year');\n\n        if (rangeEnd.get('year') === currentYear) {\n          end = rangeEnd.get('month') + 1;\n        }\n\n        if (rangeStart.get('year') === currentYear) {\n          start = rangeStart.get('month');\n        }\n      }\n\n      var options = [];\n\n      for (var index = start; index <= end; index += 1) {\n        options.push({\n          label: months[index],\n          value: index\n        });\n      }\n\n      return _createVNode(Select, {\n        \"size\": fullscreen ? undefined : 'small',\n        \"class\": \"\".concat(prefixCls, \"-month-select\"),\n        \"value\": month,\n        \"options\": options,\n        \"onChange\": this.onMonthChange,\n        \"getPopupContainer\": function getPopupContainer() {\n          return _this2.calendarHeaderNode;\n        }\n      }, null);\n    },\n    onYearChange: function onYearChange(year) {\n      var value = this.value,\n          validRange = this.validRange;\n      var newValue = value.clone();\n      newValue.year(parseInt(year, 10)); // switch the month so that it remains within range when year changes\n\n      if (validRange) {\n        var _validRange2 = _slicedToArray(validRange, 2),\n            start = _validRange2[0],\n            end = _validRange2[1];\n\n        var newYear = newValue.get('year');\n        var newMonth = newValue.get('month');\n\n        if (newYear === end.get('year') && newMonth > end.get('month')) {\n          newValue.month(end.get('month'));\n        }\n\n        if (newYear === start.get('year') && newMonth < start.get('month')) {\n          newValue.month(start.get('month'));\n        }\n      }\n\n      this.$emit('valueChange', newValue);\n    },\n    onMonthChange: function onMonthChange(month) {\n      var newValue = this.value.clone();\n      newValue.month(parseInt(month, 10));\n      this.$emit('valueChange', newValue);\n    },\n    onInternalTypeChange: function onInternalTypeChange(e) {\n      this.triggerTypeChange(e.target.value);\n    },\n    triggerTypeChange: function triggerTypeChange(val) {\n      this.$emit('typeChange', val);\n    },\n    getMonthYearSelections: function getMonthYearSelections(getPrefixCls) {\n      var _this$$props = this.$props,\n          customizePrefixCls = _this$$props.prefixCls,\n          type = _this$$props.type,\n          value = _this$$props.value;\n      var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n      var yearReactNode = this.getYearSelectElement(prefixCls, value.year());\n      var monthReactNode = type === 'month' ? this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value)) : null;\n      return {\n        yearReactNode: yearReactNode,\n        monthReactNode: monthReactNode\n      };\n    },\n    getTypeSwitch: function getTypeSwitch() {\n      var _this$$props2 = this.$props,\n          _this$$props2$locale = _this$$props2.locale,\n          locale = _this$$props2$locale === void 0 ? {} : _this$$props2$locale,\n          type = _this$$props2.type,\n          fullscreen = _this$$props2.fullscreen;\n      var size = fullscreen ? 'default' : 'small';\n      return _createVNode(Group, {\n        \"onChange\": this.onInternalTypeChange,\n        \"value\": type,\n        \"size\": size\n      }, {\n        default: function _default() {\n          return [_createVNode(Button, {\n            \"value\": \"month\"\n          }, {\n            default: function _default() {\n              return [locale.month];\n            }\n          }), _createVNode(Button, {\n            \"value\": \"year\"\n          }, {\n            default: function _default() {\n              return [locale.year];\n            }\n          })];\n        }\n      });\n    },\n    triggerValueChange: function triggerValueChange() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.$emit.apply(this, ['valueChange'].concat(args));\n    },\n    saveCalendarHeaderNode: function saveCalendarHeaderNode(node) {\n      this.calendarHeaderNode = node;\n    },\n    headerRenderCustom: function headerRenderCustom(headerRender) {\n      var _this$$props3 = this.$props,\n          type = _this$$props3.type,\n          value = _this$$props3.value;\n      return headerRender({\n        value: value,\n        type: type || 'month',\n        onChange: this.triggerValueChange,\n        onTypeChange: this.triggerTypeChange\n      });\n    }\n  },\n  render: function render() {\n    var customizePrefixCls = this.prefixCls,\n        headerRender = this.headerRender;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n    var typeSwitch = this.getTypeSwitch();\n\n    var _this$getMonthYearSel = this.getMonthYearSelections(getPrefixCls),\n        yearReactNode = _this$getMonthYearSel.yearReactNode,\n        monthReactNode = _this$getMonthYearSel.monthReactNode;\n\n    return headerRender ? this.headerRenderCustom(headerRender) : _createVNode(\"div\", {\n      \"class\": \"\".concat(prefixCls, \"-header\"),\n      \"ref\": this.saveCalendarHeaderNode\n    }, [yearReactNode, monthReactNode, typeSwitch]);\n  }\n});"]},"metadata":{},"sourceType":"module"}