{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { createApp } from 'vue'; // We only handle element & text node.\n\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nvar ellipsisContainer;\nvar wrapperStyle = {\n  padding: 0,\n  margin: 0,\n  display: 'inline',\n  lineHeight: 'inherit'\n};\n\nfunction pxToNumber(value) {\n  if (!value) return 0;\n  var match = value.match(/^\\d*(\\.\\d*)?/);\n  return match ? Number(match[0]) : 0;\n}\n\nfunction styleToString(style) {\n  // There are some different behavior between Firefox & Chrome.\n  // We have to handle this ourself.\n  var styleNames = Array.prototype.slice.apply(style);\n  return styleNames.map(function (name) {\n    return \"\".concat(name, \": \").concat(style.getPropertyValue(name), \";\");\n  }).join('');\n}\n\nexport default (function (originEle, option, content, fixedContent, ellipsisStr) {\n  if (!ellipsisContainer) {\n    ellipsisContainer = document.createElement('div');\n    ellipsisContainer.setAttribute('aria-hidden', 'true');\n    document.body.appendChild(ellipsisContainer);\n  }\n\n  var rows = option.rows,\n      _option$suffix = option.suffix,\n      suffix = _option$suffix === void 0 ? '' : _option$suffix; // Get origin style\n\n  var originStyle = window.getComputedStyle(originEle);\n  var originCSS = styleToString(originStyle);\n  var lineHeight = pxToNumber(originStyle.lineHeight);\n  var maxHeight = Math.round(lineHeight * (rows + 1) + pxToNumber(originStyle.paddingTop) + pxToNumber(originStyle.paddingBottom)); // Set shadow\n\n  ellipsisContainer.setAttribute('style', originCSS);\n  ellipsisContainer.style.position = 'fixed';\n  ellipsisContainer.style.left = '0';\n  ellipsisContainer.style.height = 'auto';\n  ellipsisContainer.style.minHeight = 'auto';\n  ellipsisContainer.style.maxHeight = 'auto';\n  ellipsisContainer.style.top = '-999999px';\n  ellipsisContainer.style.zIndex = '-1000'; // clean up css overflow\n\n  ellipsisContainer.style.textOverflow = 'clip';\n  ellipsisContainer.style.whiteSpace = 'normal';\n  ellipsisContainer.style.webkitLineClamp = 'none'; // Render in the fake container\n\n  var vm = createApp({\n    render: function render() {\n      return _createVNode(\"div\", {\n        \"style\": wrapperStyle\n      }, [_createVNode(\"span\", {\n        \"style\": wrapperStyle\n      }, [content, suffix]), _createVNode(\"span\", {\n        \"style\": wrapperStyle\n      }, [fixedContent])]);\n    }\n  });\n  vm.mount(ellipsisContainer); // Check if ellipsis in measure div is height enough for content\n\n  function inRange() {\n    return ellipsisContainer.offsetHeight < maxHeight;\n  } // Skip ellipsis if already match\n\n\n  if (inRange()) {\n    vm.unmount();\n    return {\n      content: content,\n      text: ellipsisContainer.innerHTML,\n      ellipsis: false\n    };\n  }\n\n  var childNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[0].cloneNode(true).childNodes).filter(function (_ref) {\n    var nodeType = _ref.nodeType,\n        data = _ref.data;\n    return nodeType !== COMMENT_NODE && data !== '';\n  });\n  var fixedNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[1].cloneNode(true).childNodes);\n  vm.unmount(); // ========================= Find match ellipsis content =========================\n\n  var ellipsisChildren = [];\n  ellipsisContainer.innerHTML = ''; // Create origin content holder\n\n  var ellipsisContentHolder = document.createElement('span');\n  ellipsisContainer.appendChild(ellipsisContentHolder);\n  var ellipsisTextNode = document.createTextNode(ellipsisStr + suffix);\n  ellipsisContentHolder.appendChild(ellipsisTextNode);\n  fixedNodes.forEach(function (childNode) {\n    ellipsisContainer.appendChild(childNode);\n  }); // Append before fixed nodes\n\n  function appendChildNode(node) {\n    ellipsisContentHolder.insertBefore(node, ellipsisTextNode);\n  } // Get maximum text\n\n\n  function measureText(textNode, fullText) {\n    var startLoc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var endLoc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : fullText.length;\n    var lastSuccessLoc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var midLoc = Math.floor((startLoc + endLoc) / 2);\n    var currentText = fullText.slice(0, midLoc);\n    textNode.textContent = currentText;\n\n    if (startLoc >= endLoc - 1) {\n      // Loop when step is small\n      for (var step = endLoc; step >= startLoc; step -= 1) {\n        var currentStepText = fullText.slice(0, step);\n        textNode.textContent = currentStepText;\n\n        if (inRange() || !currentStepText) {\n          return step === fullText.length ? {\n            finished: false,\n            vNode: fullText\n          } : {\n            finished: true,\n            vNode: currentStepText\n          };\n        }\n      }\n    }\n\n    if (inRange()) {\n      return measureText(textNode, fullText, midLoc, endLoc, midLoc);\n    }\n\n    return measureText(textNode, fullText, startLoc, midLoc, lastSuccessLoc);\n  }\n\n  function measureNode(childNode) {\n    var type = childNode.nodeType; // console.log('type', type);\n    // if (type === ELEMENT_NODE) {\n    //   // We don't split element, it will keep if whole element can be displayed.\n    //   appendChildNode(childNode);\n    //   if (inRange()) {\n    //     return {\n    //       finished: false,\n    //       vNode: contentList[index],\n    //     };\n    //   }\n    //   // Clean up if can not pull in\n    //   ellipsisContentHolder.removeChild(childNode);\n    //   return {\n    //     finished: true,\n    //     vNode: null,\n    //   };\n    // }\n\n    if (type === TEXT_NODE) {\n      var fullText = childNode.textContent || '';\n      var textNode = document.createTextNode(fullText);\n      appendChildNode(textNode);\n      return measureText(textNode, fullText);\n    } // Not handle other type of content\n\n\n    return {\n      finished: false,\n      vNode: null\n    };\n  }\n\n  childNodes.some(function (childNode) {\n    var _measureNode = measureNode(childNode),\n        finished = _measureNode.finished,\n        vNode = _measureNode.vNode;\n\n    if (vNode) {\n      ellipsisChildren.push(vNode);\n    }\n\n    return finished;\n  });\n  return {\n    content: ellipsisChildren,\n    text: ellipsisContainer.innerHTML,\n    ellipsis: true\n  };\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/typography/util.js"],"names":["createVNode","_createVNode","createApp","TEXT_NODE","COMMENT_NODE","ellipsisContainer","wrapperStyle","padding","margin","display","lineHeight","pxToNumber","value","match","Number","styleToString","style","styleNames","Array","prototype","slice","apply","map","name","concat","getPropertyValue","join","originEle","option","content","fixedContent","ellipsisStr","document","createElement","setAttribute","body","appendChild","rows","_option$suffix","suffix","originStyle","window","getComputedStyle","originCSS","maxHeight","Math","round","paddingTop","paddingBottom","position","left","height","minHeight","top","zIndex","textOverflow","whiteSpace","webkitLineClamp","vm","render","mount","inRange","offsetHeight","unmount","text","innerHTML","ellipsis","childNodes","cloneNode","filter","_ref","nodeType","data","fixedNodes","ellipsisChildren","ellipsisContentHolder","ellipsisTextNode","createTextNode","forEach","childNode","appendChildNode","node","insertBefore","measureText","textNode","fullText","startLoc","arguments","length","undefined","endLoc","lastSuccessLoc","midLoc","floor","currentText","textContent","step","currentStepText","finished","vNode","measureNode","type","some","_measureNode","push"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { createApp } from 'vue'; // We only handle element & text node.\n\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nvar ellipsisContainer;\nvar wrapperStyle = {\n  padding: 0,\n  margin: 0,\n  display: 'inline',\n  lineHeight: 'inherit'\n};\n\nfunction pxToNumber(value) {\n  if (!value) return 0;\n  var match = value.match(/^\\d*(\\.\\d*)?/);\n  return match ? Number(match[0]) : 0;\n}\n\nfunction styleToString(style) {\n  // There are some different behavior between Firefox & Chrome.\n  // We have to handle this ourself.\n  var styleNames = Array.prototype.slice.apply(style);\n  return styleNames.map(function (name) {\n    return \"\".concat(name, \": \").concat(style.getPropertyValue(name), \";\");\n  }).join('');\n}\n\nexport default (function (originEle, option, content, fixedContent, ellipsisStr) {\n  if (!ellipsisContainer) {\n    ellipsisContainer = document.createElement('div');\n    ellipsisContainer.setAttribute('aria-hidden', 'true');\n    document.body.appendChild(ellipsisContainer);\n  }\n\n  var rows = option.rows,\n      _option$suffix = option.suffix,\n      suffix = _option$suffix === void 0 ? '' : _option$suffix; // Get origin style\n\n  var originStyle = window.getComputedStyle(originEle);\n  var originCSS = styleToString(originStyle);\n  var lineHeight = pxToNumber(originStyle.lineHeight);\n  var maxHeight = Math.round(lineHeight * (rows + 1) + pxToNumber(originStyle.paddingTop) + pxToNumber(originStyle.paddingBottom)); // Set shadow\n\n  ellipsisContainer.setAttribute('style', originCSS);\n  ellipsisContainer.style.position = 'fixed';\n  ellipsisContainer.style.left = '0';\n  ellipsisContainer.style.height = 'auto';\n  ellipsisContainer.style.minHeight = 'auto';\n  ellipsisContainer.style.maxHeight = 'auto';\n  ellipsisContainer.style.top = '-999999px';\n  ellipsisContainer.style.zIndex = '-1000'; // clean up css overflow\n\n  ellipsisContainer.style.textOverflow = 'clip';\n  ellipsisContainer.style.whiteSpace = 'normal';\n  ellipsisContainer.style.webkitLineClamp = 'none'; // Render in the fake container\n\n  var vm = createApp({\n    render: function render() {\n      return _createVNode(\"div\", {\n        \"style\": wrapperStyle\n      }, [_createVNode(\"span\", {\n        \"style\": wrapperStyle\n      }, [content, suffix]), _createVNode(\"span\", {\n        \"style\": wrapperStyle\n      }, [fixedContent])]);\n    }\n  });\n  vm.mount(ellipsisContainer); // Check if ellipsis in measure div is height enough for content\n\n  function inRange() {\n    return ellipsisContainer.offsetHeight < maxHeight;\n  } // Skip ellipsis if already match\n\n\n  if (inRange()) {\n    vm.unmount();\n    return {\n      content: content,\n      text: ellipsisContainer.innerHTML,\n      ellipsis: false\n    };\n  }\n\n  var childNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[0].cloneNode(true).childNodes).filter(function (_ref) {\n    var nodeType = _ref.nodeType,\n        data = _ref.data;\n    return nodeType !== COMMENT_NODE && data !== '';\n  });\n  var fixedNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[1].cloneNode(true).childNodes);\n  vm.unmount(); // ========================= Find match ellipsis content =========================\n\n  var ellipsisChildren = [];\n  ellipsisContainer.innerHTML = ''; // Create origin content holder\n\n  var ellipsisContentHolder = document.createElement('span');\n  ellipsisContainer.appendChild(ellipsisContentHolder);\n  var ellipsisTextNode = document.createTextNode(ellipsisStr + suffix);\n  ellipsisContentHolder.appendChild(ellipsisTextNode);\n  fixedNodes.forEach(function (childNode) {\n    ellipsisContainer.appendChild(childNode);\n  }); // Append before fixed nodes\n\n  function appendChildNode(node) {\n    ellipsisContentHolder.insertBefore(node, ellipsisTextNode);\n  } // Get maximum text\n\n\n  function measureText(textNode, fullText) {\n    var startLoc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var endLoc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : fullText.length;\n    var lastSuccessLoc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var midLoc = Math.floor((startLoc + endLoc) / 2);\n    var currentText = fullText.slice(0, midLoc);\n    textNode.textContent = currentText;\n\n    if (startLoc >= endLoc - 1) {\n      // Loop when step is small\n      for (var step = endLoc; step >= startLoc; step -= 1) {\n        var currentStepText = fullText.slice(0, step);\n        textNode.textContent = currentStepText;\n\n        if (inRange() || !currentStepText) {\n          return step === fullText.length ? {\n            finished: false,\n            vNode: fullText\n          } : {\n            finished: true,\n            vNode: currentStepText\n          };\n        }\n      }\n    }\n\n    if (inRange()) {\n      return measureText(textNode, fullText, midLoc, endLoc, midLoc);\n    }\n\n    return measureText(textNode, fullText, startLoc, midLoc, lastSuccessLoc);\n  }\n\n  function measureNode(childNode) {\n    var type = childNode.nodeType; // console.log('type', type);\n    // if (type === ELEMENT_NODE) {\n    //   // We don't split element, it will keep if whole element can be displayed.\n    //   appendChildNode(childNode);\n    //   if (inRange()) {\n    //     return {\n    //       finished: false,\n    //       vNode: contentList[index],\n    //     };\n    //   }\n    //   // Clean up if can not pull in\n    //   ellipsisContentHolder.removeChild(childNode);\n    //   return {\n    //     finished: true,\n    //     vNode: null,\n    //   };\n    // }\n\n    if (type === TEXT_NODE) {\n      var fullText = childNode.textContent || '';\n      var textNode = document.createTextNode(fullText);\n      appendChildNode(textNode);\n      return measureText(textNode, fullText);\n    } // Not handle other type of content\n\n\n    return {\n      finished: false,\n      vNode: null\n    };\n  }\n\n  childNodes.some(function (childNode) {\n    var _measureNode = measureNode(childNode),\n        finished = _measureNode.finished,\n        vNode = _measureNode.vNode;\n\n    if (vNode) {\n      ellipsisChildren.push(vNode);\n    }\n\n    return finished;\n  });\n  return {\n    content: ellipsisChildren,\n    text: ellipsisContainer.innerHTML,\n    ellipsis: true\n  };\n});"]},"metadata":{},"sourceType":"module"}