{"ast":null,"code":"import Vue from 'vue';\nimport Axios from 'axios';\nconst axiosInstance = Axios.create({\n  withCredentials: true\n}); // 通过拦截器处理csrf问题，这里的正则和匹配下标可能需要根据实际情况小改动\n\naxiosInstance.interceptors.request.use(config => {\n  config.headers['X-Requested-With'] = 'XMLHttpRequest';\n  const regex = /.*csrftoken=([^;.]*).*$/;\n  config.headers['X-CSRFToken'] = document.cookie.match(regex) === null ? null : document.cookie.match(regex)[1];\n  return config;\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\nVue.prototype.axios = axiosInstance;\nexport default axiosInstance;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/src/api/index.js"],"names":["Vue","Axios","axiosInstance","create","withCredentials","interceptors","request","use","config","headers","regex","document","cookie","match","response","error","Promise","reject","prototype","axios"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC/BC,EAAAA,eAAe,EAAE;AADc,CAAb,CAAtB,C,CAIA;;AACAF,aAAa,CAACG,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAwCC,MAAD,IAAY;AAC/CA,EAAAA,MAAM,CAACC,OAAP,CAAe,kBAAf,IAAqC,gBAArC;AACA,QAAMC,KAAK,GAAG,yBAAd;AACAF,EAAAA,MAAM,CAACC,OAAP,CAAe,aAAf,IAAiCE,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsBH,KAAtB,MAAiC,IAAjC,GAAwC,IAAxC,GAA+CC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsBH,KAAtB,EAA6B,CAA7B,CAAhF;AACA,SAAOF,MAAP;AACH,CALD;AAOAN,aAAa,CAACG,YAAd,CAA2BS,QAA3B,CAAoCP,GAApC,CACIO,QAAQ,IAAI;AACR,SAAOA,QAAP;AACH,CAHL,EAIIC,KAAK,IAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CANL;AASAf,GAAG,CAACkB,SAAJ,CAAcC,KAAd,GAAsBjB,aAAtB;AAEA,eAAeA,aAAf","sourcesContent":["import Vue from 'vue'\nimport Axios from 'axios'\n\nconst axiosInstance = Axios.create({\n    withCredentials: true\n})\n\n// 通过拦截器处理csrf问题，这里的正则和匹配下标可能需要根据实际情况小改动\naxiosInstance.interceptors.request.use((config) => {\n    config.headers['X-Requested-With'] = 'XMLHttpRequest'\n    const regex = /.*csrftoken=([^;.]*).*$/\n    config.headers['X-CSRFToken'] =  document.cookie.match(regex) === null ? null : document.cookie.match(regex)[1]\n    return config\n})\n\naxiosInstance.interceptors.response.use(\n    response => {\n        return response\n    },\n    error => {\n        return Promise.reject(error)\n    }\n)\n\nVue.prototype.axios = axiosInstance\n\nexport default axiosInstance"]},"metadata":{},"sourceType":"module"}