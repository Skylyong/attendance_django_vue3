{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, reactive, computed, defineComponent } from \"vue\";\nimport { extend, numericProp, BORDER_BOTTOM, getZIndexStyle, createNamespace } from \"../utils\";\nimport { INDEX_BAR_KEY } from \"../index-bar/IndexBar\";\nimport { getScrollTop, getRootScrollTop } from \"../utils/dom\";\nimport { useRect, useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"index-anchor\");\nconst indexAnchorProps = {\n  index: numericProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: indexAnchorProps,\n\n  setup(props, {\n    slots\n  }) {\n    const state = reactive({\n      top: 0,\n      left: null,\n      rect: {\n        top: 0,\n        height: 0\n      },\n      width: null,\n      active: false\n    });\n    const root = ref();\n    const {\n      parent\n    } = useParent(INDEX_BAR_KEY);\n\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <IndexAnchor> must be a child component of <IndexBar>.\");\n      }\n\n      return;\n    }\n\n    const isSticky = () => state.active && parent.props.sticky;\n\n    const anchorStyle = computed(() => {\n      const {\n        zIndex,\n        highlightColor\n      } = parent.props;\n\n      if (isSticky()) {\n        return extend(getZIndexStyle(zIndex), {\n          left: state.left ? `${state.left}px` : void 0,\n          width: state.width ? `${state.width}px` : void 0,\n          transform: state.top ? `translate3d(0, ${state.top}px, 0)` : void 0,\n          color: highlightColor\n        });\n      }\n    });\n\n    const getRect = (scrollParent, scrollParentRect) => {\n      const rootRect = useRect(root);\n      state.rect.height = rootRect.height;\n\n      if (scrollParent === window || scrollParent === document.body) {\n        state.rect.top = rootRect.top + getRootScrollTop();\n      } else {\n        state.rect.top = rootRect.top + getScrollTop(scrollParent) - scrollParentRect.top;\n      }\n\n      return state.rect;\n    };\n\n    useExpose({\n      state,\n      getRect\n    });\n    return () => {\n      const sticky = isSticky();\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"style\": {\n          height: sticky ? `${state.rect.height}px` : void 0\n        }\n      }, [_createVNode(\"div\", {\n        \"style\": anchorStyle.value,\n        \"class\": [bem({\n          sticky\n        }), {\n          [BORDER_BOTTOM]: sticky\n        }]\n      }, [slots.default ? slots.default() : props.index])]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/index-anchor/IndexAnchor.js"],"names":["createVNode","_createVNode","ref","reactive","computed","defineComponent","extend","numericProp","BORDER_BOTTOM","getZIndexStyle","createNamespace","INDEX_BAR_KEY","getScrollTop","getRootScrollTop","useRect","useParent","useExpose","name","bem","indexAnchorProps","index","stdin_default","props","setup","slots","state","top","left","rect","height","width","active","root","parent","process","env","NODE_ENV","console","error","isSticky","sticky","anchorStyle","zIndex","highlightColor","transform","color","getRect","scrollParent","scrollParentRect","rootRect","window","document","body","value","default"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, reactive, computed, defineComponent } from \"vue\";\nimport { extend, numericProp, BORDER_BOTTOM, getZIndexStyle, createNamespace } from \"../utils\";\nimport { INDEX_BAR_KEY } from \"../index-bar/IndexBar\";\nimport { getScrollTop, getRootScrollTop } from \"../utils/dom\";\nimport { useRect, useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"index-anchor\");\nconst indexAnchorProps = {\n  index: numericProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: indexAnchorProps,\n  setup(props, {\n    slots\n  }) {\n    const state = reactive({\n      top: 0,\n      left: null,\n      rect: {\n        top: 0,\n        height: 0\n      },\n      width: null,\n      active: false\n    });\n    const root = ref();\n    const {\n      parent\n    } = useParent(INDEX_BAR_KEY);\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <IndexAnchor> must be a child component of <IndexBar>.\");\n      }\n      return;\n    }\n    const isSticky = () => state.active && parent.props.sticky;\n    const anchorStyle = computed(() => {\n      const {\n        zIndex,\n        highlightColor\n      } = parent.props;\n      if (isSticky()) {\n        return extend(getZIndexStyle(zIndex), {\n          left: state.left ? `${state.left}px` : void 0,\n          width: state.width ? `${state.width}px` : void 0,\n          transform: state.top ? `translate3d(0, ${state.top}px, 0)` : void 0,\n          color: highlightColor\n        });\n      }\n    });\n    const getRect = (scrollParent, scrollParentRect) => {\n      const rootRect = useRect(root);\n      state.rect.height = rootRect.height;\n      if (scrollParent === window || scrollParent === document.body) {\n        state.rect.top = rootRect.top + getRootScrollTop();\n      } else {\n        state.rect.top = rootRect.top + getScrollTop(scrollParent) - scrollParentRect.top;\n      }\n      return state.rect;\n    };\n    useExpose({\n      state,\n      getRect\n    });\n    return () => {\n      const sticky = isSticky();\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"style\": {\n          height: sticky ? `${state.rect.height}px` : void 0\n        }\n      }, [_createVNode(\"div\", {\n        \"style\": anchorStyle.value,\n        \"class\": [bem({\n          sticky\n        }), {\n          [BORDER_BOTTOM]: sticky\n        }]\n      }, [slots.default ? slots.default() : props.index])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}