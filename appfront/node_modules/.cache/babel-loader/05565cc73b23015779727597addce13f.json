{"ast":null,"code":"import { defineComponent, h, provide } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n  name: 'VxeRadioGroup',\n  props: {\n    modelValue: [String, Number, Boolean],\n    disabled: Boolean,\n    strict: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.radio.strict;\n      }\n    },\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.radio.size || GlobalConfig.size;\n      }\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var $xeradiogroup = {\n      xID: xID,\n      props: props,\n      context: context,\n      name: XEUtils.uniqueId('xegroup_')\n    };\n    var radioGroupMethods = {};\n    useSize(props);\n    var radioGroupPrivateMethods = {\n      handleChecked: function (params) {\n        emit('update:modelValue', params.label);\n        radioGroupMethods.dispatchEvent('change', params);\n      }\n    };\n    radioGroupMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $radioGroup: $xeradiogroup,\n          $event: evnt\n        }, params));\n      }\n    };\n\n    var renderVN = function () {\n      return h('div', {\n        class: 'vxe-radio-group'\n      }, slots.default ? slots.default({}) : []);\n    };\n\n    Object.assign($xeradiogroup, radioGroupPrivateMethods, {\n      renderVN: renderVN,\n      dispatchEvent: dispatchEvent\n    });\n    provide('$xeradiogroup', $xeradiogroup);\n    return renderVN;\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/radio/src/group.js"],"names":["defineComponent","h","provide","XEUtils","GlobalConfig","useSize","name","props","modelValue","String","Number","Boolean","disabled","strict","type","default","radio","size","emits","setup","context","slots","emit","xID","uniqueId","$xeradiogroup","radioGroupMethods","radioGroupPrivateMethods","handleChecked","params","label","dispatchEvent","evnt","Object","assign","$radioGroup","$event","renderVN","class"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,CAA1B,EAA6BC,OAA7B,QAA4C,KAA5C;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,eAAeL,eAAe,CAAC;AAC3BM,EAAAA,IAAI,EAAE,eADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CADT;AAEHC,IAAAA,QAAQ,EAAED,OAFP;AAGHE,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEH,OAAR;AAAiBI,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAOX,YAAY,CAACY,KAAb,CAAmBH,MAA1B;AAAmC;AAA3E,KAHL;AAIHI,IAAAA,IAAI,EAAE;AAAEH,MAAAA,IAAI,EAAEL,MAAR;AAAgBM,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAOX,YAAY,CAACY,KAAb,CAAmBC,IAAnB,IAA2Bb,YAAY,CAACa,IAA/C;AAAsD;AAA7F;AAJH,GAFoB;AAQ3BC,EAAAA,KAAK,EAAE,CACH,mBADG,EAEH,QAFG,CARoB;AAY3BC,EAAAA,KAAK,EAAE,UAAUZ,KAAV,EAAiBa,OAAjB,EAA0B;AAC7B,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,QAA2BC,IAAI,GAAGF,OAAO,CAACE,IAA1C;AACA,QAAIC,GAAG,GAAGpB,OAAO,CAACqB,QAAR,EAAV;AACA,QAAIC,aAAa,GAAG;AAChBF,MAAAA,GAAG,EAAEA,GADW;AAEhBhB,MAAAA,KAAK,EAAEA,KAFS;AAGhBa,MAAAA,OAAO,EAAEA,OAHO;AAIhBd,MAAAA,IAAI,EAAEH,OAAO,CAACqB,QAAR,CAAiB,UAAjB;AAJU,KAApB;AAMA,QAAIE,iBAAiB,GAAG,EAAxB;AACArB,IAAAA,OAAO,CAACE,KAAD,CAAP;AACA,QAAIoB,wBAAwB,GAAG;AAC3BC,MAAAA,aAAa,EAAE,UAAUC,MAAV,EAAkB;AAC7BP,QAAAA,IAAI,CAAC,mBAAD,EAAsBO,MAAM,CAACC,KAA7B,CAAJ;AACAJ,QAAAA,iBAAiB,CAACK,aAAlB,CAAgC,QAAhC,EAA0CF,MAA1C;AACH;AAJ0B,KAA/B;AAMAH,IAAAA,iBAAiB,GAAG;AAChBK,MAAAA,aAAa,EAAE,UAAUjB,IAAV,EAAgBe,MAAhB,EAAwBG,IAAxB,EAA8B;AACzCV,QAAAA,IAAI,CAACR,IAAD,EAAOmB,MAAM,CAACC,MAAP,CAAc;AAAEC,UAAAA,WAAW,EAAEV,aAAf;AAA8BW,UAAAA,MAAM,EAAEJ;AAAtC,SAAd,EAA4DH,MAA5D,CAAP,CAAJ;AACH;AAHe,KAApB;;AAKA,QAAIQ,QAAQ,GAAG,YAAY;AACvB,aAAOpC,CAAC,CAAC,KAAD,EAAQ;AACZqC,QAAAA,KAAK,EAAE;AADK,OAAR,EAELjB,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,CAAc,EAAd,CAAhB,GAAoC,EAF/B,CAAR;AAGH,KAJD;;AAKAkB,IAAAA,MAAM,CAACC,MAAP,CAAcT,aAAd,EAA6BE,wBAA7B,EAAuD;AACnDU,MAAAA,QAAQ,EAAEA,QADyC;AAEnDN,MAAAA,aAAa,EAAEA;AAFoC,KAAvD;AAIA7B,IAAAA,OAAO,CAAC,eAAD,EAAkBuB,aAAlB,CAAP;AACA,WAAOY,QAAP;AACH;AA7C0B,CAAD,CAA9B","sourcesContent":["import { defineComponent, h, provide } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n    name: 'VxeRadioGroup',\n    props: {\n        modelValue: [String, Number, Boolean],\n        disabled: Boolean,\n        strict: { type: Boolean, default: function () { return GlobalConfig.radio.strict; } },\n        size: { type: String, default: function () { return GlobalConfig.radio.size || GlobalConfig.size; } }\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var $xeradiogroup = {\n            xID: xID,\n            props: props,\n            context: context,\n            name: XEUtils.uniqueId('xegroup_')\n        };\n        var radioGroupMethods = {};\n        useSize(props);\n        var radioGroupPrivateMethods = {\n            handleChecked: function (params) {\n                emit('update:modelValue', params.label);\n                radioGroupMethods.dispatchEvent('change', params);\n            }\n        };\n        radioGroupMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $radioGroup: $xeradiogroup, $event: evnt }, params));\n            }\n        };\n        var renderVN = function () {\n            return h('div', {\n                class: 'vxe-radio-group'\n            }, slots.default ? slots.default({}) : []);\n        };\n        Object.assign($xeradiogroup, radioGroupPrivateMethods, {\n            renderVN: renderVN,\n            dispatchEvent: dispatchEvent\n        });\n        provide('$xeradiogroup', $xeradiogroup);\n        return renderVN;\n    }\n});\n"]},"metadata":{},"sourceType":"module"}