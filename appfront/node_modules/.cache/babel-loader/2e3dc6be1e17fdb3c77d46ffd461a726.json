{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createVNode as _createVNode, resolveDirective as _resolveDirective, withCtx as _withCtx, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7589b93f\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"main\"\n};\nconst _hoisted_2 = {\n  class: \"user-login-other\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_alert = _resolveComponent(\"a-alert\");\n\n  const _component_a_icon = _resolveComponent(\"a-icon\");\n\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n\n  const _component_a_input_password = _resolveComponent(\"a-input-password\");\n\n  const _component_a_tab_pane = _resolveComponent(\"a-tab-pane\");\n\n  const _component_a_col = _resolveComponent(\"a-col\");\n\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_a_row = _resolveComponent(\"a-row\");\n\n  const _component_a_tabs = _resolveComponent(\"a-tabs\");\n\n  const _component_a_checkbox = _resolveComponent(\"a-checkbox\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_a_form = _resolveComponent(\"a-form\");\n\n  const _component_two_step_captcha = _resolveComponent(\"two-step-captcha\");\n\n  const _directive_decorator = _resolveDirective(\"decorator\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_form, {\n    id: \"formLogin\",\n    class: \"user-layout-login\",\n    ref: \"formLogin\",\n    form: $data.form,\n    onSubmit: $options.handleSubmit\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_tabs, {\n      activeKey: $data.customActiveKey,\n      tabBarStyle: {\n        textAlign: 'center',\n        borderBottom: 'unset'\n      },\n      onChange: $options.handleTabClick\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_tab_pane, {\n        key: \"tab1\",\n        tab: _ctx.$t('user.login.tab-login-credentials')\n      }, {\n        default: _withCtx(() => [$data.isLoginError ? (_openBlock(), _createBlock(_component_a_alert, {\n          key: 0,\n          type: \"error\",\n          showIcon: \"\",\n          style: {\n            \"margin-bottom\": \"24px\"\n          },\n          message: _ctx.$t('user.login.message-invalid-credentials')\n        }, null, 8\n        /* PROPS */\n        , [\"message\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_a_form_item, null, {\n          default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_a_input, {\n            size: \"large\",\n            type: \"text\",\n            placeholder: _ctx.$t('user.login.username.placeholder')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_icon, {\n              type: \"user\",\n              style: _normalizeStyle({\n                color: 'rgba(0,0,0,.25)'\n              })\n            }, null, 8\n            /* PROPS */\n            , [\"style\"])]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"placeholder\"])), [[_directive_decorator, ['username', {\n            rules: [{\n              required: true,\n              message: _ctx.$t('user.userName.required')\n            }, {\n              validator: $options.handleUsernameOrEmail\n            }],\n            validateTrigger: 'change'\n          }]]])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_a_form_item, null, {\n          default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_a_input_password, {\n            size: \"large\",\n            placeholder: _ctx.$t('user.login.password.placeholder')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_icon, {\n              type: \"lock\",\n              style: _normalizeStyle({\n                color: 'rgba(0,0,0,.25)'\n              })\n            }, null, 8\n            /* PROPS */\n            , [\"style\"])]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"placeholder\"])), [[_directive_decorator, ['password', {\n            rules: [{\n              required: true,\n              message: _ctx.$t('user.password.required')\n            }],\n            validateTrigger: 'blur'\n          }]]])]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"tab\"]), _createVNode(_component_a_tab_pane, {\n        key: \"tab2\",\n        tab: _ctx.$t('user.login.tab-login-mobile')\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, null, {\n          default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_a_input, {\n            size: \"large\",\n            type: \"text\",\n            placeholder: _ctx.$t('user.login.mobile.placeholder')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_icon, {\n              slot: \"prefix\",\n              type: \"mobile\",\n              style: _normalizeStyle({\n                color: 'rgba(0,0,0,.25)'\n              })\n            }, null, 8\n            /* PROPS */\n            , [\"style\"])]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"placeholder\"])), [[_directive_decorator, ['mobile', {\n            rules: [{\n              required: true,\n              pattern: /^1[34578]\\d{9}$/,\n              message: _ctx.$t('user.login.mobile.placeholder')\n            }],\n            validateTrigger: 'change'\n          }]]])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_a_row, {\n          gutter: 16\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_col, {\n            class: \"gutter-row\",\n            span: 16\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_form_item, null, {\n              default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_a_input, {\n                size: \"large\",\n                type: \"text\",\n                placeholder: _ctx.$t('user.login.mobile.verification-code.placeholder')\n              }, {\n                default: _withCtx(() => [_createVNode(_component_a_icon, {\n                  slot: \"prefix\",\n                  type: \"mail\",\n                  style: _normalizeStyle({\n                    color: 'rgba(0,0,0,.25)'\n                  })\n                }, null, 8\n                /* PROPS */\n                , [\"style\"])]),\n                _: 1\n                /* STABLE */\n\n              }, 8\n              /* PROPS */\n              , [\"placeholder\"])), [[_directive_decorator, ['captcha', {\n                rules: [{\n                  required: true,\n                  message: _ctx.$t('user.verification-code.required')\n                }],\n                validateTrigger: 'blur'\n              }]]])]),\n              _: 1\n              /* STABLE */\n\n            })]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_a_col, {\n            class: \"gutter-row\",\n            span: 8\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_button, {\n              class: \"getCaptcha\",\n              tabindex: \"-1\",\n              disabled: $data.state.smsSendBtn,\n              onClick: _withModifiers($options.getCaptcha, [\"stop\", \"prevent\"]),\n              textContent: _toDisplayString(!$data.state.smsSendBtn && _ctx.$t('user.register.get-verification-code') || $data.state.time + ' s')\n            }, null, 8\n            /* PROPS */\n            , [\"disabled\", \"onClick\", \"textContent\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"tab\"])]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"activeKey\", \"onChange\"]), _createVNode(_component_a_form_item, null, {\n      default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_a_checkbox, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('user.login.remember-me')), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      })), [[_directive_decorator, ['rememberMe', {\n        valuePropName: 'checked'\n      }]]]), _createVNode(_component_router_link, {\n        to: {\n          name: 'recover',\n          params: {\n            user: 'aaa'\n          }\n        },\n        class: \"forge-password\",\n        style: {\n          \"float\": \"right\"\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('user.login.forgot-password')), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_form_item, {\n      style: {\n        \"margin-top\": \"24px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        size: \"large\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        class: \"login-button\",\n        loading: $data.state.loginBtn,\n        disabled: $data.state.loginBtn\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('user.login.login')), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"loading\", \"disabled\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('user.login.sign-in-with')), 1\n    /* TEXT */\n    ), _createElementVNode(\"a\", null, [_createVNode(_component_a_icon, {\n      class: \"item-icon\",\n      type: \"alipay-circle\"\n    })]), _createElementVNode(\"a\", null, [_createVNode(_component_a_icon, {\n      class: \"item-icon\",\n      type: \"taobao-circle\"\n    })]), _createElementVNode(\"a\", null, [_createVNode(_component_a_icon, {\n      class: \"item-icon\",\n      type: \"weibo-circle\"\n    })]), _createVNode(_component_router_link, {\n      class: \"register\",\n      to: {\n        name: 'register'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('user.login.signup')), 1\n      /* TEXT */\n      )]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"form\", \"onSubmit\"]), $data.requiredTwoStepCaptcha ? (_openBlock(), _createBlock(_component_two_step_captcha, {\n    key: 0,\n    visible: $data.stepCaptchaVisible,\n    onSuccess: $options.stepCaptchaSuccess,\n    onCancel: $options.stepCaptchaCancel\n  }, null, 8\n  /* PROPS */\n  , [\"visible\", \"onSuccess\", \"onCancel\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_createVNode","_component_a_form","id","ref","form","$data","onSubmit","$options","_component_a_tabs","activeKey","tabBarStyle","textAlign","borderBottom","onChange","_component_a_tab_pane","key","tab","_ctx","_createBlock","_component_a_alert","type","showIcon","style","message","_component_a_form_item","_component_a_input","size","placeholder","_component_a_icon","color","validator","validateTrigger","_component_a_input_password","slot","_component_a_row","gutter","_component_a_col","span","_component_a_button","tabindex","disabled","smsSendBtn","onClick","_toDisplayString","time","_component_a_checkbox","valuePropName","_component_router_link","to","name","params","user","htmlType","loading","loginBtn","_createElementVNode","_component_two_step_captcha","visible","onSuccess","onCancel"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/src/views/login.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form\n      id=\"formLogin\"\n      class=\"user-layout-login\"\n      ref=\"formLogin\"\n      :form=\"form\"\n      @submit=\"handleSubmit\"\n    >\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\"\n      >\n        <a-tab-pane key=\"tab1\" :tab=\"$t('user.login.tab-login-credentials')\">\n          <a-alert v-if=\"isLoginError\" type=\"error\" showIcon style=\"margin-bottom: 24px;\" :message=\"$t('user.login.message-invalid-credentials')\" />\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              :placeholder=\"$t('user.login.username.placeholder')\"\n              v-decorator=\"[\n                'username',\n                {rules: [{ required: true, message: $t('user.userName.required') }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\n              ]\"\n            >\n              <a-icon v-slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input-password\n              size=\"large\"\n              :placeholder=\"$t('user.login.password.placeholder')\"\n              v-decorator=\"[\n                'password',\n                {rules: [{ required: true, message: $t('user.password.required') }], validateTrigger: 'blur'}\n              ]\"\n            >\n              <a-icon v-slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input-password>\n          </a-form-item>\n        </a-tab-pane>\n        <a-tab-pane key=\"tab2\" :tab=\"$t('user.login.tab-login-mobile')\">\n          <a-form-item>\n            <a-input size=\"large\" type=\"text\" :placeholder=\"$t('user.login.mobile.placeholder')\" v-decorator=\"['mobile', {rules: [{ required: true, pattern: /^1[34578]\\d{9}$/, message: $t('user.login.mobile.placeholder') }], validateTrigger: 'change'}]\">\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input size=\"large\" type=\"text\" :placeholder=\"$t('user.login.mobile.verification-code.placeholder')\" v-decorator=\"['captcha', {rules: [{ required: true, message: $t('user.verification-code.required') }], validateTrigger: 'blur'}]\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <a-button\n                class=\"getCaptcha\"\n                tabindex=\"-1\"\n                :disabled=\"state.smsSendBtn\"\n                @click.stop.prevent=\"getCaptcha\"\n                v-text=\"!state.smsSendBtn && $t('user.register.get-verification-code') || (state.time+' s')\"\n              ></a-button>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe', { valuePropName: 'checked' }]\">{{ $t('user.login.remember-me') }}</a-checkbox>\n        <router-link\n          :to=\"{ name: 'recover', params: { user: 'aaa'} }\"\n          class=\"forge-password\"\n          style=\"float: right;\"\n        >{{ $t('user.login.forgot-password') }}</router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"state.loginBtn\"\n          :disabled=\"state.loginBtn\"\n        >{{ $t('user.login.login') }}</a-button>\n      </a-form-item>\n\n      <div class=\"user-login-other\">\n        <span>{{ $t('user.login.sign-in-with') }}</span>\n        <a>\n          <a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon>\n        </a>\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">{{ $t('user.login.signup') }}</router-link>\n      </div>\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"\n    ></two-step-captcha>\n  </div>\n</template>\n\n<script>\nimport md5 from 'md5'\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\nimport { getSmsCaptcha, get2step } from '@/api/login'\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n  data () {\n    return {\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    }\n  },\n  created () {\n    get2step({ })\n      .then(res => {\n        this.requiredTwoStepCaptcha = res.result.stepCode\n      })\n      .catch(() => {\n        this.requiredTwoStepCaptcha = false\n      })\n    // this.requiredTwoStepCaptcha = true\n  },\n  methods: {\n    ...mapActions(['Login', 'Logout']),\n    // handler\n    handleUsernameOrEmail (rule, value, callback) {\n      const { state } = this\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\n      if (regex.test(value)) {\n        state.loginType = 0\n      } else {\n        state.loginType = 1\n      }\n      callback()\n    },\n    handleTabClick (key) {\n      this.customActiveKey = key\n      // this.form.resetFields()\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      const {\n        form: { validateFields },\n        state,\n        customActiveKey,\n        Login\n      } = this\n      state.loginBtn = true\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha']\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\n        if (!err) {\n          console.log('login form', values)\n          const loginParams = { ...values }\n          delete loginParams.username\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username\n          loginParams.password = md5(values.password)\n          Login(loginParams)\n            .then((res) => this.loginSuccess(res))\n            .catch(err => this.requestFailed(err))\n            .finally(() => {\n              state.loginBtn = false\n            })\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false\n          }, 600)\n        }\n      })\n    },\n    getCaptcha (e) {\n      e.preventDefault()\n      const { form: { validateFields }, state } = this\n      validateFields(['mobile'], { force: true }, (err, values) => {\n        if (!err) {\n          state.smsSendBtn = true\n          const interval = window.setInterval(() => {\n            if (state.time-- <= 0) {\n              state.time = 60\n              state.smsSendBtn = false\n              window.clearInterval(interval)\n            }\n          }, 1000)\n          const hide = this.$message.loading('验证码发送中..', 0)\n          getSmsCaptcha({ mobile: values.mobile }).then(res => {\n            setTimeout(hide, 2500)\n            this.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            })\n          }).catch(err => {\n            setTimeout(hide, 1)\n            clearInterval(interval)\n            state.time = 60\n            state.smsSendBtn = false\n            this.requestFailed(err)\n          })\n        }\n      })\n    },\n    stepCaptchaSuccess () {\n      this.loginSuccess()\n    },\n    stepCaptchaCancel () {\n      this.Logout().then(() => {\n        this.loginBtn = false\n        this.stepCaptchaVisible = false\n      })\n    },\n    loginSuccess (res) {\n      console.log(res)\n      // check res.homePage define, set $router.push name res.homePage\n      // Why not enter onComplete\n      /*\n      this.$router.push({ name: 'analysis' }, () => {\n        console.log('onComplete')\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      })\n      */\n      this.$router.push({ path: '/' })\n      // 延迟 1 秒显示欢迎信息\n      setTimeout(() => {\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      }, 1000)\n      this.isLoginError = false\n    },\n    requestFailed (err) {\n      this.isLoginError = true\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n  .forge-password {\n    font-size: 14px;\n  }\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color 0.3s;\n      &:hover {\n        color: #1890ff;\n      }\n    }\n    .register {\n      float: right;\n    }\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}