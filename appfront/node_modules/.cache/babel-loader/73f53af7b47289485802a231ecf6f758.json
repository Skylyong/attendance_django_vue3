{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { defineComponent, h, Teleport, ref, computed, reactive, nextTick, watch, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { useSize } from '../../hooks/size';\nimport { getDomNode, getEventTargetNode } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex, getFuncText } from '../../tools/utils';\nimport { errLog } from '../../tools/log';\nimport { GlobalEvent, hasEventKey, EVENT_KEYS } from '../../tools/event';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport VxeButtonConstructor from '../../button/src/button';\nexport var allActivedModals = [];\nexport var msgQueue = [];\nexport default defineComponent({\n  name: 'VxeModal',\n  props: {\n    modelValue: Boolean,\n    id: String,\n    type: {\n      type: String,\n      default: 'modal'\n    },\n    loading: {\n      type: Boolean,\n      default: null\n    },\n    status: String,\n    iconStatus: String,\n    className: String,\n    top: {\n      type: [Number, String],\n      default: function () {\n        return GlobalConfig.modal.top;\n      }\n    },\n    position: [String, Object],\n    title: String,\n    duration: {\n      type: [Number, String],\n      default: function () {\n        return GlobalConfig.modal.duration;\n      }\n    },\n    message: [Number, String],\n    content: [Number, String],\n    cancelButtonText: {\n      type: String,\n      default: function () {\n        return GlobalConfig.modal.cancelButtonText;\n      }\n    },\n    confirmButtonText: {\n      type: String,\n      default: function () {\n        return GlobalConfig.modal.confirmButtonText;\n      }\n    },\n    lockView: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.lockView;\n      }\n    },\n    lockScroll: Boolean,\n    mask: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.mask;\n      }\n    },\n    maskClosable: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.maskClosable;\n      }\n    },\n    escClosable: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.escClosable;\n      }\n    },\n    resize: Boolean,\n    showHeader: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.showHeader;\n      }\n    },\n    showFooter: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.showFooter;\n      }\n    },\n    showZoom: Boolean,\n    showClose: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.showClose;\n      }\n    },\n    dblclickZoom: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.dblclickZoom;\n      }\n    },\n    width: [Number, String],\n    height: [Number, String],\n    minWidth: {\n      type: [Number, String],\n      default: function () {\n        return GlobalConfig.modal.minWidth;\n      }\n    },\n    minHeight: {\n      type: [Number, String],\n      default: function () {\n        return GlobalConfig.modal.minHeight;\n      }\n    },\n    zIndex: Number,\n    marginSize: {\n      type: [Number, String],\n      default: function () {\n        return GlobalConfig.modal.marginSize;\n      }\n    },\n    fullscreen: Boolean,\n    draggable: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.draggable;\n      }\n    },\n    remember: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.remember;\n      }\n    },\n    destroyOnClose: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.destroyOnClose;\n      }\n    },\n    showTitleOverflow: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.showTitleOverflow;\n      }\n    },\n    transfer: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.transfer;\n      }\n    },\n    storage: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.storage;\n      }\n    },\n    storageKey: {\n      type: String,\n      default: function () {\n        return GlobalConfig.modal.storageKey;\n      }\n    },\n    animat: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.modal.animat;\n      }\n    },\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.modal.size || GlobalConfig.size;\n      }\n    },\n    beforeHideMethod: {\n      type: Function,\n      default: function () {\n        return GlobalConfig.modal.beforeHideMethod;\n      }\n    },\n    slots: Object\n  },\n  emits: ['update:modelValue', 'show', 'hide', 'before-hide', 'close', 'confirm', 'cancel', 'zoom'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var computeSize = useSize(props);\n    var reactData = reactive({\n      inited: false,\n      visible: false,\n      contentVisible: false,\n      modalTop: 0,\n      modalZindex: 0,\n      zoomLocat: null,\n      firstOpen: false\n    });\n    var refElem = ref();\n    var refModalBox = ref();\n    var refConfirmBtn = ref();\n    var refCancelBtn = ref();\n    var refMaps = {\n      refElem: refElem\n    };\n    var $xemodal = {\n      xID: xID,\n      props: props,\n      context: context,\n      reactData: reactData,\n      getRefMaps: function () {\n        return refMaps;\n      }\n    };\n    var modalMethods = {};\n    var computeIsMsg = computed(function () {\n      return props.type === 'message';\n    });\n\n    var getBox = function () {\n      var boxElem = refModalBox.value;\n      return boxElem;\n    };\n\n    var recalculate = function () {\n      var width = props.width,\n          height = props.height;\n      var boxElem = getBox();\n      boxElem.style.width = \"\" + (width ? isNaN(width) ? width : width + \"px\" : '');\n      boxElem.style.height = \"\" + (height ? isNaN(height) ? height : height + \"px\" : '');\n      return nextTick();\n    };\n\n    var updateZindex = function () {\n      var zIndex = props.zIndex;\n      var modalZindex = reactData.modalZindex;\n\n      if (zIndex) {\n        reactData.modalZindex = zIndex;\n      } else if (modalZindex < getLastZIndex()) {\n        reactData.modalZindex = nextZIndex();\n      }\n    };\n\n    var updatePosition = function () {\n      return nextTick().then(function () {\n        var position = props.position;\n        var marginSize = XEUtils.toNumber(props.marginSize);\n        var boxElem = getBox();\n        var clientVisibleWidth = document.documentElement.clientWidth || document.body.clientWidth;\n        var clientVisibleHeight = document.documentElement.clientHeight || document.body.clientHeight;\n        var isPosCenter = position === 'center';\n\n        var _a = XEUtils.isString(position) ? {\n          top: position,\n          left: position\n        } : Object.assign({}, position),\n            top = _a.top,\n            left = _a.left;\n\n        var topCenter = isPosCenter || top === 'center';\n        var leftCenter = isPosCenter || left === 'center';\n        var posTop = '';\n        var posLeft = '';\n\n        if (left && !leftCenter) {\n          posLeft = isNaN(left) ? left : left + \"px\";\n        } else {\n          posLeft = Math.max(marginSize, clientVisibleWidth / 2 - boxElem.offsetWidth / 2) + \"px\";\n        }\n\n        if (top && !topCenter) {\n          posTop = isNaN(top) ? top : top + \"px\";\n        } else {\n          posTop = Math.max(marginSize, clientVisibleHeight / 2 - boxElem.offsetHeight / 2) + \"px\";\n        }\n\n        boxElem.style.top = posTop;\n        boxElem.style.left = posLeft;\n      });\n    };\n\n    var updateStyle = function () {\n      nextTick(function () {\n        var offsetTop = 0;\n        msgQueue.forEach(function (comp) {\n          var boxElem = comp.getBox();\n          offsetTop += XEUtils.toNumber(comp.props.top);\n          comp.reactData.modalTop = offsetTop;\n          offsetTop += boxElem.clientHeight;\n        });\n      });\n    };\n\n    var removeMsgQueue = function () {\n      if (msgQueue.indexOf($xemodal) > -1) {\n        XEUtils.remove(msgQueue, function (comp) {\n          return comp === $xemodal;\n        });\n      }\n\n      updateStyle();\n    };\n\n    var closeModal = function (type) {\n      var remember = props.remember,\n          beforeHideMethod = props.beforeHideMethod;\n      var visible = reactData.visible;\n      var isMsg = computeIsMsg.value;\n      var params = {\n        type: type\n      };\n\n      if (visible) {\n        Promise.resolve(beforeHideMethod ? beforeHideMethod(params) : null).then(function (rest) {\n          if (!XEUtils.isError(rest)) {\n            if (isMsg) {\n              removeMsgQueue();\n            }\n\n            reactData.contentVisible = false;\n\n            if (!remember) {\n              reactData.zoomLocat = null;\n            }\n\n            XEUtils.remove(allActivedModals, function (item) {\n              return item === $xemodal;\n            });\n            modalMethods.dispatchEvent('before-hide', params);\n            setTimeout(function () {\n              reactData.visible = false;\n              emit('update:modelValue', false);\n              modalMethods.dispatchEvent('hide', params);\n            }, 200);\n          }\n        }).catch(function (e) {\n          return e;\n        });\n      }\n\n      return nextTick();\n    };\n\n    var closeEvent = function (evnt) {\n      var type = 'close';\n      modalMethods.dispatchEvent(type, {\n        type: type\n      }, evnt);\n      closeModal(type);\n    };\n\n    var confirmEvent = function (evnt) {\n      var type = 'confirm';\n      modalMethods.dispatchEvent(type, {\n        type: type\n      }, evnt);\n      closeModal(type);\n    };\n\n    var cancelEvent = function (evnt) {\n      var type = 'cancel';\n      modalMethods.dispatchEvent(type, {\n        type: type\n      }, evnt);\n      closeModal(type);\n    };\n\n    var getStorageMap = function (key) {\n      var version = GlobalConfig.version;\n      var rest = XEUtils.toStringJSON(localStorage.getItem(key) || '');\n      return rest && rest._v === version ? rest : {\n        _v: version\n      };\n    };\n\n    var hasPosStorage = function () {\n      var id = props.id,\n          remember = props.remember,\n          storage = props.storage,\n          storageKey = props.storageKey;\n      return !!(id && remember && storage && getStorageMap(storageKey)[id]);\n    };\n\n    var restorePosStorage = function () {\n      var id = props.id,\n          remember = props.remember,\n          storage = props.storage,\n          storageKey = props.storageKey;\n\n      if (id && remember && storage) {\n        var posStorage = getStorageMap(storageKey)[id];\n\n        if (posStorage) {\n          var boxElem = getBox();\n\n          var _a = posStorage.split(','),\n              left = _a[0],\n              top_1 = _a[1],\n              width = _a[2],\n              height = _a[3],\n              zoomLeft = _a[4],\n              zoomTop = _a[5],\n              zoomWidth = _a[6],\n              zoomHeight = _a[7];\n\n          if (left) {\n            boxElem.style.left = left + \"px\";\n          }\n\n          if (top_1) {\n            boxElem.style.top = top_1 + \"px\";\n          }\n\n          if (width) {\n            boxElem.style.width = width + \"px\";\n          }\n\n          if (height) {\n            boxElem.style.height = height + \"px\";\n          }\n\n          if (zoomLeft && zoomTop) {\n            reactData.zoomLocat = {\n              left: zoomLeft,\n              top: zoomTop,\n              width: zoomWidth,\n              height: zoomHeight\n            };\n          }\n        }\n      }\n    };\n\n    var addMsgQueue = function () {\n      if (msgQueue.indexOf($xemodal) === -1) {\n        msgQueue.push($xemodal);\n      }\n\n      updateStyle();\n    };\n\n    var savePosStorage = function () {\n      var id = props.id,\n          remember = props.remember,\n          storage = props.storage,\n          storageKey = props.storageKey;\n      var zoomLocat = reactData.zoomLocat;\n\n      if (id && remember && storage) {\n        var boxElem = getBox();\n        var posStorageMap = getStorageMap(storageKey);\n        posStorageMap[id] = [boxElem.style.left, boxElem.style.top, boxElem.style.width, boxElem.style.height].concat(zoomLocat ? [zoomLocat.left, zoomLocat.top, zoomLocat.width, zoomLocat.height] : []).map(function (val) {\n          return val ? XEUtils.toNumber(val) : '';\n        }).join(',');\n        localStorage.setItem(storageKey, XEUtils.toJSONString(posStorageMap));\n      }\n    };\n\n    var maximize = function () {\n      return nextTick().then(function () {\n        if (!reactData.zoomLocat) {\n          var marginSize = Math.max(0, XEUtils.toNumber(props.marginSize));\n          var boxElem = getBox();\n\n          var _a = getDomNode(),\n              visibleHeight = _a.visibleHeight,\n              visibleWidth = _a.visibleWidth;\n\n          reactData.zoomLocat = {\n            top: boxElem.offsetTop,\n            left: boxElem.offsetLeft,\n            width: boxElem.offsetWidth + (boxElem.style.width ? 0 : 1),\n            height: boxElem.offsetHeight + (boxElem.style.height ? 0 : 1)\n          };\n          Object.assign(boxElem.style, {\n            top: marginSize + \"px\",\n            left: marginSize + \"px\",\n            width: visibleWidth - marginSize * 2 + \"px\",\n            height: visibleHeight - marginSize * 2 + \"px\"\n          });\n          savePosStorage();\n        }\n      });\n    };\n\n    var openModal = function () {\n      var duration = props.duration,\n          remember = props.remember,\n          showFooter = props.showFooter;\n      var inited = reactData.inited,\n          visible = reactData.visible;\n      var isMsg = computeIsMsg.value;\n\n      if (!inited) {\n        reactData.inited = true;\n      }\n\n      if (!visible) {\n        if (!remember) {\n          recalculate();\n        }\n\n        reactData.visible = true;\n        reactData.contentVisible = false;\n        updateZindex();\n        allActivedModals.push($xemodal);\n        setTimeout(function () {\n          reactData.contentVisible = true;\n          nextTick(function () {\n            if (showFooter) {\n              var confirmBtn = refConfirmBtn.value;\n              var cancelBtn = refCancelBtn.value;\n              var operBtn = confirmBtn || cancelBtn;\n\n              if (operBtn) {\n                operBtn.focus();\n              }\n            }\n\n            var type = '';\n            var params = {\n              type: type\n            };\n            emit('update:modelValue', true);\n            modalMethods.dispatchEvent('show', params);\n          });\n        }, 10);\n\n        if (isMsg) {\n          addMsgQueue();\n\n          if (duration !== -1) {\n            setTimeout(function () {\n              return closeModal('close');\n            }, XEUtils.toNumber(duration));\n          }\n        } else {\n          nextTick(function () {\n            var fullscreen = props.fullscreen;\n            var firstOpen = reactData.firstOpen;\n\n            if (!remember || !firstOpen) {\n              updatePosition().then(function () {\n                setTimeout(function () {\n                  return updatePosition();\n                }, 20);\n              });\n            }\n\n            if (!firstOpen) {\n              reactData.firstOpen = true;\n\n              if (hasPosStorage()) {\n                restorePosStorage();\n              } else if (fullscreen) {\n                nextTick(function () {\n                  return maximize();\n                });\n              }\n            }\n          });\n        }\n      }\n\n      return nextTick();\n    };\n\n    var selfClickEvent = function (evnt) {\n      var el = refElem.value;\n\n      if (props.maskClosable && evnt.target === el) {\n        var type = 'mask';\n        closeModal(type);\n      }\n    };\n\n    var handleGlobalKeydownEvent = function (evnt) {\n      var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n\n      if (isEsc) {\n        var lastModal_1 = XEUtils.max(allActivedModals, function (item) {\n          return item.reactData.modalZindex;\n        }); // 多个时，只关掉最上层的窗口\n\n        if (lastModal_1) {\n          setTimeout(function () {\n            if (lastModal_1 === $xemodal && lastModal_1.props.escClosable) {\n              closeModal('exit');\n            }\n          }, 10);\n        }\n      }\n    };\n\n    var isMaximized = function () {\n      return !!reactData.zoomLocat;\n    };\n\n    var revert = function () {\n      return nextTick().then(function () {\n        var zoomLocat = reactData.zoomLocat;\n\n        if (zoomLocat) {\n          var boxElem = getBox();\n          reactData.zoomLocat = null;\n          Object.assign(boxElem.style, {\n            top: zoomLocat.top + \"px\",\n            left: zoomLocat.left + \"px\",\n            width: zoomLocat.width + \"px\",\n            height: zoomLocat.height + \"px\"\n          });\n          savePosStorage();\n        }\n      });\n    };\n\n    var zoom = function () {\n      if (reactData.zoomLocat) {\n        return revert().then(function () {\n          return isMaximized();\n        });\n      }\n\n      return maximize().then(function () {\n        return isMaximized();\n      });\n    };\n\n    var toggleZoomEvent = function (evnt) {\n      var zoomLocat = reactData.zoomLocat;\n      var params = {\n        type: zoomLocat ? 'revert' : 'max'\n      };\n      return zoom().then(function () {\n        modalMethods.dispatchEvent('zoom', params, evnt);\n      });\n    };\n\n    var getPosition = function () {\n      var isMsg = computeIsMsg.value;\n\n      if (!isMsg) {\n        var boxElem = getBox();\n\n        if (boxElem) {\n          return {\n            top: boxElem.offsetTop,\n            left: boxElem.offsetLeft\n          };\n        }\n      }\n\n      return null;\n    };\n\n    var setPosition = function (top, left) {\n      var isMsg = computeIsMsg.value;\n\n      if (!isMsg) {\n        var boxElem = getBox();\n\n        if (XEUtils.isNumber(top)) {\n          boxElem.style.top = top + \"px\";\n        }\n\n        if (XEUtils.isNumber(left)) {\n          boxElem.style.left = left + \"px\";\n        }\n      }\n\n      return nextTick();\n    };\n\n    var boxMousedownEvent = function () {\n      var modalZindex = reactData.modalZindex;\n\n      if (allActivedModals.some(function (comp) {\n        return comp.reactData.visible && comp.reactData.modalZindex > modalZindex;\n      })) {\n        updateZindex();\n      }\n    };\n\n    var mousedownEvent = function (evnt) {\n      var remember = props.remember,\n          storage = props.storage;\n      var zoomLocat = reactData.zoomLocat;\n      var marginSize = XEUtils.toNumber(props.marginSize);\n      var boxElem = getBox();\n\n      if (!zoomLocat && evnt.button === 0 && !getEventTargetNode(evnt, boxElem, 'trigger--btn').flag) {\n        evnt.preventDefault();\n        var domMousemove_1 = document.onmousemove;\n        var domMouseup_1 = document.onmouseup;\n        var disX_1 = evnt.clientX - boxElem.offsetLeft;\n        var disY_1 = evnt.clientY - boxElem.offsetTop;\n\n        var _a = getDomNode(),\n            visibleHeight_1 = _a.visibleHeight,\n            visibleWidth_1 = _a.visibleWidth;\n\n        document.onmousemove = function (evnt) {\n          evnt.preventDefault();\n          var offsetWidth = boxElem.offsetWidth;\n          var offsetHeight = boxElem.offsetHeight;\n          var minX = marginSize;\n          var maxX = visibleWidth_1 - offsetWidth - marginSize - 1;\n          var minY = marginSize;\n          var maxY = visibleHeight_1 - offsetHeight - marginSize - 1;\n          var left = evnt.clientX - disX_1;\n          var top = evnt.clientY - disY_1;\n\n          if (left > maxX) {\n            left = maxX;\n          }\n\n          if (left < minX) {\n            left = minX;\n          }\n\n          if (top > maxY) {\n            top = maxY;\n          }\n\n          if (top < minY) {\n            top = minY;\n          }\n\n          boxElem.style.left = left + \"px\";\n          boxElem.style.top = top + \"px\";\n        };\n\n        document.onmouseup = function () {\n          document.onmousemove = domMousemove_1;\n          document.onmouseup = domMouseup_1;\n\n          if (remember && storage) {\n            nextTick(function () {\n              savePosStorage();\n            });\n          }\n        };\n      }\n    };\n\n    var dragEvent = function (evnt) {\n      evnt.preventDefault();\n      var remember = props.remember,\n          storage = props.storage;\n\n      var _a = getDomNode(),\n          visibleHeight = _a.visibleHeight,\n          visibleWidth = _a.visibleWidth;\n\n      var marginSize = XEUtils.toNumber(props.marginSize);\n      var targetElem = evnt.target;\n      var type = targetElem.getAttribute('type');\n      var minWidth = XEUtils.toNumber(props.minWidth);\n      var minHeight = XEUtils.toNumber(props.minHeight);\n      var maxWidth = visibleWidth;\n      var maxHeight = visibleHeight;\n      var boxElem = getBox();\n      var domMousemove = document.onmousemove;\n      var domMouseup = document.onmouseup;\n      var clientWidth = boxElem.clientWidth;\n      var clientHeight = boxElem.clientHeight;\n      var disX = evnt.clientX;\n      var disY = evnt.clientY;\n      var offsetTop = boxElem.offsetTop;\n      var offsetLeft = boxElem.offsetLeft;\n      var params = {\n        type: 'resize'\n      };\n\n      document.onmousemove = function (evnt) {\n        evnt.preventDefault();\n        var dragLeft;\n        var dragTop;\n        var width;\n        var height;\n\n        switch (type) {\n          case 'wl':\n            dragLeft = disX - evnt.clientX;\n            width = dragLeft + clientWidth;\n\n            if (offsetLeft - dragLeft > marginSize) {\n              if (width > minWidth) {\n                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                boxElem.style.left = offsetLeft - dragLeft + \"px\";\n              }\n            }\n\n            break;\n\n          case 'swst':\n            dragLeft = disX - evnt.clientX;\n            dragTop = disY - evnt.clientY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft - dragLeft > marginSize) {\n              if (width > minWidth) {\n                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                boxElem.style.left = offsetLeft - dragLeft + \"px\";\n              }\n            }\n\n            if (offsetTop - dragTop > marginSize) {\n              if (height > minHeight) {\n                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                boxElem.style.top = offsetTop - dragTop + \"px\";\n              }\n            }\n\n            break;\n\n          case 'swlb':\n            dragLeft = disX - evnt.clientX;\n            dragTop = evnt.clientY - disY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft - dragLeft > marginSize) {\n              if (width > minWidth) {\n                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                boxElem.style.left = offsetLeft - dragLeft + \"px\";\n              }\n            }\n\n            if (offsetTop + height + marginSize < visibleHeight) {\n              if (height > minHeight) {\n                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n              }\n            }\n\n            break;\n\n          case 'st':\n            dragTop = disY - evnt.clientY;\n            height = clientHeight + dragTop;\n\n            if (offsetTop - dragTop > marginSize) {\n              if (height > minHeight) {\n                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                boxElem.style.top = offsetTop - dragTop + \"px\";\n              }\n            }\n\n            break;\n\n          case 'wr':\n            dragLeft = evnt.clientX - disX;\n            width = dragLeft + clientWidth;\n\n            if (offsetLeft + width + marginSize < visibleWidth) {\n              if (width > minWidth) {\n                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n              }\n            }\n\n            break;\n\n          case 'sest':\n            dragLeft = evnt.clientX - disX;\n            dragTop = disY - evnt.clientY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft + width + marginSize < visibleWidth) {\n              if (width > minWidth) {\n                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n              }\n            }\n\n            if (offsetTop - dragTop > marginSize) {\n              if (height > minHeight) {\n                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                boxElem.style.top = offsetTop - dragTop + \"px\";\n              }\n            }\n\n            break;\n\n          case 'selb':\n            dragLeft = evnt.clientX - disX;\n            dragTop = evnt.clientY - disY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft + width + marginSize < visibleWidth) {\n              if (width > minWidth) {\n                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n              }\n            }\n\n            if (offsetTop + height + marginSize < visibleHeight) {\n              if (height > minHeight) {\n                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n              }\n            }\n\n            break;\n\n          case 'sb':\n            dragTop = evnt.clientY - disY;\n            height = dragTop + clientHeight;\n\n            if (offsetTop + height + marginSize < visibleHeight) {\n              if (height > minHeight) {\n                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n              }\n            }\n\n            break;\n        }\n\n        boxElem.className = boxElem.className.replace(/\\s?is--drag/, '') + ' is--drag';\n\n        if (remember && storage) {\n          savePosStorage();\n        }\n\n        modalMethods.dispatchEvent('zoom', params, evnt);\n      };\n\n      document.onmouseup = function () {\n        reactData.zoomLocat = null;\n        document.onmousemove = domMousemove;\n        document.onmouseup = domMouseup;\n        setTimeout(function () {\n          boxElem.className = boxElem.className.replace(/\\s?is--drag/, '');\n        }, 50);\n      };\n    };\n\n    var renderTitles = function () {\n      var _a = props.slots,\n          propSlots = _a === void 0 ? {} : _a,\n          showClose = props.showClose,\n          showZoom = props.showZoom,\n          title = props.title;\n      var zoomLocat = reactData.zoomLocat;\n      var titleSlot = slots.title || propSlots.title;\n      var titVNs = titleSlot ? titleSlot({\n        $modal: $xemodal\n      }) : [h('span', {\n        class: 'vxe-modal--title'\n      }, title ? getFuncText(title) : GlobalConfig.i18n('vxe.alert.title'))];\n\n      if (showZoom) {\n        titVNs.push(h('i', {\n          class: ['vxe-modal--zoom-btn', 'trigger--btn', zoomLocat ? GlobalConfig.icon.MODAL_ZOOM_OUT : GlobalConfig.icon.MODAL_ZOOM_IN],\n          title: GlobalConfig.i18n(\"vxe.modal.zoom\" + (zoomLocat ? 'Out' : 'In')),\n          onClick: toggleZoomEvent\n        }));\n      }\n\n      if (showClose) {\n        titVNs.push(h('i', {\n          class: ['vxe-modal--close-btn', 'trigger--btn', GlobalConfig.icon.MODAL_CLOSE],\n          title: GlobalConfig.i18n('vxe.modal.close'),\n          onClick: closeEvent\n        }));\n      }\n\n      return titVNs;\n    };\n\n    var renderHeaders = function () {\n      var _a = props.slots,\n          propSlots = _a === void 0 ? {} : _a,\n          showZoom = props.showZoom,\n          draggable = props.draggable;\n      var isMsg = computeIsMsg.value;\n      var headerSlot = slots.header || propSlots.header;\n      var headVNs = [];\n\n      if (props.showHeader) {\n        var headerOns = {};\n\n        if (draggable) {\n          headerOns.onMousedown = mousedownEvent;\n        }\n\n        if (showZoom && props.dblclickZoom && props.type === 'modal') {\n          headerOns.onDblclick = toggleZoomEvent;\n        }\n\n        headVNs.push(h('div', __assign({\n          class: ['vxe-modal--header', {\n            'is--drag': draggable,\n            'is--ellipsis': !isMsg && props.showTitleOverflow\n          }]\n        }, headerOns), headerSlot ? !reactData.inited || props.destroyOnClose && !reactData.visible ? [] : headerSlot({\n          $modal: $xemodal\n        }) : renderTitles()));\n      }\n\n      return headVNs;\n    };\n\n    var renderBodys = function () {\n      var _a = props.slots,\n          propSlots = _a === void 0 ? {} : _a,\n          status = props.status,\n          message = props.message;\n      var content = props.content || message;\n      var isMsg = computeIsMsg.value;\n      var defaultSlot = slots.default || propSlots.default;\n      var contVNs = [];\n\n      if (status) {\n        contVNs.push(h('div', {\n          class: 'vxe-modal--status-wrapper'\n        }, [h('i', {\n          class: ['vxe-modal--status-icon', props.iconStatus || GlobalConfig.icon[(\"MODAL_\" + status).toLocaleUpperCase()]]\n        })]));\n      }\n\n      contVNs.push(h('div', {\n        class: 'vxe-modal--content'\n      }, defaultSlot ? !reactData.inited || props.destroyOnClose && !reactData.visible ? [] : defaultSlot({\n        $modal: $xemodal\n      }) : getFuncText(content)));\n\n      if (!isMsg) {\n        contVNs.push(h('div', {\n          class: ['vxe-loading', {\n            'is--visible': props.loading\n          }]\n        }, [h('div', {\n          class: 'vxe-loading--spinner'\n        })]));\n      }\n\n      return [h('div', {\n        class: 'vxe-modal--body'\n      }, contVNs)];\n    };\n\n    var renderBtns = function () {\n      var type = props.type;\n      var btnVNs = [];\n\n      if (type === 'confirm') {\n        btnVNs.push(h(VxeButtonConstructor, {\n          ref: refCancelBtn,\n          content: props.cancelButtonText || GlobalConfig.i18n('vxe.button.cancel'),\n          onClick: cancelEvent\n        }));\n      }\n\n      btnVNs.push(h(VxeButtonConstructor, {\n        ref: refConfirmBtn,\n        status: 'primary',\n        content: props.confirmButtonText || GlobalConfig.i18n('vxe.button.confirm'),\n        onClick: confirmEvent\n      }));\n      return btnVNs;\n    };\n\n    var renderFooters = function () {\n      var _a = props.slots,\n          propSlots = _a === void 0 ? {} : _a;\n      var isMsg = computeIsMsg.value;\n      var footerSlot = slots.footer || propSlots.footer;\n      var footVNs = [];\n\n      if (props.showFooter) {\n        footVNs.push(h('div', {\n          class: 'vxe-modal--footer'\n        }, footerSlot ? !reactData.inited || props.destroyOnClose && !reactData.visible ? [] : footerSlot({\n          $modal: $xemodal\n        }) : renderBtns()));\n      }\n\n      if (!isMsg && props.resize) {\n        footVNs.push(h('span', {\n          class: 'vxe-modal--resize'\n        }, ['wl', 'wr', 'swst', 'sest', 'st', 'swlb', 'selb', 'sb'].map(function (type) {\n          return h('span', {\n            class: type + \"-resize\",\n            type: type,\n            onMousedown: dragEvent\n          });\n        })));\n      }\n\n      return footVNs;\n    };\n\n    modalMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $modal: $xemodal,\n          $event: evnt\n        }, params));\n      },\n      open: openModal,\n      close: function () {\n        return closeModal('close');\n      },\n      getBox: getBox,\n      getPosition: getPosition,\n      setPosition: setPosition,\n      isMaximized: isMaximized,\n      zoom: zoom,\n      maximize: maximize,\n      revert: revert\n    };\n    Object.assign($xemodal, modalMethods);\n    watch(function () {\n      return props.width;\n    }, recalculate);\n    watch(function () {\n      return props.height;\n    }, recalculate);\n    watch(function () {\n      return props.modelValue;\n    }, function (value) {\n      if (value) {\n        openModal();\n      } else {\n        closeModal('model');\n      }\n    });\n    onMounted(function () {\n      nextTick(function () {\n        if (props.storage && !props.id) {\n          errLog('vxe.error.reqProp', ['modal.id']);\n        }\n\n        if (props.modelValue) {\n          openModal();\n        }\n\n        recalculate();\n      });\n\n      if (props.escClosable) {\n        GlobalEvent.on($xemodal, 'keydown', handleGlobalKeydownEvent);\n      }\n    });\n    onUnmounted(function () {\n      GlobalEvent.off($xemodal, 'keydown');\n      removeMsgQueue();\n    });\n\n    var renderVN = function () {\n      var _a;\n\n      var className = props.className,\n          type = props.type,\n          animat = props.animat,\n          loading = props.loading,\n          status = props.status,\n          lockScroll = props.lockScroll,\n          lockView = props.lockView,\n          mask = props.mask,\n          resize = props.resize;\n      var inited = reactData.inited,\n          zoomLocat = reactData.zoomLocat,\n          modalTop = reactData.modalTop,\n          contentVisible = reactData.contentVisible,\n          visible = reactData.visible;\n      var vSize = computeSize.value;\n      return h(Teleport, {\n        to: 'body',\n        disabled: props.transfer ? !inited : true\n      }, [h('div', {\n        ref: refElem,\n        class: ['vxe-modal--wrapper', \"type--\" + type, className || '', (_a = {}, _a[\"size--\" + vSize] = vSize, _a[\"status--\" + status] = status, _a['is--animat'] = animat, _a['lock--scroll'] = lockScroll, _a['lock--view'] = lockView, _a['is--resize'] = resize, _a['is--mask'] = mask, _a['is--maximize'] = zoomLocat, _a['is--visible'] = contentVisible, _a['is--active'] = visible, _a['is--loading'] = loading, _a)],\n        style: {\n          zIndex: reactData.modalZindex,\n          top: modalTop ? modalTop + \"px\" : null\n        },\n        onClick: selfClickEvent\n      }, [h('div', {\n        ref: refModalBox,\n        class: 'vxe-modal--box',\n        onMousedown: boxMousedownEvent\n      }, renderHeaders().concat(renderBodys(), renderFooters()))])]);\n    };\n\n    $xemodal.renderVN = renderVN;\n    return $xemodal;\n  },\n  render: function () {\n    return this.renderVN();\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/modal/src/modal.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineComponent","h","Teleport","ref","computed","reactive","nextTick","watch","onMounted","onUnmounted","XEUtils","useSize","getDomNode","getEventTargetNode","getLastZIndex","nextZIndex","getFuncText","errLog","GlobalEvent","hasEventKey","EVENT_KEYS","GlobalConfig","VxeButtonConstructor","allActivedModals","msgQueue","name","props","modelValue","Boolean","id","String","type","default","loading","status","iconStatus","className","top","Number","modal","position","title","duration","message","content","cancelButtonText","confirmButtonText","lockView","lockScroll","mask","maskClosable","escClosable","resize","showHeader","showFooter","showZoom","showClose","dblclickZoom","width","height","minWidth","minHeight","zIndex","marginSize","fullscreen","draggable","remember","destroyOnClose","showTitleOverflow","transfer","storage","storageKey","animat","size","beforeHideMethod","Function","slots","emits","setup","context","emit","xID","uniqueId","computeSize","reactData","inited","visible","contentVisible","modalTop","modalZindex","zoomLocat","firstOpen","refElem","refModalBox","refConfirmBtn","refCancelBtn","refMaps","$xemodal","getRefMaps","modalMethods","computeIsMsg","getBox","boxElem","value","recalculate","style","isNaN","updateZindex","updatePosition","then","toNumber","clientVisibleWidth","document","documentElement","clientWidth","body","clientVisibleHeight","clientHeight","isPosCenter","_a","isString","left","topCenter","leftCenter","posTop","posLeft","Math","max","offsetWidth","offsetHeight","updateStyle","offsetTop","forEach","comp","removeMsgQueue","indexOf","remove","closeModal","isMsg","params","Promise","resolve","rest","isError","item","dispatchEvent","setTimeout","catch","e","closeEvent","evnt","confirmEvent","cancelEvent","getStorageMap","key","version","toStringJSON","localStorage","getItem","_v","hasPosStorage","restorePosStorage","posStorage","split","top_1","zoomLeft","zoomTop","zoomWidth","zoomHeight","addMsgQueue","push","savePosStorage","posStorageMap","concat","map","val","join","setItem","toJSONString","maximize","visibleHeight","visibleWidth","offsetLeft","openModal","confirmBtn","cancelBtn","operBtn","focus","selfClickEvent","el","target","handleGlobalKeydownEvent","isEsc","ESCAPE","lastModal_1","isMaximized","revert","zoom","toggleZoomEvent","getPosition","setPosition","isNumber","boxMousedownEvent","some","mousedownEvent","button","flag","preventDefault","domMousemove_1","onmousemove","domMouseup_1","onmouseup","disX_1","clientX","disY_1","clientY","visibleHeight_1","visibleWidth_1","minX","maxX","minY","maxY","dragEvent","targetElem","getAttribute","maxWidth","maxHeight","domMousemove","domMouseup","disX","disY","dragLeft","dragTop","replace","renderTitles","propSlots","titleSlot","titVNs","$modal","class","i18n","icon","MODAL_ZOOM_OUT","MODAL_ZOOM_IN","onClick","MODAL_CLOSE","renderHeaders","headerSlot","header","headVNs","headerOns","onMousedown","onDblclick","renderBodys","defaultSlot","contVNs","toLocaleUpperCase","renderBtns","btnVNs","renderFooters","footerSlot","footer","footVNs","$event","open","close","on","off","renderVN","vSize","to","disabled","render"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { defineComponent, h, Teleport, ref, computed, reactive, nextTick, watch, onMounted, onUnmounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { useSize } from '../../hooks/size';\nimport { getDomNode, getEventTargetNode } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex, getFuncText } from '../../tools/utils';\nimport { errLog } from '../../tools/log';\nimport { GlobalEvent, hasEventKey, EVENT_KEYS } from '../../tools/event';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport VxeButtonConstructor from '../../button/src/button';\nexport var allActivedModals = [];\nexport var msgQueue = [];\nexport default defineComponent({\n    name: 'VxeModal',\n    props: {\n        modelValue: Boolean,\n        id: String,\n        type: { type: String, default: 'modal' },\n        loading: { type: Boolean, default: null },\n        status: String,\n        iconStatus: String,\n        className: String,\n        top: { type: [Number, String], default: function () { return GlobalConfig.modal.top; } },\n        position: [String, Object],\n        title: String,\n        duration: { type: [Number, String], default: function () { return GlobalConfig.modal.duration; } },\n        message: [Number, String],\n        content: [Number, String],\n        cancelButtonText: { type: String, default: function () { return GlobalConfig.modal.cancelButtonText; } },\n        confirmButtonText: { type: String, default: function () { return GlobalConfig.modal.confirmButtonText; } },\n        lockView: { type: Boolean, default: function () { return GlobalConfig.modal.lockView; } },\n        lockScroll: Boolean,\n        mask: { type: Boolean, default: function () { return GlobalConfig.modal.mask; } },\n        maskClosable: { type: Boolean, default: function () { return GlobalConfig.modal.maskClosable; } },\n        escClosable: { type: Boolean, default: function () { return GlobalConfig.modal.escClosable; } },\n        resize: Boolean,\n        showHeader: { type: Boolean, default: function () { return GlobalConfig.modal.showHeader; } },\n        showFooter: { type: Boolean, default: function () { return GlobalConfig.modal.showFooter; } },\n        showZoom: Boolean,\n        showClose: { type: Boolean, default: function () { return GlobalConfig.modal.showClose; } },\n        dblclickZoom: { type: Boolean, default: function () { return GlobalConfig.modal.dblclickZoom; } },\n        width: [Number, String],\n        height: [Number, String],\n        minWidth: { type: [Number, String], default: function () { return GlobalConfig.modal.minWidth; } },\n        minHeight: { type: [Number, String], default: function () { return GlobalConfig.modal.minHeight; } },\n        zIndex: Number,\n        marginSize: { type: [Number, String], default: function () { return GlobalConfig.modal.marginSize; } },\n        fullscreen: Boolean,\n        draggable: { type: Boolean, default: function () { return GlobalConfig.modal.draggable; } },\n        remember: { type: Boolean, default: function () { return GlobalConfig.modal.remember; } },\n        destroyOnClose: { type: Boolean, default: function () { return GlobalConfig.modal.destroyOnClose; } },\n        showTitleOverflow: { type: Boolean, default: function () { return GlobalConfig.modal.showTitleOverflow; } },\n        transfer: { type: Boolean, default: function () { return GlobalConfig.modal.transfer; } },\n        storage: { type: Boolean, default: function () { return GlobalConfig.modal.storage; } },\n        storageKey: { type: String, default: function () { return GlobalConfig.modal.storageKey; } },\n        animat: { type: Boolean, default: function () { return GlobalConfig.modal.animat; } },\n        size: { type: String, default: function () { return GlobalConfig.modal.size || GlobalConfig.size; } },\n        beforeHideMethod: { type: Function, default: function () { return GlobalConfig.modal.beforeHideMethod; } },\n        slots: Object\n    },\n    emits: [\n        'update:modelValue',\n        'show',\n        'hide',\n        'before-hide',\n        'close',\n        'confirm',\n        'cancel',\n        'zoom'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var computeSize = useSize(props);\n        var reactData = reactive({\n            inited: false,\n            visible: false,\n            contentVisible: false,\n            modalTop: 0,\n            modalZindex: 0,\n            zoomLocat: null,\n            firstOpen: false\n        });\n        var refElem = ref();\n        var refModalBox = ref();\n        var refConfirmBtn = ref();\n        var refCancelBtn = ref();\n        var refMaps = {\n            refElem: refElem\n        };\n        var $xemodal = {\n            xID: xID,\n            props: props,\n            context: context,\n            reactData: reactData,\n            getRefMaps: function () { return refMaps; }\n        };\n        var modalMethods = {};\n        var computeIsMsg = computed(function () {\n            return props.type === 'message';\n        });\n        var getBox = function () {\n            var boxElem = refModalBox.value;\n            return boxElem;\n        };\n        var recalculate = function () {\n            var width = props.width, height = props.height;\n            var boxElem = getBox();\n            boxElem.style.width = \"\" + (width ? (isNaN(width) ? width : width + \"px\") : '');\n            boxElem.style.height = \"\" + (height ? (isNaN(height) ? height : height + \"px\") : '');\n            return nextTick();\n        };\n        var updateZindex = function () {\n            var zIndex = props.zIndex;\n            var modalZindex = reactData.modalZindex;\n            if (zIndex) {\n                reactData.modalZindex = zIndex;\n            }\n            else if (modalZindex < getLastZIndex()) {\n                reactData.modalZindex = nextZIndex();\n            }\n        };\n        var updatePosition = function () {\n            return nextTick().then(function () {\n                var position = props.position;\n                var marginSize = XEUtils.toNumber(props.marginSize);\n                var boxElem = getBox();\n                var clientVisibleWidth = document.documentElement.clientWidth || document.body.clientWidth;\n                var clientVisibleHeight = document.documentElement.clientHeight || document.body.clientHeight;\n                var isPosCenter = position === 'center';\n                var _a = XEUtils.isString(position) ? { top: position, left: position } : Object.assign({}, position), top = _a.top, left = _a.left;\n                var topCenter = isPosCenter || top === 'center';\n                var leftCenter = isPosCenter || left === 'center';\n                var posTop = '';\n                var posLeft = '';\n                if (left && !leftCenter) {\n                    posLeft = isNaN(left) ? left : left + \"px\";\n                }\n                else {\n                    posLeft = Math.max(marginSize, clientVisibleWidth / 2 - boxElem.offsetWidth / 2) + \"px\";\n                }\n                if (top && !topCenter) {\n                    posTop = isNaN(top) ? top : top + \"px\";\n                }\n                else {\n                    posTop = Math.max(marginSize, clientVisibleHeight / 2 - boxElem.offsetHeight / 2) + \"px\";\n                }\n                boxElem.style.top = posTop;\n                boxElem.style.left = posLeft;\n            });\n        };\n        var updateStyle = function () {\n            nextTick(function () {\n                var offsetTop = 0;\n                msgQueue.forEach(function (comp) {\n                    var boxElem = comp.getBox();\n                    offsetTop += XEUtils.toNumber(comp.props.top);\n                    comp.reactData.modalTop = offsetTop;\n                    offsetTop += boxElem.clientHeight;\n                });\n            });\n        };\n        var removeMsgQueue = function () {\n            if (msgQueue.indexOf($xemodal) > -1) {\n                XEUtils.remove(msgQueue, function (comp) { return comp === $xemodal; });\n            }\n            updateStyle();\n        };\n        var closeModal = function (type) {\n            var remember = props.remember, beforeHideMethod = props.beforeHideMethod;\n            var visible = reactData.visible;\n            var isMsg = computeIsMsg.value;\n            var params = { type: type };\n            if (visible) {\n                Promise.resolve(beforeHideMethod ? beforeHideMethod(params) : null).then(function (rest) {\n                    if (!XEUtils.isError(rest)) {\n                        if (isMsg) {\n                            removeMsgQueue();\n                        }\n                        reactData.contentVisible = false;\n                        if (!remember) {\n                            reactData.zoomLocat = null;\n                        }\n                        XEUtils.remove(allActivedModals, function (item) { return item === $xemodal; });\n                        modalMethods.dispatchEvent('before-hide', params);\n                        setTimeout(function () {\n                            reactData.visible = false;\n                            emit('update:modelValue', false);\n                            modalMethods.dispatchEvent('hide', params);\n                        }, 200);\n                    }\n                }).catch(function (e) { return e; });\n            }\n            return nextTick();\n        };\n        var closeEvent = function (evnt) {\n            var type = 'close';\n            modalMethods.dispatchEvent(type, { type: type }, evnt);\n            closeModal(type);\n        };\n        var confirmEvent = function (evnt) {\n            var type = 'confirm';\n            modalMethods.dispatchEvent(type, { type: type }, evnt);\n            closeModal(type);\n        };\n        var cancelEvent = function (evnt) {\n            var type = 'cancel';\n            modalMethods.dispatchEvent(type, { type: type }, evnt);\n            closeModal(type);\n        };\n        var getStorageMap = function (key) {\n            var version = GlobalConfig.version;\n            var rest = XEUtils.toStringJSON(localStorage.getItem(key) || '');\n            return rest && rest._v === version ? rest : { _v: version };\n        };\n        var hasPosStorage = function () {\n            var id = props.id, remember = props.remember, storage = props.storage, storageKey = props.storageKey;\n            return !!(id && remember && storage && getStorageMap(storageKey)[id]);\n        };\n        var restorePosStorage = function () {\n            var id = props.id, remember = props.remember, storage = props.storage, storageKey = props.storageKey;\n            if (id && remember && storage) {\n                var posStorage = getStorageMap(storageKey)[id];\n                if (posStorage) {\n                    var boxElem = getBox();\n                    var _a = posStorage.split(','), left = _a[0], top_1 = _a[1], width = _a[2], height = _a[3], zoomLeft = _a[4], zoomTop = _a[5], zoomWidth = _a[6], zoomHeight = _a[7];\n                    if (left) {\n                        boxElem.style.left = left + \"px\";\n                    }\n                    if (top_1) {\n                        boxElem.style.top = top_1 + \"px\";\n                    }\n                    if (width) {\n                        boxElem.style.width = width + \"px\";\n                    }\n                    if (height) {\n                        boxElem.style.height = height + \"px\";\n                    }\n                    if (zoomLeft && zoomTop) {\n                        reactData.zoomLocat = {\n                            left: zoomLeft,\n                            top: zoomTop,\n                            width: zoomWidth,\n                            height: zoomHeight\n                        };\n                    }\n                }\n            }\n        };\n        var addMsgQueue = function () {\n            if (msgQueue.indexOf($xemodal) === -1) {\n                msgQueue.push($xemodal);\n            }\n            updateStyle();\n        };\n        var savePosStorage = function () {\n            var id = props.id, remember = props.remember, storage = props.storage, storageKey = props.storageKey;\n            var zoomLocat = reactData.zoomLocat;\n            if (id && remember && storage) {\n                var boxElem = getBox();\n                var posStorageMap = getStorageMap(storageKey);\n                posStorageMap[id] = [\n                    boxElem.style.left,\n                    boxElem.style.top,\n                    boxElem.style.width,\n                    boxElem.style.height\n                ].concat(zoomLocat ? [\n                    zoomLocat.left,\n                    zoomLocat.top,\n                    zoomLocat.width,\n                    zoomLocat.height\n                ] : []).map(function (val) { return val ? XEUtils.toNumber(val) : ''; }).join(',');\n                localStorage.setItem(storageKey, XEUtils.toJSONString(posStorageMap));\n            }\n        };\n        var maximize = function () {\n            return nextTick().then(function () {\n                if (!reactData.zoomLocat) {\n                    var marginSize = Math.max(0, XEUtils.toNumber(props.marginSize));\n                    var boxElem = getBox();\n                    var _a = getDomNode(), visibleHeight = _a.visibleHeight, visibleWidth = _a.visibleWidth;\n                    reactData.zoomLocat = {\n                        top: boxElem.offsetTop,\n                        left: boxElem.offsetLeft,\n                        width: boxElem.offsetWidth + (boxElem.style.width ? 0 : 1),\n                        height: boxElem.offsetHeight + (boxElem.style.height ? 0 : 1)\n                    };\n                    Object.assign(boxElem.style, {\n                        top: marginSize + \"px\",\n                        left: marginSize + \"px\",\n                        width: visibleWidth - marginSize * 2 + \"px\",\n                        height: visibleHeight - marginSize * 2 + \"px\"\n                    });\n                    savePosStorage();\n                }\n            });\n        };\n        var openModal = function () {\n            var duration = props.duration, remember = props.remember, showFooter = props.showFooter;\n            var inited = reactData.inited, visible = reactData.visible;\n            var isMsg = computeIsMsg.value;\n            if (!inited) {\n                reactData.inited = true;\n            }\n            if (!visible) {\n                if (!remember) {\n                    recalculate();\n                }\n                reactData.visible = true;\n                reactData.contentVisible = false;\n                updateZindex();\n                allActivedModals.push($xemodal);\n                setTimeout(function () {\n                    reactData.contentVisible = true;\n                    nextTick(function () {\n                        if (showFooter) {\n                            var confirmBtn = refConfirmBtn.value;\n                            var cancelBtn = refCancelBtn.value;\n                            var operBtn = confirmBtn || cancelBtn;\n                            if (operBtn) {\n                                operBtn.focus();\n                            }\n                        }\n                        var type = '';\n                        var params = { type: type };\n                        emit('update:modelValue', true);\n                        modalMethods.dispatchEvent('show', params);\n                    });\n                }, 10);\n                if (isMsg) {\n                    addMsgQueue();\n                    if (duration !== -1) {\n                        setTimeout(function () { return closeModal('close'); }, XEUtils.toNumber(duration));\n                    }\n                }\n                else {\n                    nextTick(function () {\n                        var fullscreen = props.fullscreen;\n                        var firstOpen = reactData.firstOpen;\n                        if (!remember || !firstOpen) {\n                            updatePosition().then(function () {\n                                setTimeout(function () { return updatePosition(); }, 20);\n                            });\n                        }\n                        if (!firstOpen) {\n                            reactData.firstOpen = true;\n                            if (hasPosStorage()) {\n                                restorePosStorage();\n                            }\n                            else if (fullscreen) {\n                                nextTick(function () { return maximize(); });\n                            }\n                        }\n                    });\n                }\n            }\n            return nextTick();\n        };\n        var selfClickEvent = function (evnt) {\n            var el = refElem.value;\n            if (props.maskClosable && evnt.target === el) {\n                var type = 'mask';\n                closeModal(type);\n            }\n        };\n        var handleGlobalKeydownEvent = function (evnt) {\n            var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n            if (isEsc) {\n                var lastModal_1 = XEUtils.max(allActivedModals, function (item) { return item.reactData.modalZindex; });\n                // 多个时，只关掉最上层的窗口\n                if (lastModal_1) {\n                    setTimeout(function () {\n                        if (lastModal_1 === $xemodal && lastModal_1.props.escClosable) {\n                            closeModal('exit');\n                        }\n                    }, 10);\n                }\n            }\n        };\n        var isMaximized = function () {\n            return !!reactData.zoomLocat;\n        };\n        var revert = function () {\n            return nextTick().then(function () {\n                var zoomLocat = reactData.zoomLocat;\n                if (zoomLocat) {\n                    var boxElem = getBox();\n                    reactData.zoomLocat = null;\n                    Object.assign(boxElem.style, {\n                        top: zoomLocat.top + \"px\",\n                        left: zoomLocat.left + \"px\",\n                        width: zoomLocat.width + \"px\",\n                        height: zoomLocat.height + \"px\"\n                    });\n                    savePosStorage();\n                }\n            });\n        };\n        var zoom = function () {\n            if (reactData.zoomLocat) {\n                return revert().then(function () { return isMaximized(); });\n            }\n            return maximize().then(function () { return isMaximized(); });\n        };\n        var toggleZoomEvent = function (evnt) {\n            var zoomLocat = reactData.zoomLocat;\n            var params = { type: zoomLocat ? 'revert' : 'max' };\n            return zoom().then(function () {\n                modalMethods.dispatchEvent('zoom', params, evnt);\n            });\n        };\n        var getPosition = function () {\n            var isMsg = computeIsMsg.value;\n            if (!isMsg) {\n                var boxElem = getBox();\n                if (boxElem) {\n                    return {\n                        top: boxElem.offsetTop,\n                        left: boxElem.offsetLeft\n                    };\n                }\n            }\n            return null;\n        };\n        var setPosition = function (top, left) {\n            var isMsg = computeIsMsg.value;\n            if (!isMsg) {\n                var boxElem = getBox();\n                if (XEUtils.isNumber(top)) {\n                    boxElem.style.top = top + \"px\";\n                }\n                if (XEUtils.isNumber(left)) {\n                    boxElem.style.left = left + \"px\";\n                }\n            }\n            return nextTick();\n        };\n        var boxMousedownEvent = function () {\n            var modalZindex = reactData.modalZindex;\n            if (allActivedModals.some(function (comp) { return comp.reactData.visible && comp.reactData.modalZindex > modalZindex; })) {\n                updateZindex();\n            }\n        };\n        var mousedownEvent = function (evnt) {\n            var remember = props.remember, storage = props.storage;\n            var zoomLocat = reactData.zoomLocat;\n            var marginSize = XEUtils.toNumber(props.marginSize);\n            var boxElem = getBox();\n            if (!zoomLocat && evnt.button === 0 && !getEventTargetNode(evnt, boxElem, 'trigger--btn').flag) {\n                evnt.preventDefault();\n                var domMousemove_1 = document.onmousemove;\n                var domMouseup_1 = document.onmouseup;\n                var disX_1 = evnt.clientX - boxElem.offsetLeft;\n                var disY_1 = evnt.clientY - boxElem.offsetTop;\n                var _a = getDomNode(), visibleHeight_1 = _a.visibleHeight, visibleWidth_1 = _a.visibleWidth;\n                document.onmousemove = function (evnt) {\n                    evnt.preventDefault();\n                    var offsetWidth = boxElem.offsetWidth;\n                    var offsetHeight = boxElem.offsetHeight;\n                    var minX = marginSize;\n                    var maxX = visibleWidth_1 - offsetWidth - marginSize - 1;\n                    var minY = marginSize;\n                    var maxY = visibleHeight_1 - offsetHeight - marginSize - 1;\n                    var left = evnt.clientX - disX_1;\n                    var top = evnt.clientY - disY_1;\n                    if (left > maxX) {\n                        left = maxX;\n                    }\n                    if (left < minX) {\n                        left = minX;\n                    }\n                    if (top > maxY) {\n                        top = maxY;\n                    }\n                    if (top < minY) {\n                        top = minY;\n                    }\n                    boxElem.style.left = left + \"px\";\n                    boxElem.style.top = top + \"px\";\n                };\n                document.onmouseup = function () {\n                    document.onmousemove = domMousemove_1;\n                    document.onmouseup = domMouseup_1;\n                    if (remember && storage) {\n                        nextTick(function () {\n                            savePosStorage();\n                        });\n                    }\n                };\n            }\n        };\n        var dragEvent = function (evnt) {\n            evnt.preventDefault();\n            var remember = props.remember, storage = props.storage;\n            var _a = getDomNode(), visibleHeight = _a.visibleHeight, visibleWidth = _a.visibleWidth;\n            var marginSize = XEUtils.toNumber(props.marginSize);\n            var targetElem = evnt.target;\n            var type = targetElem.getAttribute('type');\n            var minWidth = XEUtils.toNumber(props.minWidth);\n            var minHeight = XEUtils.toNumber(props.minHeight);\n            var maxWidth = visibleWidth;\n            var maxHeight = visibleHeight;\n            var boxElem = getBox();\n            var domMousemove = document.onmousemove;\n            var domMouseup = document.onmouseup;\n            var clientWidth = boxElem.clientWidth;\n            var clientHeight = boxElem.clientHeight;\n            var disX = evnt.clientX;\n            var disY = evnt.clientY;\n            var offsetTop = boxElem.offsetTop;\n            var offsetLeft = boxElem.offsetLeft;\n            var params = { type: 'resize' };\n            document.onmousemove = function (evnt) {\n                evnt.preventDefault();\n                var dragLeft;\n                var dragTop;\n                var width;\n                var height;\n                switch (type) {\n                    case 'wl':\n                        dragLeft = disX - evnt.clientX;\n                        width = dragLeft + clientWidth;\n                        if (offsetLeft - dragLeft > marginSize) {\n                            if (width > minWidth) {\n                                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                                boxElem.style.left = offsetLeft - dragLeft + \"px\";\n                            }\n                        }\n                        break;\n                    case 'swst':\n                        dragLeft = disX - evnt.clientX;\n                        dragTop = disY - evnt.clientY;\n                        width = dragLeft + clientWidth;\n                        height = dragTop + clientHeight;\n                        if (offsetLeft - dragLeft > marginSize) {\n                            if (width > minWidth) {\n                                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                                boxElem.style.left = offsetLeft - dragLeft + \"px\";\n                            }\n                        }\n                        if (offsetTop - dragTop > marginSize) {\n                            if (height > minHeight) {\n                                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                                boxElem.style.top = offsetTop - dragTop + \"px\";\n                            }\n                        }\n                        break;\n                    case 'swlb':\n                        dragLeft = disX - evnt.clientX;\n                        dragTop = evnt.clientY - disY;\n                        width = dragLeft + clientWidth;\n                        height = dragTop + clientHeight;\n                        if (offsetLeft - dragLeft > marginSize) {\n                            if (width > minWidth) {\n                                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                                boxElem.style.left = offsetLeft - dragLeft + \"px\";\n                            }\n                        }\n                        if (offsetTop + height + marginSize < visibleHeight) {\n                            if (height > minHeight) {\n                                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                            }\n                        }\n                        break;\n                    case 'st':\n                        dragTop = disY - evnt.clientY;\n                        height = clientHeight + dragTop;\n                        if (offsetTop - dragTop > marginSize) {\n                            if (height > minHeight) {\n                                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                                boxElem.style.top = offsetTop - dragTop + \"px\";\n                            }\n                        }\n                        break;\n                    case 'wr':\n                        dragLeft = evnt.clientX - disX;\n                        width = dragLeft + clientWidth;\n                        if (offsetLeft + width + marginSize < visibleWidth) {\n                            if (width > minWidth) {\n                                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                            }\n                        }\n                        break;\n                    case 'sest':\n                        dragLeft = evnt.clientX - disX;\n                        dragTop = disY - evnt.clientY;\n                        width = dragLeft + clientWidth;\n                        height = dragTop + clientHeight;\n                        if (offsetLeft + width + marginSize < visibleWidth) {\n                            if (width > minWidth) {\n                                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                            }\n                        }\n                        if (offsetTop - dragTop > marginSize) {\n                            if (height > minHeight) {\n                                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                                boxElem.style.top = offsetTop - dragTop + \"px\";\n                            }\n                        }\n                        break;\n                    case 'selb':\n                        dragLeft = evnt.clientX - disX;\n                        dragTop = evnt.clientY - disY;\n                        width = dragLeft + clientWidth;\n                        height = dragTop + clientHeight;\n                        if (offsetLeft + width + marginSize < visibleWidth) {\n                            if (width > minWidth) {\n                                boxElem.style.width = (width < maxWidth ? width : maxWidth) + \"px\";\n                            }\n                        }\n                        if (offsetTop + height + marginSize < visibleHeight) {\n                            if (height > minHeight) {\n                                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                            }\n                        }\n                        break;\n                    case 'sb':\n                        dragTop = evnt.clientY - disY;\n                        height = dragTop + clientHeight;\n                        if (offsetTop + height + marginSize < visibleHeight) {\n                            if (height > minHeight) {\n                                boxElem.style.height = (height < maxHeight ? height : maxHeight) + \"px\";\n                            }\n                        }\n                        break;\n                }\n                boxElem.className = boxElem.className.replace(/\\s?is--drag/, '') + ' is--drag';\n                if (remember && storage) {\n                    savePosStorage();\n                }\n                modalMethods.dispatchEvent('zoom', params, evnt);\n            };\n            document.onmouseup = function () {\n                reactData.zoomLocat = null;\n                document.onmousemove = domMousemove;\n                document.onmouseup = domMouseup;\n                setTimeout(function () {\n                    boxElem.className = boxElem.className.replace(/\\s?is--drag/, '');\n                }, 50);\n            };\n        };\n        var renderTitles = function () {\n            var _a = props.slots, propSlots = _a === void 0 ? {} : _a, showClose = props.showClose, showZoom = props.showZoom, title = props.title;\n            var zoomLocat = reactData.zoomLocat;\n            var titleSlot = slots.title || propSlots.title;\n            var titVNs = titleSlot ? titleSlot({ $modal: $xemodal }) : [\n                h('span', {\n                    class: 'vxe-modal--title'\n                }, title ? getFuncText(title) : GlobalConfig.i18n('vxe.alert.title'))\n            ];\n            if (showZoom) {\n                titVNs.push(h('i', {\n                    class: ['vxe-modal--zoom-btn', 'trigger--btn', zoomLocat ? GlobalConfig.icon.MODAL_ZOOM_OUT : GlobalConfig.icon.MODAL_ZOOM_IN],\n                    title: GlobalConfig.i18n(\"vxe.modal.zoom\" + (zoomLocat ? 'Out' : 'In')),\n                    onClick: toggleZoomEvent\n                }));\n            }\n            if (showClose) {\n                titVNs.push(h('i', {\n                    class: ['vxe-modal--close-btn', 'trigger--btn', GlobalConfig.icon.MODAL_CLOSE],\n                    title: GlobalConfig.i18n('vxe.modal.close'),\n                    onClick: closeEvent\n                }));\n            }\n            return titVNs;\n        };\n        var renderHeaders = function () {\n            var _a = props.slots, propSlots = _a === void 0 ? {} : _a, showZoom = props.showZoom, draggable = props.draggable;\n            var isMsg = computeIsMsg.value;\n            var headerSlot = slots.header || propSlots.header;\n            var headVNs = [];\n            if (props.showHeader) {\n                var headerOns = {};\n                if (draggable) {\n                    headerOns.onMousedown = mousedownEvent;\n                }\n                if (showZoom && props.dblclickZoom && props.type === 'modal') {\n                    headerOns.onDblclick = toggleZoomEvent;\n                }\n                headVNs.push(h('div', __assign({ class: ['vxe-modal--header', {\n                            'is--drag': draggable,\n                            'is--ellipsis': !isMsg && props.showTitleOverflow\n                        }] }, headerOns), headerSlot ? (!reactData.inited || (props.destroyOnClose && !reactData.visible) ? [] : headerSlot({ $modal: $xemodal })) : renderTitles()));\n            }\n            return headVNs;\n        };\n        var renderBodys = function () {\n            var _a = props.slots, propSlots = _a === void 0 ? {} : _a, status = props.status, message = props.message;\n            var content = props.content || message;\n            var isMsg = computeIsMsg.value;\n            var defaultSlot = slots.default || propSlots.default;\n            var contVNs = [];\n            if (status) {\n                contVNs.push(h('div', {\n                    class: 'vxe-modal--status-wrapper'\n                }, [\n                    h('i', {\n                        class: ['vxe-modal--status-icon', props.iconStatus || GlobalConfig.icon[(\"MODAL_\" + status).toLocaleUpperCase()]]\n                    })\n                ]));\n            }\n            contVNs.push(h('div', {\n                class: 'vxe-modal--content'\n            }, defaultSlot ? (!reactData.inited || (props.destroyOnClose && !reactData.visible) ? [] : defaultSlot({ $modal: $xemodal })) : getFuncText(content)));\n            if (!isMsg) {\n                contVNs.push(h('div', {\n                    class: ['vxe-loading', {\n                            'is--visible': props.loading\n                        }]\n                }, [\n                    h('div', {\n                        class: 'vxe-loading--spinner'\n                    })\n                ]));\n            }\n            return [\n                h('div', {\n                    class: 'vxe-modal--body'\n                }, contVNs)\n            ];\n        };\n        var renderBtns = function () {\n            var type = props.type;\n            var btnVNs = [];\n            if (type === 'confirm') {\n                btnVNs.push(h(VxeButtonConstructor, {\n                    ref: refCancelBtn,\n                    content: props.cancelButtonText || GlobalConfig.i18n('vxe.button.cancel'),\n                    onClick: cancelEvent\n                }));\n            }\n            btnVNs.push(h(VxeButtonConstructor, {\n                ref: refConfirmBtn,\n                status: 'primary',\n                content: props.confirmButtonText || GlobalConfig.i18n('vxe.button.confirm'),\n                onClick: confirmEvent\n            }));\n            return btnVNs;\n        };\n        var renderFooters = function () {\n            var _a = props.slots, propSlots = _a === void 0 ? {} : _a;\n            var isMsg = computeIsMsg.value;\n            var footerSlot = slots.footer || propSlots.footer;\n            var footVNs = [];\n            if (props.showFooter) {\n                footVNs.push(h('div', {\n                    class: 'vxe-modal--footer'\n                }, footerSlot ? (!reactData.inited || (props.destroyOnClose && !reactData.visible) ? [] : footerSlot({ $modal: $xemodal })) : renderBtns()));\n            }\n            if (!isMsg && props.resize) {\n                footVNs.push(h('span', {\n                    class: 'vxe-modal--resize'\n                }, ['wl', 'wr', 'swst', 'sest', 'st', 'swlb', 'selb', 'sb'].map(function (type) {\n                    return h('span', {\n                        class: type + \"-resize\",\n                        type: type,\n                        onMousedown: dragEvent\n                    });\n                })));\n            }\n            return footVNs;\n        };\n        modalMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $modal: $xemodal, $event: evnt }, params));\n            },\n            open: openModal,\n            close: function () {\n                return closeModal('close');\n            },\n            getBox: getBox,\n            getPosition: getPosition,\n            setPosition: setPosition,\n            isMaximized: isMaximized,\n            zoom: zoom,\n            maximize: maximize,\n            revert: revert\n        };\n        Object.assign($xemodal, modalMethods);\n        watch(function () { return props.width; }, recalculate);\n        watch(function () { return props.height; }, recalculate);\n        watch(function () { return props.modelValue; }, function (value) {\n            if (value) {\n                openModal();\n            }\n            else {\n                closeModal('model');\n            }\n        });\n        onMounted(function () {\n            nextTick(function () {\n                if (props.storage && !props.id) {\n                    errLog('vxe.error.reqProp', ['modal.id']);\n                }\n                if (props.modelValue) {\n                    openModal();\n                }\n                recalculate();\n            });\n            if (props.escClosable) {\n                GlobalEvent.on($xemodal, 'keydown', handleGlobalKeydownEvent);\n            }\n        });\n        onUnmounted(function () {\n            GlobalEvent.off($xemodal, 'keydown');\n            removeMsgQueue();\n        });\n        var renderVN = function () {\n            var _a;\n            var className = props.className, type = props.type, animat = props.animat, loading = props.loading, status = props.status, lockScroll = props.lockScroll, lockView = props.lockView, mask = props.mask, resize = props.resize;\n            var inited = reactData.inited, zoomLocat = reactData.zoomLocat, modalTop = reactData.modalTop, contentVisible = reactData.contentVisible, visible = reactData.visible;\n            var vSize = computeSize.value;\n            return h(Teleport, {\n                to: 'body',\n                disabled: props.transfer ? !inited : true\n            }, [\n                h('div', {\n                    ref: refElem,\n                    class: ['vxe-modal--wrapper', \"type--\" + type, className || '', (_a = {},\n                            _a[\"size--\" + vSize] = vSize,\n                            _a[\"status--\" + status] = status,\n                            _a['is--animat'] = animat,\n                            _a['lock--scroll'] = lockScroll,\n                            _a['lock--view'] = lockView,\n                            _a['is--resize'] = resize,\n                            _a['is--mask'] = mask,\n                            _a['is--maximize'] = zoomLocat,\n                            _a['is--visible'] = contentVisible,\n                            _a['is--active'] = visible,\n                            _a['is--loading'] = loading,\n                            _a)],\n                    style: {\n                        zIndex: reactData.modalZindex,\n                        top: modalTop ? modalTop + \"px\" : null\n                    },\n                    onClick: selfClickEvent\n                }, [\n                    h('div', {\n                        ref: refModalBox,\n                        class: 'vxe-modal--box',\n                        onMousedown: boxMousedownEvent\n                    }, renderHeaders().concat(renderBodys(), renderFooters()))\n                ])\n            ]);\n        };\n        $xemodal.renderVN = renderVN;\n        return $xemodal;\n    },\n    render: function () {\n        return this.renderVN();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}