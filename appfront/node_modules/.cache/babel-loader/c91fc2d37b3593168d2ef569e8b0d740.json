{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getNodeChildren, convertTreeToEntities } from '../vc-tree/src/util';\nimport { getSlot } from '../_util/props-util';\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {})); // TODO: Move this logic into `rc-tree`\n\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key;\n    var children = getSlot(node);\n\n    if (callback(key, node) !== false) {\n      traverseNodesKey(children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return _toConsumableArray(keyEntities.keys());\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\nexport function getFullKeyListByTreeData(treeData) {\n  var replaceFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var keys = [];\n  var _replaceFields$key = replaceFields.key,\n      key = _replaceFields$key === void 0 ? 'key' : _replaceFields$key,\n      _replaceFields$childr = replaceFields.children,\n      children = _replaceFields$childr === void 0 ? 'children' : _replaceFields$childr;\n  (treeData || []).forEach(function (item) {\n    keys.push(item[key]);\n\n    if (item[children]) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(getFullKeyListByTreeData(item[children], replaceFields)));\n    }\n  });\n  return keys;\n}","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/tree/util.js"],"names":["_toConsumableArray","getNodeChildren","convertTreeToEntities","getSlot","Record","traverseNodesKey","rootChildren","callback","nodeList","processNode","node","key","children","forEach","getFullKeyList","_convertTreeToEntitie","keyEntities","keys","calcRangeKeys","expandedKeys","startKey","endKey","record","None","matchKey","End","push","Start","indexOf","convertDirectoryKeysToNodes","restKeys","nodes","index","splice","length","getFullKeyListByTreeData","treeData","replaceFields","arguments","undefined","_replaceFields$key","_replaceFields$childr","item","concat"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { getNodeChildren, convertTreeToEntities } from '../vc-tree/src/util';\nimport { getSlot } from '../_util/props-util';\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {})); // TODO: Move this logic into `rc-tree`\n\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key;\n    var children = getSlot(node);\n\n    if (callback(key, node) !== false) {\n      traverseNodesKey(children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return _toConsumableArray(keyEntities.keys());\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\nexport function getFullKeyListByTreeData(treeData) {\n  var replaceFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var keys = [];\n  var _replaceFields$key = replaceFields.key,\n      key = _replaceFields$key === void 0 ? 'key' : _replaceFields$key,\n      _replaceFields$childr = replaceFields.children,\n      children = _replaceFields$childr === void 0 ? 'children' : _replaceFields$childr;\n  (treeData || []).forEach(function (item) {\n    keys.push(item[key]);\n\n    if (item[children]) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(getFullKeyListByTreeData(item[children], replaceFields)));\n    }\n  });\n  return keys;\n}"]},"metadata":{},"sourceType":"module"}