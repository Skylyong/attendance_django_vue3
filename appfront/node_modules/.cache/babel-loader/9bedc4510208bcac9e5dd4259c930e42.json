{"ast":null,"code":"import { computed, defineComponent, reactive, ref } from 'vue';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons-vue'; // import { cloneDeep } from 'lodash-es';\n\nexport default defineComponent({\n  components: {\n    CheckOutlined,\n    EditOutlined\n  },\n\n  setup() {\n    const columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%'\n    }, {\n      title: 'age',\n      dataIndex: 'age'\n    }, {\n      title: 'address',\n      dataIndex: 'address'\n    }, {\n      title: 'operation',\n      dataIndex: 'operation'\n    }];\n    const dataSource = ref([{\n      key: '0',\n      name: 'Edward King 0',\n      age: 32,\n      address: 'London, Park Lane no. 0'\n    }, {\n      key: '1',\n      name: 'Edward King 1',\n      age: 32,\n      address: 'London, Park Lane no. 1'\n    }]);\n    const count = computed(() => dataSource.value.length + 1);\n    const editableData = reactive({}); // const edit = key => {\n    //   editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n    // };\n\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n\n    const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    const handleAdd = () => {\n      const newData = {\n        key: `${count.value}`,\n        name: `Edward King ${count.value}`,\n        age: 32,\n        address: `London, Park Lane no. ${count.value}`\n      };\n      dataSource.value.push(newData);\n    };\n\n    return {\n      columns,\n      onDelete,\n      handleAdd,\n      dataSource,\n      editableData,\n      count,\n      //   edit,\n      save\n    };\n  }\n\n});","map":{"version":3,"mappings":"AA6BA,SAASA,QAAT,EAAmBC,eAAnB,EAAoCC,QAApC,EAA8CC,GAA9C,QAAyD,KAAzD;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,uBAA5C,C,CACA;;AACA,eAAeJ,eAAe,CAAC;AAC7BK,YAAU,EAAE;AACVF,iBADU;AAEVC;AAFU,GADiB;;AAM7BE,OAAK,GAAG;AACN,UAAMC,OAAM,GAAI,CAAC;AACfC,WAAK,EAAE,MADQ;AAEfC,eAAS,EAAE,MAFI;AAGfC,WAAK,EAAE;AAHQ,KAAD,EAIb;AACDF,WAAK,EAAE,KADN;AAEDC,eAAS,EAAE;AAFV,KAJa,EAOb;AACDD,WAAK,EAAE,SADN;AAEDC,eAAS,EAAE;AAFV,KAPa,EAUb;AACDD,WAAK,EAAE,WADN;AAEDC,eAAS,EAAE;AAFV,KAVa,CAAhB;AAcA,UAAME,UAAS,GAAIT,GAAG,CAAC,CAAC;AACtBU,SAAG,EAAE,GADiB;AAEtBC,UAAI,EAAE,eAFgB;AAGtBC,SAAG,EAAE,EAHiB;AAItBC,aAAO,EAAE;AAJa,KAAD,EAKpB;AACDH,SAAG,EAAE,GADJ;AAEDC,UAAI,EAAE,eAFL;AAGDC,SAAG,EAAE,EAHJ;AAIDC,aAAO,EAAE;AAJR,KALoB,CAAD,CAAtB;AAWA,UAAMC,KAAI,GAAIjB,QAAQ,CAAC,MAAMY,UAAU,CAACM,KAAX,CAAiBC,MAAjB,GAA0B,CAAjC,CAAtB;AACA,UAAMC,YAAW,GAAIlB,QAAQ,CAAC,EAAD,CAA7B,CA3BM,CA6BN;AACA;AACA;;AAEA,UAAMmB,IAAG,GAAIR,GAAE,IAAK;AAClBS,YAAM,CAACC,MAAP,CAAcX,UAAU,CAACM,KAAX,CAAiBM,MAAjB,CAAwBC,IAAG,IAAKZ,GAAE,KAAMY,IAAI,CAACZ,GAA7C,EAAkD,CAAlD,CAAd,EAAoEO,YAAY,CAACP,GAAD,CAAhF;AACA,aAAOO,YAAY,CAACP,GAAD,CAAnB;AACD,KAHD;;AAKA,UAAMa,QAAO,GAAIb,GAAE,IAAK;AACtBD,gBAAU,CAACM,KAAX,GAAmBN,UAAU,CAACM,KAAX,CAAiBM,MAAjB,CAAwBC,IAAG,IAAKA,IAAI,CAACZ,GAAL,KAAaA,GAA7C,CAAnB;AACD,KAFD;;AAIA,UAAMc,SAAQ,GAAI,MAAM;AACtB,YAAMC,OAAM,GAAI;AACdf,WAAG,EAAG,GAAEI,KAAK,CAACC,KAAM,EADN;AAEdJ,YAAI,EAAG,eAAcG,KAAK,CAACC,KAAM,EAFnB;AAGdH,WAAG,EAAE,EAHS;AAIdC,eAAO,EAAG,yBAAwBC,KAAK,CAACC,KAAM;AAJhC,OAAhB;AAMAN,gBAAU,CAACM,KAAX,CAAiBW,IAAjB,CAAsBD,OAAtB;AACD,KARD;;AAUA,WAAO;AACLpB,aADK;AAELkB,cAFK;AAGLC,eAHK;AAILf,gBAJK;AAKLQ,kBALK;AAMLH,WANK;AAOP;AACEI;AARK,KAAP;AAUD;;AApE4B,CAAD,CAA9B","names":["computed","defineComponent","reactive","ref","CheckOutlined","EditOutlined","components","setup","columns","title","dataIndex","width","dataSource","key","name","age","address","count","value","length","editableData","save","Object","assign","filter","item","onDelete","handleAdd","newData","push"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n  <a-button class=\"editable-add-btn\" style=\"margin-bottom: 8px\" @click=\"handleAdd\">Add</a-button>\n  <a-table bordered :data-source=\"dataSource\" :columns=\"columns\">\n    <template #bodyCell=\"{ column, text, record }\">\n      <template v-if=\"column.dataIndex === 'name'\">\n        <div class=\"editable-cell\">\n          <div v-if=\"editableData[record.key]\" class=\"editable-cell-input-wrapper\">\n            <a-input v-model:value=\"editableData[record.key].name\" @pressEnter=\"save(record.key)\" />\n            <check-outlined class=\"editable-cell-icon-check\" @click=\"save(record.key)\" />\n          </div>\n          <div v-else class=\"editable-cell-text-wrapper\">\n            {{ text || ' ' }}\n            <edit-outlined class=\"editable-cell-icon\" @click=\"edit(record.key)\" />\n          </div>\n        </div>\n      </template>\n      <template v-else-if=\"column.dataIndex === 'operation'\">\n        <a-popconfirm\n          v-if=\"dataSource.length\"\n          title=\"Sure to delete?\"\n          @confirm=\"onDelete(record.key)\"\n        >\n          <a>Delete</a>\n        </a-popconfirm>\n      </template>\n    </template>\n  </a-table>\n</template>\n<script>\nimport { computed, defineComponent, reactive, ref } from 'vue';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons-vue';\n// import { cloneDeep } from 'lodash-es';\nexport default defineComponent({\n  components: {\n    CheckOutlined,\n    EditOutlined,\n  },\n\n  setup() {\n    const columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n    }, {\n      title: 'age',\n      dataIndex: 'age',\n    }, {\n      title: 'address',\n      dataIndex: 'address',\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n    }];\n    const dataSource = ref([{\n      key: '0',\n      name: 'Edward King 0',\n      age: 32,\n      address: 'London, Park Lane no. 0',\n    }, {\n      key: '1',\n      name: 'Edward King 1',\n      age: 32,\n      address: 'London, Park Lane no. 1',\n    }]);\n    const count = computed(() => dataSource.value.length + 1);\n    const editableData = reactive({});\n\n    // const edit = key => {\n    //   editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n    // };\n\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n\n    const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    const handleAdd = () => {\n      const newData = {\n        key: `${count.value}`,\n        name: `Edward King ${count.value}`,\n        age: 32,\n        address: `London, Park Lane no. ${count.value}`,\n      };\n      dataSource.value.push(newData);\n    };\n\n    return {\n      columns,\n      onDelete,\n      handleAdd,\n      dataSource,\n      editableData,\n      count,\n    //   edit,\n      save,\n    };\n  },\n\n});\n</script>\n<style lang=\"less\">\n.editable-cell {\n  position: relative;\n  .editable-cell-input-wrapper,\n  .editable-cell-text-wrapper {\n    padding-right: 24px;\n  }\n\n  .editable-cell-text-wrapper {\n    padding: 5px 24px 5px 5px;\n  }\n\n  .editable-cell-icon,\n  .editable-cell-icon-check {\n    position: absolute;\n    right: 0;\n    width: 20px;\n    cursor: pointer;\n  }\n\n  .editable-cell-icon {\n    margin-top: 4px;\n    display: none;\n  }\n\n  .editable-cell-icon-check {\n    line-height: 28px;\n  }\n\n  .editable-cell-icon:hover,\n  .editable-cell-icon-check:hover {\n    color: #108ee9;\n  }\n\n  .editable-add-btn {\n    margin-bottom: 8px;\n  }\n}\n.editable-cell:hover .editable-cell-icon {\n  display: inline-block;\n}\n</style>"]},"metadata":{},"sourceType":"module"}