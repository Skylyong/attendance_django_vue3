{"ast":null,"code":"import { defineComponent, h, computed, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getFuncText } from '../../tools/utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n  name: 'VxeRadioButton',\n  props: {\n    modelValue: [String, Number, Boolean],\n    label: {\n      type: [String, Number, Boolean],\n      default: null\n    },\n    title: [String, Number],\n    content: [String, Number],\n    disabled: Boolean,\n    strict: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.radioButton.strict;\n      }\n    },\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.radioButton.size || GlobalConfig.size;\n      }\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var computeSize = useSize(props);\n    var $xeradiobutton = {\n      xID: xID,\n      props: props,\n      context: context\n    };\n    var radioButtonMethods = {};\n    var $xeradiogroup = inject('$xeradiogroup', null);\n    var computeDisabled = computed(function () {\n      return props.disabled || $xeradiogroup && $xeradiogroup.props.disabled;\n    });\n    var computeName = computed(function () {\n      return $xeradiogroup ? $xeradiogroup.name : null;\n    });\n    var computeStrict = computed(function () {\n      return $xeradiogroup ? $xeradiogroup.props.strict : props.strict;\n    });\n    var computeChecked = computed(function () {\n      var modelValue = props.modelValue,\n          label = props.label;\n      return $xeradiogroup ? $xeradiogroup.props.modelValue === label : modelValue === label;\n    });\n    radioButtonMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $radioButton: $xeradiobutton,\n          $event: evnt\n        }, params));\n      }\n    };\n    Object.assign($xeradiobutton, radioButtonMethods);\n\n    var handleValue = function (label, evnt) {\n      if ($xeradiogroup) {\n        $xeradiogroup.handleChecked({\n          label: label\n        }, evnt);\n      } else {\n        emit('update:modelValue', label);\n        radioButtonMethods.dispatchEvent('change', {\n          label: label\n        }, evnt);\n      }\n    };\n\n    var changeEvent = function (evnt) {\n      var isDisabled = computeDisabled.value;\n\n      if (!isDisabled) {\n        handleValue(props.label, evnt);\n      }\n    };\n\n    var clickEvent = function (evnt) {\n      var isDisabled = computeDisabled.value;\n      var isStrict = computeStrict.value;\n\n      if (!isDisabled && !isStrict) {\n        if (props.label === ($xeradiogroup ? $xeradiogroup.props.modelValue : props.modelValue)) {\n          handleValue(null, evnt);\n        }\n      }\n    };\n\n    var renderVN = function () {\n      var _a;\n\n      var vSize = computeSize.value;\n      var isDisabled = computeDisabled.value;\n      var name = computeName.value;\n      var checked = computeChecked.value;\n      return h('label', {\n        class: ['vxe-radio', 'vxe-radio-button', (_a = {}, _a[\"size--\" + vSize] = vSize, _a['is--disabled'] = isDisabled, _a)],\n        title: props.title\n      }, [h('input', {\n        class: 'vxe-radio--input',\n        type: 'radio',\n        name: name,\n        checked: checked,\n        disabled: isDisabled,\n        onChange: changeEvent,\n        onClick: clickEvent\n      }), h('span', {\n        class: 'vxe-radio--label'\n      }, slots.default ? slots.default({}) : getFuncText(props.content))]);\n    };\n\n    Object.assign($xeradiobutton, {\n      renderVN: renderVN,\n      dispatchEvent: dispatchEvent\n    });\n    return renderVN;\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/radio/src/button.js"],"names":["defineComponent","h","computed","inject","XEUtils","getFuncText","GlobalConfig","useSize","name","props","modelValue","String","Number","Boolean","label","type","default","title","content","disabled","strict","radioButton","size","emits","setup","context","slots","emit","xID","uniqueId","computeSize","$xeradiobutton","radioButtonMethods","$xeradiogroup","computeDisabled","computeName","computeStrict","computeChecked","dispatchEvent","params","evnt","Object","assign","$radioButton","$event","handleValue","handleChecked","changeEvent","isDisabled","value","clickEvent","isStrict","renderVN","_a","vSize","checked","class","onChange","onClick"],"mappings":"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","sourcesContent":["import { defineComponent, h, computed, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getFuncText } from '../../tools/utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n    name: 'VxeRadioButton',\n    props: {\n        modelValue: [String, Number, Boolean],\n        label: { type: [String, Number, Boolean], default: null },\n        title: [String, Number],\n        content: [String, Number],\n        disabled: Boolean,\n        strict: { type: Boolean, default: function () { return GlobalConfig.radioButton.strict; } },\n        size: { type: String, default: function () { return GlobalConfig.radioButton.size || GlobalConfig.size; } }\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var computeSize = useSize(props);\n        var $xeradiobutton = {\n            xID: xID,\n            props: props,\n            context: context\n        };\n        var radioButtonMethods = {};\n        var $xeradiogroup = inject('$xeradiogroup', null);\n        var computeDisabled = computed(function () {\n            return props.disabled || ($xeradiogroup && $xeradiogroup.props.disabled);\n        });\n        var computeName = computed(function () {\n            return $xeradiogroup ? $xeradiogroup.name : null;\n        });\n        var computeStrict = computed(function () {\n            return $xeradiogroup ? $xeradiogroup.props.strict : props.strict;\n        });\n        var computeChecked = computed(function () {\n            var modelValue = props.modelValue, label = props.label;\n            return $xeradiogroup ? $xeradiogroup.props.modelValue === label : modelValue === label;\n        });\n        radioButtonMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $radioButton: $xeradiobutton, $event: evnt }, params));\n            }\n        };\n        Object.assign($xeradiobutton, radioButtonMethods);\n        var handleValue = function (label, evnt) {\n            if ($xeradiogroup) {\n                $xeradiogroup.handleChecked({ label: label }, evnt);\n            }\n            else {\n                emit('update:modelValue', label);\n                radioButtonMethods.dispatchEvent('change', { label: label }, evnt);\n            }\n        };\n        var changeEvent = function (evnt) {\n            var isDisabled = computeDisabled.value;\n            if (!isDisabled) {\n                handleValue(props.label, evnt);\n            }\n        };\n        var clickEvent = function (evnt) {\n            var isDisabled = computeDisabled.value;\n            var isStrict = computeStrict.value;\n            if (!isDisabled && !isStrict) {\n                if (props.label === ($xeradiogroup ? $xeradiogroup.props.modelValue : props.modelValue)) {\n                    handleValue(null, evnt);\n                }\n            }\n        };\n        var renderVN = function () {\n            var _a;\n            var vSize = computeSize.value;\n            var isDisabled = computeDisabled.value;\n            var name = computeName.value;\n            var checked = computeChecked.value;\n            return h('label', {\n                class: ['vxe-radio', 'vxe-radio-button', (_a = {},\n                        _a[\"size--\" + vSize] = vSize,\n                        _a['is--disabled'] = isDisabled,\n                        _a)],\n                title: props.title\n            }, [\n                h('input', {\n                    class: 'vxe-radio--input',\n                    type: 'radio',\n                    name: name,\n                    checked: checked,\n                    disabled: isDisabled,\n                    onChange: changeEvent,\n                    onClick: clickEvent\n                }),\n                h('span', {\n                    class: 'vxe-radio--label'\n                }, slots.default ? slots.default({}) : getFuncText(props.content))\n            ]);\n        };\n        Object.assign($xeradiobutton, {\n            renderVN: renderVN,\n            dispatchEvent: dispatchEvent\n        });\n        return renderVN;\n    }\n});\n"]},"metadata":{},"sourceType":"module"}