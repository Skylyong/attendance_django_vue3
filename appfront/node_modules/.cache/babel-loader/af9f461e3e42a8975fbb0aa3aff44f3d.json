{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { defineComponent, inject } from 'vue';\nimport VcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from '../vc-tree-select';\nimport classNames from '../_util/classNames';\nimport { TreeSelectProps } from './interface';\nimport warning from '../_util/warning';\nimport { getOptionProps, getComponent, getSlot } from '../_util/props-util';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { defaultConfigProvider } from '../config-provider';\nexport { TreeData, TreeSelectProps } from './interface';\nimport LoadingOutlined from '@ant-design/icons-vue/LoadingOutlined';\nimport CaretDownOutlined from '@ant-design/icons-vue/CaretDownOutlined';\nimport DownOutlined from '@ant-design/icons-vue/DownOutlined';\nimport CloseOutlined from '@ant-design/icons-vue/CloseOutlined';\nimport CloseCircleFilled from '@ant-design/icons-vue/CloseCircleFilled';\nimport omit from 'omit.js';\nimport { convertChildrenToData } from './utils';\nvar TreeSelect = defineComponent({\n  TreeNode: TreeNode,\n  SHOW_ALL: SHOW_ALL,\n  SHOW_PARENT: SHOW_PARENT,\n  SHOW_CHILD: SHOW_CHILD,\n  name: 'ATreeSelect',\n  inheritAttrs: false,\n  props: initDefaultProps(TreeSelectProps(), {\n    transitionName: 'slide-up',\n    choiceTransitionName: ''\n  }),\n  setup: function setup() {\n    return {\n      vcTreeSelect: null,\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  created: function created() {\n    warning(this.multiple !== false || !this.treeCheckable, 'TreeSelect', '`multiple` will alway be `true` when `treeCheckable` is true');\n  },\n  methods: {\n    saveTreeSelect: function saveTreeSelect(node) {\n      this.vcTreeSelect = node;\n    },\n    focus: function focus() {\n      this.vcTreeSelect.focus();\n    },\n    blur: function blur() {\n      this.vcTreeSelect.blur();\n    },\n    renderSwitcherIcon: function renderSwitcherIcon(prefixCls, _ref) {\n      var isLeaf = _ref.isLeaf,\n          loading = _ref.loading;\n\n      if (loading) {\n        return _createVNode(LoadingOutlined, {\n          \"class\": \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        }, null);\n      }\n\n      if (isLeaf) {\n        return null;\n      }\n\n      return _createVNode(CaretDownOutlined, {\n        \"class\": \"\".concat(prefixCls, \"-switcher-icon\")\n      }, null);\n    },\n    handleChange: function handleChange() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.$emit('update:value', args[0]);\n      this.$emit.apply(this, ['change'].concat(args));\n    },\n    handleTreeExpand: function handleTreeExpand() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this.$emit('update:treeExpandedKeys', args[0]);\n      this.$emit.apply(this, ['treeExpand'].concat(args));\n    },\n    handleSearch: function handleSearch() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this.$emit('update:searchValue', args[0]);\n      this.$emit.apply(this, ['search'].concat(args));\n    },\n    updateTreeData: function updateTreeData(treeData) {\n      var _this = this;\n\n      var $slots = this.$slots;\n      var defaultFields = {\n        children: 'children',\n        title: 'title',\n        key: 'key',\n        label: 'label',\n        value: 'value'\n      };\n\n      var replaceFields = _extends(_extends({}, defaultFields), this.$props.replaceFields);\n\n      return treeData.map(function (item) {\n        var _item$slots = item.slots,\n            slots = _item$slots === void 0 ? {} : _item$slots;\n        var label = item[replaceFields.label];\n        var title = item[replaceFields.title];\n        var value = item[replaceFields.value];\n        var key = item[replaceFields.key];\n        var children = item[replaceFields.children];\n        var newLabel = typeof label === 'function' ? label() : label;\n        var newTitle = typeof title === 'function' ? title() : title;\n\n        if (!newLabel && slots.label && $slots[slots.label]) {\n          newLabel = _createVNode(_Fragment, null, [$slots[slots.label](item)]);\n        }\n\n        if (!newTitle && slots.title && $slots[slots.title]) {\n          newTitle = _createVNode(_Fragment, null, [$slots[slots.title](item)]);\n        }\n\n        var treeNodeProps = _extends(_extends({}, item), {\n          title: newTitle || newLabel,\n          value: value,\n          dataRef: item,\n          key: key\n        });\n\n        if (children) {\n          return _extends(_extends({}, treeNodeProps), {\n            children: _this.updateTreeData(children)\n          });\n        }\n\n        return treeNodeProps;\n      });\n    }\n  },\n  render: function render() {\n    var _cls,\n        _this2 = this;\n\n    var props = getOptionProps(this);\n\n    var customizePrefixCls = props.prefixCls,\n        size = props.size,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        getPopupContainer = props.getPopupContainer,\n        restProps = __rest(props, [\"prefixCls\", \"size\", \"dropdownStyle\", \"dropdownClassName\", \"getPopupContainer\"]);\n\n    var className = this.$attrs.class;\n    var _this$configProvider = this.configProvider,\n        renderEmpty = _this$configProvider.renderEmpty,\n        getPrefixCls = _this$configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    var notFoundContent = getComponent(this, 'notFoundContent');\n    var removeIcon = getComponent(this, 'removeIcon');\n    var clearIcon = getComponent(this, 'clearIcon');\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n    var rest = omit(restProps, ['inputIcon', 'removeIcon', 'clearIcon', 'switcherIcon', 'suffixIcon']);\n    var suffixIcon = getComponent(this, 'suffixIcon');\n    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;\n    var treeData = props.treeData;\n\n    if (treeData) {\n      treeData = this.updateTreeData(treeData);\n    }\n\n    var cls = (_cls = {}, _defineProperty(_cls, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_cls, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _defineProperty(_cls, className, className), _cls); // showSearch: single - false, multiple - true\n\n    var showSearch = restProps.showSearch;\n\n    if (!('showSearch' in restProps)) {\n      showSearch = !!(restProps.multiple || restProps.treeCheckable);\n    }\n\n    var checkable = getComponent(this, 'treeCheckable');\n\n    if (checkable) {\n      checkable = _createVNode(\"span\", {\n        \"class\": \"\".concat(prefixCls, \"-tree-checkbox-inner\")\n      }, null);\n    }\n\n    var inputIcon = suffixIcon || _createVNode(DownOutlined, {\n      \"class\": \"\".concat(prefixCls, \"-arrow-icon\")\n    }, null);\n\n    var finalRemoveIcon = removeIcon || _createVNode(CloseOutlined, {\n      \"class\": \"\".concat(prefixCls, \"-remove-icon\")\n    }, null);\n\n    var finalClearIcon = clearIcon || _createVNode(CloseCircleFilled, {\n      \"class\": \"\".concat(prefixCls, \"-clear-icon\")\n    }, null);\n\n    var VcTreeSelectProps = _extends(_extends(_extends(_extends({}, this.$attrs), {\n      switcherIcon: function switcherIcon(nodeProps) {\n        return _this2.renderSwitcherIcon(prefixCls, nodeProps);\n      },\n      inputIcon: inputIcon,\n      removeIcon: finalRemoveIcon,\n      clearIcon: finalClearIcon\n    }), rest), {\n      showSearch: showSearch,\n      getPopupContainer: getPopupContainer || getContextPopupContainer,\n      dropdownClassName: classNames(dropdownClassName, \"\".concat(prefixCls, \"-tree-dropdown\")),\n      prefixCls: prefixCls,\n      dropdownStyle: _extends({\n        maxHeight: '100vh',\n        overflow: 'auto'\n      }, dropdownStyle),\n      treeCheckable: checkable,\n      notFoundContent: notFoundContent || renderEmpty('Select'),\n      class: cls,\n      onChange: this.handleChange,\n      onSearch: this.handleSearch,\n      onTreeExpand: this.handleTreeExpand,\n      ref: this.saveTreeSelect,\n      treeData: treeData ? treeData : convertChildrenToData(getSlot(this))\n    });\n\n    return _createVNode(VcTreeSelect, _objectSpread(_objectSpread({}, VcTreeSelectProps), {}, {\n      \"__propsSymbol__\": []\n    }), omit(this.$slots, ['default']));\n  }\n});\n/* istanbul ignore next */\n\nTreeSelect.install = function (app) {\n  app.component(TreeSelect.name, TreeSelect);\n  app.component(TreeSelect.TreeNode.displayName, TreeSelect.TreeNode);\n  return app;\n};\n\nexport var TreeSelectNode = TreeSelect.TreeNode;\nexport default TreeSelect;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/tree-select/index.js"],"names":["_objectSpread","_defineProperty","_extends","resolveDirective","_resolveDirective","Fragment","_Fragment","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineComponent","inject","VcTreeSelect","TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","classNames","TreeSelectProps","warning","getOptionProps","getComponent","getSlot","initDefaultProps","defaultConfigProvider","TreeData","LoadingOutlined","CaretDownOutlined","DownOutlined","CloseOutlined","CloseCircleFilled","omit","convertChildrenToData","TreeSelect","name","inheritAttrs","props","transitionName","choiceTransitionName","setup","vcTreeSelect","configProvider","created","multiple","treeCheckable","methods","saveTreeSelect","node","focus","blur","renderSwitcherIcon","prefixCls","_ref","isLeaf","loading","concat","handleChange","_len","arguments","args","Array","_key","$emit","apply","handleTreeExpand","_len2","_key2","handleSearch","_len3","_key3","updateTreeData","treeData","_this","$slots","defaultFields","children","title","key","label","value","replaceFields","$props","map","item","_item$slots","slots","newLabel","newTitle","treeNodeProps","dataRef","render","_cls","_this2","customizePrefixCls","size","dropdownStyle","dropdownClassName","getPopupContainer","restProps","className","$attrs","class","_this$configProvider","renderEmpty","getPrefixCls","notFoundContent","removeIcon","clearIcon","getContextPopupContainer","rest","suffixIcon","isArray","cls","showSearch","checkable","inputIcon","finalRemoveIcon","finalClearIcon","VcTreeSelectProps","switcherIcon","nodeProps","maxHeight","overflow","onChange","onSearch","onTreeExpand","ref","install","app","component","displayName","TreeSelectNode"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { defineComponent, inject } from 'vue';\nimport VcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from '../vc-tree-select';\nimport classNames from '../_util/classNames';\nimport { TreeSelectProps } from './interface';\nimport warning from '../_util/warning';\nimport { getOptionProps, getComponent, getSlot } from '../_util/props-util';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { defaultConfigProvider } from '../config-provider';\nexport { TreeData, TreeSelectProps } from './interface';\nimport LoadingOutlined from '@ant-design/icons-vue/LoadingOutlined';\nimport CaretDownOutlined from '@ant-design/icons-vue/CaretDownOutlined';\nimport DownOutlined from '@ant-design/icons-vue/DownOutlined';\nimport CloseOutlined from '@ant-design/icons-vue/CloseOutlined';\nimport CloseCircleFilled from '@ant-design/icons-vue/CloseCircleFilled';\nimport omit from 'omit.js';\nimport { convertChildrenToData } from './utils';\nvar TreeSelect = defineComponent({\n  TreeNode: TreeNode,\n  SHOW_ALL: SHOW_ALL,\n  SHOW_PARENT: SHOW_PARENT,\n  SHOW_CHILD: SHOW_CHILD,\n  name: 'ATreeSelect',\n  inheritAttrs: false,\n  props: initDefaultProps(TreeSelectProps(), {\n    transitionName: 'slide-up',\n    choiceTransitionName: ''\n  }),\n  setup: function setup() {\n    return {\n      vcTreeSelect: null,\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  created: function created() {\n    warning(this.multiple !== false || !this.treeCheckable, 'TreeSelect', '`multiple` will alway be `true` when `treeCheckable` is true');\n  },\n  methods: {\n    saveTreeSelect: function saveTreeSelect(node) {\n      this.vcTreeSelect = node;\n    },\n    focus: function focus() {\n      this.vcTreeSelect.focus();\n    },\n    blur: function blur() {\n      this.vcTreeSelect.blur();\n    },\n    renderSwitcherIcon: function renderSwitcherIcon(prefixCls, _ref) {\n      var isLeaf = _ref.isLeaf,\n          loading = _ref.loading;\n\n      if (loading) {\n        return _createVNode(LoadingOutlined, {\n          \"class\": \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        }, null);\n      }\n\n      if (isLeaf) {\n        return null;\n      }\n\n      return _createVNode(CaretDownOutlined, {\n        \"class\": \"\".concat(prefixCls, \"-switcher-icon\")\n      }, null);\n    },\n    handleChange: function handleChange() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.$emit('update:value', args[0]);\n      this.$emit.apply(this, ['change'].concat(args));\n    },\n    handleTreeExpand: function handleTreeExpand() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this.$emit('update:treeExpandedKeys', args[0]);\n      this.$emit.apply(this, ['treeExpand'].concat(args));\n    },\n    handleSearch: function handleSearch() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this.$emit('update:searchValue', args[0]);\n      this.$emit.apply(this, ['search'].concat(args));\n    },\n    updateTreeData: function updateTreeData(treeData) {\n      var _this = this;\n\n      var $slots = this.$slots;\n      var defaultFields = {\n        children: 'children',\n        title: 'title',\n        key: 'key',\n        label: 'label',\n        value: 'value'\n      };\n\n      var replaceFields = _extends(_extends({}, defaultFields), this.$props.replaceFields);\n\n      return treeData.map(function (item) {\n        var _item$slots = item.slots,\n            slots = _item$slots === void 0 ? {} : _item$slots;\n        var label = item[replaceFields.label];\n        var title = item[replaceFields.title];\n        var value = item[replaceFields.value];\n        var key = item[replaceFields.key];\n        var children = item[replaceFields.children];\n        var newLabel = typeof label === 'function' ? label() : label;\n        var newTitle = typeof title === 'function' ? title() : title;\n\n        if (!newLabel && slots.label && $slots[slots.label]) {\n          newLabel = _createVNode(_Fragment, null, [$slots[slots.label](item)]);\n        }\n\n        if (!newTitle && slots.title && $slots[slots.title]) {\n          newTitle = _createVNode(_Fragment, null, [$slots[slots.title](item)]);\n        }\n\n        var treeNodeProps = _extends(_extends({}, item), {\n          title: newTitle || newLabel,\n          value: value,\n          dataRef: item,\n          key: key\n        });\n\n        if (children) {\n          return _extends(_extends({}, treeNodeProps), {\n            children: _this.updateTreeData(children)\n          });\n        }\n\n        return treeNodeProps;\n      });\n    }\n  },\n  render: function render() {\n    var _cls,\n        _this2 = this;\n\n    var props = getOptionProps(this);\n\n    var customizePrefixCls = props.prefixCls,\n        size = props.size,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        getPopupContainer = props.getPopupContainer,\n        restProps = __rest(props, [\"prefixCls\", \"size\", \"dropdownStyle\", \"dropdownClassName\", \"getPopupContainer\"]);\n\n    var className = this.$attrs.class;\n    var _this$configProvider = this.configProvider,\n        renderEmpty = _this$configProvider.renderEmpty,\n        getPrefixCls = _this$configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    var notFoundContent = getComponent(this, 'notFoundContent');\n    var removeIcon = getComponent(this, 'removeIcon');\n    var clearIcon = getComponent(this, 'clearIcon');\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n    var rest = omit(restProps, ['inputIcon', 'removeIcon', 'clearIcon', 'switcherIcon', 'suffixIcon']);\n    var suffixIcon = getComponent(this, 'suffixIcon');\n    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;\n    var treeData = props.treeData;\n\n    if (treeData) {\n      treeData = this.updateTreeData(treeData);\n    }\n\n    var cls = (_cls = {}, _defineProperty(_cls, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_cls, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _defineProperty(_cls, className, className), _cls); // showSearch: single - false, multiple - true\n\n    var showSearch = restProps.showSearch;\n\n    if (!('showSearch' in restProps)) {\n      showSearch = !!(restProps.multiple || restProps.treeCheckable);\n    }\n\n    var checkable = getComponent(this, 'treeCheckable');\n\n    if (checkable) {\n      checkable = _createVNode(\"span\", {\n        \"class\": \"\".concat(prefixCls, \"-tree-checkbox-inner\")\n      }, null);\n    }\n\n    var inputIcon = suffixIcon || _createVNode(DownOutlined, {\n      \"class\": \"\".concat(prefixCls, \"-arrow-icon\")\n    }, null);\n\n    var finalRemoveIcon = removeIcon || _createVNode(CloseOutlined, {\n      \"class\": \"\".concat(prefixCls, \"-remove-icon\")\n    }, null);\n\n    var finalClearIcon = clearIcon || _createVNode(CloseCircleFilled, {\n      \"class\": \"\".concat(prefixCls, \"-clear-icon\")\n    }, null);\n\n    var VcTreeSelectProps = _extends(_extends(_extends(_extends({}, this.$attrs), {\n      switcherIcon: function switcherIcon(nodeProps) {\n        return _this2.renderSwitcherIcon(prefixCls, nodeProps);\n      },\n      inputIcon: inputIcon,\n      removeIcon: finalRemoveIcon,\n      clearIcon: finalClearIcon\n    }), rest), {\n      showSearch: showSearch,\n      getPopupContainer: getPopupContainer || getContextPopupContainer,\n      dropdownClassName: classNames(dropdownClassName, \"\".concat(prefixCls, \"-tree-dropdown\")),\n      prefixCls: prefixCls,\n      dropdownStyle: _extends({\n        maxHeight: '100vh',\n        overflow: 'auto'\n      }, dropdownStyle),\n      treeCheckable: checkable,\n      notFoundContent: notFoundContent || renderEmpty('Select'),\n      class: cls,\n      onChange: this.handleChange,\n      onSearch: this.handleSearch,\n      onTreeExpand: this.handleTreeExpand,\n      ref: this.saveTreeSelect,\n      treeData: treeData ? treeData : convertChildrenToData(getSlot(this))\n    });\n\n    return _createVNode(VcTreeSelect, _objectSpread(_objectSpread({}, VcTreeSelectProps), {}, {\n      \"__propsSymbol__\": []\n    }), omit(this.$slots, ['default']));\n  }\n});\n/* istanbul ignore next */\n\nTreeSelect.install = function (app) {\n  app.component(TreeSelect.name, TreeSelect);\n  app.component(TreeSelect.TreeNode.displayName, TreeSelect.TreeNode);\n  return app;\n};\n\nexport var TreeSelectNode = TreeSelect.TreeNode;\nexport default TreeSelect;"]},"metadata":{},"sourceType":"module"}