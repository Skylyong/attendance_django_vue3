{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" v-slot=\\\"name\\\" slot-scope=\\\"name\\\" \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createBlock(_component_a_table, {\n    columns: $data.columns,\n    \"row-key\": record => record.login.uuid,\n    \"data-source\": $data.data,\n    pagination: $data.pagination,\n    loading: $data.loading,\n    onChange: $options.handleTableChange\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"template\", null, [_createTextVNode(_toDisplayString(_ctx.name.first) + \" \" + _toDisplayString(_ctx.name.last), 1\n    /* TEXT */\n    )]), _hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"columns\", \"row-key\", \"data-source\", \"pagination\", \"loading\", \"onChange\"]);\n}","map":{"version":3,"mappings":";;iDAS4D;;;;;uBAR1DA,aAUUC,kBAVV,EAUU;AATPC,WAAO,EAAEC,aASF;AARP,eAASC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,IAQzB;AAPP,mBAAaH,UAON;AANPI,cAAU,EAAEJ,gBAML;AALPK,WAAO,EAAEL,aAKF;AAJPM,YAAM,EAAEC;AAID,GAVV;sBAQE,MAAwD,CAAxDC,oBAAwD,UAAxD,EAAwD,IAAxD,EAAwD,mCAAzCC,UAAKC,SAAQ,MAACC,iBAAGF,UAAKG,IAAR,GAAY;AAAA;KAAe,CAAxD,CAAwD;;;;GAR1D;;AAAA","names":["_createBlock","_component_a_table","columns","$data","record","login","uuid","pagination","loading","onChange","$options","_createElementVNode","_ctx","first","_toDisplayString","last"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/src/components/worker/workerDetailData.vue"],"sourcesContent":["<template>\n  <a-table\n    :columns=\"columns\"\n    :row-key=\"record => record.login.uuid\"\n    :data-source=\"data\"\n    :pagination=\"pagination\"\n    :loading=\"loading\"\n    @change=\"handleTableChange\"\n  >\n    <template > {{ name.first }} {{ name.last }} </template>\n    v-slot=\"name\" slot-scope=\"name\"\n  </a-table>\n</template>\n<script>\nimport axios from 'axios';\n\nconst queryData = params => {\n  return axios.get('https://randomuser.me/api', { params: params });\n};\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: true,\n    width: '20%',\n    scopedSlots: { customRender: 'name' },\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'gender',\n    filters: [\n      { text: 'Male', value: 'male' },\n      { text: 'Female', value: 'female' },\n    ],\n    width: '20%',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n  },\n];\n\nexport default {\n  data() {\n    return {\n      data: [],\n      pagination: {},\n      loading: false,\n      columns,\n    };\n  },\n  mounted() {\n    this.fetch();\n  },\n  methods: {\n    handleTableChange(pagination, filters, sorter) {\n      console.log(pagination);\n      const pager = { ...this.pagination };\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    },\n    fetch(params = {}) {\n      this.loading = true;\n      queryData({\n        results: 10,\n        ...params,\n      }).then(({ data }) => {\n        const pagination = { ...this.pagination };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = 200;\n        this.loading = false;\n        this.data = data.results;\n        this.pagination = pagination;\n      });\n    },\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}