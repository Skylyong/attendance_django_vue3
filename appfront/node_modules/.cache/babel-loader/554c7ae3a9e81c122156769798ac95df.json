{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Add\");\n\nconst _hoisted_2 = {\n  key: 0,\n  class: \"editable-cell\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"editable-cell-input-wrapper\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"editable-cell-text-wrapper\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"确定删除吗？\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  style: {\n    \"text-align\": \"right\",\n    \"margin\": \"0\"\n  }\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"删除\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_check_outlined = _resolveComponent(\"check-outlined\");\n\n  const _component_edit_outlined = _resolveComponent(\"edit-outlined\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_popover = _resolveComponent(\"el-popover\");\n\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_a_button, {\n    class: \"editable-add-btn\",\n    style: {\n      \"margin-bottom\": \"8px\"\n    },\n    onClick: _ctx.handleAdd\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"]), _createVNode(_component_a_table, {\n    bordered: \"\",\n    \"data-source\": _ctx.dataSource,\n    columns: _ctx.columns\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      text,\n      record\n    }) => [column.dataIndex === 'name' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_ctx.editableData[record.key] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_a_input, {\n      value: _ctx.editableData[record.key].name,\n      \"onUpdate:value\": $event => _ctx.editableData[record.key].name = $event,\n      onPressEnter: $event => _ctx.save(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"onUpdate:value\", \"onPressEnter\"]), _createVNode(_component_check_outlined, {\n      class: \"editable-cell-icon-check\",\n      onClick: $event => _ctx.save(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createTextVNode(_toDisplayString(text || ' ') + \" \", 1\n    /* TEXT */\n    ), _createVNode(_component_edit_outlined, {\n      class: \"editable-cell-icon\",\n      onClick: $event => _ctx.edit(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])]))])) : column.dataIndex === 'operation' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createVNode(_component_el_popover, {\n      placement: \"top\",\n      width: \"200\",\n      modelValue: _ctx.scope.row.visible,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.scope.row.visible = $event)\n    }, {\n      default: _withCtx(() => [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_button, {\n        type: \"text\",\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.scope.row.visible = false)\n      }, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_button, {\n        type: \"text\",\n        onClick: _cache[1] || (_cache[1] = $event => delete _ctx.scope.row.id)\n      }, {\n        default: _withCtx(() => [_hoisted_8]),\n        _: 1\n        /* STABLE */\n\n      })]), _createVNode(_component_el_button, {\n        slot: \"reference\"\n      }, {\n        default: _withCtx(() => [_hoisted_9]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"modelValue\"]), _createCommentVNode(\" \\n        <a-popconfirm\\n          v-if=\\\"dataSource.length\\\"\\n          title=\\\"Sure to delete?\\\"\\n          @confirm=\\\"onDelete(record.key)\\\"\\n        >\\n          <a>Delete</a>\\n\\n        </a-popconfirm> \")], 2112\n    /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n    )) : _createCommentVNode(\"v-if\", true)]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data-source\", \"columns\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;iDACmF;;;;AAItEA,OAAK,EAAC;;;;AAC4BA,OAAK,EAAC;;;;AAI/BA,OAAK,EAAC;;;gCAYxBC,oBAAa,GAAb,EAAa,IAAb,EAAG,QAAH,EAAS;AAAA;AAAT;;;AACKC,OAAoC,EAApC;AAAA;AAAA;AAAA;;;iDACwD;;iDACJ;;iDAE7B;;;;;;;;;;;;;;;;;6DA1B9BC,aAA+FC,mBAA/F,EAA+F;AAArFJ,SAAK,EAAC,kBAA+E;AAA5DE,SAA0B,EAA1B;AAAA;AAAA,KAA4D;AAAhCG,WAAK,EAAEC;AAAyB,GAA/F;sBAAiF,MAAG;;;;GAApF;;AAAA,kBACAH,aA8CUI,kBA9CV,EA8CU;AA9CDC,YAAQ,EAAR,EA8CC;AA9CS,mBAAaF,eA8CtB;AA9CmCG,WAAO,EAAEH;AA8C5C,GA9CV;AACaI,YAAQ,WACjB,CAWW;AAZUC,YAYV;AAZkBC,UAYlB;AAZwBC;AAYxB,KAXX,KADyC,CACzBF,MAAM,CAACG,SAAP,KAAgB,wBAC9BC,oBASM,KATN,cASM,CAROT,kBAAaO,MAAM,CAACG,GAApB,mBAAXD,oBAGM,KAHN,cAGM,CAFJZ,aAAwFc,kBAAxF,EAAwF;AAAvEC,WAAK,EAAEZ,kBAAaO,MAAM,CAACG,GAApB,EAAyBG,IAAuC;kCAAhEb,kBAAaO,MAAM,CAACG,GAApB,EAAyBG,OAAIC,MAAmC;AAAhCC,kBAAU,YAAEf,UAAKO,MAAM,CAACG,GAAZ;AAAoB,KAAxF;;AAAA,kDAEI,EADJb,aAA6EmB,yBAA7E,EAA6E;AAA7DtB,WAAK,EAAC,0BAAuD;AAA3BK,aAAK,YAAEC,UAAKO,MAAM,CAACG,GAAZ;AAAoB,KAA7E;;AAAA,kBACI,CAHN,oBAIAD,oBAGM,KAHN,cAGM,mCAFDH,IAAI,WAAU,KACjB;AAAA;KACI,EADJT,aAAsEoB,wBAAtE,EAAsE;AAAvDvB,WAAK,EAAC,oBAAiD;AAA3BK,aAAK,YAAEC,UAAKO,MAAM,CAACG,GAAZ;AAAoB,KAAtE;;AAAA,kBACI,CAHN,EAII,CATN,KAWmBL,MAAM,CAACG,SAAP,KAAgB,6BAArCC,oBA8BWS,SA9BX,EA8BW;AAAAR;AAAA,KA9BX,EA8BW,CA5BjBb,aAUasB,qBAVb,EAUa;AATLC,eAAS,EAAC,KASL;AARLC,WAAK,EAAC,KAQD;kBAPIrB,WAAMsB,GAAN,CAAUC,OAOd;iEAPIvB,WAAMsB,GAAN,CAAUC,UAAOT;AAOrB,KAVb;wBAII,MAAa,CAAbU,UAAa,EACb7B,oBAGM,KAHN,cAGM,CAFFE,aAAuE4B,oBAAvE,EAAuE;AAA5DC,YAAI,EAAC,MAAuD;AAA/C3B,eAAK,sCAAEC,WAAMsB,GAAN,CAAUC,OAAV,GAAiB,KAAnB;AAA0C,OAAvE;0BAAyD,MAAE;;;;OAA3D,CAEE,EADF1B,aAAmE4B,oBAAnE,EAAmE;AAAxDC,YAAI,EAAC,MAAmD;AAA3C3B,eAAK,6CAASC,WAAMsB,GAAN,CAAUK,EAAnB;AAAsC,OAAnE;0BAAqD,MAAE;;;;OAAvD,CACE,CAHN,CADa,EAKb9B,aAA0C4B,oBAA1C,EAA0C;AAA/BG,YAAI,EAAC;AAA0B,OAA1C,EAA2B;0BAAC,MAAE,aAAH;;;;AAAA,OAA3B,CALa;;;;KAJjB;;AAAA,qBA4BiB,EAZjBC,uOAYiB,CA9BX;;AAAA,0CAbyC,CAAxB;;;;GADrB;;AAAA","names":["class","_createElementVNode","style","_createVNode","_component_a_button","onClick","_ctx","_component_a_table","bordered","columns","bodyCell","column","text","record","dataIndex","_createElementBlock","key","_component_a_input","value","name","$event","onPressEnter","_component_check_outlined","_component_edit_outlined","_Fragment","_component_el_popover","placement","width","row","visible","_hoisted_5","_component_el_button","type","id","slot","_createCommentVNode"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n  <a-button class=\"editable-add-btn\" style=\"margin-bottom: 8px\" @click=\"handleAdd\">Add</a-button>\n  <a-table bordered :data-source=\"dataSource\" :columns=\"columns\">\n    <template #bodyCell=\"{ column, text, record }\">\n      <template v-if=\"column.dataIndex === 'name'\">\n        <div class=\"editable-cell\">\n          <div v-if=\"editableData[record.key]\" class=\"editable-cell-input-wrapper\">\n            <a-input v-model:value=\"editableData[record.key].name\" @pressEnter=\"save(record.key)\" />\n            <check-outlined class=\"editable-cell-icon-check\" @click=\"save(record.key)\" />\n          </div>\n          <div v-else class=\"editable-cell-text-wrapper\">\n            {{ text || ' ' }}\n            <edit-outlined class=\"editable-cell-icon\" @click=\"edit(record.key)\" />\n          </div>\n        </div>\n      </template>\n      <template v-else-if=\"column.dataIndex === 'operation'\">\n\n<el-popover\n        placement=\"top\"\n        width=\"200\"\n        v-model=\"scope.row.visible\">\n    <p>确定删除吗？</p>\n    <div style=\"text-align: right; margin: 0\">\n        <el-button type=\"text\" @click=\"scope.row.visible= false\">取消</el-button>\n        <el-button type=\"text\" @click=\"delete(scope.row.id)\">确定</el-button>\n    </div>\n    <el-button slot=\"reference\">删除</el-button>\n</el-popover>\n\n\n\n\n\n<!-- \n        <a-popconfirm\n          v-if=\"dataSource.length\"\n          title=\"Sure to delete?\"\n          @confirm=\"onDelete(record.key)\"\n        >\n          <a>Delete</a>\n\n        </a-popconfirm> -->\n\n\n\n      </template>\n    </template>\n  </a-table>\n</template>\n<script>\nimport { computed, defineComponent, reactive, ref } from 'vue';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons-vue';\nimport { cloneDeep } from 'lodash-es';\nexport default defineComponent({\n  components: {\n    CheckOutlined,\n    EditOutlined,\n  },\n\n  setup() {\n    const columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n    }, {\n      title: 'age',\n      dataIndex: 'age',\n    }, {\n      title: 'address',\n      dataIndex: 'address',\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n    }];\n    const dataSource = ref([{\n      key: '0',\n      name: 'Edward King 0',\n      age: 32,\n      address: 'London, Park Lane no. 0',\n    }, {\n      key: '1',\n      name: 'Edward King 1',\n      age: 32,\n      address: 'London, Park Lane no. 1',\n    }]);\n    const count = computed(() => dataSource.value.length + 1);\n    const editableData = reactive({});\n\n    const edit = key => {\n      editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n    };\n\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n\n    const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    const handleAdd = () => {\n      const newData = {\n        key: `${count.value}`,\n        name: `Edward King ${count.value}`,\n        age: 32,\n        address: `London, Park Lane no. ${count.value}`,\n      };\n      dataSource.value.push(newData);\n    };\n\n    return {\n      columns,\n      onDelete,\n      handleAdd,\n      dataSource,\n      editableData,\n      count,\n      edit,\n      save,\n    };\n  },\n\n});\n</script>\n<style lang=\"less\">\n.editable-cell {\n  position: relative;\n  .editable-cell-input-wrapper,\n  .editable-cell-text-wrapper {\n    padding-right: 24px;\n  }\n\n  .editable-cell-text-wrapper {\n    padding: 5px 24px 5px 5px;\n  }\n\n  .editable-cell-icon,\n  .editable-cell-icon-check {\n    position: absolute;\n    right: 0;\n    width: 20px;\n    cursor: pointer;\n  }\n\n  .editable-cell-icon {\n    margin-top: 4px;\n    display: none;\n  }\n\n  .editable-cell-icon-check {\n    line-height: 28px;\n  }\n\n  .editable-cell-icon:hover,\n  .editable-cell-icon-check:hover {\n    color: #108ee9;\n  }\n\n  .editable-add-btn {\n    margin-bottom: 8px;\n  }\n}\n.editable-cell:hover .editable-cell-icon {\n  display: inline-block;\n}\n</style>"]},"metadata":{},"sourceType":"module"}