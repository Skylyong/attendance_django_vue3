{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { defineComponent, ref, computed, onMounted, onUpdated, watch, onUnmounted } from 'vue';\nimport { alignElement, alignPoint } from 'dom-align';\nimport addEventListener from '../vc-util/Dom/addEventListener';\nimport { cloneElement } from '../_util/vnode';\nimport isVisible from '../vc-util/Dom/isVisible';\nimport { isSamePoint, restoreFocus, monitorResize } from './util';\nimport useBuffer from './hooks/useBuffer';\nvar alignProps = {\n  align: Object,\n  target: [Object, Function],\n  onAlign: Function,\n  monitorBufferTime: Number,\n  monitorWindowResize: Boolean,\n  disabled: Boolean\n};\n\nfunction getElement(func) {\n  if (typeof func !== 'function') return null;\n  return func();\n}\n\nfunction getPoint(point) {\n  if (_typeof(point) !== 'object' || !point) return null;\n  return point;\n}\n\nexport default defineComponent({\n  name: 'Align',\n  props: alignProps,\n  emits: ['align'],\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n        slots = _ref.slots;\n    var cacheRef = ref({});\n    var nodeRef = ref();\n    var forceAlignPropsRef = computed(function () {\n      return {\n        disabled: props.disabled,\n        target: props.target,\n        onAlign: props.onAlign\n      };\n    });\n\n    var _useBuffer = useBuffer(function () {\n      var _forceAlignPropsRef$v = forceAlignPropsRef.value,\n          latestDisabled = _forceAlignPropsRef$v.disabled,\n          latestTarget = _forceAlignPropsRef$v.target,\n          latestOnAlign = _forceAlignPropsRef$v.onAlign;\n\n      if (!latestDisabled && latestTarget && nodeRef.value && nodeRef.value.$el) {\n        var source = nodeRef.value.$el;\n        var result;\n        var element = getElement(latestTarget);\n        var point = getPoint(latestTarget);\n        cacheRef.value.element = element;\n        cacheRef.value.point = point; // IE lose focus after element realign\n        // We should record activeElement and restore later\n        // IE lose focus after element realign\n        // We should record activeElement and restore later\n\n        var _document = document,\n            activeElement = _document.activeElement; // We only align when element is visible\n        // We only align when element is visible\n\n        if (element && isVisible(element)) {\n          result = alignElement(source, element, props.align);\n        } else if (point) {\n          result = alignPoint(source, point, props.align);\n        }\n\n        restoreFocus(activeElement, source);\n\n        if (latestOnAlign && result) {\n          latestOnAlign(source, result);\n        }\n\n        return true;\n      }\n\n      return false;\n    }, computed(function () {\n      return props.monitorBufferTime;\n    })),\n        _useBuffer2 = _slicedToArray(_useBuffer, 2),\n        _forceAlign = _useBuffer2[0],\n        cancelForceAlign = _useBuffer2[1]; // ===================== Effect =====================\n    // Listen for target updated\n\n\n    var resizeMonitor = ref({\n      cancel: function cancel() {}\n    }); // Listen for source updated\n\n    var sourceResizeMonitor = ref({\n      cancel: function cancel() {}\n    });\n\n    var goAlign = function goAlign() {\n      var target = props.target;\n      var element = getElement(target);\n      var point = getPoint(target);\n\n      if (nodeRef.value && nodeRef.value.$el !== sourceResizeMonitor.value.element) {\n        sourceResizeMonitor.value.cancel();\n        sourceResizeMonitor.value.element = nodeRef.value.$el;\n        sourceResizeMonitor.value.cancel = monitorResize(nodeRef.value.$el, _forceAlign);\n      }\n\n      if (cacheRef.value.element !== element || !isSamePoint(cacheRef.value.point, point)) {\n        _forceAlign(); // Add resize observer\n\n\n        if (resizeMonitor.value.element !== element) {\n          resizeMonitor.value.cancel();\n          resizeMonitor.value.element = element;\n          resizeMonitor.value.cancel = monitorResize(element, _forceAlign);\n        }\n      }\n    };\n\n    onMounted(function () {\n      goAlign();\n    });\n    onUpdated(function () {\n      goAlign();\n    }); // Listen for disabled change\n\n    watch(function () {\n      return props.disabled;\n    }, function (disabled) {\n      if (!disabled) {\n        _forceAlign();\n      } else {\n        cancelForceAlign();\n      }\n    }, {\n      flush: 'post'\n    }); // Listen for window resize\n\n    var winResizeRef = ref(null);\n    watch(function () {\n      return props.monitorWindowResize;\n    }, function (monitorWindowResize) {\n      if (monitorWindowResize) {\n        if (!winResizeRef.value) {\n          winResizeRef.value = addEventListener(window, 'resize', _forceAlign);\n        }\n      } else if (winResizeRef.value) {\n        winResizeRef.value.remove();\n        winResizeRef.value = null;\n      }\n    }, {\n      flush: 'post'\n    });\n    onUnmounted(function () {\n      resizeMonitor.value.cancel();\n      sourceResizeMonitor.value.cancel();\n      if (winResizeRef.value) winResizeRef.value.remove();\n      cancelForceAlign();\n    });\n    expose({\n      forceAlign: function forceAlign() {\n        return _forceAlign(true);\n      }\n    });\n    return function () {\n      var child = slots === null || slots === void 0 ? void 0 : slots.default();\n\n      if (child) {\n        return cloneElement(child[0], {\n          ref: nodeRef\n        }, true, true);\n      }\n\n      return child && child[0];\n    };\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-align/Align.js"],"names":["_slicedToArray","_typeof","defineComponent","ref","computed","onMounted","onUpdated","watch","onUnmounted","alignElement","alignPoint","addEventListener","cloneElement","isVisible","isSamePoint","restoreFocus","monitorResize","useBuffer","alignProps","align","Object","target","Function","onAlign","monitorBufferTime","Number","monitorWindowResize","Boolean","disabled","getElement","func","getPoint","point","name","props","emits","setup","_ref","expose","slots","cacheRef","nodeRef","forceAlignPropsRef","_useBuffer","_forceAlignPropsRef$v","value","latestDisabled","latestTarget","latestOnAlign","$el","source","result","element","_document","document","activeElement","_useBuffer2","_forceAlign","cancelForceAlign","resizeMonitor","cancel","sourceResizeMonitor","goAlign","flush","winResizeRef","window","remove","forceAlign","child","default"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { defineComponent, ref, computed, onMounted, onUpdated, watch, onUnmounted } from 'vue';\nimport { alignElement, alignPoint } from 'dom-align';\nimport addEventListener from '../vc-util/Dom/addEventListener';\nimport { cloneElement } from '../_util/vnode';\nimport isVisible from '../vc-util/Dom/isVisible';\nimport { isSamePoint, restoreFocus, monitorResize } from './util';\nimport useBuffer from './hooks/useBuffer';\nvar alignProps = {\n  align: Object,\n  target: [Object, Function],\n  onAlign: Function,\n  monitorBufferTime: Number,\n  monitorWindowResize: Boolean,\n  disabled: Boolean\n};\n\nfunction getElement(func) {\n  if (typeof func !== 'function') return null;\n  return func();\n}\n\nfunction getPoint(point) {\n  if (_typeof(point) !== 'object' || !point) return null;\n  return point;\n}\n\nexport default defineComponent({\n  name: 'Align',\n  props: alignProps,\n  emits: ['align'],\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n        slots = _ref.slots;\n    var cacheRef = ref({});\n    var nodeRef = ref();\n    var forceAlignPropsRef = computed(function () {\n      return {\n        disabled: props.disabled,\n        target: props.target,\n        onAlign: props.onAlign\n      };\n    });\n\n    var _useBuffer = useBuffer(function () {\n      var _forceAlignPropsRef$v = forceAlignPropsRef.value,\n          latestDisabled = _forceAlignPropsRef$v.disabled,\n          latestTarget = _forceAlignPropsRef$v.target,\n          latestOnAlign = _forceAlignPropsRef$v.onAlign;\n\n      if (!latestDisabled && latestTarget && nodeRef.value && nodeRef.value.$el) {\n        var source = nodeRef.value.$el;\n        var result;\n        var element = getElement(latestTarget);\n        var point = getPoint(latestTarget);\n        cacheRef.value.element = element;\n        cacheRef.value.point = point; // IE lose focus after element realign\n        // We should record activeElement and restore later\n\n        // IE lose focus after element realign\n        // We should record activeElement and restore later\n        var _document = document,\n            activeElement = _document.activeElement; // We only align when element is visible\n\n        // We only align when element is visible\n        if (element && isVisible(element)) {\n          result = alignElement(source, element, props.align);\n        } else if (point) {\n          result = alignPoint(source, point, props.align);\n        }\n\n        restoreFocus(activeElement, source);\n\n        if (latestOnAlign && result) {\n          latestOnAlign(source, result);\n        }\n\n        return true;\n      }\n\n      return false;\n    }, computed(function () {\n      return props.monitorBufferTime;\n    })),\n        _useBuffer2 = _slicedToArray(_useBuffer, 2),\n        _forceAlign = _useBuffer2[0],\n        cancelForceAlign = _useBuffer2[1]; // ===================== Effect =====================\n    // Listen for target updated\n\n\n    var resizeMonitor = ref({\n      cancel: function cancel() {}\n    }); // Listen for source updated\n\n    var sourceResizeMonitor = ref({\n      cancel: function cancel() {}\n    });\n\n    var goAlign = function goAlign() {\n      var target = props.target;\n      var element = getElement(target);\n      var point = getPoint(target);\n\n      if (nodeRef.value && nodeRef.value.$el !== sourceResizeMonitor.value.element) {\n        sourceResizeMonitor.value.cancel();\n        sourceResizeMonitor.value.element = nodeRef.value.$el;\n        sourceResizeMonitor.value.cancel = monitorResize(nodeRef.value.$el, _forceAlign);\n      }\n\n      if (cacheRef.value.element !== element || !isSamePoint(cacheRef.value.point, point)) {\n        _forceAlign(); // Add resize observer\n\n\n        if (resizeMonitor.value.element !== element) {\n          resizeMonitor.value.cancel();\n          resizeMonitor.value.element = element;\n          resizeMonitor.value.cancel = monitorResize(element, _forceAlign);\n        }\n      }\n    };\n\n    onMounted(function () {\n      goAlign();\n    });\n    onUpdated(function () {\n      goAlign();\n    }); // Listen for disabled change\n\n    watch(function () {\n      return props.disabled;\n    }, function (disabled) {\n      if (!disabled) {\n        _forceAlign();\n      } else {\n        cancelForceAlign();\n      }\n    }, {\n      flush: 'post'\n    }); // Listen for window resize\n\n    var winResizeRef = ref(null);\n    watch(function () {\n      return props.monitorWindowResize;\n    }, function (monitorWindowResize) {\n      if (monitorWindowResize) {\n        if (!winResizeRef.value) {\n          winResizeRef.value = addEventListener(window, 'resize', _forceAlign);\n        }\n      } else if (winResizeRef.value) {\n        winResizeRef.value.remove();\n        winResizeRef.value = null;\n      }\n    }, {\n      flush: 'post'\n    });\n    onUnmounted(function () {\n      resizeMonitor.value.cancel();\n      sourceResizeMonitor.value.cancel();\n      if (winResizeRef.value) winResizeRef.value.remove();\n      cancelForceAlign();\n    });\n    expose({\n      forceAlign: function forceAlign() {\n        return _forceAlign(true);\n      }\n    });\n    return function () {\n      var child = slots === null || slots === void 0 ? void 0 : slots.default();\n\n      if (child) {\n        return cloneElement(child[0], {\n          ref: nodeRef\n        }, true, true);\n      }\n\n      return child && child[0];\n    };\n  }\n});"]},"metadata":{},"sourceType":"module"}