{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, nextTick, defineComponent } from \"vue\";\nimport { numericProp, getScrollTop, preventDefault, createNamespace, makeNumericProp } from \"../utils\";\nimport { useScrollParent } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { Loading } from \"../loading\";\nconst [name, bem, t] = createNamespace(\"pull-refresh\");\nconst DEFAULT_HEAD_HEIGHT = 50;\nconst TEXT_STATUS = [\"pulling\", \"loosing\", \"success\"];\nconst pullRefreshProps = {\n  disabled: Boolean,\n  modelValue: Boolean,\n  headHeight: makeNumericProp(DEFAULT_HEAD_HEIGHT),\n  successText: String,\n  pullingText: String,\n  loosingText: String,\n  loadingText: String,\n  pullDistance: numericProp,\n  successDuration: makeNumericProp(500),\n  animationDuration: makeNumericProp(300)\n};\nvar stdin_default = defineComponent({\n  name,\n  props: pullRefreshProps,\n  emits: [\"refresh\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let reachTop;\n    const root = ref();\n    const scrollParent = useScrollParent(root);\n    const state = reactive({\n      status: \"normal\",\n      distance: 0,\n      duration: 0\n    });\n    const touch = useTouch();\n\n    const getHeadStyle = () => {\n      if (props.headHeight !== DEFAULT_HEAD_HEIGHT) {\n        return {\n          height: `${props.headHeight}px`\n        };\n      }\n    };\n\n    const isTouchable = () => state.status !== \"loading\" && state.status !== \"success\" && !props.disabled;\n\n    const ease = distance => {\n      const pullDistance = +(props.pullDistance || props.headHeight);\n\n      if (distance > pullDistance) {\n        if (distance < pullDistance * 2) {\n          distance = pullDistance + (distance - pullDistance) / 2;\n        } else {\n          distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4;\n        }\n      }\n\n      return Math.round(distance);\n    };\n\n    const setStatus = (distance, isLoading) => {\n      const pullDistance = +(props.pullDistance || props.headHeight);\n      state.distance = distance;\n\n      if (isLoading) {\n        state.status = \"loading\";\n      } else if (distance === 0) {\n        state.status = \"normal\";\n      } else if (distance < pullDistance) {\n        state.status = \"pulling\";\n      } else {\n        state.status = \"loosing\";\n      }\n    };\n\n    const getStatusText = () => {\n      const {\n        status\n      } = state;\n\n      if (status === \"normal\") {\n        return \"\";\n      }\n\n      return props[`${status}Text`] || t(status);\n    };\n\n    const renderStatus = () => {\n      const {\n        status,\n        distance\n      } = state;\n\n      if (slots[status]) {\n        return slots[status]({\n          distance\n        });\n      }\n\n      const nodes = [];\n\n      if (TEXT_STATUS.includes(status)) {\n        nodes.push(_createVNode(\"div\", {\n          \"class\": bem(\"text\")\n        }, [getStatusText()]));\n      }\n\n      if (status === \"loading\") {\n        nodes.push(_createVNode(Loading, {\n          \"class\": bem(\"loading\")\n        }, {\n          default: getStatusText\n        }));\n      }\n\n      return nodes;\n    };\n\n    const showSuccessTip = () => {\n      state.status = \"success\";\n      setTimeout(() => {\n        setStatus(0);\n      }, +props.successDuration);\n    };\n\n    const checkPosition = event => {\n      reachTop = getScrollTop(scrollParent.value) === 0;\n\n      if (reachTop) {\n        state.duration = 0;\n        touch.start(event);\n      }\n    };\n\n    const onTouchStart = event => {\n      if (isTouchable()) {\n        checkPosition(event);\n      }\n    };\n\n    const onTouchMove = event => {\n      if (isTouchable()) {\n        if (!reachTop) {\n          checkPosition(event);\n        }\n\n        const {\n          deltaY\n        } = touch;\n        touch.move(event);\n\n        if (reachTop && deltaY.value >= 0 && touch.isVertical()) {\n          preventDefault(event);\n          setStatus(ease(deltaY.value));\n        }\n      }\n    };\n\n    const onTouchEnd = () => {\n      if (reachTop && touch.deltaY.value && isTouchable()) {\n        state.duration = +props.animationDuration;\n\n        if (state.status === \"loosing\") {\n          setStatus(+props.headHeight, true);\n          emit(\"update:modelValue\", true);\n          nextTick(() => emit(\"refresh\"));\n        } else {\n          setStatus(0);\n        }\n      }\n    };\n\n    watch(() => props.modelValue, value => {\n      state.duration = +props.animationDuration;\n\n      if (value) {\n        setStatus(+props.headHeight, true);\n      } else if (slots.success || props.successText) {\n        showSuccessTip();\n      } else {\n        setStatus(0, false);\n      }\n    });\n    return () => {\n      var _a;\n\n      const trackStyle = {\n        transitionDuration: `${state.duration}ms`,\n        transform: state.distance ? `translate3d(0,${state.distance}px, 0)` : \"\"\n      };\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"track\"),\n        \"style\": trackStyle,\n        \"onTouchstart\": onTouchStart,\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"head\"),\n        \"style\": getHeadStyle()\n      }, [renderStatus()]), (_a = slots.default) == null ? void 0 : _a.call(slots)])]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/pull-refresh/PullRefresh.js"],"names":["createVNode","_createVNode","ref","watch","reactive","nextTick","defineComponent","numericProp","getScrollTop","preventDefault","createNamespace","makeNumericProp","useScrollParent","useTouch","Loading","name","bem","t","DEFAULT_HEAD_HEIGHT","TEXT_STATUS","pullRefreshProps","disabled","Boolean","modelValue","headHeight","successText","String","pullingText","loosingText","loadingText","pullDistance","successDuration","animationDuration","stdin_default","props","emits","setup","emit","slots","reachTop","root","scrollParent","state","status","distance","duration","touch","getHeadStyle","height","isTouchable","ease","Math","round","setStatus","isLoading","getStatusText","renderStatus","nodes","includes","push","default","showSuccessTip","setTimeout","checkPosition","event","value","start","onTouchStart","onTouchMove","deltaY","move","isVertical","onTouchEnd","success","_a","trackStyle","transitionDuration","transform","call"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,eAAzC,QAAgE,KAAhE;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,cAApC,EAAoDC,eAApD,EAAqEC,eAArE,QAA4F,UAA5F;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,EAAYC,CAAZ,IAAiBP,eAAe,CAAC,cAAD,CAAtC;AACA,MAAMQ,mBAAmB,GAAG,EAA5B;AACA,MAAMC,WAAW,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAApB;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAEC,OADa;AAEvBC,EAAAA,UAAU,EAAED,OAFW;AAGvBE,EAAAA,UAAU,EAAEb,eAAe,CAACO,mBAAD,CAHJ;AAIvBO,EAAAA,WAAW,EAAEC,MAJU;AAKvBC,EAAAA,WAAW,EAAED,MALU;AAMvBE,EAAAA,WAAW,EAAEF,MANU;AAOvBG,EAAAA,WAAW,EAAEH,MAPU;AAQvBI,EAAAA,YAAY,EAAEvB,WARS;AASvBwB,EAAAA,eAAe,EAAEpB,eAAe,CAAC,GAAD,CATT;AAUvBqB,EAAAA,iBAAiB,EAAErB,eAAe,CAAC,GAAD;AAVX,CAAzB;AAYA,IAAIsB,aAAa,GAAG3B,eAAe,CAAC;AAClCS,EAAAA,IADkC;AAElCmB,EAAAA,KAAK,EAAEd,gBAF2B;AAGlCe,EAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,mBAAZ,CAH2B;;AAIlCC,EAAAA,KAAK,CAACF,KAAD,EAAQ;AACXG,IAAAA,IADW;AAEXC,IAAAA;AAFW,GAAR,EAGF;AACD,QAAIC,QAAJ;AACA,UAAMC,IAAI,GAAGtC,GAAG,EAAhB;AACA,UAAMuC,YAAY,GAAG7B,eAAe,CAAC4B,IAAD,CAApC;AACA,UAAME,KAAK,GAAGtC,QAAQ,CAAC;AACrBuC,MAAAA,MAAM,EAAE,QADa;AAErBC,MAAAA,QAAQ,EAAE,CAFW;AAGrBC,MAAAA,QAAQ,EAAE;AAHW,KAAD,CAAtB;AAKA,UAAMC,KAAK,GAAGjC,QAAQ,EAAtB;;AACA,UAAMkC,YAAY,GAAG,MAAM;AACzB,UAAIb,KAAK,CAACV,UAAN,KAAqBN,mBAAzB,EAA8C;AAC5C,eAAO;AACL8B,UAAAA,MAAM,EAAG,GAAEd,KAAK,CAACV,UAAW;AADvB,SAAP;AAGD;AACF,KAND;;AAOA,UAAMyB,WAAW,GAAG,MAAMP,KAAK,CAACC,MAAN,KAAiB,SAAjB,IAA8BD,KAAK,CAACC,MAAN,KAAiB,SAA/C,IAA4D,CAACT,KAAK,CAACb,QAA7F;;AACA,UAAM6B,IAAI,GAAIN,QAAD,IAAc;AACzB,YAAMd,YAAY,GAAG,EAAEI,KAAK,CAACJ,YAAN,IAAsBI,KAAK,CAACV,UAA9B,CAArB;;AACA,UAAIoB,QAAQ,GAAGd,YAAf,EAA6B;AAC3B,YAAIc,QAAQ,GAAGd,YAAY,GAAG,CAA9B,EAAiC;AAC/Bc,UAAAA,QAAQ,GAAGd,YAAY,GAAG,CAACc,QAAQ,GAAGd,YAAZ,IAA4B,CAAtD;AACD,SAFD,MAEO;AACLc,UAAAA,QAAQ,GAAGd,YAAY,GAAG,GAAf,GAAqB,CAACc,QAAQ,GAAGd,YAAY,GAAG,CAA3B,IAAgC,CAAhE;AACD;AACF;;AACD,aAAOqB,IAAI,CAACC,KAAL,CAAWR,QAAX,CAAP;AACD,KAVD;;AAWA,UAAMS,SAAS,GAAG,CAACT,QAAD,EAAWU,SAAX,KAAyB;AACzC,YAAMxB,YAAY,GAAG,EAAEI,KAAK,CAACJ,YAAN,IAAsBI,KAAK,CAACV,UAA9B,CAArB;AACAkB,MAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;;AACA,UAAIU,SAAJ,EAAe;AACbZ,QAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACD,OAFD,MAEO,IAAIC,QAAQ,KAAK,CAAjB,EAAoB;AACzBF,QAAAA,KAAK,CAACC,MAAN,GAAe,QAAf;AACD,OAFM,MAEA,IAAIC,QAAQ,GAAGd,YAAf,EAA6B;AAClCY,QAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACD,OAFM,MAEA;AACLD,QAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACD;AACF,KAZD;;AAaA,UAAMY,aAAa,GAAG,MAAM;AAC1B,YAAM;AACJZ,QAAAA;AADI,UAEFD,KAFJ;;AAGA,UAAIC,MAAM,KAAK,QAAf,EAAyB;AACvB,eAAO,EAAP;AACD;;AACD,aAAOT,KAAK,CAAE,GAAES,MAAO,MAAX,CAAL,IAA0B1B,CAAC,CAAC0B,MAAD,CAAlC;AACD,KARD;;AASA,UAAMa,YAAY,GAAG,MAAM;AACzB,YAAM;AACJb,QAAAA,MADI;AAEJC,QAAAA;AAFI,UAGFF,KAHJ;;AAIA,UAAIJ,KAAK,CAACK,MAAD,CAAT,EAAmB;AACjB,eAAOL,KAAK,CAACK,MAAD,CAAL,CAAc;AACnBC,UAAAA;AADmB,SAAd,CAAP;AAGD;;AACD,YAAMa,KAAK,GAAG,EAAd;;AACA,UAAItC,WAAW,CAACuC,QAAZ,CAAqBf,MAArB,CAAJ,EAAkC;AAChCc,QAAAA,KAAK,CAACE,IAAN,CAAW1D,YAAY,CAAC,KAAD,EAAQ;AAC7B,mBAASe,GAAG,CAAC,MAAD;AADiB,SAAR,EAEpB,CAACuC,aAAa,EAAd,CAFoB,CAAvB;AAGD;;AACD,UAAIZ,MAAM,KAAK,SAAf,EAA0B;AACxBc,QAAAA,KAAK,CAACE,IAAN,CAAW1D,YAAY,CAACa,OAAD,EAAU;AAC/B,mBAASE,GAAG,CAAC,SAAD;AADmB,SAAV,EAEpB;AACD4C,UAAAA,OAAO,EAAEL;AADR,SAFoB,CAAvB;AAKD;;AACD,aAAOE,KAAP;AACD,KAxBD;;AAyBA,UAAMI,cAAc,GAAG,MAAM;AAC3BnB,MAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACAmB,MAAAA,UAAU,CAAC,MAAM;AACfT,QAAAA,SAAS,CAAC,CAAD,CAAT;AACD,OAFS,EAEP,CAACnB,KAAK,CAACH,eAFA,CAAV;AAGD,KALD;;AAMA,UAAMgC,aAAa,GAAIC,KAAD,IAAW;AAC/BzB,MAAAA,QAAQ,GAAG/B,YAAY,CAACiC,YAAY,CAACwB,KAAd,CAAZ,KAAqC,CAAhD;;AACA,UAAI1B,QAAJ,EAAc;AACZG,QAAAA,KAAK,CAACG,QAAN,GAAiB,CAAjB;AACAC,QAAAA,KAAK,CAACoB,KAAN,CAAYF,KAAZ;AACD;AACF,KAND;;AAOA,UAAMG,YAAY,GAAIH,KAAD,IAAW;AAC9B,UAAIf,WAAW,EAAf,EAAmB;AACjBc,QAAAA,aAAa,CAACC,KAAD,CAAb;AACD;AACF,KAJD;;AAKA,UAAMI,WAAW,GAAIJ,KAAD,IAAW;AAC7B,UAAIf,WAAW,EAAf,EAAmB;AACjB,YAAI,CAACV,QAAL,EAAe;AACbwB,UAAAA,aAAa,CAACC,KAAD,CAAb;AACD;;AACD,cAAM;AACJK,UAAAA;AADI,YAEFvB,KAFJ;AAGAA,QAAAA,KAAK,CAACwB,IAAN,CAAWN,KAAX;;AACA,YAAIzB,QAAQ,IAAI8B,MAAM,CAACJ,KAAP,IAAgB,CAA5B,IAAiCnB,KAAK,CAACyB,UAAN,EAArC,EAAyD;AACvD9D,UAAAA,cAAc,CAACuD,KAAD,CAAd;AACAX,UAAAA,SAAS,CAACH,IAAI,CAACmB,MAAM,CAACJ,KAAR,CAAL,CAAT;AACD;AACF;AACF,KAdD;;AAeA,UAAMO,UAAU,GAAG,MAAM;AACvB,UAAIjC,QAAQ,IAAIO,KAAK,CAACuB,MAAN,CAAaJ,KAAzB,IAAkChB,WAAW,EAAjD,EAAqD;AACnDP,QAAAA,KAAK,CAACG,QAAN,GAAiB,CAACX,KAAK,CAACF,iBAAxB;;AACA,YAAIU,KAAK,CAACC,MAAN,KAAiB,SAArB,EAAgC;AAC9BU,UAAAA,SAAS,CAAC,CAACnB,KAAK,CAACV,UAAR,EAAoB,IAApB,CAAT;AACAa,UAAAA,IAAI,CAAC,mBAAD,EAAsB,IAAtB,CAAJ;AACAhC,UAAAA,QAAQ,CAAC,MAAMgC,IAAI,CAAC,SAAD,CAAX,CAAR;AACD,SAJD,MAIO;AACLgB,UAAAA,SAAS,CAAC,CAAD,CAAT;AACD;AACF;AACF,KAXD;;AAYAlD,IAAAA,KAAK,CAAC,MAAM+B,KAAK,CAACX,UAAb,EAA0B0C,KAAD,IAAW;AACvCvB,MAAAA,KAAK,CAACG,QAAN,GAAiB,CAACX,KAAK,CAACF,iBAAxB;;AACA,UAAIiC,KAAJ,EAAW;AACTZ,QAAAA,SAAS,CAAC,CAACnB,KAAK,CAACV,UAAR,EAAoB,IAApB,CAAT;AACD,OAFD,MAEO,IAAIc,KAAK,CAACmC,OAAN,IAAiBvC,KAAK,CAACT,WAA3B,EAAwC;AAC7CoC,QAAAA,cAAc;AACf,OAFM,MAEA;AACLR,QAAAA,SAAS,CAAC,CAAD,EAAI,KAAJ,CAAT;AACD;AACF,KATI,CAAL;AAUA,WAAO,MAAM;AACX,UAAIqB,EAAJ;;AACA,YAAMC,UAAU,GAAG;AACjBC,QAAAA,kBAAkB,EAAG,GAAElC,KAAK,CAACG,QAAS,IADrB;AAEjBgC,QAAAA,SAAS,EAAEnC,KAAK,CAACE,QAAN,GAAkB,iBAAgBF,KAAK,CAACE,QAAS,QAAjD,GAA2D;AAFrD,OAAnB;AAIA,aAAO3C,YAAY,CAAC,KAAD,EAAQ;AACzB,eAAOuC,IADkB;AAEzB,iBAASxB,GAAG;AAFa,OAAR,EAGhB,CAACf,YAAY,CAAC,KAAD,EAAQ;AACtB,iBAASe,GAAG,CAAC,OAAD,CADU;AAEtB,iBAAS2D,UAFa;AAGtB,wBAAgBR,YAHM;AAItB,uBAAeC,WAJO;AAKtB,sBAAcI,UALQ;AAMtB,yBAAiBA;AANK,OAAR,EAOb,CAACvE,YAAY,CAAC,KAAD,EAAQ;AACtB,iBAASe,GAAG,CAAC,MAAD,CADU;AAEtB,iBAAS+B,YAAY;AAFC,OAAR,EAGb,CAACS,YAAY,EAAb,CAHa,CAAb,EAGmB,CAACkB,EAAE,GAAGpC,KAAK,CAACsB,OAAZ,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCc,EAAE,CAACI,IAAH,CAAQxC,KAAR,CAH3D,CAPa,CAAb,CAHgB,CAAnB;AAcD,KApBD;AAqBD;;AA/JiC,CAAD,CAAnC;AAiKA,SACEL,aAAa,IAAI2B,OADnB","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, nextTick, defineComponent } from \"vue\";\nimport { numericProp, getScrollTop, preventDefault, createNamespace, makeNumericProp } from \"../utils\";\nimport { useScrollParent } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { Loading } from \"../loading\";\nconst [name, bem, t] = createNamespace(\"pull-refresh\");\nconst DEFAULT_HEAD_HEIGHT = 50;\nconst TEXT_STATUS = [\"pulling\", \"loosing\", \"success\"];\nconst pullRefreshProps = {\n  disabled: Boolean,\n  modelValue: Boolean,\n  headHeight: makeNumericProp(DEFAULT_HEAD_HEIGHT),\n  successText: String,\n  pullingText: String,\n  loosingText: String,\n  loadingText: String,\n  pullDistance: numericProp,\n  successDuration: makeNumericProp(500),\n  animationDuration: makeNumericProp(300)\n};\nvar stdin_default = defineComponent({\n  name,\n  props: pullRefreshProps,\n  emits: [\"refresh\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let reachTop;\n    const root = ref();\n    const scrollParent = useScrollParent(root);\n    const state = reactive({\n      status: \"normal\",\n      distance: 0,\n      duration: 0\n    });\n    const touch = useTouch();\n    const getHeadStyle = () => {\n      if (props.headHeight !== DEFAULT_HEAD_HEIGHT) {\n        return {\n          height: `${props.headHeight}px`\n        };\n      }\n    };\n    const isTouchable = () => state.status !== \"loading\" && state.status !== \"success\" && !props.disabled;\n    const ease = (distance) => {\n      const pullDistance = +(props.pullDistance || props.headHeight);\n      if (distance > pullDistance) {\n        if (distance < pullDistance * 2) {\n          distance = pullDistance + (distance - pullDistance) / 2;\n        } else {\n          distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4;\n        }\n      }\n      return Math.round(distance);\n    };\n    const setStatus = (distance, isLoading) => {\n      const pullDistance = +(props.pullDistance || props.headHeight);\n      state.distance = distance;\n      if (isLoading) {\n        state.status = \"loading\";\n      } else if (distance === 0) {\n        state.status = \"normal\";\n      } else if (distance < pullDistance) {\n        state.status = \"pulling\";\n      } else {\n        state.status = \"loosing\";\n      }\n    };\n    const getStatusText = () => {\n      const {\n        status\n      } = state;\n      if (status === \"normal\") {\n        return \"\";\n      }\n      return props[`${status}Text`] || t(status);\n    };\n    const renderStatus = () => {\n      const {\n        status,\n        distance\n      } = state;\n      if (slots[status]) {\n        return slots[status]({\n          distance\n        });\n      }\n      const nodes = [];\n      if (TEXT_STATUS.includes(status)) {\n        nodes.push(_createVNode(\"div\", {\n          \"class\": bem(\"text\")\n        }, [getStatusText()]));\n      }\n      if (status === \"loading\") {\n        nodes.push(_createVNode(Loading, {\n          \"class\": bem(\"loading\")\n        }, {\n          default: getStatusText\n        }));\n      }\n      return nodes;\n    };\n    const showSuccessTip = () => {\n      state.status = \"success\";\n      setTimeout(() => {\n        setStatus(0);\n      }, +props.successDuration);\n    };\n    const checkPosition = (event) => {\n      reachTop = getScrollTop(scrollParent.value) === 0;\n      if (reachTop) {\n        state.duration = 0;\n        touch.start(event);\n      }\n    };\n    const onTouchStart = (event) => {\n      if (isTouchable()) {\n        checkPosition(event);\n      }\n    };\n    const onTouchMove = (event) => {\n      if (isTouchable()) {\n        if (!reachTop) {\n          checkPosition(event);\n        }\n        const {\n          deltaY\n        } = touch;\n        touch.move(event);\n        if (reachTop && deltaY.value >= 0 && touch.isVertical()) {\n          preventDefault(event);\n          setStatus(ease(deltaY.value));\n        }\n      }\n    };\n    const onTouchEnd = () => {\n      if (reachTop && touch.deltaY.value && isTouchable()) {\n        state.duration = +props.animationDuration;\n        if (state.status === \"loosing\") {\n          setStatus(+props.headHeight, true);\n          emit(\"update:modelValue\", true);\n          nextTick(() => emit(\"refresh\"));\n        } else {\n          setStatus(0);\n        }\n      }\n    };\n    watch(() => props.modelValue, (value) => {\n      state.duration = +props.animationDuration;\n      if (value) {\n        setStatus(+props.headHeight, true);\n      } else if (slots.success || props.successText) {\n        showSuccessTip();\n      } else {\n        setStatus(0, false);\n      }\n    });\n    return () => {\n      var _a;\n      const trackStyle = {\n        transitionDuration: `${state.duration}ms`,\n        transform: state.distance ? `translate3d(0,${state.distance}px, 0)` : \"\"\n      };\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"track\"),\n        \"style\": trackStyle,\n        \"onTouchstart\": onTouchStart,\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"head\"),\n        \"style\": getHeadStyle()\n      }, [renderStatus()]), (_a = slots.default) == null ? void 0 : _a.call(slots)])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}