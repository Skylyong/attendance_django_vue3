{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { isDef, truthProp, numericProp, createNamespace } from \"../utils\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"tab\");\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    id: String,\n    dot: Boolean,\n    type: String,\n    color: String,\n    title: String,\n    badge: numericProp,\n    shrink: Boolean,\n    isActive: Boolean,\n    disabled: Boolean,\n    controls: String,\n    scrollable: Boolean,\n    activeColor: String,\n    inactiveColor: String,\n    showZeroBadge: truthProp\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const style = computed(() => {\n      const style2 = {};\n      const {\n        type,\n        color,\n        disabled,\n        isActive,\n        activeColor,\n        inactiveColor\n      } = props;\n      const isCard = type === \"card\";\n\n      if (color && isCard) {\n        style2.borderColor = color;\n\n        if (!disabled) {\n          if (isActive) {\n            style2.backgroundColor = color;\n          } else {\n            style2.color = color;\n          }\n        }\n      }\n\n      const titleColor = isActive ? activeColor : inactiveColor;\n\n      if (titleColor) {\n        style2.color = titleColor;\n      }\n\n      return style2;\n    });\n\n    const renderText = () => {\n      const Text = _createVNode(\"span\", {\n        \"class\": bem(\"text\", {\n          ellipsis: !props.scrollable\n        })\n      }, [slots.title ? slots.title() : props.title]);\n\n      if (props.dot || isDef(props.badge) && props.badge !== \"\") {\n        return _createVNode(Badge, {\n          \"dot\": props.dot,\n          \"content\": props.badge,\n          \"showZero\": props.showZeroBadge\n        }, {\n          default: () => [Text]\n        });\n      }\n\n      return Text;\n    };\n\n    return () => _createVNode(\"div\", {\n      \"id\": props.id,\n      \"role\": \"tab\",\n      \"class\": [bem([props.type, {\n        grow: props.scrollable && !props.shrink,\n        shrink: props.shrink,\n        active: props.isActive,\n        disabled: props.disabled\n      }])],\n      \"style\": style.value,\n      \"tabindex\": props.disabled ? void 0 : props.isActive ? 0 : -1,\n      \"aria-selected\": props.isActive,\n      \"aria-disabled\": props.disabled || void 0,\n      \"aria-controls\": props.controls\n    }, [renderText()]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/tabs/TabsTitle.js"],"names":["createVNode","_createVNode","computed","defineComponent","isDef","truthProp","numericProp","createNamespace","Badge","name","bem","stdin_default","props","id","String","dot","Boolean","type","color","title","badge","shrink","isActive","disabled","controls","scrollable","activeColor","inactiveColor","showZeroBadge","setup","slots","style","style2","isCard","borderColor","backgroundColor","titleColor","renderText","Text","ellipsis","default","grow","active","value"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { isDef, truthProp, numericProp, createNamespace } from \"../utils\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"tab\");\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    id: String,\n    dot: Boolean,\n    type: String,\n    color: String,\n    title: String,\n    badge: numericProp,\n    shrink: Boolean,\n    isActive: Boolean,\n    disabled: Boolean,\n    controls: String,\n    scrollable: Boolean,\n    activeColor: String,\n    inactiveColor: String,\n    showZeroBadge: truthProp\n  },\n  setup(props, {\n    slots\n  }) {\n    const style = computed(() => {\n      const style2 = {};\n      const {\n        type,\n        color,\n        disabled,\n        isActive,\n        activeColor,\n        inactiveColor\n      } = props;\n      const isCard = type === \"card\";\n      if (color && isCard) {\n        style2.borderColor = color;\n        if (!disabled) {\n          if (isActive) {\n            style2.backgroundColor = color;\n          } else {\n            style2.color = color;\n          }\n        }\n      }\n      const titleColor = isActive ? activeColor : inactiveColor;\n      if (titleColor) {\n        style2.color = titleColor;\n      }\n      return style2;\n    });\n    const renderText = () => {\n      const Text = _createVNode(\"span\", {\n        \"class\": bem(\"text\", {\n          ellipsis: !props.scrollable\n        })\n      }, [slots.title ? slots.title() : props.title]);\n      if (props.dot || isDef(props.badge) && props.badge !== \"\") {\n        return _createVNode(Badge, {\n          \"dot\": props.dot,\n          \"content\": props.badge,\n          \"showZero\": props.showZeroBadge\n        }, {\n          default: () => [Text]\n        });\n      }\n      return Text;\n    };\n    return () => _createVNode(\"div\", {\n      \"id\": props.id,\n      \"role\": \"tab\",\n      \"class\": [bem([props.type, {\n        grow: props.scrollable && !props.shrink,\n        shrink: props.shrink,\n        active: props.isActive,\n        disabled: props.disabled\n      }])],\n      \"style\": style.value,\n      \"tabindex\": props.disabled ? void 0 : props.isActive ? 0 : -1,\n      \"aria-selected\": props.isActive,\n      \"aria-disabled\": props.disabled || void 0,\n      \"aria-controls\": props.controls\n    }, [renderText()]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}