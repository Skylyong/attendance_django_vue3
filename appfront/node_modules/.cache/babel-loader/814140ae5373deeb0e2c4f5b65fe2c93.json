{"ast":null,"code":"var keys = require('./keys');\n\nvar slice = require('./slice');\n\nvar includes = require('./includes');\n\nvar arrayEach = require('./arrayEach');\n\nvar assign = require('./assign');\n/**\r\n  * 将一个或者多个对象值解构到目标对象\r\n  *\r\n  * @param {Object} destination 目标对象\r\n  * @param {...Object}\r\n  * @return {Boolean}\r\n  */\n\n\nfunction destructuring(destination, sources) {\n  if (destination && sources) {\n    var rest = assign.apply(this, [{}].concat(slice(arguments, 1)));\n    var restKeys = keys(rest);\n    arrayEach(keys(destination), function (key) {\n      if (includes(restKeys, key)) {\n        destination[key] = rest[key];\n      }\n    });\n  }\n\n  return destination;\n}\n\nmodule.exports = destructuring;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/destructuring.js"],"names":["keys","require","slice","includes","arrayEach","assign","destructuring","destination","sources","rest","apply","concat","arguments","restKeys","key","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,aAAT,CAAwBC,WAAxB,EAAqCC,OAArC,EAA8C;AAC5C,MAAID,WAAW,IAAIC,OAAnB,EAA4B;AAC1B,QAAIC,IAAI,GAAGJ,MAAM,CAACK,KAAP,CAAa,IAAb,EAAmB,CAAC,EAAD,EAAKC,MAAL,CAAYT,KAAK,CAACU,SAAD,EAAY,CAAZ,CAAjB,CAAnB,CAAX;AACA,QAAIC,QAAQ,GAAGb,IAAI,CAACS,IAAD,CAAnB;AACAL,IAAAA,SAAS,CAACJ,IAAI,CAACO,WAAD,CAAL,EAAoB,UAAUO,GAAV,EAAe;AAC1C,UAAIX,QAAQ,CAACU,QAAD,EAAWC,GAAX,CAAZ,EAA6B;AAC3BP,QAAAA,WAAW,CAACO,GAAD,CAAX,GAAmBL,IAAI,CAACK,GAAD,CAAvB;AACD;AACF,KAJQ,CAAT;AAKD;;AACD,SAAOP,WAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBV,aAAjB","sourcesContent":["var keys = require('./keys')\r\n\r\nvar slice = require('./slice')\r\nvar includes = require('./includes')\r\nvar arrayEach = require('./arrayEach')\r\n\r\nvar assign = require('./assign')\r\n\r\n/**\r\n  * 将一个或者多个对象值解构到目标对象\r\n  *\r\n  * @param {Object} destination 目标对象\r\n  * @param {...Object}\r\n  * @return {Boolean}\r\n  */\r\nfunction destructuring (destination, sources) {\r\n  if (destination && sources) {\r\n    var rest = assign.apply(this, [{}].concat(slice(arguments, 1)))\r\n    var restKeys = keys(rest)\r\n    arrayEach(keys(destination), function (key) {\r\n      if (includes(restKeys, key)) {\r\n        destination[key] = rest[key]\r\n      }\r\n    })\r\n  }\r\n  return destination\r\n}\r\n\r\nmodule.exports = destructuring\r\n"]},"metadata":{},"sourceType":"script"}