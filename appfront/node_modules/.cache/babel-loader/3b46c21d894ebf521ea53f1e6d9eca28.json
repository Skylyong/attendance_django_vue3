{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { createVNode as _createVNode } from \"vue\";\nimport PropTypes from './vue-types';\nimport _switchScrollingEffect from './switchScrollingEffect';\nimport setStyle from './setStyle';\nimport Portal from './Portal';\nimport { defineComponent } from 'vue';\nvar openCount = 0;\nvar windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement); // https://github.com/ant-design/ant-design/issues/19340\n// https://github.com/ant-design/ant-design/issues/19332\n\nvar cacheOverflow = {};\nexport default defineComponent({\n  name: 'PortalWrapper',\n  props: {\n    wrapperClassName: PropTypes.string,\n    forceRender: PropTypes.looseBool,\n    getContainer: PropTypes.any,\n    children: PropTypes.func,\n    visible: PropTypes.looseBool\n  },\n  data: function data() {\n    this._component = null;\n    var visible = this.$props.visible;\n    openCount = visible ? openCount + 1 : openCount;\n    return {};\n  },\n  watch: {\n    visible: function visible(val) {\n      openCount = val ? openCount + 1 : openCount - 1;\n    },\n    getContainer: function getContainer(_getContainer, prevGetContainer) {\n      var getContainerIsFunc = typeof _getContainer === 'function' && typeof prevGetContainer === 'function';\n\n      if (getContainerIsFunc ? _getContainer.toString() !== prevGetContainer.toString() : _getContainer !== prevGetContainer) {\n        this.removeCurrentContainer(false);\n      }\n    }\n  },\n  updated: function updated() {\n    this.setWrapperClassName();\n  },\n  beforeUnmount: function beforeUnmount() {\n    var visible = this.$props.visible; // 离开时不会 render， 导到离开时数值不变，改用 func 。。\n\n    openCount = visible && openCount ? openCount - 1 : openCount;\n    this.removeCurrentContainer(visible);\n  },\n  methods: {\n    getParent: function getParent() {\n      var getContainer = this.$props.getContainer;\n\n      if (getContainer) {\n        if (typeof getContainer === 'string') {\n          return document.querySelectorAll(getContainer)[0];\n        }\n\n        if (typeof getContainer === 'function') {\n          return getContainer();\n        }\n\n        if (_typeof(getContainer) === 'object' && getContainer instanceof window.HTMLElement) {\n          return getContainer;\n        }\n      }\n\n      return document.body;\n    },\n    getDomContainer: function getDomContainer() {\n      if (windowIsUndefined) {\n        return null;\n      }\n\n      if (!this.container) {\n        this.container = document.createElement('div');\n        var parent = this.getParent();\n\n        if (parent) {\n          parent.appendChild(this.container);\n        }\n      }\n\n      this.setWrapperClassName();\n      return this.container;\n    },\n    setWrapperClassName: function setWrapperClassName() {\n      var wrapperClassName = this.$props.wrapperClassName;\n\n      if (this.container && wrapperClassName && wrapperClassName !== this.container.className) {\n        this.container.className = wrapperClassName;\n      }\n    },\n    savePortal: function savePortal(c) {\n      // Warning: don't rename _component\n      // https://github.com/react-component/util/pull/65#discussion_r352407916\n      this._component = c;\n    },\n    removeCurrentContainer: function removeCurrentContainer() {\n      this.container = null;\n      this._component = null;\n    },\n\n    /**\n     * Enhance ./switchScrollingEffect\n     * 1. Simulate document body scroll bar with\n     * 2. Record body has overflow style and recover when all of PortalWrapper invisible\n     * 3. Disable body scroll when PortalWrapper has open\n     *\n     * @memberof PortalWrapper\n     */\n    switchScrollingEffect: function switchScrollingEffect() {\n      if (openCount === 1 && !Object.keys(cacheOverflow).length) {\n        _switchScrollingEffect(); // Must be set after switchScrollingEffect\n\n\n        cacheOverflow = setStyle({\n          overflow: 'hidden',\n          overflowX: 'hidden',\n          overflowY: 'hidden'\n        });\n      } else if (!openCount) {\n        setStyle(cacheOverflow);\n        cacheOverflow = {};\n\n        _switchScrollingEffect(true);\n      }\n    }\n  },\n  render: function render() {\n    var _this$$props = this.$props,\n        children = _this$$props.children,\n        forceRender = _this$$props.forceRender,\n        visible = _this$$props.visible;\n    var portal = null;\n    var childProps = {\n      getOpenCount: function getOpenCount() {\n        return openCount;\n      },\n      getContainer: this.getDomContainer,\n      switchScrollingEffect: this.switchScrollingEffect\n    };\n\n    if (forceRender || visible || this._component) {\n      portal = _createVNode(Portal, {\n        \"getContainer\": this.getDomContainer,\n        \"children\": children(childProps),\n        \"ref\": this.savePortal\n      }, null);\n    }\n\n    return portal;\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/_util/PortalWrapper.js"],"names":["_typeof","createVNode","_createVNode","PropTypes","_switchScrollingEffect","setStyle","Portal","defineComponent","openCount","windowIsUndefined","window","document","createElement","cacheOverflow","name","props","wrapperClassName","string","forceRender","looseBool","getContainer","any","children","func","visible","data","_component","$props","watch","val","_getContainer","prevGetContainer","getContainerIsFunc","toString","removeCurrentContainer","updated","setWrapperClassName","beforeUnmount","methods","getParent","querySelectorAll","HTMLElement","body","getDomContainer","container","parent","appendChild","className","savePortal","c","switchScrollingEffect","Object","keys","length","overflow","overflowX","overflowY","render","_this$$props","portal","childProps","getOpenCount"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,SAASC,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,sBAAP,MAAmC,yBAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,iBAAiB,GAAG,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAAtE,CAAxB,C,CAA8G;AAC9G;;AAEA,IAAIC,aAAa,GAAG,EAApB;AACA,eAAeN,eAAe,CAAC;AAC7BO,EAAAA,IAAI,EAAE,eADuB;AAE7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,gBAAgB,EAAEb,SAAS,CAACc,MADvB;AAELC,IAAAA,WAAW,EAAEf,SAAS,CAACgB,SAFlB;AAGLC,IAAAA,YAAY,EAAEjB,SAAS,CAACkB,GAHnB;AAILC,IAAAA,QAAQ,EAAEnB,SAAS,CAACoB,IAJf;AAKLC,IAAAA,OAAO,EAAErB,SAAS,CAACgB;AALd,GAFsB;AAS7BM,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,SAAKC,UAAL,GAAkB,IAAlB;AACA,QAAIF,OAAO,GAAG,KAAKG,MAAL,CAAYH,OAA1B;AACAhB,IAAAA,SAAS,GAAGgB,OAAO,GAAGhB,SAAS,GAAG,CAAf,GAAmBA,SAAtC;AACA,WAAO,EAAP;AACD,GAd4B;AAe7BoB,EAAAA,KAAK,EAAE;AACLJ,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBK,GAAjB,EAAsB;AAC7BrB,MAAAA,SAAS,GAAGqB,GAAG,GAAGrB,SAAS,GAAG,CAAf,GAAmBA,SAAS,GAAG,CAA9C;AACD,KAHI;AAILY,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBU,aAAtB,EAAqCC,gBAArC,EAAuD;AACnE,UAAIC,kBAAkB,GAAG,OAAOF,aAAP,KAAyB,UAAzB,IAAuC,OAAOC,gBAAP,KAA4B,UAA5F;;AAEA,UAAIC,kBAAkB,GAAGF,aAAa,CAACG,QAAd,OAA6BF,gBAAgB,CAACE,QAAjB,EAAhC,GAA8DH,aAAa,KAAKC,gBAAtG,EAAwH;AACtH,aAAKG,sBAAL,CAA4B,KAA5B;AACD;AACF;AAVI,GAfsB;AA2B7BC,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,SAAKC,mBAAL;AACD,GA7B4B;AA8B7BC,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,QAAIb,OAAO,GAAG,KAAKG,MAAL,CAAYH,OAA1B,CADsC,CACH;;AAEnChB,IAAAA,SAAS,GAAGgB,OAAO,IAAIhB,SAAX,GAAuBA,SAAS,GAAG,CAAnC,GAAuCA,SAAnD;AACA,SAAK0B,sBAAL,CAA4BV,OAA5B;AACD,GAnC4B;AAoC7Bc,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,UAAInB,YAAY,GAAG,KAAKO,MAAL,CAAYP,YAA/B;;AAEA,UAAIA,YAAJ,EAAkB;AAChB,YAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AACpC,iBAAOT,QAAQ,CAAC6B,gBAAT,CAA0BpB,YAA1B,EAAwC,CAAxC,CAAP;AACD;;AAED,YAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;AACtC,iBAAOA,YAAY,EAAnB;AACD;;AAED,YAAIpB,OAAO,CAACoB,YAAD,CAAP,KAA0B,QAA1B,IAAsCA,YAAY,YAAYV,MAAM,CAAC+B,WAAzE,EAAsF;AACpF,iBAAOrB,YAAP;AACD;AACF;;AAED,aAAOT,QAAQ,CAAC+B,IAAhB;AACD,KAnBM;AAoBPC,IAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,UAAIlC,iBAAJ,EAAuB;AACrB,eAAO,IAAP;AACD;;AAED,UAAI,CAAC,KAAKmC,SAAV,EAAqB;AACnB,aAAKA,SAAL,GAAiBjC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACA,YAAIiC,MAAM,GAAG,KAAKN,SAAL,EAAb;;AAEA,YAAIM,MAAJ,EAAY;AACVA,UAAAA,MAAM,CAACC,WAAP,CAAmB,KAAKF,SAAxB;AACD;AACF;;AAED,WAAKR,mBAAL;AACA,aAAO,KAAKQ,SAAZ;AACD,KApCM;AAqCPR,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,UAAIpB,gBAAgB,GAAG,KAAKW,MAAL,CAAYX,gBAAnC;;AAEA,UAAI,KAAK4B,SAAL,IAAkB5B,gBAAlB,IAAsCA,gBAAgB,KAAK,KAAK4B,SAAL,CAAeG,SAA9E,EAAyF;AACvF,aAAKH,SAAL,CAAeG,SAAf,GAA2B/B,gBAA3B;AACD;AACF,KA3CM;AA4CPgC,IAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuB;AACjC;AACA;AACA,WAAKvB,UAAL,GAAkBuB,CAAlB;AACD,KAhDM;AAiDPf,IAAAA,sBAAsB,EAAE,SAASA,sBAAT,GAAkC;AACxD,WAAKU,SAAL,GAAiB,IAAjB;AACA,WAAKlB,UAAL,GAAkB,IAAlB;AACD,KApDM;;AAsDP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIwB,IAAAA,qBAAqB,EAAE,SAASA,qBAAT,GAAiC;AACtD,UAAI1C,SAAS,KAAK,CAAd,IAAmB,CAAC2C,MAAM,CAACC,IAAP,CAAYvC,aAAZ,EAA2BwC,MAAnD,EAA2D;AACzDjD,QAAAA,sBAAsB,GADmC,CAC/B;;;AAG1BS,QAAAA,aAAa,GAAGR,QAAQ,CAAC;AACvBiD,UAAAA,QAAQ,EAAE,QADa;AAEvBC,UAAAA,SAAS,EAAE,QAFY;AAGvBC,UAAAA,SAAS,EAAE;AAHY,SAAD,CAAxB;AAKD,OATD,MASO,IAAI,CAAChD,SAAL,EAAgB;AACrBH,QAAAA,QAAQ,CAACQ,aAAD,CAAR;AACAA,QAAAA,aAAa,GAAG,EAAhB;;AAEAT,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;AACF;AA9EM,GApCoB;AAoH7BqD,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,QAAIC,YAAY,GAAG,KAAK/B,MAAxB;AAAA,QACIL,QAAQ,GAAGoC,YAAY,CAACpC,QAD5B;AAAA,QAEIJ,WAAW,GAAGwC,YAAY,CAACxC,WAF/B;AAAA,QAGIM,OAAO,GAAGkC,YAAY,CAAClC,OAH3B;AAIA,QAAImC,MAAM,GAAG,IAAb;AACA,QAAIC,UAAU,GAAG;AACfC,MAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,eAAOrD,SAAP;AACD,OAHc;AAIfY,MAAAA,YAAY,EAAE,KAAKuB,eAJJ;AAKfO,MAAAA,qBAAqB,EAAE,KAAKA;AALb,KAAjB;;AAQA,QAAIhC,WAAW,IAAIM,OAAf,IAA0B,KAAKE,UAAnC,EAA+C;AAC7CiC,MAAAA,MAAM,GAAGzD,YAAY,CAACI,MAAD,EAAS;AAC5B,wBAAgB,KAAKqC,eADO;AAE5B,oBAAYrB,QAAQ,CAACsC,UAAD,CAFQ;AAG5B,eAAO,KAAKZ;AAHgB,OAAT,EAIlB,IAJkB,CAArB;AAKD;;AAED,WAAOW,MAAP;AACD;AA3I4B,CAAD,CAA9B","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { createVNode as _createVNode } from \"vue\";\nimport PropTypes from './vue-types';\nimport _switchScrollingEffect from './switchScrollingEffect';\nimport setStyle from './setStyle';\nimport Portal from './Portal';\nimport { defineComponent } from 'vue';\nvar openCount = 0;\nvar windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement); // https://github.com/ant-design/ant-design/issues/19340\n// https://github.com/ant-design/ant-design/issues/19332\n\nvar cacheOverflow = {};\nexport default defineComponent({\n  name: 'PortalWrapper',\n  props: {\n    wrapperClassName: PropTypes.string,\n    forceRender: PropTypes.looseBool,\n    getContainer: PropTypes.any,\n    children: PropTypes.func,\n    visible: PropTypes.looseBool\n  },\n  data: function data() {\n    this._component = null;\n    var visible = this.$props.visible;\n    openCount = visible ? openCount + 1 : openCount;\n    return {};\n  },\n  watch: {\n    visible: function visible(val) {\n      openCount = val ? openCount + 1 : openCount - 1;\n    },\n    getContainer: function getContainer(_getContainer, prevGetContainer) {\n      var getContainerIsFunc = typeof _getContainer === 'function' && typeof prevGetContainer === 'function';\n\n      if (getContainerIsFunc ? _getContainer.toString() !== prevGetContainer.toString() : _getContainer !== prevGetContainer) {\n        this.removeCurrentContainer(false);\n      }\n    }\n  },\n  updated: function updated() {\n    this.setWrapperClassName();\n  },\n  beforeUnmount: function beforeUnmount() {\n    var visible = this.$props.visible; // 离开时不会 render， 导到离开时数值不变，改用 func 。。\n\n    openCount = visible && openCount ? openCount - 1 : openCount;\n    this.removeCurrentContainer(visible);\n  },\n  methods: {\n    getParent: function getParent() {\n      var getContainer = this.$props.getContainer;\n\n      if (getContainer) {\n        if (typeof getContainer === 'string') {\n          return document.querySelectorAll(getContainer)[0];\n        }\n\n        if (typeof getContainer === 'function') {\n          return getContainer();\n        }\n\n        if (_typeof(getContainer) === 'object' && getContainer instanceof window.HTMLElement) {\n          return getContainer;\n        }\n      }\n\n      return document.body;\n    },\n    getDomContainer: function getDomContainer() {\n      if (windowIsUndefined) {\n        return null;\n      }\n\n      if (!this.container) {\n        this.container = document.createElement('div');\n        var parent = this.getParent();\n\n        if (parent) {\n          parent.appendChild(this.container);\n        }\n      }\n\n      this.setWrapperClassName();\n      return this.container;\n    },\n    setWrapperClassName: function setWrapperClassName() {\n      var wrapperClassName = this.$props.wrapperClassName;\n\n      if (this.container && wrapperClassName && wrapperClassName !== this.container.className) {\n        this.container.className = wrapperClassName;\n      }\n    },\n    savePortal: function savePortal(c) {\n      // Warning: don't rename _component\n      // https://github.com/react-component/util/pull/65#discussion_r352407916\n      this._component = c;\n    },\n    removeCurrentContainer: function removeCurrentContainer() {\n      this.container = null;\n      this._component = null;\n    },\n\n    /**\n     * Enhance ./switchScrollingEffect\n     * 1. Simulate document body scroll bar with\n     * 2. Record body has overflow style and recover when all of PortalWrapper invisible\n     * 3. Disable body scroll when PortalWrapper has open\n     *\n     * @memberof PortalWrapper\n     */\n    switchScrollingEffect: function switchScrollingEffect() {\n      if (openCount === 1 && !Object.keys(cacheOverflow).length) {\n        _switchScrollingEffect(); // Must be set after switchScrollingEffect\n\n\n        cacheOverflow = setStyle({\n          overflow: 'hidden',\n          overflowX: 'hidden',\n          overflowY: 'hidden'\n        });\n      } else if (!openCount) {\n        setStyle(cacheOverflow);\n        cacheOverflow = {};\n\n        _switchScrollingEffect(true);\n      }\n    }\n  },\n  render: function render() {\n    var _this$$props = this.$props,\n        children = _this$$props.children,\n        forceRender = _this$$props.forceRender,\n        visible = _this$$props.visible;\n    var portal = null;\n    var childProps = {\n      getOpenCount: function getOpenCount() {\n        return openCount;\n      },\n      getContainer: this.getDomContainer,\n      switchScrollingEffect: this.switchScrollingEffect\n    };\n\n    if (forceRender || visible || this._component) {\n      portal = _createVNode(Portal, {\n        \"getContainer\": this.getDomContainer,\n        \"children\": children(childProps),\n        \"ref\": this.savePortal\n      }, null);\n    }\n\n    return portal;\n  }\n});"]},"metadata":{},"sourceType":"module"}