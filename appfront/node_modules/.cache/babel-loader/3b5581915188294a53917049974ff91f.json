{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { createVNode as _createVNode } from \"vue\";\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\n\nimport KeyCode from '../../_util/KeyCode';\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\nimport { defineComponent } from 'vue';\nimport createRef from '../../_util/createRef';\nimport PropTypes from '../../_util/vue-types';\nvar Selector = defineComponent({\n  name: 'Selector',\n  inheritAttrs: false,\n  props: {\n    id: PropTypes.string,\n    prefixCls: PropTypes.string,\n    showSearch: PropTypes.looseBool,\n    open: PropTypes.looseBool,\n\n    /** Display in the Selector value, it's not same as `value` prop */\n    values: PropTypes.array,\n    multiple: PropTypes.looseBool,\n    mode: PropTypes.string,\n    searchValue: PropTypes.string,\n    activeValue: PropTypes.string,\n    inputElement: PropTypes.any,\n    autofocus: PropTypes.looseBool,\n    accessibilityIndex: PropTypes.number,\n    tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    disabled: PropTypes.looseBool,\n    placeholder: PropTypes.any,\n    removeIcon: PropTypes.any,\n    // Tags\n    maxTagCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    maxTagTextLength: PropTypes.number,\n    maxTagPlaceholder: PropTypes.any,\n    tagRender: PropTypes.func,\n\n    /** Check if `tokenSeparators` contains `\\n` or `\\r\\n` */\n    tokenWithEnter: PropTypes.looseBool,\n    // Motion\n    choiceTransitionName: PropTypes.string,\n    onToggleOpen: {\n      type: Function\n    },\n\n    /** `onSearch` returns go next step boolean to check if need do toggle open */\n    onSearch: PropTypes.func,\n    onSearchSubmit: PropTypes.func,\n    onSelect: PropTypes.func,\n    onInputKeyDown: {\n      type: Function\n    },\n\n    /**\n     * @private get real dom for trigger align.\n     * This may be removed after React provides replacement of `findDOMNode`\n     */\n    domRef: PropTypes.func\n  },\n  setup: function setup(props) {\n    var inputRef = createRef();\n    var compositionStatus = false; // ====================== Input ======================\n\n    var _useLock = useLock(0),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getInputMouseDown = _useLock2[0],\n        setInputMouseDown = _useLock2[1];\n\n    var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n      var which = event.which;\n\n      if (which === KeyCode.UP || which === KeyCode.DOWN) {\n        event.preventDefault();\n      }\n\n      if (props.onInputKeyDown) {\n        props.onInputKeyDown(event);\n      }\n\n      if (which === KeyCode.ENTER && props.mode === 'tags' && !compositionStatus && !props.open) {\n        // When menu isn't open, OptionList won't trigger a value change\n        // So when enter is pressed, the tag's input value should be emitted here to let selector know\n        props.onSearchSubmit(event.target.value);\n      }\n\n      if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n        props.onToggleOpen(true);\n      }\n    };\n    /**\n     * We can not use `findDOMNode` sine it will get warning,\n     * have to use timer to check if is input element.\n     */\n\n\n    var onInternalInputMouseDown = function onInternalInputMouseDown() {\n      setInputMouseDown(true);\n    }; // When paste come, ignore next onChange\n\n\n    var pastedText = null;\n\n    var triggerOnSearch = function triggerOnSearch(value) {\n      if (props.onSearch(value, true, compositionStatus) !== false) {\n        props.onToggleOpen(true);\n      }\n    };\n\n    var onInputCompositionStart = function onInputCompositionStart() {\n      compositionStatus = true;\n    };\n\n    var onInputCompositionEnd = function onInputCompositionEnd(e) {\n      compositionStatus = false; // Trigger search again to support `tokenSeparators` with typewriting\n\n      if (props.mode !== 'combobox') {\n        triggerOnSearch(e.target.value);\n      }\n    };\n\n    var onInputChange = function onInputChange(event) {\n      var value = event.target.value; // Pasted text should replace back to origin content\n\n      if (props.tokenWithEnter && pastedText && /[\\r\\n]/.test(pastedText)) {\n        // CRLF will be treated as a single space for input element\n        var replacedText = pastedText.replace(/[\\r\\n]+$/, '').replace(/\\r\\n/g, ' ').replace(/[\\r\\n]/g, ' ');\n        value = value.replace(replacedText, pastedText);\n      }\n\n      pastedText = null;\n      triggerOnSearch(value);\n    };\n\n    var onInputPaste = function onInputPaste(e) {\n      var clipboardData = e.clipboardData;\n      var value = clipboardData.getData('text');\n      pastedText = value;\n    };\n\n    var onClick = function onClick(_ref) {\n      var target = _ref.target;\n\n      if (target !== inputRef.current) {\n        // Should focus input if click the selector\n        var isIE = document.body.style.msTouchAction !== undefined;\n\n        if (isIE) {\n          setTimeout(function () {\n            inputRef.current.focus();\n          });\n        } else {\n          inputRef.current.focus();\n        }\n      }\n    };\n\n    var onMousedown = function onMousedown(event) {\n      var inputMouseDown = getInputMouseDown();\n\n      if (event.target !== inputRef.current && !inputMouseDown) {\n        event.preventDefault();\n      }\n\n      if (props.mode !== 'combobox' && (!props.showSearch || !inputMouseDown) || !props.open) {\n        if (props.open) {\n          props.onSearch('', true, false);\n        }\n\n        props.onToggleOpen();\n      }\n    };\n\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      },\n      onMousedown: onMousedown,\n      onClick: onClick,\n      onInputPaste: onInputPaste,\n      inputRef: inputRef,\n      onInternalInputKeyDown: onInternalInputKeyDown,\n      onInternalInputMouseDown: onInternalInputMouseDown,\n      onInputChange: onInputChange,\n      onInputCompositionEnd: onInputCompositionEnd,\n      onInputCompositionStart: onInputCompositionStart\n    };\n  },\n  render: function render() {\n    var _this$$props = this.$props,\n        prefixCls = _this$$props.prefixCls,\n        domRef = _this$$props.domRef,\n        multiple = _this$$props.multiple;\n    var onMousedown = this.onMousedown,\n        onClick = this.onClick,\n        inputRef = this.inputRef,\n        onInputPaste = this.onInputPaste,\n        onInternalInputKeyDown = this.onInternalInputKeyDown,\n        onInternalInputMouseDown = this.onInternalInputMouseDown,\n        onInputChange = this.onInputChange,\n        onInputCompositionStart = this.onInputCompositionStart,\n        onInputCompositionEnd = this.onInputCompositionEnd;\n    var sharedProps = {\n      inputRef: inputRef,\n      onInputKeyDown: onInternalInputKeyDown,\n      onInputMouseDown: onInternalInputMouseDown,\n      onInputChange: onInputChange,\n      onInputPaste: onInputPaste,\n      onInputCompositionStart: onInputCompositionStart,\n      onInputCompositionEnd: onInputCompositionEnd\n    };\n    var selectNode = multiple ? _createVNode(MultipleSelector, _objectSpread(_objectSpread({}, this.$props), sharedProps), null) : _createVNode(SingleSelector, _objectSpread(_objectSpread({}, this.$props), sharedProps), null);\n    return _createVNode(\"div\", {\n      \"ref\": domRef,\n      \"class\": \"\".concat(prefixCls, \"-selector\"),\n      \"onClick\": onClick,\n      \"onMousedown\": onMousedown\n    }, [selectNode]);\n  }\n});\nexport default Selector;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-select/Selector/index.js"],"names":["_objectSpread","_slicedToArray","createVNode","_createVNode","KeyCode","MultipleSelector","SingleSelector","useLock","defineComponent","createRef","PropTypes","Selector","name","inheritAttrs","props","id","string","prefixCls","showSearch","looseBool","open","values","array","multiple","mode","searchValue","activeValue","inputElement","any","autofocus","accessibilityIndex","number","tabindex","oneOfType","disabled","placeholder","removeIcon","maxTagCount","maxTagTextLength","maxTagPlaceholder","tagRender","func","tokenWithEnter","choiceTransitionName","onToggleOpen","type","Function","onSearch","onSearchSubmit","onSelect","onInputKeyDown","domRef","setup","inputRef","compositionStatus","_useLock","_useLock2","getInputMouseDown","setInputMouseDown","onInternalInputKeyDown","event","which","UP","DOWN","preventDefault","ENTER","target","value","SHIFT","TAB","BACKSPACE","ESC","includes","onInternalInputMouseDown","pastedText","triggerOnSearch","onInputCompositionStart","onInputCompositionEnd","e","onInputChange","test","replacedText","replace","onInputPaste","clipboardData","getData","onClick","_ref","current","isIE","document","body","style","msTouchAction","undefined","setTimeout","focus","onMousedown","inputMouseDown","blur","render","_this$$props","$props","sharedProps","onInputMouseDown","selectNode","concat"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { createVNode as _createVNode } from \"vue\";\n\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\nimport KeyCode from '../../_util/KeyCode';\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\nimport { defineComponent } from 'vue';\nimport createRef from '../../_util/createRef';\nimport PropTypes from '../../_util/vue-types';\nvar Selector = defineComponent({\n  name: 'Selector',\n  inheritAttrs: false,\n  props: {\n    id: PropTypes.string,\n    prefixCls: PropTypes.string,\n    showSearch: PropTypes.looseBool,\n    open: PropTypes.looseBool,\n\n    /** Display in the Selector value, it's not same as `value` prop */\n    values: PropTypes.array,\n    multiple: PropTypes.looseBool,\n    mode: PropTypes.string,\n    searchValue: PropTypes.string,\n    activeValue: PropTypes.string,\n    inputElement: PropTypes.any,\n    autofocus: PropTypes.looseBool,\n    accessibilityIndex: PropTypes.number,\n    tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    disabled: PropTypes.looseBool,\n    placeholder: PropTypes.any,\n    removeIcon: PropTypes.any,\n    // Tags\n    maxTagCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    maxTagTextLength: PropTypes.number,\n    maxTagPlaceholder: PropTypes.any,\n    tagRender: PropTypes.func,\n\n    /** Check if `tokenSeparators` contains `\\n` or `\\r\\n` */\n    tokenWithEnter: PropTypes.looseBool,\n    // Motion\n    choiceTransitionName: PropTypes.string,\n    onToggleOpen: {\n      type: Function\n    },\n\n    /** `onSearch` returns go next step boolean to check if need do toggle open */\n    onSearch: PropTypes.func,\n    onSearchSubmit: PropTypes.func,\n    onSelect: PropTypes.func,\n    onInputKeyDown: {\n      type: Function\n    },\n\n    /**\n     * @private get real dom for trigger align.\n     * This may be removed after React provides replacement of `findDOMNode`\n     */\n    domRef: PropTypes.func\n  },\n  setup: function setup(props) {\n    var inputRef = createRef();\n    var compositionStatus = false; // ====================== Input ======================\n\n    var _useLock = useLock(0),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getInputMouseDown = _useLock2[0],\n        setInputMouseDown = _useLock2[1];\n\n    var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n      var which = event.which;\n\n      if (which === KeyCode.UP || which === KeyCode.DOWN) {\n        event.preventDefault();\n      }\n\n      if (props.onInputKeyDown) {\n        props.onInputKeyDown(event);\n      }\n\n      if (which === KeyCode.ENTER && props.mode === 'tags' && !compositionStatus && !props.open) {\n        // When menu isn't open, OptionList won't trigger a value change\n        // So when enter is pressed, the tag's input value should be emitted here to let selector know\n        props.onSearchSubmit(event.target.value);\n      }\n\n      if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n        props.onToggleOpen(true);\n      }\n    };\n    /**\n     * We can not use `findDOMNode` sine it will get warning,\n     * have to use timer to check if is input element.\n     */\n\n\n    var onInternalInputMouseDown = function onInternalInputMouseDown() {\n      setInputMouseDown(true);\n    }; // When paste come, ignore next onChange\n\n\n    var pastedText = null;\n\n    var triggerOnSearch = function triggerOnSearch(value) {\n      if (props.onSearch(value, true, compositionStatus) !== false) {\n        props.onToggleOpen(true);\n      }\n    };\n\n    var onInputCompositionStart = function onInputCompositionStart() {\n      compositionStatus = true;\n    };\n\n    var onInputCompositionEnd = function onInputCompositionEnd(e) {\n      compositionStatus = false; // Trigger search again to support `tokenSeparators` with typewriting\n\n      if (props.mode !== 'combobox') {\n        triggerOnSearch(e.target.value);\n      }\n    };\n\n    var onInputChange = function onInputChange(event) {\n      var value = event.target.value; // Pasted text should replace back to origin content\n\n      if (props.tokenWithEnter && pastedText && /[\\r\\n]/.test(pastedText)) {\n        // CRLF will be treated as a single space for input element\n        var replacedText = pastedText.replace(/[\\r\\n]+$/, '').replace(/\\r\\n/g, ' ').replace(/[\\r\\n]/g, ' ');\n        value = value.replace(replacedText, pastedText);\n      }\n\n      pastedText = null;\n      triggerOnSearch(value);\n    };\n\n    var onInputPaste = function onInputPaste(e) {\n      var clipboardData = e.clipboardData;\n      var value = clipboardData.getData('text');\n      pastedText = value;\n    };\n\n    var onClick = function onClick(_ref) {\n      var target = _ref.target;\n\n      if (target !== inputRef.current) {\n        // Should focus input if click the selector\n        var isIE = document.body.style.msTouchAction !== undefined;\n\n        if (isIE) {\n          setTimeout(function () {\n            inputRef.current.focus();\n          });\n        } else {\n          inputRef.current.focus();\n        }\n      }\n    };\n\n    var onMousedown = function onMousedown(event) {\n      var inputMouseDown = getInputMouseDown();\n\n      if (event.target !== inputRef.current && !inputMouseDown) {\n        event.preventDefault();\n      }\n\n      if (props.mode !== 'combobox' && (!props.showSearch || !inputMouseDown) || !props.open) {\n        if (props.open) {\n          props.onSearch('', true, false);\n        }\n\n        props.onToggleOpen();\n      }\n    };\n\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      },\n      onMousedown: onMousedown,\n      onClick: onClick,\n      onInputPaste: onInputPaste,\n      inputRef: inputRef,\n      onInternalInputKeyDown: onInternalInputKeyDown,\n      onInternalInputMouseDown: onInternalInputMouseDown,\n      onInputChange: onInputChange,\n      onInputCompositionEnd: onInputCompositionEnd,\n      onInputCompositionStart: onInputCompositionStart\n    };\n  },\n  render: function render() {\n    var _this$$props = this.$props,\n        prefixCls = _this$$props.prefixCls,\n        domRef = _this$$props.domRef,\n        multiple = _this$$props.multiple;\n    var onMousedown = this.onMousedown,\n        onClick = this.onClick,\n        inputRef = this.inputRef,\n        onInputPaste = this.onInputPaste,\n        onInternalInputKeyDown = this.onInternalInputKeyDown,\n        onInternalInputMouseDown = this.onInternalInputMouseDown,\n        onInputChange = this.onInputChange,\n        onInputCompositionStart = this.onInputCompositionStart,\n        onInputCompositionEnd = this.onInputCompositionEnd;\n    var sharedProps = {\n      inputRef: inputRef,\n      onInputKeyDown: onInternalInputKeyDown,\n      onInputMouseDown: onInternalInputMouseDown,\n      onInputChange: onInputChange,\n      onInputPaste: onInputPaste,\n      onInputCompositionStart: onInputCompositionStart,\n      onInputCompositionEnd: onInputCompositionEnd\n    };\n    var selectNode = multiple ? _createVNode(MultipleSelector, _objectSpread(_objectSpread({}, this.$props), sharedProps), null) : _createVNode(SingleSelector, _objectSpread(_objectSpread({}, this.$props), sharedProps), null);\n    return _createVNode(\"div\", {\n      \"ref\": domRef,\n      \"class\": \"\".concat(prefixCls, \"-selector\"),\n      \"onClick\": onClick,\n      \"onMousedown\": onMousedown\n    }, [selectNode]);\n  }\n});\nexport default Selector;"]},"metadata":{},"sourceType":"module"}