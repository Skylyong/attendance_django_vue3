{"ast":null,"code":"import { defineComponent, h, Teleport, ref, onUnmounted, reactive, nextTick, watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getAbsolutePos, getEventTargetNode } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex } from '../../tools/utils';\nimport { GlobalEvent } from '../../tools/event';\nexport default defineComponent({\n  name: 'VxePulldown',\n  props: {\n    modelValue: Boolean,\n    disabled: Boolean,\n    placement: String,\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.size;\n      }\n    },\n    destroyOnClose: Boolean,\n    transfer: Boolean\n  },\n  emits: ['update:modelValue', 'hide-panel'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var computeSize = useSize(props);\n    var reactData = reactive({\n      inited: false,\n      panelIndex: 0,\n      panelStyle: null,\n      panelPlacement: null,\n      visiblePanel: false,\n      animatVisible: false,\n      isActivated: false\n    });\n    var refElem = ref();\n    var refPulldowContent = ref();\n    var refPulldowPnanel = ref();\n    var refMaps = {\n      refElem: refElem\n    };\n    var $xepulldown = {\n      xID: xID,\n      props: props,\n      context: context,\n      reactData: reactData,\n      getRefMaps: function () {\n        return refMaps;\n      }\n    };\n    var pulldownMethods = {};\n\n    var updateZindex = function () {\n      if (reactData.panelIndex < getLastZIndex()) {\n        reactData.panelIndex = nextZIndex();\n      }\n    };\n\n    var isPanelVisible = function () {\n      return reactData.visiblePanel;\n    };\n    /**\n     * 手动更新位置\n     */\n\n\n    var updatePlacement = function () {\n      return nextTick().then(function () {\n        var transfer = props.transfer,\n            placement = props.placement;\n        var panelIndex = reactData.panelIndex,\n            visiblePanel = reactData.visiblePanel;\n\n        if (visiblePanel) {\n          var targetElem = refPulldowContent.value;\n          var panelElem = refPulldowPnanel.value;\n\n          if (panelElem && targetElem) {\n            var targetHeight = targetElem.offsetHeight;\n            var targetWidth = targetElem.offsetWidth;\n            var panelHeight = panelElem.offsetHeight;\n            var panelWidth = panelElem.offsetWidth;\n            var marginSize = 5;\n            var panelStyle = {\n              zIndex: panelIndex\n            };\n\n            var _a = getAbsolutePos(targetElem),\n                boundingTop = _a.boundingTop,\n                boundingLeft = _a.boundingLeft,\n                visibleHeight = _a.visibleHeight,\n                visibleWidth = _a.visibleWidth;\n\n            var panelPlacement = 'bottom';\n\n            if (transfer) {\n              var left = boundingLeft;\n              var top_1 = boundingTop + targetHeight;\n\n              if (placement === 'top') {\n                panelPlacement = 'top';\n                top_1 = boundingTop - panelHeight;\n              } else if (!placement) {\n                // 如果下面不够放，则向上\n                if (top_1 + panelHeight + marginSize > visibleHeight) {\n                  panelPlacement = 'top';\n                  top_1 = boundingTop - panelHeight;\n                } // 如果上面不够放，则向下（优先）\n\n\n                if (top_1 < marginSize) {\n                  panelPlacement = 'bottom';\n                  top_1 = boundingTop + targetHeight;\n                }\n              } // 如果溢出右边\n\n\n              if (left + panelWidth + marginSize > visibleWidth) {\n                left -= left + panelWidth + marginSize - visibleWidth;\n              } // 如果溢出左边\n\n\n              if (left < marginSize) {\n                left = marginSize;\n              }\n\n              Object.assign(panelStyle, {\n                left: left + \"px\",\n                top: top_1 + \"px\",\n                minWidth: targetWidth + \"px\"\n              });\n            } else {\n              if (placement === 'top') {\n                panelPlacement = 'top';\n                panelStyle.bottom = targetHeight + \"px\";\n              } else if (!placement) {\n                // 如果下面不够放，则向上\n                if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                  // 如果上面不够放，则向下（优先）\n                  if (boundingTop - targetHeight - panelHeight > marginSize) {\n                    panelPlacement = 'top';\n                    panelStyle.bottom = targetHeight + \"px\";\n                  }\n                }\n              }\n            }\n\n            reactData.panelStyle = panelStyle;\n            reactData.panelPlacement = panelPlacement;\n          }\n        }\n\n        return nextTick();\n      });\n    };\n\n    var hidePanelTimeout;\n    /**\n     * 显示下拉面板\n     */\n\n    var showPanel = function () {\n      if (!reactData.inited) {\n        reactData.inited = true;\n      }\n\n      return new Promise(function (resolve) {\n        if (!props.disabled) {\n          clearTimeout(hidePanelTimeout);\n          reactData.isActivated = true;\n          reactData.animatVisible = true;\n          setTimeout(function () {\n            reactData.visiblePanel = true;\n            emit('update:modelValue', true);\n            updatePlacement();\n            setTimeout(function () {\n              resolve(updatePlacement());\n            }, 40);\n          }, 10);\n          updateZindex();\n        } else {\n          resolve(nextTick());\n        }\n      });\n    };\n    /**\n     * 隐藏下拉面板\n     */\n\n\n    var hidePanel = function () {\n      reactData.visiblePanel = false;\n      emit('update:modelValue', false);\n      return new Promise(function (resolve) {\n        if (reactData.animatVisible) {\n          hidePanelTimeout = window.setTimeout(function () {\n            reactData.animatVisible = false;\n            resolve(nextTick());\n          }, 350);\n        } else {\n          resolve(nextTick());\n        }\n      });\n    };\n    /**\n     * 切换下拉面板\n     */\n\n\n    var togglePanel = function () {\n      if (reactData.visiblePanel) {\n        return hidePanel();\n      }\n\n      return showPanel();\n    };\n\n    var handleGlobalMousewheelEvent = function (evnt) {\n      var disabled = props.disabled;\n      var visiblePanel = reactData.visiblePanel;\n      var panelElem = refPulldowPnanel.value;\n\n      if (!disabled) {\n        if (visiblePanel) {\n          if (getEventTargetNode(evnt, panelElem).flag) {\n            updatePlacement();\n          } else {\n            hidePanel();\n            pulldownMethods.dispatchEvent('hide-panel', {}, evnt);\n          }\n        }\n      }\n    };\n\n    var handleGlobalMousedownEvent = function (evnt) {\n      var disabled = props.disabled;\n      var visiblePanel = reactData.visiblePanel;\n      var el = refElem.value;\n      var panelElem = refPulldowPnanel.value;\n\n      if (!disabled) {\n        reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n\n        if (visiblePanel && !reactData.isActivated) {\n          hidePanel();\n          pulldownMethods.dispatchEvent('hide-panel', {}, evnt);\n        }\n      }\n    };\n\n    var handleGlobalBlurEvent = function (evnt) {\n      if (reactData.visiblePanel) {\n        reactData.isActivated = false;\n        hidePanel();\n        pulldownMethods.dispatchEvent('hide-panel', {}, evnt);\n      }\n    };\n\n    pulldownMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $pulldown: $xepulldown,\n          $event: evnt\n        }, params));\n      },\n      isPanelVisible: isPanelVisible,\n      togglePanel: togglePanel,\n      showPanel: showPanel,\n      hidePanel: hidePanel\n    };\n    Object.assign($xepulldown, pulldownMethods);\n    watch(function () {\n      return props.modelValue;\n    }, function (value) {\n      if (value) {\n        showPanel();\n      } else {\n        hidePanel();\n      }\n    });\n    nextTick(function () {\n      GlobalEvent.on($xepulldown, 'mousewheel', handleGlobalMousewheelEvent);\n      GlobalEvent.on($xepulldown, 'mousedown', handleGlobalMousedownEvent);\n      GlobalEvent.on($xepulldown, 'blur', handleGlobalBlurEvent);\n    });\n    onUnmounted(function () {\n      GlobalEvent.off($xepulldown, 'mousewheel');\n      GlobalEvent.off($xepulldown, 'mousedown');\n      GlobalEvent.off($xepulldown, 'blur');\n    });\n\n    var renderVN = function () {\n      var _a, _b;\n\n      var destroyOnClose = props.destroyOnClose,\n          transfer = props.transfer,\n          disabled = props.disabled;\n      var inited = reactData.inited,\n          isActivated = reactData.isActivated,\n          animatVisible = reactData.animatVisible,\n          visiblePanel = reactData.visiblePanel,\n          panelStyle = reactData.panelStyle,\n          panelPlacement = reactData.panelPlacement;\n      var vSize = computeSize.value;\n      return h('div', {\n        ref: refElem,\n        class: ['vxe-pulldown', (_a = {}, _a[\"size--\" + vSize] = vSize, _a['is--visivle'] = visiblePanel, _a['is--disabled'] = disabled, _a['is--active'] = isActivated, _a)]\n      }, [h('div', {\n        ref: refPulldowContent,\n        class: 'vxe-pulldown--content'\n      }, slots.default ? slots.default({\n        $pulldown: $xepulldown\n      }) : []), h(Teleport, {\n        to: 'body',\n        disabled: transfer ? !inited : true\n      }, [h('div', {\n        ref: refPulldowPnanel,\n        class: ['vxe-table--ignore-clear vxe-pulldown--panel', (_b = {}, _b[\"size--\" + vSize] = vSize, _b['is--transfer'] = transfer, _b['animat--leave'] = animatVisible, _b['animat--enter'] = visiblePanel, _b)],\n        placement: panelPlacement,\n        style: panelStyle\n      }, slots.dropdown ? [h('div', {\n        class: 'vxe-pulldown--wrapper'\n      }, !inited || destroyOnClose && !visiblePanel && !animatVisible ? [] : slots.dropdown({\n        $pulldown: $xepulldown\n      }))] : [])])]);\n    };\n\n    $xepulldown.renderVN = renderVN;\n    return $xepulldown;\n  },\n  render: function () {\n    return this.renderVN();\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/pulldown/src/pulldown.js"],"names":["defineComponent","h","Teleport","ref","onUnmounted","reactive","nextTick","watch","XEUtils","GlobalConfig","useSize","getAbsolutePos","getEventTargetNode","getLastZIndex","nextZIndex","GlobalEvent","name","props","modelValue","Boolean","disabled","placement","String","size","type","default","destroyOnClose","transfer","emits","setup","context","slots","emit","xID","uniqueId","computeSize","reactData","inited","panelIndex","panelStyle","panelPlacement","visiblePanel","animatVisible","isActivated","refElem","refPulldowContent","refPulldowPnanel","refMaps","$xepulldown","getRefMaps","pulldownMethods","updateZindex","isPanelVisible","updatePlacement","then","targetElem","value","panelElem","targetHeight","offsetHeight","targetWidth","offsetWidth","panelHeight","panelWidth","marginSize","zIndex","_a","boundingTop","boundingLeft","visibleHeight","visibleWidth","left","top_1","Object","assign","top","minWidth","bottom","hidePanelTimeout","showPanel","Promise","resolve","clearTimeout","setTimeout","hidePanel","window","togglePanel","handleGlobalMousewheelEvent","evnt","flag","dispatchEvent","handleGlobalMousedownEvent","el","handleGlobalBlurEvent","params","$pulldown","$event","on","off","renderVN","_b","vSize","class","to","style","dropdown","render"],"mappings":"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","sourcesContent":["import { defineComponent, h, Teleport, ref, onUnmounted, reactive, nextTick, watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getAbsolutePos, getEventTargetNode } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex } from '../../tools/utils';\nimport { GlobalEvent } from '../../tools/event';\nexport default defineComponent({\n    name: 'VxePulldown',\n    props: {\n        modelValue: Boolean,\n        disabled: Boolean,\n        placement: String,\n        size: { type: String, default: function () { return GlobalConfig.size; } },\n        destroyOnClose: Boolean,\n        transfer: Boolean\n    },\n    emits: [\n        'update:modelValue',\n        'hide-panel'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var computeSize = useSize(props);\n        var reactData = reactive({\n            inited: false,\n            panelIndex: 0,\n            panelStyle: null,\n            panelPlacement: null,\n            visiblePanel: false,\n            animatVisible: false,\n            isActivated: false\n        });\n        var refElem = ref();\n        var refPulldowContent = ref();\n        var refPulldowPnanel = ref();\n        var refMaps = {\n            refElem: refElem\n        };\n        var $xepulldown = {\n            xID: xID,\n            props: props,\n            context: context,\n            reactData: reactData,\n            getRefMaps: function () { return refMaps; }\n        };\n        var pulldownMethods = {};\n        var updateZindex = function () {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        var isPanelVisible = function () {\n            return reactData.visiblePanel;\n        };\n        /**\n         * 手动更新位置\n         */\n        var updatePlacement = function () {\n            return nextTick().then(function () {\n                var transfer = props.transfer, placement = props.placement;\n                var panelIndex = reactData.panelIndex, visiblePanel = reactData.visiblePanel;\n                if (visiblePanel) {\n                    var targetElem = refPulldowContent.value;\n                    var panelElem = refPulldowPnanel.value;\n                    if (panelElem && targetElem) {\n                        var targetHeight = targetElem.offsetHeight;\n                        var targetWidth = targetElem.offsetWidth;\n                        var panelHeight = panelElem.offsetHeight;\n                        var panelWidth = panelElem.offsetWidth;\n                        var marginSize = 5;\n                        var panelStyle = {\n                            zIndex: panelIndex\n                        };\n                        var _a = getAbsolutePos(targetElem), boundingTop = _a.boundingTop, boundingLeft = _a.boundingLeft, visibleHeight = _a.visibleHeight, visibleWidth = _a.visibleWidth;\n                        var panelPlacement = 'bottom';\n                        if (transfer) {\n                            var left = boundingLeft;\n                            var top_1 = boundingTop + targetHeight;\n                            if (placement === 'top') {\n                                panelPlacement = 'top';\n                                top_1 = boundingTop - panelHeight;\n                            }\n                            else if (!placement) {\n                                // 如果下面不够放，则向上\n                                if (top_1 + panelHeight + marginSize > visibleHeight) {\n                                    panelPlacement = 'top';\n                                    top_1 = boundingTop - panelHeight;\n                                }\n                                // 如果上面不够放，则向下（优先）\n                                if (top_1 < marginSize) {\n                                    panelPlacement = 'bottom';\n                                    top_1 = boundingTop + targetHeight;\n                                }\n                            }\n                            // 如果溢出右边\n                            if (left + panelWidth + marginSize > visibleWidth) {\n                                left -= left + panelWidth + marginSize - visibleWidth;\n                            }\n                            // 如果溢出左边\n                            if (left < marginSize) {\n                                left = marginSize;\n                            }\n                            Object.assign(panelStyle, {\n                                left: left + \"px\",\n                                top: top_1 + \"px\",\n                                minWidth: targetWidth + \"px\"\n                            });\n                        }\n                        else {\n                            if (placement === 'top') {\n                                panelPlacement = 'top';\n                                panelStyle.bottom = targetHeight + \"px\";\n                            }\n                            else if (!placement) {\n                                // 如果下面不够放，则向上\n                                if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                    // 如果上面不够放，则向下（优先）\n                                    if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                        panelPlacement = 'top';\n                                        panelStyle.bottom = targetHeight + \"px\";\n                                    }\n                                }\n                            }\n                        }\n                        reactData.panelStyle = panelStyle;\n                        reactData.panelPlacement = panelPlacement;\n                    }\n                }\n                return nextTick();\n            });\n        };\n        var hidePanelTimeout;\n        /**\n         * 显示下拉面板\n         */\n        var showPanel = function () {\n            if (!reactData.inited) {\n                reactData.inited = true;\n            }\n            return new Promise(function (resolve) {\n                if (!props.disabled) {\n                    clearTimeout(hidePanelTimeout);\n                    reactData.isActivated = true;\n                    reactData.animatVisible = true;\n                    setTimeout(function () {\n                        reactData.visiblePanel = true;\n                        emit('update:modelValue', true);\n                        updatePlacement();\n                        setTimeout(function () {\n                            resolve(updatePlacement());\n                        }, 40);\n                    }, 10);\n                    updateZindex();\n                }\n                else {\n                    resolve(nextTick());\n                }\n            });\n        };\n        /**\n         * 隐藏下拉面板\n         */\n        var hidePanel = function () {\n            reactData.visiblePanel = false;\n            emit('update:modelValue', false);\n            return new Promise(function (resolve) {\n                if (reactData.animatVisible) {\n                    hidePanelTimeout = window.setTimeout(function () {\n                        reactData.animatVisible = false;\n                        resolve(nextTick());\n                    }, 350);\n                }\n                else {\n                    resolve(nextTick());\n                }\n            });\n        };\n        /**\n         * 切换下拉面板\n         */\n        var togglePanel = function () {\n            if (reactData.visiblePanel) {\n                return hidePanel();\n            }\n            return showPanel();\n        };\n        var handleGlobalMousewheelEvent = function (evnt) {\n            var disabled = props.disabled;\n            var visiblePanel = reactData.visiblePanel;\n            var panelElem = refPulldowPnanel.value;\n            if (!disabled) {\n                if (visiblePanel) {\n                    if (getEventTargetNode(evnt, panelElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hidePanel();\n                        pulldownMethods.dispatchEvent('hide-panel', {}, evnt);\n                    }\n                }\n            }\n        };\n        var handleGlobalMousedownEvent = function (evnt) {\n            var disabled = props.disabled;\n            var visiblePanel = reactData.visiblePanel;\n            var el = refElem.value;\n            var panelElem = refPulldowPnanel.value;\n            if (!disabled) {\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n                if (visiblePanel && !reactData.isActivated) {\n                    hidePanel();\n                    pulldownMethods.dispatchEvent('hide-panel', {}, evnt);\n                }\n            }\n        };\n        var handleGlobalBlurEvent = function (evnt) {\n            if (reactData.visiblePanel) {\n                reactData.isActivated = false;\n                hidePanel();\n                pulldownMethods.dispatchEvent('hide-panel', {}, evnt);\n            }\n        };\n        pulldownMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $pulldown: $xepulldown, $event: evnt }, params));\n            },\n            isPanelVisible: isPanelVisible,\n            togglePanel: togglePanel,\n            showPanel: showPanel,\n            hidePanel: hidePanel\n        };\n        Object.assign($xepulldown, pulldownMethods);\n        watch(function () { return props.modelValue; }, function (value) {\n            if (value) {\n                showPanel();\n            }\n            else {\n                hidePanel();\n            }\n        });\n        nextTick(function () {\n            GlobalEvent.on($xepulldown, 'mousewheel', handleGlobalMousewheelEvent);\n            GlobalEvent.on($xepulldown, 'mousedown', handleGlobalMousedownEvent);\n            GlobalEvent.on($xepulldown, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(function () {\n            GlobalEvent.off($xepulldown, 'mousewheel');\n            GlobalEvent.off($xepulldown, 'mousedown');\n            GlobalEvent.off($xepulldown, 'blur');\n        });\n        var renderVN = function () {\n            var _a, _b;\n            var destroyOnClose = props.destroyOnClose, transfer = props.transfer, disabled = props.disabled;\n            var inited = reactData.inited, isActivated = reactData.isActivated, animatVisible = reactData.animatVisible, visiblePanel = reactData.visiblePanel, panelStyle = reactData.panelStyle, panelPlacement = reactData.panelPlacement;\n            var vSize = computeSize.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-pulldown', (_a = {},\n                        _a[\"size--\" + vSize] = vSize,\n                        _a['is--visivle'] = visiblePanel,\n                        _a['is--disabled'] = disabled,\n                        _a['is--active'] = isActivated,\n                        _a)]\n            }, [\n                h('div', {\n                    ref: refPulldowContent,\n                    class: 'vxe-pulldown--content'\n                }, slots.default ? slots.default({ $pulldown: $xepulldown }) : []),\n                h(Teleport, {\n                    to: 'body',\n                    disabled: transfer ? !inited : true\n                }, [\n                    h('div', {\n                        ref: refPulldowPnanel,\n                        class: ['vxe-table--ignore-clear vxe-pulldown--panel', (_b = {},\n                                _b[\"size--\" + vSize] = vSize,\n                                _b['is--transfer'] = transfer,\n                                _b['animat--leave'] = animatVisible,\n                                _b['animat--enter'] = visiblePanel,\n                                _b)],\n                        placement: panelPlacement,\n                        style: panelStyle\n                    }, slots.dropdown ? [\n                        h('div', {\n                            class: 'vxe-pulldown--wrapper'\n                        }, !inited || (destroyOnClose && !visiblePanel && !animatVisible) ? [] : slots.dropdown({ $pulldown: $xepulldown }))\n                    ] : [])\n                ])\n            ]);\n        };\n        $xepulldown.renderVN = renderVN;\n        return $xepulldown;\n    },\n    render: function () {\n        return this.renderVN();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}