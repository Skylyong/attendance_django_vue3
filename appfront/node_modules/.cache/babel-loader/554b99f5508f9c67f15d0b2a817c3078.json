{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport { inject } from 'vue';\nimport PropTypes, { withUndefined } from '../../_util/vue-types';\nimport classNames from '../../_util/classNames';\nimport ColGroup from './ColGroup';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport ExpandableRow from './ExpandableRow';\n\nfunction noop() {}\n\nvar BaseTable = {\n  name: 'BaseTable',\n  inheritAttrs: false,\n  props: {\n    fixed: withUndefined(PropTypes.oneOfType([PropTypes.string, PropTypes.looseBool])),\n    columns: PropTypes.array.isRequired,\n    tableClassName: PropTypes.string.isRequired,\n    hasHead: PropTypes.looseBool.isRequired,\n    hasBody: PropTypes.looseBool.isRequired,\n    expander: PropTypes.object.isRequired,\n    getRowKey: PropTypes.func,\n    isAnyColumnsFixed: PropTypes.looseBool\n  },\n  setup: function setup() {\n    return {\n      table: inject('table', function () {\n        return {};\n      }),\n      store: inject('table-store', function () {\n        return {};\n      })\n    };\n  },\n  methods: {\n    getColumns: function getColumns(cols) {\n      var _this$$props$columns = this.$props.columns,\n          columns = _this$$props$columns === void 0 ? [] : _this$$props$columns;\n      return (cols || columns).map(function (column) {\n        return _extends(_extends({}, column), {\n          className: classNames(column.className, column.class)\n        });\n      });\n    },\n    handleRowHover: function handleRowHover(isHover, key) {\n      this.store.currentHoverKey = isHover ? key : null;\n    },\n    renderRows: function renderRows(renderData, indent) {\n      var _this = this;\n\n      var ancestorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      var _Object$assign = _extends(_extends(_extends({}, this.table.$attrs), this.table.$props), this.table.$data),\n          components = _Object$assign.sComponents,\n          prefixCls = _Object$assign.prefixCls,\n          childrenColumnName = _Object$assign.childrenColumnName,\n          rowClassName = _Object$assign.rowClassName,\n          _Object$assign$custom = _Object$assign.customRow,\n          customRow = _Object$assign$custom === void 0 ? noop : _Object$assign$custom,\n          _Object$assign$onRowC = _Object$assign.onRowClick,\n          onRowClick = _Object$assign$onRowC === void 0 ? noop : _Object$assign$onRowC,\n          _Object$assign$onRowD = _Object$assign.onRowDoubleClick,\n          onRowDoubleClick = _Object$assign$onRowD === void 0 ? noop : _Object$assign$onRowD,\n          _Object$assign$onRowC2 = _Object$assign.onRowContextMenu,\n          onRowContextMenu = _Object$assign$onRowC2 === void 0 ? noop : _Object$assign$onRowC2,\n          _Object$assign$onRowM = _Object$assign.onRowMouseEnter,\n          onRowMouseEnter = _Object$assign$onRowM === void 0 ? noop : _Object$assign$onRowM,\n          _Object$assign$onRowM2 = _Object$assign.onRowMouseLeave,\n          onRowMouseLeave = _Object$assign$onRowM2 === void 0 ? noop : _Object$assign$onRowM2,\n          rowRef = _Object$assign.rowRef;\n\n      var columnManager = this.store.columnManager;\n      var getRowKey = this.getRowKey,\n          fixed = this.fixed,\n          expander = this.expander,\n          isAnyColumnsFixed = this.isAnyColumnsFixed;\n      var rows = [];\n\n      var _loop = function _loop(i) {\n        var record = renderData[i];\n        var key = getRowKey(record, i);\n        var className = typeof rowClassName === 'string' ? rowClassName : rowClassName(record, i, indent);\n        var onHoverProps = {};\n\n        if (columnManager.isAnyColumnsFixed) {\n          onHoverProps.onHover = _this.handleRowHover;\n        }\n\n        var leafColumns = void 0;\n\n        if (fixed === 'left') {\n          leafColumns = columnManager.leftLeafColumns;\n        } else if (fixed === 'right') {\n          leafColumns = columnManager.rightLeafColumns;\n        } else {\n          leafColumns = _this.getColumns(columnManager.leafColumns);\n        }\n\n        var rowPrefixCls = \"\".concat(prefixCls, \"-row\");\n\n        var expandableRowProps = _extends(_extends({}, expander.props), {\n          fixed: fixed,\n          index: i,\n          prefixCls: rowPrefixCls,\n          record: record,\n          rowKey: key,\n          needIndentSpaced: expander.needIndentSpaced,\n          key: key,\n          onRowClick: onRowClick,\n          onExpandedChange: expander.handleExpandChange\n        });\n\n        var row = _createVNode(ExpandableRow, expandableRowProps, {\n          default: function _default(expandableRow) {\n            var tableRowProps = _extends(_extends(_extends({\n              fixed: fixed,\n              indent: indent,\n              record: record,\n              index: i,\n              prefixCls: rowPrefixCls,\n              childrenColumnName: childrenColumnName,\n              columns: leafColumns,\n              rowKey: key,\n              ancestorKeys: ancestorKeys,\n              components: components,\n              isAnyColumnsFixed: isAnyColumnsFixed,\n              customRow: customRow,\n              onRowDoubleClick: onRowDoubleClick,\n              onRowContextMenu: onRowContextMenu,\n              onRowMouseEnter: onRowMouseEnter,\n              onRowMouseLeave: onRowMouseLeave\n            }, onHoverProps), {\n              class: className,\n              ref: rowRef(record, i, indent)\n            }), expandableRow);\n\n            return _createVNode(TableRow, tableRowProps, null);\n          }\n        });\n\n        rows.push(row);\n        expander.renderRows(_this.renderRows, rows, record, i, indent, fixed, key, ancestorKeys);\n      };\n\n      for (var i = 0; i < renderData.length; i += 1) {\n        _loop(i);\n      }\n\n      return rows;\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _this$table = this.table,\n        components = _this$table.sComponents,\n        prefixCls = _this$table.prefixCls,\n        scroll = _this$table.scroll,\n        data = _this$table.data;\n    var _this$$props = this.$props,\n        expander = _this$$props.expander,\n        tableClassName = _this$$props.tableClassName,\n        hasHead = _this$$props.hasHead,\n        hasBody = _this$$props.hasBody,\n        fixed = _this$$props.fixed;\n    var columns = this.getColumns();\n    var tableStyle = {};\n\n    if (!fixed && scroll.x) {\n      // not set width, then use content fixed width\n      tableStyle.width = scroll.x === true ? 'auto' : scroll.x;\n      tableStyle.width = typeof tableStyle.width === 'number' ? \"\".concat(tableStyle.width, \"px\") : tableStyle.width;\n    }\n\n    if (fixed) {\n      var width = columns.reduce(function (sum, _ref) {\n        var w = _ref.width;\n        return sum + parseFloat(w, 10);\n      }, 0);\n\n      if (width > 0) {\n        tableStyle.width = width + 'px';\n      }\n    }\n\n    var Table = hasBody ? components.table : 'table';\n    var BodyWrapper = components.body.wrapper;\n    var body;\n\n    if (hasBody) {\n      body = _createVNode(BodyWrapper, {\n        \"class\": \"\".concat(prefixCls, \"-tbody\")\n      }, {\n        default: function _default() {\n          return [_this2.renderRows(data, 0)];\n        }\n      });\n    }\n\n    return _createVNode(Table, {\n      \"class\": tableClassName,\n      \"style\": tableStyle,\n      \"key\": \"table\"\n    }, {\n      default: function _default() {\n        return [_createVNode(ColGroup, {\n          \"columns\": columns,\n          \"fixed\": fixed\n        }, null), hasHead && _createVNode(TableHeader, {\n          \"expander\": expander,\n          \"columns\": columns,\n          \"fixed\": fixed\n        }, null), body];\n      }\n    });\n  }\n};\nexport default BaseTable;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-table/src/BaseTable.js"],"names":["_extends","resolveDirective","_resolveDirective","createVNode","_createVNode","inject","PropTypes","withUndefined","classNames","ColGroup","TableHeader","TableRow","ExpandableRow","noop","BaseTable","name","inheritAttrs","props","fixed","oneOfType","string","looseBool","columns","array","isRequired","tableClassName","hasHead","hasBody","expander","object","getRowKey","func","isAnyColumnsFixed","setup","table","store","methods","getColumns","cols","_this$$props$columns","$props","map","column","className","class","handleRowHover","isHover","key","currentHoverKey","renderRows","renderData","indent","_this","ancestorKeys","arguments","length","undefined","_Object$assign","$attrs","$data","components","sComponents","prefixCls","childrenColumnName","rowClassName","_Object$assign$custom","customRow","_Object$assign$onRowC","onRowClick","_Object$assign$onRowD","onRowDoubleClick","_Object$assign$onRowC2","onRowContextMenu","_Object$assign$onRowM","onRowMouseEnter","_Object$assign$onRowM2","onRowMouseLeave","rowRef","columnManager","rows","_loop","i","record","onHoverProps","onHover","leafColumns","leftLeafColumns","rightLeafColumns","rowPrefixCls","concat","expandableRowProps","index","rowKey","needIndentSpaced","onExpandedChange","handleExpandChange","row","default","_default","expandableRow","tableRowProps","ref","push","render","_this2","_this$table","scroll","data","_this$$props","tableStyle","x","width","reduce","sum","_ref","w","parseFloat","Table","BodyWrapper","body","wrapper"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport { inject } from 'vue';\nimport PropTypes, { withUndefined } from '../../_util/vue-types';\nimport classNames from '../../_util/classNames';\nimport ColGroup from './ColGroup';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport ExpandableRow from './ExpandableRow';\n\nfunction noop() {}\n\nvar BaseTable = {\n  name: 'BaseTable',\n  inheritAttrs: false,\n  props: {\n    fixed: withUndefined(PropTypes.oneOfType([PropTypes.string, PropTypes.looseBool])),\n    columns: PropTypes.array.isRequired,\n    tableClassName: PropTypes.string.isRequired,\n    hasHead: PropTypes.looseBool.isRequired,\n    hasBody: PropTypes.looseBool.isRequired,\n    expander: PropTypes.object.isRequired,\n    getRowKey: PropTypes.func,\n    isAnyColumnsFixed: PropTypes.looseBool\n  },\n  setup: function setup() {\n    return {\n      table: inject('table', function () {\n        return {};\n      }),\n      store: inject('table-store', function () {\n        return {};\n      })\n    };\n  },\n  methods: {\n    getColumns: function getColumns(cols) {\n      var _this$$props$columns = this.$props.columns,\n          columns = _this$$props$columns === void 0 ? [] : _this$$props$columns;\n      return (cols || columns).map(function (column) {\n        return _extends(_extends({}, column), {\n          className: classNames(column.className, column.class)\n        });\n      });\n    },\n    handleRowHover: function handleRowHover(isHover, key) {\n      this.store.currentHoverKey = isHover ? key : null;\n    },\n    renderRows: function renderRows(renderData, indent) {\n      var _this = this;\n\n      var ancestorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      var _Object$assign = _extends(_extends(_extends({}, this.table.$attrs), this.table.$props), this.table.$data),\n          components = _Object$assign.sComponents,\n          prefixCls = _Object$assign.prefixCls,\n          childrenColumnName = _Object$assign.childrenColumnName,\n          rowClassName = _Object$assign.rowClassName,\n          _Object$assign$custom = _Object$assign.customRow,\n          customRow = _Object$assign$custom === void 0 ? noop : _Object$assign$custom,\n          _Object$assign$onRowC = _Object$assign.onRowClick,\n          onRowClick = _Object$assign$onRowC === void 0 ? noop : _Object$assign$onRowC,\n          _Object$assign$onRowD = _Object$assign.onRowDoubleClick,\n          onRowDoubleClick = _Object$assign$onRowD === void 0 ? noop : _Object$assign$onRowD,\n          _Object$assign$onRowC2 = _Object$assign.onRowContextMenu,\n          onRowContextMenu = _Object$assign$onRowC2 === void 0 ? noop : _Object$assign$onRowC2,\n          _Object$assign$onRowM = _Object$assign.onRowMouseEnter,\n          onRowMouseEnter = _Object$assign$onRowM === void 0 ? noop : _Object$assign$onRowM,\n          _Object$assign$onRowM2 = _Object$assign.onRowMouseLeave,\n          onRowMouseLeave = _Object$assign$onRowM2 === void 0 ? noop : _Object$assign$onRowM2,\n          rowRef = _Object$assign.rowRef;\n\n      var columnManager = this.store.columnManager;\n      var getRowKey = this.getRowKey,\n          fixed = this.fixed,\n          expander = this.expander,\n          isAnyColumnsFixed = this.isAnyColumnsFixed;\n      var rows = [];\n\n      var _loop = function _loop(i) {\n        var record = renderData[i];\n        var key = getRowKey(record, i);\n        var className = typeof rowClassName === 'string' ? rowClassName : rowClassName(record, i, indent);\n        var onHoverProps = {};\n\n        if (columnManager.isAnyColumnsFixed) {\n          onHoverProps.onHover = _this.handleRowHover;\n        }\n\n        var leafColumns = void 0;\n\n        if (fixed === 'left') {\n          leafColumns = columnManager.leftLeafColumns;\n        } else if (fixed === 'right') {\n          leafColumns = columnManager.rightLeafColumns;\n        } else {\n          leafColumns = _this.getColumns(columnManager.leafColumns);\n        }\n\n        var rowPrefixCls = \"\".concat(prefixCls, \"-row\");\n\n        var expandableRowProps = _extends(_extends({}, expander.props), {\n          fixed: fixed,\n          index: i,\n          prefixCls: rowPrefixCls,\n          record: record,\n          rowKey: key,\n          needIndentSpaced: expander.needIndentSpaced,\n          key: key,\n          onRowClick: onRowClick,\n          onExpandedChange: expander.handleExpandChange\n        });\n\n        var row = _createVNode(ExpandableRow, expandableRowProps, {\n          default: function _default(expandableRow) {\n            var tableRowProps = _extends(_extends(_extends({\n              fixed: fixed,\n              indent: indent,\n              record: record,\n              index: i,\n              prefixCls: rowPrefixCls,\n              childrenColumnName: childrenColumnName,\n              columns: leafColumns,\n              rowKey: key,\n              ancestorKeys: ancestorKeys,\n              components: components,\n              isAnyColumnsFixed: isAnyColumnsFixed,\n              customRow: customRow,\n              onRowDoubleClick: onRowDoubleClick,\n              onRowContextMenu: onRowContextMenu,\n              onRowMouseEnter: onRowMouseEnter,\n              onRowMouseLeave: onRowMouseLeave\n            }, onHoverProps), {\n              class: className,\n              ref: rowRef(record, i, indent)\n            }), expandableRow);\n\n            return _createVNode(TableRow, tableRowProps, null);\n          }\n        });\n\n        rows.push(row);\n        expander.renderRows(_this.renderRows, rows, record, i, indent, fixed, key, ancestorKeys);\n      };\n\n      for (var i = 0; i < renderData.length; i += 1) {\n        _loop(i);\n      }\n\n      return rows;\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _this$table = this.table,\n        components = _this$table.sComponents,\n        prefixCls = _this$table.prefixCls,\n        scroll = _this$table.scroll,\n        data = _this$table.data;\n    var _this$$props = this.$props,\n        expander = _this$$props.expander,\n        tableClassName = _this$$props.tableClassName,\n        hasHead = _this$$props.hasHead,\n        hasBody = _this$$props.hasBody,\n        fixed = _this$$props.fixed;\n    var columns = this.getColumns();\n    var tableStyle = {};\n\n    if (!fixed && scroll.x) {\n      // not set width, then use content fixed width\n      tableStyle.width = scroll.x === true ? 'auto' : scroll.x;\n      tableStyle.width = typeof tableStyle.width === 'number' ? \"\".concat(tableStyle.width, \"px\") : tableStyle.width;\n    }\n\n    if (fixed) {\n      var width = columns.reduce(function (sum, _ref) {\n        var w = _ref.width;\n        return sum + parseFloat(w, 10);\n      }, 0);\n\n      if (width > 0) {\n        tableStyle.width = width + 'px';\n      }\n    }\n\n    var Table = hasBody ? components.table : 'table';\n    var BodyWrapper = components.body.wrapper;\n    var body;\n\n    if (hasBody) {\n      body = _createVNode(BodyWrapper, {\n        \"class\": \"\".concat(prefixCls, \"-tbody\")\n      }, {\n        default: function _default() {\n          return [_this2.renderRows(data, 0)];\n        }\n      });\n    }\n\n    return _createVNode(Table, {\n      \"class\": tableClassName,\n      \"style\": tableStyle,\n      \"key\": \"table\"\n    }, {\n      default: function _default() {\n        return [_createVNode(ColGroup, {\n          \"columns\": columns,\n          \"fixed\": fixed\n        }, null), hasHead && _createVNode(TableHeader, {\n          \"expander\": expander,\n          \"columns\": columns,\n          \"fixed\": fixed\n        }, null), body];\n      }\n    });\n  }\n};\nexport default BaseTable;"]},"metadata":{},"sourceType":"module"}