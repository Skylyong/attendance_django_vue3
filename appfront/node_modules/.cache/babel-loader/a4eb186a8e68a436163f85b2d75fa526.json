{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { pick, extend, truthProp, preventDefault, makeStringProp, createNamespace } from \"../utils\";\nimport { fieldSharedProps } from \"../field/Field\";\nimport { useId } from \"../composables/use-id\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Field } from \"../field\";\nconst [name, bem, t] = createNamespace(\"search\");\nconst searchProps = extend({}, fieldSharedProps, {\n  label: String,\n  shape: makeStringProp(\"square\"),\n  leftIcon: makeStringProp(\"search\"),\n  clearable: truthProp,\n  actionText: String,\n  background: String,\n  showAction: Boolean\n});\nvar stdin_default = defineComponent({\n  name,\n  props: searchProps,\n  emits: [\"blur\", \"focus\", \"clear\", \"search\", \"cancel\", \"click-input\", \"click-left-icon\", \"click-right-icon\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots,\n    attrs\n  }) {\n    const id = useId();\n    const filedRef = ref();\n\n    const onCancel = () => {\n      if (!slots.action) {\n        emit(\"update:modelValue\", \"\");\n        emit(\"cancel\");\n      }\n    };\n\n    const onKeypress = event => {\n      const ENTER_CODE = 13;\n\n      if (event.keyCode === ENTER_CODE) {\n        preventDefault(event);\n        emit(\"search\", props.modelValue);\n      }\n    };\n\n    const getInputId = () => props.id || `${id}-input`;\n\n    const renderLabel = () => {\n      if (slots.label || props.label) {\n        return _createVNode(\"label\", {\n          \"class\": bem(\"label\"),\n          \"for\": getInputId()\n        }, [slots.label ? slots.label() : props.label]);\n      }\n    };\n\n    const renderAction = () => {\n      if (props.showAction) {\n        const text = props.actionText || t(\"cancel\");\n        return _createVNode(\"div\", {\n          \"class\": bem(\"action\"),\n          \"role\": \"button\",\n          \"tabindex\": 0,\n          \"onClick\": onCancel\n        }, [slots.action ? slots.action() : text]);\n      }\n    };\n\n    const blur = () => {\n      var _a;\n\n      return (_a = filedRef.value) == null ? void 0 : _a.blur();\n    };\n\n    const focus = () => {\n      var _a;\n\n      return (_a = filedRef.value) == null ? void 0 : _a.focus();\n    };\n\n    const onBlur = event => emit(\"blur\", event);\n\n    const onFocus = event => emit(\"focus\", event);\n\n    const onClear = event => emit(\"clear\", event);\n\n    const onClickInput = event => emit(\"click-input\", event);\n\n    const onClickLeftIcon = event => emit(\"click-left-icon\", event);\n\n    const onClickRightIcon = event => emit(\"click-right-icon\", event);\n\n    const fieldPropNames = Object.keys(fieldSharedProps);\n\n    const renderField = () => {\n      const fieldAttrs = extend({}, attrs, pick(props, fieldPropNames), {\n        id: getInputId()\n      });\n\n      const onInput = value => emit(\"update:modelValue\", value);\n\n      return _createVNode(Field, _mergeProps({\n        \"ref\": filedRef,\n        \"type\": \"search\",\n        \"class\": bem(\"field\"),\n        \"border\": false,\n        \"onBlur\": onBlur,\n        \"onFocus\": onFocus,\n        \"onClear\": onClear,\n        \"onKeypress\": onKeypress,\n        \"onClick-input\": onClickInput,\n        \"onClick-left-icon\": onClickLeftIcon,\n        \"onClick-right-icon\": onClickRightIcon,\n        \"onUpdate:modelValue\": onInput\n      }, fieldAttrs), pick(slots, [\"left-icon\", \"right-icon\"]));\n    };\n\n    useExpose({\n      focus,\n      blur\n    });\n    return () => {\n      var _a;\n\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          \"show-action\": props.showAction\n        }),\n        \"style\": {\n          background: props.background\n        }\n      }, [(_a = slots.left) == null ? void 0 : _a.call(slots), _createVNode(\"div\", {\n        \"class\": bem(\"content\", props.shape)\n      }, [renderLabel(), renderField()]), renderAction()]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/search/Search.js"],"names":["mergeProps","_mergeProps","createVNode","_createVNode","ref","defineComponent","pick","extend","truthProp","preventDefault","makeStringProp","createNamespace","fieldSharedProps","useId","useExpose","Field","name","bem","t","searchProps","label","String","shape","leftIcon","clearable","actionText","background","showAction","Boolean","stdin_default","props","emits","setup","emit","slots","attrs","id","filedRef","onCancel","action","onKeypress","event","ENTER_CODE","keyCode","modelValue","getInputId","renderLabel","renderAction","text","blur","_a","value","focus","onBlur","onFocus","onClear","onClickInput","onClickLeftIcon","onClickRightIcon","fieldPropNames","Object","keys","renderField","fieldAttrs","onInput","left","call","default"],"mappings":"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","sourcesContent":["import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { pick, extend, truthProp, preventDefault, makeStringProp, createNamespace } from \"../utils\";\nimport { fieldSharedProps } from \"../field/Field\";\nimport { useId } from \"../composables/use-id\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Field } from \"../field\";\nconst [name, bem, t] = createNamespace(\"search\");\nconst searchProps = extend({}, fieldSharedProps, {\n  label: String,\n  shape: makeStringProp(\"square\"),\n  leftIcon: makeStringProp(\"search\"),\n  clearable: truthProp,\n  actionText: String,\n  background: String,\n  showAction: Boolean\n});\nvar stdin_default = defineComponent({\n  name,\n  props: searchProps,\n  emits: [\"blur\", \"focus\", \"clear\", \"search\", \"cancel\", \"click-input\", \"click-left-icon\", \"click-right-icon\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots,\n    attrs\n  }) {\n    const id = useId();\n    const filedRef = ref();\n    const onCancel = () => {\n      if (!slots.action) {\n        emit(\"update:modelValue\", \"\");\n        emit(\"cancel\");\n      }\n    };\n    const onKeypress = (event) => {\n      const ENTER_CODE = 13;\n      if (event.keyCode === ENTER_CODE) {\n        preventDefault(event);\n        emit(\"search\", props.modelValue);\n      }\n    };\n    const getInputId = () => props.id || `${id}-input`;\n    const renderLabel = () => {\n      if (slots.label || props.label) {\n        return _createVNode(\"label\", {\n          \"class\": bem(\"label\"),\n          \"for\": getInputId()\n        }, [slots.label ? slots.label() : props.label]);\n      }\n    };\n    const renderAction = () => {\n      if (props.showAction) {\n        const text = props.actionText || t(\"cancel\");\n        return _createVNode(\"div\", {\n          \"class\": bem(\"action\"),\n          \"role\": \"button\",\n          \"tabindex\": 0,\n          \"onClick\": onCancel\n        }, [slots.action ? slots.action() : text]);\n      }\n    };\n    const blur = () => {\n      var _a;\n      return (_a = filedRef.value) == null ? void 0 : _a.blur();\n    };\n    const focus = () => {\n      var _a;\n      return (_a = filedRef.value) == null ? void 0 : _a.focus();\n    };\n    const onBlur = (event) => emit(\"blur\", event);\n    const onFocus = (event) => emit(\"focus\", event);\n    const onClear = (event) => emit(\"clear\", event);\n    const onClickInput = (event) => emit(\"click-input\", event);\n    const onClickLeftIcon = (event) => emit(\"click-left-icon\", event);\n    const onClickRightIcon = (event) => emit(\"click-right-icon\", event);\n    const fieldPropNames = Object.keys(fieldSharedProps);\n    const renderField = () => {\n      const fieldAttrs = extend({}, attrs, pick(props, fieldPropNames), {\n        id: getInputId()\n      });\n      const onInput = (value) => emit(\"update:modelValue\", value);\n      return _createVNode(Field, _mergeProps({\n        \"ref\": filedRef,\n        \"type\": \"search\",\n        \"class\": bem(\"field\"),\n        \"border\": false,\n        \"onBlur\": onBlur,\n        \"onFocus\": onFocus,\n        \"onClear\": onClear,\n        \"onKeypress\": onKeypress,\n        \"onClick-input\": onClickInput,\n        \"onClick-left-icon\": onClickLeftIcon,\n        \"onClick-right-icon\": onClickRightIcon,\n        \"onUpdate:modelValue\": onInput\n      }, fieldAttrs), pick(slots, [\"left-icon\", \"right-icon\"]));\n    };\n    useExpose({\n      focus,\n      blur\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          \"show-action\": props.showAction\n        }),\n        \"style\": {\n          background: props.background\n        }\n      }, [(_a = slots.left) == null ? void 0 : _a.call(slots), _createVNode(\"div\", {\n        \"class\": bem(\"content\", props.shape)\n      }, [renderLabel(), renderField()]), renderAction()]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}