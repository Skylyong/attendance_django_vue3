{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { watch, defineComponent } from \"vue\";\nimport { numericProp, createNamespace, makeArrayProp } from \"../utils\";\nimport { useChildren, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"checkbox-group\");\nconst checkboxGroupProps = {\n  max: numericProp,\n  disabled: Boolean,\n  iconSize: numericProp,\n  direction: String,\n  modelValue: makeArrayProp(),\n  checkedColor: String\n};\nconst CHECKBOX_GROUP_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: checkboxGroupProps,\n  emits: [\"change\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(CHECKBOX_GROUP_KEY);\n\n    const updateValue = value => emit(\"update:modelValue\", value);\n\n    const toggleAll = (options = {}) => {\n      if (typeof options === \"boolean\") {\n        options = {\n          checked: options\n        };\n      }\n\n      const {\n        checked,\n        skipDisabled\n      } = options;\n      const checkedChildren = children.filter(item => {\n        if (!item.props.bindGroup) {\n          return false;\n        }\n\n        if (item.props.disabled && skipDisabled) {\n          return item.checked.value;\n        }\n\n        return checked != null ? checked : !item.checked.value;\n      });\n      const names = checkedChildren.map(item => item.name);\n      updateValue(names);\n    };\n\n    watch(() => props.modelValue, value => emit(\"change\", value));\n    useExpose({\n      toggleAll\n    });\n    useCustomFieldValue(() => props.modelValue);\n    linkChildren({\n      props,\n      updateValue\n    });\n    return () => {\n      var _a;\n\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction])\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n\n});\nexport { CHECKBOX_GROUP_KEY, stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/checkbox-group/CheckboxGroup.js"],"names":["createVNode","_createVNode","watch","defineComponent","numericProp","createNamespace","makeArrayProp","useChildren","useCustomFieldValue","useExpose","name","bem","checkboxGroupProps","max","disabled","Boolean","iconSize","direction","String","modelValue","checkedColor","CHECKBOX_GROUP_KEY","Symbol","stdin_default","props","emits","setup","emit","slots","children","linkChildren","updateValue","value","toggleAll","options","checked","skipDisabled","checkedChildren","filter","item","bindGroup","names","map","_a","default","call"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { watch, defineComponent } from \"vue\";\nimport { numericProp, createNamespace, makeArrayProp } from \"../utils\";\nimport { useChildren, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"checkbox-group\");\nconst checkboxGroupProps = {\n  max: numericProp,\n  disabled: Boolean,\n  iconSize: numericProp,\n  direction: String,\n  modelValue: makeArrayProp(),\n  checkedColor: String\n};\nconst CHECKBOX_GROUP_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: checkboxGroupProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(CHECKBOX_GROUP_KEY);\n    const updateValue = (value) => emit(\"update:modelValue\", value);\n    const toggleAll = (options = {}) => {\n      if (typeof options === \"boolean\") {\n        options = {\n          checked: options\n        };\n      }\n      const {\n        checked,\n        skipDisabled\n      } = options;\n      const checkedChildren = children.filter((item) => {\n        if (!item.props.bindGroup) {\n          return false;\n        }\n        if (item.props.disabled && skipDisabled) {\n          return item.checked.value;\n        }\n        return checked != null ? checked : !item.checked.value;\n      });\n      const names = checkedChildren.map((item) => item.name);\n      updateValue(names);\n    };\n    watch(() => props.modelValue, (value) => emit(\"change\", value));\n    useExpose({\n      toggleAll\n    });\n    useCustomFieldValue(() => props.modelValue);\n    linkChildren({\n      props,\n      updateValue\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction])\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  CHECKBOX_GROUP_KEY,\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}