{"ast":null,"code":"import { defineComponent, reactive, ref, nextTick, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { VXETable, VxeTableInstance, VxeToolbarInstance } from 'vxe-table';\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    const serveApiUrl = computed(() => store.state.serveApiUrl);\n    const xToolbar = ref({});\n    const xTable = ref({});\n    const demo1 = reactive({\n      loading: false,\n      tableData: [],\n      validRules: {\n        name: [{\n          required: true,\n          message: '名称必须填写'\n        }]\n      },\n      sexList: [{\n        label: '男',\n        value: '1'\n      }, {\n        label: '女',\n        value: '0'\n      }]\n    });\n\n    const formatSex = value => {\n      if (value === '1') {\n        return '男';\n      }\n\n      if (value === '0') {\n        return '女';\n      }\n\n      return '';\n    };\n\n    const loadList = async () => {\n      demo1.loading = true;\n\n      try {\n        const res = await fetch(`${serveApiUrl.value}/api/pub/all`).then(response => response.json());\n        demo1.tableData = res;\n      } catch (e) {\n        demo1.tableData = [];\n      }\n\n      demo1.loading = false;\n    };\n\n    const insertEvent = async () => {\n      const $table = xTable.value;\n      const newRecord = {};\n      const {\n        row: newRow\n      } = await $table.insert(newRecord);\n      await $table.setActiveRow(newRow);\n    };\n\n    const removeSelectEvent = async () => {\n      const $table = xTable.value;\n      await $table.removeCheckboxRow();\n    };\n\n    const deleteSelectEvent = async () => {\n      const type = await VXETable.modal.confirm('您确定要删除选中的数据?');\n\n      if (type !== 'confirm') {\n        return;\n      }\n\n      const $table = xTable.value;\n      const checkboxRecords = $table.getCheckboxRecords();\n      demo1.loading = true;\n\n      try {\n        const body = {\n          removeRecords: checkboxRecords\n        };\n        await fetch(`${serveApiUrl.value}/api/pub/save`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        await loadList();\n      } catch (e) {}\n\n      demo1.loading = false;\n    };\n\n    const removeRowEvent = async row => {\n      const $table = xTable.value;\n      await $table.remove(row);\n    };\n\n    const deleteRowEvent = async row => {\n      const type = await VXETable.modal.confirm('您确定要删除该数据?');\n\n      if (type !== 'confirm') {\n        return;\n      }\n\n      demo1.loading = true;\n\n      try {\n        const body = {\n          removeRecords: [row]\n        };\n        await fetch(`${serveApiUrl.value}/api/pub/save`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        await loadList();\n      } catch (e) {}\n    };\n\n    const saveEvent = async () => {\n      const $table = xTable.value;\n      const {\n        insertRecords,\n        removeRecords,\n        updateRecords\n      } = $table.getRecordset();\n\n      if (insertRecords.length <= 0 && removeRecords.length <= 0 && updateRecords.length <= 0) {\n        VXETable.modal.message({\n          content: '数据未改动！',\n          status: 'warning'\n        });\n        return;\n      }\n\n      const errMap = await $table.validate();\n\n      if (errMap) {\n        return;\n      }\n\n      demo1.loading = true;\n\n      try {\n        const body = {\n          insertRecords,\n          removeRecords,\n          updateRecords\n        };\n        await fetch(`${serveApiUrl.value}/api/pub/save`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        await loadList();\n        VXETable.modal.message({\n          content: `操作成功，新增 ${insertRecords.length} 条，更新 ${updateRecords.length} 条，删除 ${removeRecords.length} 条`,\n          status: 'success'\n        });\n      } catch (e) {\n        if (e && e.message) {\n          VXETable.modal.message({\n            content: e.message,\n            status: 'error'\n          });\n        }\n      }\n\n      demo1.loading = false;\n    };\n\n    nextTick(() => {\n      // 将表格和工具栏进行关联\n      const $table = xTable.value;\n      const $toolbar = xToolbar.value;\n      $table.connect($toolbar);\n    });\n    loadList();\n    return {\n      demo1,\n      xToolbar,\n      xTable,\n      formatSex,\n      insertEvent,\n      removeSelectEvent,\n      deleteSelectEvent,\n      removeRowEvent,\n      deleteRowEvent,\n      saveEvent\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["defineComponent","reactive","ref","nextTick","computed","useStore","VXETable","VxeTableInstance","VxeToolbarInstance","setup","store","serveApiUrl","state","xToolbar","xTable","demo1","loading","tableData","validRules","name","required","message","sexList","label","value","formatSex","loadList","res","fetch","then","response","json","e","insertEvent","$table","newRecord","row","newRow","insert","setActiveRow","removeSelectEvent","removeCheckboxRow","deleteSelectEvent","type","modal","confirm","checkboxRecords","getCheckboxRecords","body","removeRecords","method","headers","JSON","stringify","removeRowEvent","remove","deleteRowEvent","saveEvent","insertRecords","updateRecords","getRecordset","length","content","status","errMap","validate","$toolbar","connect"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n   <vxe-toolbar ref=\"xToolbar\" :loading=\"demo1.loading\">\n          <template #buttons>\n            <vxe-button status=\"primary\" content=\"临时新增\" @click=\"insertEvent\"></vxe-button>\n            <vxe-button status=\"warning\" content=\"临时删除\" @click=\"removeSelectEvent\"></vxe-button>\n            <vxe-button status=\"danger\" content=\"直接删除\" @click=\"deleteSelectEvent\"></vxe-button>\n            <vxe-button content=\"提交（将临时操作持久化）\" @click=\"saveEvent\"></vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          border\n          show-overflow\n          keep-source\n          ref=\"xTable\"\n          height=\"500\"\n          :column-config=\"{resizable: true}\"\n          :loading=\"demo1.loading\"\n          :data=\"demo1.tableData\"\n          :edit-rules=\"demo1.validRules\"\n          :edit-config=\"{trigger: 'click', mode: 'row', showUpdateStatus: true, showInsertStatus: true}\">\n          <vxe-column type=\"checkbox\" width=\"60\"></vxe-column>\n          <vxe-column field=\"name\" title=\"Name\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.name\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"nickname\" title=\"Nickname\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.nickname\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"sex\" title=\"Sex\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <span>{{ formatSex(row.sex) }}</span>\n            </template>\n            <template #edit=\"{ row }\">\n              <vxe-select v-model=\"row.sex\" type=\"text\" :options=\"demo1.sexList\" transfer></vxe-select>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"amount\" title=\"Amount\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.amount\" type=\"float\" :digits=\"2\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"updateDate\" title=\"Date\" :edit-render=\"{}\">\n            <template #edit=\"{ row }\">\n              <vxe-input v-model=\"row.updateDate\" type=\"date\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column title=\"操作\" width=\"240\">\n            <template #default=\"{ row }\">\n              <vxe-button status=\"warning\" content=\"临时删除\" @click=\"removeRowEvent(row)\"></vxe-button>\n              <vxe-button status=\"danger\" content=\"直接删除\" @click=\"deleteRowEvent(row)\"></vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        \n</template>\n\n<script>\n import { defineComponent, reactive, ref, nextTick, computed } from 'vue'\n        import { useStore } from 'vuex'\n        import { VXETable, VxeTableInstance, VxeToolbarInstance } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const store = useStore()\n            const serveApiUrl = computed(() => store.state.serveApiUrl)\n\n            const xToolbar = ref({})\n            const xTable = ref({})\n\n            const demo1 = reactive({\n              loading: false,\n              tableData: [],\n              validRules: {\n                name: [\n                  { required: true, message: '名称必须填写' }\n                ]\n              },\n              sexList: [\n                { label: '男', value: '1' },\n                { label: '女', value: '0' }\n              ]\n            })\n\n            const formatSex = (value) => {\n              if (value === '1') {\n                return '男'\n              }\n              if (value === '0') {\n                return '女'\n              }\n              return ''\n            }\n\n            const loadList = async () => {\n              demo1.loading = true\n              try {\n                const res = await fetch(`${serveApiUrl.value}/api/pub/all`).then(response => response.json())\n                demo1.tableData = res\n              } catch (e) {\n                demo1.tableData = []\n              }\n              demo1.loading = false\n            }\n\n            const insertEvent = async () => {\n              const $table = xTable.value\n              const newRecord = {}\n              const { row: newRow } = await $table.insert(newRecord)\n              await $table.setActiveRow(newRow)\n            }\n\n            const removeSelectEvent = async () => {\n              const $table = xTable.value\n              await $table.removeCheckboxRow()\n            }\n\n            const deleteSelectEvent = async () => {\n              const type = await VXETable.modal.confirm('您确定要删除选中的数据?')\n              if (type !== 'confirm') {\n                return\n              }\n              const $table = xTable.value\n              const checkboxRecords = $table.getCheckboxRecords()\n              demo1.loading = true\n              try {\n                const body = { removeRecords: checkboxRecords }\n                await fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) })\n                await loadList()\n              } catch (e) {}\n              demo1.loading = false\n            }\n\n            const removeRowEvent = async (row) => {\n              const $table = xTable.value\n              await $table.remove(row)\n            }\n\n            const deleteRowEvent = async (row) => {\n              const type = await VXETable.modal.confirm('您确定要删除该数据?')\n              if (type !== 'confirm') {\n                return\n              }\n              demo1.loading = true\n              try {\n                const body = { removeRecords: [row] }\n                await fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) })\n                await loadList()\n              } catch (e) {}\n            }\n\n            const saveEvent = async () => {\n              const $table = xTable.value\n              const { insertRecords, removeRecords, updateRecords } = $table.getRecordset()\n              if (insertRecords.length <= 0 && removeRecords.length <= 0 && updateRecords.length <= 0) {\n                VXETable.modal.message({ content: '数据未改动！', status: 'warning' })\n                return\n              }\n              const errMap = await $table.validate()\n              if (errMap) {\n                return\n              }\n              demo1.loading = true\n              try {\n                const body = { insertRecords, removeRecords, updateRecords }\n                await fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) })\n                await loadList()\n                VXETable.modal.message({ content: `操作成功，新增 ${insertRecords.length} 条，更新 ${updateRecords.length} 条，删除 ${removeRecords.length} 条`, status: 'success' })\n              } catch (e) {\n                if (e && e.message) {\n                  VXETable.modal.message({ content: e.message, status: 'error' })\n                }\n              }\n              demo1.loading = false\n            }\n\n            nextTick(() => {\n              // 将表格和工具栏进行关联\n              const $table = xTable.value\n              const $toolbar = xToolbar.value\n              $table.connect($toolbar)\n            })\n\n            loadList()\n\n            return {\n              demo1,\n              xToolbar,\n              xTable,\n              formatSex,\n              insertEvent,\n              removeSelectEvent,\n              deleteSelectEvent,\n              removeRowEvent,\n              deleteRowEvent,\n              saveEvent\n            }\n          }\n        })\n        </script>"]},"metadata":{},"sourceType":"module"}