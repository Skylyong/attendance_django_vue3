{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, numericProp, preventDefault, makeStringProp, createNamespace, BORDER_SURROUND } from \"../utils\";\nimport { useRoute, routeProps } from \"../composables/use-route\";\nimport { Icon } from \"../icon\";\nimport { Loading } from \"../loading\";\nconst [name, bem] = createNamespace(\"button\");\nconst buttonProps = extend({}, routeProps, {\n  tag: makeStringProp(\"button\"),\n  text: String,\n  icon: String,\n  type: makeStringProp(\"default\"),\n  size: makeStringProp(\"normal\"),\n  color: String,\n  block: Boolean,\n  plain: Boolean,\n  round: Boolean,\n  square: Boolean,\n  loading: Boolean,\n  hairline: Boolean,\n  disabled: Boolean,\n  iconPrefix: String,\n  nativeType: makeStringProp(\"button\"),\n  loadingSize: numericProp,\n  loadingText: String,\n  loadingType: String,\n  iconPosition: makeStringProp(\"left\")\n});\nvar stdin_default = defineComponent({\n  name,\n  props: buttonProps,\n  emits: [\"click\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const route = useRoute();\n\n    const renderLoadingIcon = () => {\n      if (slots.loading) {\n        return slots.loading();\n      }\n\n      return _createVNode(Loading, {\n        \"size\": props.loadingSize,\n        \"type\": props.loadingType,\n        \"class\": bem(\"loading\")\n      }, null);\n    };\n\n    const renderIcon = () => {\n      if (props.loading) {\n        return renderLoadingIcon();\n      }\n\n      if (slots.icon) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"icon\")\n        }, [slots.icon()]);\n      }\n\n      if (props.icon) {\n        return _createVNode(Icon, {\n          \"name\": props.icon,\n          \"class\": bem(\"icon\"),\n          \"classPrefix\": props.iconPrefix\n        }, null);\n      }\n    };\n\n    const renderText = () => {\n      let text;\n\n      if (props.loading) {\n        text = props.loadingText;\n      } else {\n        text = slots.default ? slots.default() : props.text;\n      }\n\n      if (text) {\n        return _createVNode(\"span\", {\n          \"class\": bem(\"text\")\n        }, [text]);\n      }\n    };\n\n    const getStyle = () => {\n      const {\n        color,\n        plain\n      } = props;\n\n      if (color) {\n        const style = {\n          color: plain ? color : \"white\"\n        };\n\n        if (!plain) {\n          style.background = color;\n        }\n\n        if (color.includes(\"gradient\")) {\n          style.border = 0;\n        } else {\n          style.borderColor = color;\n        }\n\n        return style;\n      }\n    };\n\n    const onClick = event => {\n      if (props.loading) {\n        preventDefault(event);\n      } else if (!props.disabled) {\n        emit(\"click\", event);\n        route();\n      }\n    };\n\n    return () => {\n      const {\n        tag,\n        type,\n        size,\n        block,\n        round,\n        plain,\n        square,\n        loading,\n        disabled,\n        hairline,\n        nativeType,\n        iconPosition\n      } = props;\n      const classes = [bem([type, size, {\n        plain,\n        block,\n        round,\n        square,\n        loading,\n        disabled,\n        hairline\n      }]), {\n        [BORDER_SURROUND]: hairline\n      }];\n      return _createVNode(tag, {\n        \"type\": nativeType,\n        \"class\": classes,\n        \"style\": getStyle(),\n        \"disabled\": disabled,\n        \"onClick\": onClick\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": bem(\"content\")\n        }, [iconPosition === \"left\" && renderIcon(), renderText(), iconPosition === \"right\" && renderIcon()])]\n      });\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/button/Button.js"],"names":["createVNode","_createVNode","defineComponent","extend","numericProp","preventDefault","makeStringProp","createNamespace","BORDER_SURROUND","useRoute","routeProps","Icon","Loading","name","bem","buttonProps","tag","text","String","icon","type","size","color","block","Boolean","plain","round","square","loading","hairline","disabled","iconPrefix","nativeType","loadingSize","loadingText","loadingType","iconPosition","stdin_default","props","emits","setup","emit","slots","route","renderLoadingIcon","renderIcon","renderText","default","getStyle","style","background","includes","border","borderColor","onClick","event","classes"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, numericProp, preventDefault, makeStringProp, createNamespace, BORDER_SURROUND } from \"../utils\";\nimport { useRoute, routeProps } from \"../composables/use-route\";\nimport { Icon } from \"../icon\";\nimport { Loading } from \"../loading\";\nconst [name, bem] = createNamespace(\"button\");\nconst buttonProps = extend({}, routeProps, {\n  tag: makeStringProp(\"button\"),\n  text: String,\n  icon: String,\n  type: makeStringProp(\"default\"),\n  size: makeStringProp(\"normal\"),\n  color: String,\n  block: Boolean,\n  plain: Boolean,\n  round: Boolean,\n  square: Boolean,\n  loading: Boolean,\n  hairline: Boolean,\n  disabled: Boolean,\n  iconPrefix: String,\n  nativeType: makeStringProp(\"button\"),\n  loadingSize: numericProp,\n  loadingText: String,\n  loadingType: String,\n  iconPosition: makeStringProp(\"left\")\n});\nvar stdin_default = defineComponent({\n  name,\n  props: buttonProps,\n  emits: [\"click\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const route = useRoute();\n    const renderLoadingIcon = () => {\n      if (slots.loading) {\n        return slots.loading();\n      }\n      return _createVNode(Loading, {\n        \"size\": props.loadingSize,\n        \"type\": props.loadingType,\n        \"class\": bem(\"loading\")\n      }, null);\n    };\n    const renderIcon = () => {\n      if (props.loading) {\n        return renderLoadingIcon();\n      }\n      if (slots.icon) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"icon\")\n        }, [slots.icon()]);\n      }\n      if (props.icon) {\n        return _createVNode(Icon, {\n          \"name\": props.icon,\n          \"class\": bem(\"icon\"),\n          \"classPrefix\": props.iconPrefix\n        }, null);\n      }\n    };\n    const renderText = () => {\n      let text;\n      if (props.loading) {\n        text = props.loadingText;\n      } else {\n        text = slots.default ? slots.default() : props.text;\n      }\n      if (text) {\n        return _createVNode(\"span\", {\n          \"class\": bem(\"text\")\n        }, [text]);\n      }\n    };\n    const getStyle = () => {\n      const {\n        color,\n        plain\n      } = props;\n      if (color) {\n        const style = {\n          color: plain ? color : \"white\"\n        };\n        if (!plain) {\n          style.background = color;\n        }\n        if (color.includes(\"gradient\")) {\n          style.border = 0;\n        } else {\n          style.borderColor = color;\n        }\n        return style;\n      }\n    };\n    const onClick = (event) => {\n      if (props.loading) {\n        preventDefault(event);\n      } else if (!props.disabled) {\n        emit(\"click\", event);\n        route();\n      }\n    };\n    return () => {\n      const {\n        tag,\n        type,\n        size,\n        block,\n        round,\n        plain,\n        square,\n        loading,\n        disabled,\n        hairline,\n        nativeType,\n        iconPosition\n      } = props;\n      const classes = [bem([type, size, {\n        plain,\n        block,\n        round,\n        square,\n        loading,\n        disabled,\n        hairline\n      }]), {\n        [BORDER_SURROUND]: hairline\n      }];\n      return _createVNode(tag, {\n        \"type\": nativeType,\n        \"class\": classes,\n        \"style\": getStyle(),\n        \"disabled\": disabled,\n        \"onClick\": onClick\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": bem(\"content\")\n        }, [iconPosition === \"left\" && renderIcon(), renderText(), iconPosition === \"right\" && renderIcon()])]\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}