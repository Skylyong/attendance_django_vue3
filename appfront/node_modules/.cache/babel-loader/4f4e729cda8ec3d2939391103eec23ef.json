{"ast":null,"code":"import { useRect } from \"@vant/use\";\nimport { loadImageAsync } from \"./util\";\nimport { noop } from \"../../utils\";\n\nclass ReactiveListener {\n  constructor({\n    el,\n    src,\n    error,\n    loading,\n    bindType,\n    $parent,\n    options,\n    cors,\n    elRenderer,\n    imageCache\n  }) {\n    this.el = el;\n    this.src = src;\n    this.error = error;\n    this.loading = loading;\n    this.bindType = bindType;\n    this.attempt = 0;\n    this.cors = cors;\n    this.naturalHeight = 0;\n    this.naturalWidth = 0;\n    this.options = options;\n    this.$parent = $parent;\n    this.elRenderer = elRenderer;\n    this.imageCache = imageCache;\n    this.performanceData = {\n      loadStart: 0,\n      loadEnd: 0\n    };\n    this.filter();\n    this.initState();\n    this.render(\"loading\", false);\n  }\n\n  initState() {\n    if (\"dataset\" in this.el) {\n      this.el.dataset.src = this.src;\n    } else {\n      this.el.setAttribute(\"data-src\", this.src);\n    }\n\n    this.state = {\n      loading: false,\n      error: false,\n      loaded: false,\n      rendered: false\n    };\n  }\n\n  record(event) {\n    this.performanceData[event] = Date.now();\n  }\n\n  update({\n    src,\n    loading,\n    error\n  }) {\n    const oldSrc = this.src;\n    this.src = src;\n    this.loading = loading;\n    this.error = error;\n    this.filter();\n\n    if (oldSrc !== this.src) {\n      this.attempt = 0;\n      this.initState();\n    }\n  }\n\n  checkInView() {\n    const rect = useRect(this.el);\n    return rect.top < window.innerHeight * this.options.preLoad && rect.bottom > this.options.preLoadTop && rect.left < window.innerWidth * this.options.preLoad && rect.right > 0;\n  }\n\n  filter() {\n    Object.keys(this.options.filter).forEach(key => {\n      this.options.filter[key](this, this.options);\n    });\n  }\n\n  renderLoading(cb) {\n    this.state.loading = true;\n    loadImageAsync({\n      src: this.loading,\n      cors: this.cors\n    }, () => {\n      this.render(\"loading\", false);\n      this.state.loading = false;\n      cb();\n    }, () => {\n      cb();\n      this.state.loading = false;\n      if (process.env.NODE_ENV !== \"production\" && !this.options.silent) console.warn(`[@vant/lazyload] load failed with loading image(${this.loading})`);\n    });\n  }\n\n  load(onFinish = noop) {\n    if (this.attempt > this.options.attempt - 1 && this.state.error) {\n      if (process.env.NODE_ENV !== \"production\" && !this.options.silent) {\n        console.log(`[@vant/lazyload] ${this.src} tried too more than ${this.options.attempt} times`);\n      }\n\n      onFinish();\n      return;\n    }\n\n    if (this.state.rendered && this.state.loaded) return;\n\n    if (this.imageCache.has(this.src)) {\n      this.state.loaded = true;\n      this.render(\"loaded\", true);\n      this.state.rendered = true;\n      return onFinish();\n    }\n\n    this.renderLoading(() => {\n      var _a, _b;\n\n      this.attempt++;\n      (_b = (_a = this.options.adapter).beforeLoad) == null ? void 0 : _b.call(_a, this, this.options);\n      this.record(\"loadStart\");\n      loadImageAsync({\n        src: this.src,\n        cors: this.cors\n      }, data => {\n        this.naturalHeight = data.naturalHeight;\n        this.naturalWidth = data.naturalWidth;\n        this.state.loaded = true;\n        this.state.error = false;\n        this.record(\"loadEnd\");\n        this.render(\"loaded\", false);\n        this.state.rendered = true;\n        this.imageCache.add(this.src);\n        onFinish();\n      }, err => {\n        !this.options.silent && console.error(err);\n        this.state.error = true;\n        this.state.loaded = false;\n        this.render(\"error\", false);\n      });\n    });\n  }\n\n  render(state, cache) {\n    this.elRenderer(this, state, cache);\n  }\n\n  performance() {\n    let state = \"loading\";\n    let time = 0;\n\n    if (this.state.loaded) {\n      state = \"loaded\";\n      time = (this.performanceData.loadEnd - this.performanceData.loadStart) / 1e3;\n    }\n\n    if (this.state.error) state = \"error\";\n    return {\n      src: this.src,\n      state,\n      time\n    };\n  }\n\n  $destroy() {\n    this.el = null;\n    this.src = null;\n    this.error = null;\n    this.loading = null;\n    this.bindType = null;\n    this.attempt = 0;\n  }\n\n}\n\nexport { ReactiveListener as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/lazyload/vue-lazyload/listener.js"],"names":["useRect","loadImageAsync","noop","ReactiveListener","constructor","el","src","error","loading","bindType","$parent","options","cors","elRenderer","imageCache","attempt","naturalHeight","naturalWidth","performanceData","loadStart","loadEnd","filter","initState","render","dataset","setAttribute","state","loaded","rendered","record","event","Date","now","update","oldSrc","checkInView","rect","top","window","innerHeight","preLoad","bottom","preLoadTop","left","innerWidth","right","Object","keys","forEach","key","renderLoading","cb","process","env","NODE_ENV","silent","console","warn","load","onFinish","log","has","_a","_b","adapter","beforeLoad","call","data","add","err","cache","performance","time","$destroy","default"],"mappings":"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","sourcesContent":["import { useRect } from \"@vant/use\";\nimport { loadImageAsync } from \"./util\";\nimport { noop } from \"../../utils\";\nclass ReactiveListener {\n  constructor({\n    el,\n    src,\n    error,\n    loading,\n    bindType,\n    $parent,\n    options,\n    cors,\n    elRenderer,\n    imageCache\n  }) {\n    this.el = el;\n    this.src = src;\n    this.error = error;\n    this.loading = loading;\n    this.bindType = bindType;\n    this.attempt = 0;\n    this.cors = cors;\n    this.naturalHeight = 0;\n    this.naturalWidth = 0;\n    this.options = options;\n    this.$parent = $parent;\n    this.elRenderer = elRenderer;\n    this.imageCache = imageCache;\n    this.performanceData = {\n      loadStart: 0,\n      loadEnd: 0\n    };\n    this.filter();\n    this.initState();\n    this.render(\"loading\", false);\n  }\n  initState() {\n    if (\"dataset\" in this.el) {\n      this.el.dataset.src = this.src;\n    } else {\n      this.el.setAttribute(\"data-src\", this.src);\n    }\n    this.state = {\n      loading: false,\n      error: false,\n      loaded: false,\n      rendered: false\n    };\n  }\n  record(event) {\n    this.performanceData[event] = Date.now();\n  }\n  update({ src, loading, error }) {\n    const oldSrc = this.src;\n    this.src = src;\n    this.loading = loading;\n    this.error = error;\n    this.filter();\n    if (oldSrc !== this.src) {\n      this.attempt = 0;\n      this.initState();\n    }\n  }\n  checkInView() {\n    const rect = useRect(this.el);\n    return rect.top < window.innerHeight * this.options.preLoad && rect.bottom > this.options.preLoadTop && rect.left < window.innerWidth * this.options.preLoad && rect.right > 0;\n  }\n  filter() {\n    Object.keys(this.options.filter).forEach((key) => {\n      this.options.filter[key](this, this.options);\n    });\n  }\n  renderLoading(cb) {\n    this.state.loading = true;\n    loadImageAsync({\n      src: this.loading,\n      cors: this.cors\n    }, () => {\n      this.render(\"loading\", false);\n      this.state.loading = false;\n      cb();\n    }, () => {\n      cb();\n      this.state.loading = false;\n      if (process.env.NODE_ENV !== \"production\" && !this.options.silent)\n        console.warn(`[@vant/lazyload] load failed with loading image(${this.loading})`);\n    });\n  }\n  load(onFinish = noop) {\n    if (this.attempt > this.options.attempt - 1 && this.state.error) {\n      if (process.env.NODE_ENV !== \"production\" && !this.options.silent) {\n        console.log(`[@vant/lazyload] ${this.src} tried too more than ${this.options.attempt} times`);\n      }\n      onFinish();\n      return;\n    }\n    if (this.state.rendered && this.state.loaded)\n      return;\n    if (this.imageCache.has(this.src)) {\n      this.state.loaded = true;\n      this.render(\"loaded\", true);\n      this.state.rendered = true;\n      return onFinish();\n    }\n    this.renderLoading(() => {\n      var _a, _b;\n      this.attempt++;\n      (_b = (_a = this.options.adapter).beforeLoad) == null ? void 0 : _b.call(_a, this, this.options);\n      this.record(\"loadStart\");\n      loadImageAsync({\n        src: this.src,\n        cors: this.cors\n      }, (data) => {\n        this.naturalHeight = data.naturalHeight;\n        this.naturalWidth = data.naturalWidth;\n        this.state.loaded = true;\n        this.state.error = false;\n        this.record(\"loadEnd\");\n        this.render(\"loaded\", false);\n        this.state.rendered = true;\n        this.imageCache.add(this.src);\n        onFinish();\n      }, (err) => {\n        !this.options.silent && console.error(err);\n        this.state.error = true;\n        this.state.loaded = false;\n        this.render(\"error\", false);\n      });\n    });\n  }\n  render(state, cache) {\n    this.elRenderer(this, state, cache);\n  }\n  performance() {\n    let state = \"loading\";\n    let time = 0;\n    if (this.state.loaded) {\n      state = \"loaded\";\n      time = (this.performanceData.loadEnd - this.performanceData.loadStart) / 1e3;\n    }\n    if (this.state.error)\n      state = \"error\";\n    return {\n      src: this.src,\n      state,\n      time\n    };\n  }\n  $destroy() {\n    this.el = null;\n    this.src = null;\n    this.error = null;\n    this.loading = null;\n    this.bindType = null;\n    this.attempt = 0;\n  }\n}\nexport {\n  ReactiveListener as default\n};\n"]},"metadata":{},"sourceType":"module"}