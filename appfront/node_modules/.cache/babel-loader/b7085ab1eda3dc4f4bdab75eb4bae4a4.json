{"ast":null,"code":"import { defineComponent, h, provide } from 'vue';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport XEUtils from 'xe-utils';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n  name: 'VxeCheckboxGroup',\n  props: {\n    modelValue: Array,\n    disabled: Boolean,\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.checkbox.size || GlobalConfig.size;\n      }\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var $xecheckboxgroup = {\n      xID: xID,\n      props: props,\n      context: context\n    };\n    useSize(props);\n    var checkboxGroupMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $checkboxGroup: $xecheckboxgroup,\n          $event: evnt\n        }, params));\n      }\n    };\n    var checkboxGroupPrivateMethods = {\n      handleChecked: function (params, evnt) {\n        var checked = params.checked,\n            label = params.label;\n        var checklist = props.modelValue || [];\n        var checkIndex = checklist.indexOf(label);\n\n        if (checked) {\n          if (checkIndex === -1) {\n            checklist.push(label);\n          }\n        } else {\n          checklist.splice(checkIndex, 1);\n        }\n\n        emit('update:modelValue', checklist);\n        $xecheckboxgroup.dispatchEvent('change', Object.assign({\n          checklist: checklist\n        }, params), evnt);\n      }\n    };\n    Object.assign($xecheckboxgroup, checkboxGroupMethods, checkboxGroupPrivateMethods);\n\n    var renderVN = function () {\n      return h('div', {\n        class: 'vxe-checkbox-group'\n      }, slots.default ? slots.default({}) : []);\n    };\n\n    $xecheckboxgroup.renderVN = renderVN;\n    provide('$xecheckboxgroup', $xecheckboxgroup);\n    return renderVN;\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/checkbox/src/group.js"],"names":["defineComponent","h","provide","GlobalConfig","XEUtils","useSize","name","props","modelValue","Array","disabled","Boolean","size","type","String","default","checkbox","emits","setup","context","slots","emit","xID","uniqueId","$xecheckboxgroup","checkboxGroupMethods","dispatchEvent","params","evnt","Object","assign","$checkboxGroup","$event","checkboxGroupPrivateMethods","handleChecked","checked","label","checklist","checkIndex","indexOf","push","splice","renderVN","class"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,CAA1B,EAA6BC,OAA7B,QAA4C,KAA5C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,eAAeL,eAAe,CAAC;AAC3BM,EAAAA,IAAI,EAAE,kBADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAEC,KADT;AAEHC,IAAAA,QAAQ,EAAEC,OAFP;AAGHC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAEC,MAAR;AAAgBC,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAOZ,YAAY,CAACa,QAAb,CAAsBJ,IAAtB,IAA8BT,YAAY,CAACS,IAAlD;AAAyD;AAAhG;AAHH,GAFoB;AAO3BK,EAAAA,KAAK,EAAE,CACH,mBADG,EAEH,QAFG,CAPoB;AAW3BC,EAAAA,KAAK,EAAE,UAAUX,KAAV,EAAiBY,OAAjB,EAA0B;AAC7B,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,QAA2BC,IAAI,GAAGF,OAAO,CAACE,IAA1C;AACA,QAAIC,GAAG,GAAGlB,OAAO,CAACmB,QAAR,EAAV;AACA,QAAIC,gBAAgB,GAAG;AACnBF,MAAAA,GAAG,EAAEA,GADc;AAEnBf,MAAAA,KAAK,EAAEA,KAFY;AAGnBY,MAAAA,OAAO,EAAEA;AAHU,KAAvB;AAKAd,IAAAA,OAAO,CAACE,KAAD,CAAP;AACA,QAAIkB,oBAAoB,GAAG;AACvBC,MAAAA,aAAa,EAAE,UAAUb,IAAV,EAAgBc,MAAhB,EAAwBC,IAAxB,EAA8B;AACzCP,QAAAA,IAAI,CAACR,IAAD,EAAOgB,MAAM,CAACC,MAAP,CAAc;AAAEC,UAAAA,cAAc,EAAEP,gBAAlB;AAAoCQ,UAAAA,MAAM,EAAEJ;AAA5C,SAAd,EAAkED,MAAlE,CAAP,CAAJ;AACH;AAHsB,KAA3B;AAKA,QAAIM,2BAA2B,GAAG;AAC9BC,MAAAA,aAAa,EAAE,UAAUP,MAAV,EAAkBC,IAAlB,EAAwB;AACnC,YAAIO,OAAO,GAAGR,MAAM,CAACQ,OAArB;AAAA,YAA8BC,KAAK,GAAGT,MAAM,CAACS,KAA7C;AACA,YAAIC,SAAS,GAAG9B,KAAK,CAACC,UAAN,IAAoB,EAApC;AACA,YAAI8B,UAAU,GAAGD,SAAS,CAACE,OAAV,CAAkBH,KAAlB,CAAjB;;AACA,YAAID,OAAJ,EAAa;AACT,cAAIG,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnBD,YAAAA,SAAS,CAACG,IAAV,CAAeJ,KAAf;AACH;AACJ,SAJD,MAKK;AACDC,UAAAA,SAAS,CAACI,MAAV,CAAiBH,UAAjB,EAA6B,CAA7B;AACH;;AACDjB,QAAAA,IAAI,CAAC,mBAAD,EAAsBgB,SAAtB,CAAJ;AACAb,QAAAA,gBAAgB,CAACE,aAAjB,CAA+B,QAA/B,EAAyCG,MAAM,CAACC,MAAP,CAAc;AAAEO,UAAAA,SAAS,EAAEA;AAAb,SAAd,EAAwCV,MAAxC,CAAzC,EAA0FC,IAA1F;AACH;AAf6B,KAAlC;AAiBAC,IAAAA,MAAM,CAACC,MAAP,CAAcN,gBAAd,EAAgCC,oBAAhC,EAAsDQ,2BAAtD;;AACA,QAAIS,QAAQ,GAAG,YAAY;AACvB,aAAOzC,CAAC,CAAC,KAAD,EAAQ;AACZ0C,QAAAA,KAAK,EAAE;AADK,OAAR,EAELvB,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,CAAc,EAAd,CAAhB,GAAoC,EAF/B,CAAR;AAGH,KAJD;;AAKAS,IAAAA,gBAAgB,CAACkB,QAAjB,GAA4BA,QAA5B;AACAxC,IAAAA,OAAO,CAAC,kBAAD,EAAqBsB,gBAArB,CAAP;AACA,WAAOkB,QAAP;AACH;AAnD0B,CAAD,CAA9B","sourcesContent":["import { defineComponent, h, provide } from 'vue';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport XEUtils from 'xe-utils';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n    name: 'VxeCheckboxGroup',\n    props: {\n        modelValue: Array,\n        disabled: Boolean,\n        size: { type: String, default: function () { return GlobalConfig.checkbox.size || GlobalConfig.size; } }\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var $xecheckboxgroup = {\n            xID: xID,\n            props: props,\n            context: context\n        };\n        useSize(props);\n        var checkboxGroupMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $checkboxGroup: $xecheckboxgroup, $event: evnt }, params));\n            }\n        };\n        var checkboxGroupPrivateMethods = {\n            handleChecked: function (params, evnt) {\n                var checked = params.checked, label = params.label;\n                var checklist = props.modelValue || [];\n                var checkIndex = checklist.indexOf(label);\n                if (checked) {\n                    if (checkIndex === -1) {\n                        checklist.push(label);\n                    }\n                }\n                else {\n                    checklist.splice(checkIndex, 1);\n                }\n                emit('update:modelValue', checklist);\n                $xecheckboxgroup.dispatchEvent('change', Object.assign({ checklist: checklist }, params), evnt);\n            }\n        };\n        Object.assign($xecheckboxgroup, checkboxGroupMethods, checkboxGroupPrivateMethods);\n        var renderVN = function () {\n            return h('div', {\n                class: 'vxe-checkbox-group'\n            }, slots.default ? slots.default({}) : []);\n        };\n        $xecheckboxgroup.renderVN = renderVN;\n        provide('$xecheckboxgroup', $xecheckboxgroup);\n        return renderVN;\n    }\n});\n"]},"metadata":{},"sourceType":"module"}