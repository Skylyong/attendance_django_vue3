{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"居左\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"居中\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"居右\");\n\nexport function render(_ctx, _cache) {\n  const _component_vxe_button = _resolveComponent(\"vxe-button\");\n\n  const _component_vxe_toolbar = _resolveComponent(\"vxe-toolbar\");\n\n  const _component_vxe_column = _resolveComponent(\"vxe-column\");\n\n  const _component_vxe_table = _resolveComponent(\"vxe-table\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_vxe_toolbar, null, {\n    buttons: _withCtx(() => [_createVNode(_component_vxe_button, {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.allAlign = 'left')\n    }, {\n      default: _withCtx(() => [_hoisted_1]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_vxe_button, {\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.allAlign = 'center')\n    }, {\n      default: _withCtx(() => [_hoisted_2]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_vxe_button, {\n      onClick: _cache[2] || (_cache[2] = $event => _ctx.allAlign = 'right')\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_vxe_table, {\n    align: _ctx.allAlign,\n    data: _ctx.tableData1\n  }, {\n    default: _withCtx(() => [_createVNode(_component_vxe_column, {\n      type: \"seq\",\n      width: \"60\"\n    }), _createVNode(_component_vxe_column, {\n      field: \"name\",\n      title: \"Name\"\n    }), _createVNode(_component_vxe_column, {\n      field: \"sex\",\n      title: \"Sex\"\n    }), _createVNode(_component_vxe_column, {\n      field: \"age\",\n      title: \"Age\"\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"align\", \"data\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;iDAImD;;iDACE;;iDACD;;;;;;;;;;;6DAJ/CA,aAMiBC,sBANjB,EAMiB,IANjB,EAMiB;AALDC,WAAO,WAChB,MAAsD,CAAtDF,aAAsDG,qBAAtD,EAAsD;AAAzCC,aAAK,sCAAEC,gBAAQ,MAAV;AAAoC,KAAtD;wBAAuC,MAAE;;;;KAAzC,CAAsD,EACtDL,aAAwDG,qBAAxD,EAAwD;AAA3CC,aAAK,sCAAEC,gBAAQ,QAAV;AAAsC,KAAxD;wBAAyC,MAAE;;;;KAA3C,CADsD,EAEtDL,aAAuDG,qBAAvD,EAAuD;AAA1CC,aAAK,sCAAEC,gBAAQ,OAAV;AAAqC,KAAvD;wBAAwC,MAAE;;;;KAA1C,CAFsD,CADtC,CAKN;;;;AAAA,GANjB,GAQGL,aAOYM,oBAPZ,EAOY;AANTC,SAAK,EAAEF,aAME;AALTG,QAAI,EAAEH;AAKG,GAPZ;sBAGE,MAA+C,CAA/CL,aAA+CS,qBAA/C,EAA+C;AAAnCC,UAAI,EAAC,KAA8B;AAAxBC,WAAK,EAAC;AAAkB,KAA/C,CAA+C,EAC/CX,aAAmDS,qBAAnD,EAAmD;AAAvCG,WAAK,EAAC,MAAiC;AAA1BC,WAAK,EAAC;AAAoB,KAAnD,CAD+C,EAE/Cb,aAAiDS,qBAAjD,EAAiD;AAArCG,WAAK,EAAC,KAA+B;AAAzBC,WAAK,EAAC;AAAmB,KAAjD,CAF+C,EAG/Cb,aAAiDS,qBAAjD,EAAiD;AAArCG,WAAK,EAAC,KAA+B;AAAzBC,WAAK,EAAC;AAAmB,KAAjD,CAH+C;;;;GAHjD;;AAAA","names":["_createVNode","_component_vxe_toolbar","buttons","_component_vxe_button","onClick","_ctx","_component_vxe_table","align","data","_component_vxe_column","type","width","field","title"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n  \n     <vxe-toolbar>\n          <template #buttons>\n            <vxe-button @click=\"allAlign = 'left'\">居左</vxe-button>\n            <vxe-button @click=\"allAlign = 'center'\">居中</vxe-button>\n            <vxe-button @click=\"allAlign = 'right'\">居右</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          :align=\"allAlign\"\n          :data=\"tableData1\">\n          <vxe-column type=\"seq\" width=\"60\"></vxe-column>\n          <vxe-column field=\"name\" title=\"Name\"></vxe-column>\n          <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>\n          <vxe-column field=\"age\" title=\"Age\"></vxe-column>\n        </vxe-table>\n        \n</template>\n\n<script>\n\n\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VXETable, VxeTableInstance, VxeColumnPropTypes, VxeFormPropTypes, VxeFormItemPropTypes, VxeTableEvents } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const demo1 = reactive({\n              submitLoading: false,\n              tableData: [] as any[],\n              selectRow: null,\n              showEdit: false,\n              formData: {\n                name: '',\n                nickname: '',\n                role: '',\n                sex: '',\n                age: '',\n                num: '',\n                checkedList: [],\n                flag1: '',\n                date3: '',\n                address: ''\n              },\n              sexList: [\n                { label: '女', value: '0' },\n                { label: '男', value: '1' }\n              ],\n              formRules: {\n                name: [\n                  { required: true, message: '请输入名称' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符' }\n                ],\n                nickname: [\n                  { required: true, message: '请输入昵称' }\n                ],\n                sex: [\n                  { required: true, message: '请选择性别' }\n                ]\n              } as VxeFormPropTypes.Rules\n            })\n\n            const xTable = ref({} as VxeTableInstance)\n\n            const formatterSex: VxeColumnPropTypes.Formatter = ({ cellValue }) => {\n              const item = demo1.sexList.find(item => item.value === cellValue)\n              return item ? item.label : ''\n            }\n\n            const visibleMethod: VxeFormItemPropTypes.VisibleMethod = ({ data }) => {\n              return data.flag1 === 'Y'\n            }\n\n            const insertEvent = () => {\n              demo1.formData = {\n                name: '',\n                nickname: '',\n                role: '',\n                sex: '',\n                age: '',\n                num: '',\n                checkedList: [],\n                flag1: '',\n                date3: '',\n                address: ''\n              }\n              demo1.selectRow = null\n              demo1.showEdit = true\n            }\n\n            const editEvent = (row: any) => {\n              demo1.formData = {\n                name: row.name,\n                nickname: row.nickname,\n                role: row.role,\n                sex: row.sex,\n                age: row.age,\n                num: row.num,\n                checkedList: row.checkedList,\n                flag1: row.flag1,\n                date3: row.date3,\n                address: row.address\n              }\n              demo1.selectRow = row\n              demo1.showEdit = true\n            }\n\n            const cellDBLClickEvent: VxeTableEvents.CellDblclick = ({ row }) => {\n              editEvent(row)\n            }\n\n            const removeEvent = async (row: any) => {\n              const type = await VXETable.modal.confirm('您确定要删除该数据?')\n              if (type === 'confirm') {\n                const $table = xTable.value\n                $table.remove(row)\n              }\n            }\n\n            const submitEvent = () => {\n              demo1.submitLoading = true\n              setTimeout(() => {\n                const $table = xTable.value\n                demo1.submitLoading = false\n                demo1.showEdit = false\n                if (demo1.selectRow) {\n                  VXETable.modal.message({ content: '保存成功', status: 'success' })\n                  Object.assign(demo1.selectRow, demo1.formData)\n                } else {\n                  VXETable.modal.message({ content: '新增成功', status: 'success' })\n                  $table.insert(demo1.formData)\n                }\n              }, 500)\n            }\n            setTimeout(() => {\n              const list = [\n                { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '0', sex2: ['0'], num1: 40, age: 28, address: 'Shenzhen', date12: '', date13: '' },\n                { id: 10002, name: 'Test2', nickname: 'T2', role: 'Designer', sex: '1', sex2: ['0', '1'], num1: 20, age: 22, address: 'Guangzhou', date12: '', date13: '2020-08-20' },\n                { id: 10003, name: 'Test3', nickname: 'T3', role: 'Test', sex: '0', sex2: ['1'], num1: 200, age: 32, address: 'Shanghai', date12: '2020-09-10', date13: '' },\n                { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '1', sex2: ['1'], num1: 30, age: 23, address: 'Shenzhen', date12: '', date13: '2020-12-04' }\n              ]\n            }, 50)\n\n            return {\n              demo1,\n              xTable,\n              formatterSex,\n              visibleMethod,\n              cellDBLClickEvent,\n              insertEvent,\n              editEvent,\n              removeEvent,\n              submitEvent\n            }\n          }\n        })\n        </script>"]},"metadata":{},"sourceType":"module"}