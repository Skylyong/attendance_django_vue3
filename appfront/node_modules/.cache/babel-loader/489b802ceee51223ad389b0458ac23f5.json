{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent, getCurrentInstance } from \"vue\";\nimport { createNamespace, extend, isObject, numericProp } from \"../utils\";\nimport { TABBAR_KEY } from \"../tabbar/Tabbar\";\nimport { useParent } from \"@vant/use\";\nimport { routeProps, useRoute } from \"../composables/use-route\";\nimport { Icon } from \"../icon\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"tabbar-item\");\nconst tabbarItemProps = extend({}, routeProps, {\n  dot: Boolean,\n  icon: String,\n  name: numericProp,\n  badge: numericProp,\n  badgeProps: Object,\n  iconPrefix: String\n});\nvar stdin_default = defineComponent({\n  name,\n  props: tabbarItemProps,\n  emits: [\"click\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const route = useRoute();\n    const vm = getCurrentInstance().proxy;\n    const {\n      parent,\n      index\n    } = useParent(TABBAR_KEY);\n\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <TabbarItem> must be a child component of <Tabbar>.\");\n      }\n\n      return;\n    }\n\n    const active = computed(() => {\n      var _a;\n\n      const {\n        route: route2,\n        modelValue\n      } = parent.props;\n\n      if (route2 && \"$route\" in vm) {\n        const {\n          $route\n        } = vm;\n        const {\n          to\n        } = props;\n        const config = isObject(to) ? to : {\n          path: to\n        };\n        return !!$route.matched.find(val => {\n          const pathMatched = \"path\" in config && config.path === val.path;\n          const nameMatched = \"name\" in config && config.name === val.name;\n          return pathMatched || nameMatched;\n        });\n      }\n\n      return ((_a = props.name) != null ? _a : index.value) === modelValue;\n    });\n\n    const onClick = event => {\n      var _a;\n\n      if (!active.value) {\n        parent.setActive((_a = props.name) != null ? _a : index.value, route);\n      }\n\n      emit(\"click\", event);\n    };\n\n    const renderIcon = () => {\n      if (slots.icon) {\n        return slots.icon({\n          active: active.value\n        });\n      }\n\n      if (props.icon) {\n        return _createVNode(Icon, {\n          \"name\": props.icon,\n          \"classPrefix\": props.iconPrefix\n        }, null);\n      }\n    };\n\n    return () => {\n      var _a;\n\n      const {\n        dot,\n        badge\n      } = props;\n      const {\n        activeColor,\n        inactiveColor\n      } = parent.props;\n      const color = active.value ? activeColor : inactiveColor;\n      return _createVNode(\"div\", {\n        \"role\": \"tab\",\n        \"class\": bem({\n          active: active.value\n        }),\n        \"style\": {\n          color\n        },\n        \"tabindex\": 0,\n        \"aria-selected\": active.value,\n        \"onClick\": onClick\n      }, [_createVNode(Badge, _mergeProps({\n        \"dot\": dot,\n        \"class\": bem(\"icon\"),\n        \"content\": badge\n      }, props.badgeProps), {\n        default: renderIcon\n      }), _createVNode(\"div\", {\n        \"class\": bem(\"text\")\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots, {\n        active: active.value\n      })])]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/tabbar-item/TabbarItem.js"],"names":["mergeProps","_mergeProps","createVNode","_createVNode","computed","defineComponent","getCurrentInstance","createNamespace","extend","isObject","numericProp","TABBAR_KEY","useParent","routeProps","useRoute","Icon","Badge","name","bem","tabbarItemProps","dot","Boolean","icon","String","badge","badgeProps","Object","iconPrefix","stdin_default","props","emits","setup","emit","slots","route","vm","proxy","parent","index","process","env","NODE_ENV","console","error","active","_a","route2","modelValue","$route","to","config","path","matched","find","val","pathMatched","nameMatched","value","onClick","event","setActive","renderIcon","activeColor","inactiveColor","color","default","call"],"mappings":"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","sourcesContent":["import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent, getCurrentInstance } from \"vue\";\nimport { createNamespace, extend, isObject, numericProp } from \"../utils\";\nimport { TABBAR_KEY } from \"../tabbar/Tabbar\";\nimport { useParent } from \"@vant/use\";\nimport { routeProps, useRoute } from \"../composables/use-route\";\nimport { Icon } from \"../icon\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"tabbar-item\");\nconst tabbarItemProps = extend({}, routeProps, {\n  dot: Boolean,\n  icon: String,\n  name: numericProp,\n  badge: numericProp,\n  badgeProps: Object,\n  iconPrefix: String\n});\nvar stdin_default = defineComponent({\n  name,\n  props: tabbarItemProps,\n  emits: [\"click\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const route = useRoute();\n    const vm = getCurrentInstance().proxy;\n    const {\n      parent,\n      index\n    } = useParent(TABBAR_KEY);\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <TabbarItem> must be a child component of <Tabbar>.\");\n      }\n      return;\n    }\n    const active = computed(() => {\n      var _a;\n      const {\n        route: route2,\n        modelValue\n      } = parent.props;\n      if (route2 && \"$route\" in vm) {\n        const {\n          $route\n        } = vm;\n        const {\n          to\n        } = props;\n        const config = isObject(to) ? to : {\n          path: to\n        };\n        return !!$route.matched.find((val) => {\n          const pathMatched = \"path\" in config && config.path === val.path;\n          const nameMatched = \"name\" in config && config.name === val.name;\n          return pathMatched || nameMatched;\n        });\n      }\n      return ((_a = props.name) != null ? _a : index.value) === modelValue;\n    });\n    const onClick = (event) => {\n      var _a;\n      if (!active.value) {\n        parent.setActive((_a = props.name) != null ? _a : index.value, route);\n      }\n      emit(\"click\", event);\n    };\n    const renderIcon = () => {\n      if (slots.icon) {\n        return slots.icon({\n          active: active.value\n        });\n      }\n      if (props.icon) {\n        return _createVNode(Icon, {\n          \"name\": props.icon,\n          \"classPrefix\": props.iconPrefix\n        }, null);\n      }\n    };\n    return () => {\n      var _a;\n      const {\n        dot,\n        badge\n      } = props;\n      const {\n        activeColor,\n        inactiveColor\n      } = parent.props;\n      const color = active.value ? activeColor : inactiveColor;\n      return _createVNode(\"div\", {\n        \"role\": \"tab\",\n        \"class\": bem({\n          active: active.value\n        }),\n        \"style\": {\n          color\n        },\n        \"tabindex\": 0,\n        \"aria-selected\": active.value,\n        \"onClick\": onClick\n      }, [_createVNode(Badge, _mergeProps({\n        \"dot\": dot,\n        \"class\": bem(\"icon\"),\n        \"content\": badge\n      }, props.badgeProps), {\n        default: renderIcon\n      }), _createVNode(\"div\", {\n        \"class\": bem(\"text\")\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots, {\n        active: active.value\n      })])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}