{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { BORDER, extend, addUnit, numericProp, createNamespace } from \"../utils\";\nimport { GRID_KEY } from \"../grid/Grid\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route\";\nimport { Icon } from \"../icon\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"grid-item\");\nconst gridItemProps = extend({}, routeProps, {\n  dot: Boolean,\n  text: String,\n  icon: String,\n  badge: numericProp,\n  iconColor: String,\n  iconPrefix: String,\n  badgeProps: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: gridItemProps,\n\n  setup(props, {\n    slots\n  }) {\n    const {\n      parent,\n      index\n    } = useParent(GRID_KEY);\n    const route = useRoute();\n\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <GridItem> must be a child component of <Grid>.\");\n      }\n\n      return;\n    }\n\n    const rootStyle = computed(() => {\n      const {\n        square,\n        gutter,\n        columnNum\n      } = parent.props;\n      const percent = `${100 / +columnNum}%`;\n      const style = {\n        flexBasis: percent\n      };\n\n      if (square) {\n        style.paddingTop = percent;\n      } else if (gutter) {\n        const gutterValue = addUnit(gutter);\n        style.paddingRight = gutterValue;\n\n        if (index.value >= columnNum) {\n          style.marginTop = gutterValue;\n        }\n      }\n\n      return style;\n    });\n    const contentStyle = computed(() => {\n      const {\n        square,\n        gutter\n      } = parent.props;\n\n      if (square && gutter) {\n        const gutterValue = addUnit(gutter);\n        return {\n          right: gutterValue,\n          bottom: gutterValue,\n          height: \"auto\"\n        };\n      }\n    });\n\n    const renderIcon = () => {\n      if (slots.icon) {\n        return _createVNode(Badge, _mergeProps({\n          \"dot\": props.dot,\n          \"content\": props.badge\n        }, props.badgeProps), {\n          default: slots.icon\n        });\n      }\n\n      if (props.icon) {\n        return _createVNode(Icon, {\n          \"dot\": props.dot,\n          \"name\": props.icon,\n          \"size\": parent.props.iconSize,\n          \"badge\": props.badge,\n          \"class\": bem(\"icon\"),\n          \"color\": props.iconColor,\n          \"badgeProps\": props.badgeProps,\n          \"classPrefix\": props.iconPrefix\n        }, null);\n      }\n    };\n\n    const renderText = () => {\n      if (slots.text) {\n        return slots.text();\n      }\n\n      if (props.text) {\n        return _createVNode(\"span\", {\n          \"class\": bem(\"text\")\n        }, [props.text]);\n      }\n    };\n\n    const renderContent = () => {\n      if (slots.default) {\n        return slots.default();\n      }\n\n      return [renderIcon(), renderText()];\n    };\n\n    return () => {\n      const {\n        center,\n        border,\n        square,\n        gutter,\n        reverse,\n        direction,\n        clickable\n      } = parent.props;\n      const classes = [bem(\"content\", [direction, {\n        center,\n        square,\n        reverse,\n        clickable,\n        surround: border && gutter\n      }]), {\n        [BORDER]: border\n      }];\n      return _createVNode(\"div\", {\n        \"class\": [bem({\n          square\n        })],\n        \"style\": rootStyle.value\n      }, [_createVNode(\"div\", {\n        \"role\": clickable ? \"button\" : void 0,\n        \"class\": classes,\n        \"style\": contentStyle.value,\n        \"tabindex\": clickable ? 0 : void 0,\n        \"onClick\": route\n      }, [renderContent()])]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/grid-item/GridItem.js"],"names":["createVNode","_createVNode","mergeProps","_mergeProps","computed","defineComponent","BORDER","extend","addUnit","numericProp","createNamespace","GRID_KEY","useParent","useRoute","routeProps","Icon","Badge","name","bem","gridItemProps","dot","Boolean","text","String","icon","badge","iconColor","iconPrefix","badgeProps","Object","stdin_default","props","setup","slots","parent","index","route","process","env","NODE_ENV","console","error","rootStyle","square","gutter","columnNum","percent","style","flexBasis","paddingTop","gutterValue","paddingRight","value","marginTop","contentStyle","right","bottom","height","renderIcon","default","iconSize","renderText","renderContent","center","border","reverse","direction","clickable","classes","surround"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { BORDER, extend, addUnit, numericProp, createNamespace } from \"../utils\";\nimport { GRID_KEY } from \"../grid/Grid\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route\";\nimport { Icon } from \"../icon\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"grid-item\");\nconst gridItemProps = extend({}, routeProps, {\n  dot: Boolean,\n  text: String,\n  icon: String,\n  badge: numericProp,\n  iconColor: String,\n  iconPrefix: String,\n  badgeProps: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: gridItemProps,\n  setup(props, {\n    slots\n  }) {\n    const {\n      parent,\n      index\n    } = useParent(GRID_KEY);\n    const route = useRoute();\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <GridItem> must be a child component of <Grid>.\");\n      }\n      return;\n    }\n    const rootStyle = computed(() => {\n      const {\n        square,\n        gutter,\n        columnNum\n      } = parent.props;\n      const percent = `${100 / +columnNum}%`;\n      const style = {\n        flexBasis: percent\n      };\n      if (square) {\n        style.paddingTop = percent;\n      } else if (gutter) {\n        const gutterValue = addUnit(gutter);\n        style.paddingRight = gutterValue;\n        if (index.value >= columnNum) {\n          style.marginTop = gutterValue;\n        }\n      }\n      return style;\n    });\n    const contentStyle = computed(() => {\n      const {\n        square,\n        gutter\n      } = parent.props;\n      if (square && gutter) {\n        const gutterValue = addUnit(gutter);\n        return {\n          right: gutterValue,\n          bottom: gutterValue,\n          height: \"auto\"\n        };\n      }\n    });\n    const renderIcon = () => {\n      if (slots.icon) {\n        return _createVNode(Badge, _mergeProps({\n          \"dot\": props.dot,\n          \"content\": props.badge\n        }, props.badgeProps), {\n          default: slots.icon\n        });\n      }\n      if (props.icon) {\n        return _createVNode(Icon, {\n          \"dot\": props.dot,\n          \"name\": props.icon,\n          \"size\": parent.props.iconSize,\n          \"badge\": props.badge,\n          \"class\": bem(\"icon\"),\n          \"color\": props.iconColor,\n          \"badgeProps\": props.badgeProps,\n          \"classPrefix\": props.iconPrefix\n        }, null);\n      }\n    };\n    const renderText = () => {\n      if (slots.text) {\n        return slots.text();\n      }\n      if (props.text) {\n        return _createVNode(\"span\", {\n          \"class\": bem(\"text\")\n        }, [props.text]);\n      }\n    };\n    const renderContent = () => {\n      if (slots.default) {\n        return slots.default();\n      }\n      return [renderIcon(), renderText()];\n    };\n    return () => {\n      const {\n        center,\n        border,\n        square,\n        gutter,\n        reverse,\n        direction,\n        clickable\n      } = parent.props;\n      const classes = [bem(\"content\", [direction, {\n        center,\n        square,\n        reverse,\n        clickable,\n        surround: border && gutter\n      }]), {\n        [BORDER]: border\n      }];\n      return _createVNode(\"div\", {\n        \"class\": [bem({\n          square\n        })],\n        \"style\": rootStyle.value\n      }, [_createVNode(\"div\", {\n        \"role\": clickable ? \"button\" : void 0,\n        \"class\": classes,\n        \"style\": contentStyle.value,\n        \"tabindex\": clickable ? 0 : void 0,\n        \"onClick\": route\n      }, [renderContent()])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}