{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withCtx as _withCtx, toHandlers as _toHandlers, mergeProps as _mergeProps } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vxe_button = _resolveComponent(\"vxe-button\");\n\n  const _component_vxe_input = _resolveComponent(\"vxe-input\");\n\n  const _component_vxe_option = _resolveComponent(\"vxe-option\");\n\n  const _component_vxe_select = _resolveComponent(\"vxe-select\");\n\n  const _component_vxe_grid = _resolveComponent(\"vxe-grid\");\n\n  return _openBlock(), _createBlock(_component_vxe_grid, _mergeProps({\n    ref: \"xGrid\"\n  }, _ctx.gridOptions, _toHandlers(_ctx.gridEvents)), {\n    operate: _withCtx(({\n      row\n    }) => [_ctx.$refs.xGrid.isActiveByRow(row) ? (_openBlock(), _createBlock(_component_vxe_button, {\n      key: 0,\n      icon: \"fa fa-save\",\n      status: \"primary\",\n      title: \"保存\",\n      circle: \"\",\n      onClick: $event => _ctx.saveRowEvent(row)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])) : (_openBlock(), _createBlock(_component_vxe_button, {\n      key: 1,\n      icon: \"fa fa-edit\",\n      title: \"编辑\",\n      circle: \"\",\n      onClick: $event => _ctx.editRowEvent(row)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])), _createVNode(_component_vxe_button, {\n      icon: \"fa fa-trash\",\n      title: \"删除\",\n      circle: \"\",\n      onClick: $event => _ctx.removeRowEvent(row)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_vxe_button, {\n      icon: \"fa fa-eye\",\n      title: \"查看\",\n      circle: \"\"\n    }), _createVNode(_component_vxe_button, {\n      icon: \"fa fa-gear\",\n      title: \"设置\",\n      circle: \"\"\n    })]),\n    name_edit: _withCtx(({\n      row\n    }) => [_createVNode(_component_vxe_input, {\n      modelValue: row.name,\n      \"onUpdate:modelValue\": $event => row.name = $event\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onUpdate:modelValue\"])]),\n    nickname_edit: _withCtx(({\n      row\n    }) => [_createVNode(_component_vxe_input, {\n      modelValue: row.nickname,\n      \"onUpdate:modelValue\": $event => row.nickname = $event\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onUpdate:modelValue\"])]),\n    sex_default: _withCtx(({\n      row\n    }) => [_createElementVNode(\"span\", null, _toDisplayString(_ctx.formatSex(row.sex)), 1\n    /* TEXT */\n    )]),\n    sex_edit: _withCtx(({\n      row\n    }) => [_createVNode(_component_vxe_select, {\n      modelValue: row.sex,\n      \"onUpdate:modelValue\": $event => row.sex = $event,\n      transfer: \"\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sexList1, item => {\n        return _openBlock(), _createBlock(_component_vxe_option, {\n          key: item.value,\n          value: item.value,\n          label: item.label\n        }, null, 8\n        /* PROPS */\n        , [\"value\", \"label\"]);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"modelValue\", \"onUpdate:modelValue\"])]),\n    role_edit: _withCtx(({\n      row\n    }) => [_createVNode(_component_vxe_input, {\n      modelValue: row.role,\n      \"onUpdate:modelValue\": $event => row.role = $event\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onUpdate:modelValue\"])]),\n    describe_edit: _withCtx(({\n      row\n    }) => [_createVNode(_component_vxe_input, {\n      modelValue: row.describe,\n      \"onUpdate:modelValue\": $event => row.describe = $event\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onUpdate:modelValue\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 16\n  /* FULL_PROPS */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createBlock","_component_vxe_grid","ref","_ctx","_toHandlers","operate","row","xGrid","isActiveByRow","_component_vxe_button","icon","status","title","circle","onClick","_createVNode","name_edit","_component_vxe_input","name","$event","nickname_edit","nickname","sex_default","_createElementVNode","_toDisplayString","sex","sex_edit","_component_vxe_select","transfer","_createElementBlock","_Fragment","_renderList","item","_component_vxe_option","key","value","label","role_edit","role","describe_edit","describe"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n       <vxe-grid ref=\"xGrid\" v-bind=\"gridOptions\" v-on=\"gridEvents\">\n          <template #operate=\"{ row }\">\n            <template v-if=\"$refs.xGrid.isActiveByRow(row)\">\n              <vxe-button icon=\"fa fa-save\" status=\"primary\" title=\"保存\" circle @click=\"saveRowEvent(row)\"></vxe-button>\n            </template>\n            <template v-else>\n              <vxe-button icon=\"fa fa-edit\" title=\"编辑\" circle @click=\"editRowEvent(row)\"></vxe-button>\n            </template>\n            <vxe-button icon=\"fa fa-trash\" title=\"删除\" circle @click=\"removeRowEvent(row)\"></vxe-button>\n            <vxe-button icon=\"fa fa-eye\" title=\"查看\" circle></vxe-button>\n            <vxe-button icon=\"fa fa-gear\" title=\"设置\" circle></vxe-button>\n          </template>\n\n          <template #name_edit=\"{ row }\">\n            <vxe-input v-model=\"row.name\"></vxe-input>\n          </template>\n          <template #nickname_edit=\"{ row }\">\n            <vxe-input v-model=\"row.nickname\"></vxe-input>\n          </template>\n          <template #sex_default=\"{ row }\">\n            <span>{{ formatSex(row.sex) }}</span>\n          </template>\n          <template #sex_edit=\"{ row }\">\n            <vxe-select v-model=\"row.sex\" transfer>\n              <vxe-option v-for=\"item in sexList1\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></vxe-option>\n            </vxe-select>\n          </template>\n          <template #role_edit=\"{ row }\">\n            <vxe-input v-model=\"row.role\"></vxe-input>\n          </template>\n          <template #describe_edit=\"{ row }\">\n            <vxe-input v-model=\"row.describe\"></vxe-input>\n          </template>\n        </vxe-grid>\n        \n        \n</template>\n\n<script>\n  import { VXETable, VxeFormEvents, VxeFormPropTypes } from 'vxe-table'\n  import { defineComponent, onMounted, reactive, ref, computed } from 'vue'\n  import { useStore } from 'vuex'\n  import XEUtils from 'xe-utils'\n  import {VxeGridInstance, VxeGridListeners, VxeGridProps } from 'vxe-table'\n\n\n  export default defineComponent({\n    setup  () {\n      const tableData1 = ref([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' }\n            ])\n      const xGrid = ref()\n      const gridOptions = reactive<VxeGridProps>({\n        border: true,\n        keepSource: true,\n        showOverflow: true,\n        height: 530,\n        loading: false,\n        columnConfig: {\n          resizable: true\n        },\n        pagerConfig: {\n          total: 0,\n          currentPage: 1,\n          pageSize: 10,\n          pageSizes: [10, 20, 50, 100, 200, 500]\n        },\n        editConfig: {\n          trigger: 'manual',\n          mode: 'row',\n          showStatus: true,\n          icon: 'fa fa-file-text-o'\n        },\n        columns: [\n          { type: 'seq', width: 60 },\n          { type: 'checkbox', width: 50 },\n          { field: 'name', title: 'Name', editRender: { autofocus: '.vxe-input--inner' }, slots: { edit: 'name_edit' } },\n          { field: 'nickname', title: 'Nickname', editRender: { autofocus: '.vxe-input--inner' }, slots: { edit: 'nickname_edit' } },\n          { field: 'sex', title: 'Sex', editRender: {}, slots: { default: 'sex_default', edit: 'sex_edit' } },\n          { field: 'role', title: 'Role', editRender: {}, slots: { edit: 'role_edit' } },\n          { field: 'describe', title: 'Describe', showOverflow: true, editRender: {}, slots: { edit: 'describe_edit' } },\n          { title: '操作', width: 200, slots: { default: 'operate' } }\n        ],\n        data: []\n      })\n\n      const sexList1 = ref([\n        { value: '1', label: '男' },\n        { value: '0', label: '女' }\n      ])\n\n      const findList = () => {\n        gridOptions.loading = true\n        setTimeout(() => {\n          gridOptions.loading = false\n          if (gridOptions.pagerConfig) {\n            gridOptions.pagerConfig.total = 10\n          }\n          gridOptions.data = [\n            { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '1', age: 28, address: 'Shenzhen' },\n            { id: 10002, name: 'Test2', nickname: 'T2', role: 'Test', sex: '0', age: 22, address: 'Guangzhou' },\n            { id: 10003, name: 'Test3', nickname: 'T3', role: 'PM', sex: '1', age: 32, address: 'Shanghai' },\n            { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '0', age: 23, address: 'Shenzhen' },\n            { id: 10005, name: 'Test5', nickname: 'T5', role: 'Develop', sex: '0', age: 30, address: 'Shanghai' },\n            { id: 10006, name: 'Test6', nickname: 'T6', role: 'Develop', sex: '0', age: 27, address: 'Shanghai' },\n            { id: 10007, name: 'Test7', nickname: 'T7', role: 'Develop', sex: '1', age: 29, address: 'Shenzhen' },\n            { id: 10008, name: 'Test8', nickname: 'T8', role: 'Develop', sex: '0', age: 32, address: 'Shanghai' },\n            { id: 10009, name: 'Test9', nickname: 'T9', role: 'Develop', sex: '1', age: 30, address: 'Shenzhen' },\n            { id: 10010, name: 'Test10', nickname: 'T10', role: 'Develop', sex: '0', age: 34, address: 'Shanghai' }\n          ]\n        }, 300)\n      }\n\n      const gridEvents = {\n        pageChange ({ currentPage, pageSize }) {\n          if (gridOptions.pagerConfig) {\n            gridOptions.pagerConfig.currentPage = currentPage\n            gridOptions.pagerConfig.pageSize = pageSize\n          }\n          findList()\n        }\n      }\n\n      const formatSex = (value) => {\n        if (value === '1') {\n          return '男'\n        }\n        if (value === '0') {\n          return '女'\n        }\n        return ''\n      }\n\n      const editRowEvent = (row) => {\n        const $grid = xGrid.value\n        if ($grid) {\n          $grid.setActiveRow(row)\n        }\n      }\n\n      const saveRowEvent = async () => {\n        const $grid = xGrid.value\n        if ($grid) {\n          await $grid.clearActived()\n          gridOptions.loading = true\n          // 模拟异步保存\n          setTimeout(() => {\n            gridOptions.loading = false\n            VXETable.modal.message({ content: '保存成功！', status: 'success' })\n          }, 300)\n        }\n      }\n\n      const removeRowEvent = async (row) => {\n        const type = await VXETable.modal.confirm('您确定要删除该数据?')\n        const $grid = xGrid.value\n        if ($grid) {\n          if (type === 'confirm') {\n            await $grid.remove(row)\n          }\n        }\n      }\n\n      findList()\n\n      return {\n        tableData1,\n        xGrid,\n        sexList1,\n        gridOptions,\n        formatSex,\n        gridEvents,\n        editRowEvent,\n        saveRowEvent,\n        removeRowEvent\n      }\n      }\n    })\n</script>"]},"metadata":{},"sourceType":"module"}