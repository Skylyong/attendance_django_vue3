{"ast":null,"code":"import { defineComponent, h, ref, computed, Teleport, onUnmounted, reactive, nextTick, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getAbsolutePos, getEventTargetNode } from '../../tools/dom';\nimport { getFuncText, getLastZIndex, nextZIndex } from '../../tools/utils';\nimport { GlobalEvent } from '../../tools/event';\nexport default defineComponent({\n  name: 'VxeButton',\n  props: {\n    /**\n     * 按钮类型\n     */\n    type: String,\n    className: String,\n\n    /**\n     * 按钮尺寸\n     */\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.button.size || GlobalConfig.size;\n      }\n    },\n\n    /**\n     * 用来标识这一项\n     */\n    name: [String, Number],\n\n    /**\n     * 按钮内容\n     */\n    content: String,\n\n    /**\n     * 固定显示下拉面板的方向\n     */\n    placement: String,\n\n    /**\n     * 按钮状态\n     */\n    status: String,\n\n    /**\n     * 按钮的图标\n     */\n    icon: String,\n\n    /**\n     * 圆角边框\n     */\n    round: Boolean,\n\n    /**\n     * 圆角按钮\n     */\n    circle: Boolean,\n\n    /**\n     * 是否禁用\n     */\n    disabled: Boolean,\n\n    /**\n     * 是否加载中\n     */\n    loading: Boolean,\n\n    /**\n     * 在下拉面板关闭时销毁内容\n     */\n    destroyOnClose: Boolean,\n\n    /**\n     * 是否将弹框容器插入于 body 内\n     */\n    transfer: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.button.transfer;\n      }\n    }\n  },\n  emits: ['click', 'dropdown-click'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var computeSize = useSize(props);\n    var reactData = reactive({\n      inited: false,\n      showPanel: false,\n      animatVisible: false,\n      panelIndex: 0,\n      panelStyle: {},\n      panelPlacement: ''\n    });\n    var internalData = {\n      showTime: null\n    };\n    var refElem = ref();\n    var refButton = ref();\n    var refBtnPanel = ref();\n    var refMaps = {\n      refElem: refElem\n    };\n    var $xebutton = {\n      xID: xID,\n      props: props,\n      context: context,\n      reactData: reactData,\n      internalData: internalData,\n      getRefMaps: function () {\n        return refMaps;\n      }\n    };\n    var buttonMethods = {};\n    var computeIsFormBtn = computed(function () {\n      var type = props.type;\n\n      if (type) {\n        return ['submit', 'reset', 'button'].indexOf(type) > -1;\n      }\n\n      return false;\n    });\n    var computeBtnType = computed(function () {\n      var type = props.type;\n      return type && type === 'text' ? type : 'button';\n    });\n\n    var updateZindex = function () {\n      if (reactData.panelIndex < getLastZIndex()) {\n        reactData.panelIndex = nextZIndex();\n      }\n    };\n\n    var updatePlacement = function () {\n      return nextTick().then(function () {\n        var transfer = props.transfer,\n            placement = props.placement;\n        var panelIndex = reactData.panelIndex;\n        var targetElem = refButton.value;\n        var panelElem = refBtnPanel.value;\n\n        if (panelElem && targetElem) {\n          var targetHeight = targetElem.offsetHeight;\n          var targetWidth = targetElem.offsetWidth;\n          var panelHeight = panelElem.offsetHeight;\n          var panelWidth = panelElem.offsetWidth;\n          var marginSize = 5;\n          var panelStyle = {\n            zIndex: panelIndex\n          };\n\n          var _a = getAbsolutePos(targetElem),\n              top_1 = _a.top,\n              left = _a.left,\n              boundingTop = _a.boundingTop,\n              visibleHeight = _a.visibleHeight,\n              visibleWidth = _a.visibleWidth;\n\n          var panelPlacement = 'bottom';\n\n          if (transfer) {\n            var btnLeft = left + targetWidth - panelWidth;\n            var btnTop = top_1 + targetHeight;\n\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              btnTop = top_1 - panelHeight;\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (boundingTop + targetHeight + panelHeight + marginSize > visibleHeight) {\n                panelPlacement = 'top';\n                btnTop = top_1 - panelHeight;\n              } // 如果上面不够放，则向下（优先）\n\n\n              if (btnTop < marginSize) {\n                panelPlacement = 'bottom';\n                btnTop = top_1 + targetHeight;\n              }\n            } // 如果溢出右边\n\n\n            if (btnLeft + panelWidth + marginSize > visibleWidth) {\n              btnLeft -= btnLeft + panelWidth + marginSize - visibleWidth;\n            } // 如果溢出左边\n\n\n            if (btnLeft < marginSize) {\n              btnLeft = marginSize;\n            }\n\n            Object.assign(panelStyle, {\n              left: btnLeft + \"px\",\n              right: 'auto',\n              top: btnTop + \"px\",\n              minWidth: targetWidth + \"px\"\n            });\n          } else {\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              panelStyle.bottom = targetHeight + \"px\";\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                // 如果上面不够放，则向下（优先）\n                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                  panelPlacement = 'top';\n                  panelStyle.bottom = targetHeight + \"px\";\n                }\n              }\n            }\n          }\n\n          reactData.panelStyle = panelStyle;\n          reactData.panelPlacement = panelPlacement;\n          return nextTick();\n        }\n      });\n    };\n\n    var clickEvent = function (evnt) {\n      buttonMethods.dispatchEvent('click', {\n        $event: evnt\n      }, evnt);\n    };\n\n    var mousedownDropdownEvent = function (evnt) {\n      var isLeftBtn = evnt.button === 0;\n\n      if (isLeftBtn) {\n        evnt.stopPropagation();\n      }\n    };\n\n    var clickDropdownEvent = function (evnt) {\n      var dropdownElem = evnt.currentTarget;\n      var panelElem = refBtnPanel.value;\n\n      var _a = getEventTargetNode(evnt, dropdownElem, 'vxe-button'),\n          flag = _a.flag,\n          targetElem = _a.targetElem;\n\n      if (flag) {\n        if (panelElem) {\n          panelElem.dataset.active = 'N';\n        }\n\n        reactData.showPanel = false;\n        setTimeout(function () {\n          if (!panelElem || panelElem.dataset.active !== 'Y') {\n            reactData.animatVisible = false;\n          }\n        }, 350);\n        buttonMethods.dispatchEvent('dropdown-click', {\n          name: targetElem.getAttribute('name'),\n          $event: evnt\n        }, evnt);\n      }\n    };\n\n    var mouseenterEvent = function () {\n      var panelElem = refBtnPanel.value;\n\n      if (panelElem) {\n        panelElem.dataset.active = 'Y';\n        reactData.animatVisible = true;\n        setTimeout(function () {\n          if (panelElem.dataset.active === 'Y') {\n            reactData.showPanel = true;\n            updateZindex();\n            updatePlacement();\n            setTimeout(function () {\n              if (reactData.showPanel) {\n                updatePlacement();\n              }\n            }, 50);\n          }\n        }, 20);\n      }\n    };\n\n    var mouseenterTargetEvent = function () {\n      var panelElem = refBtnPanel.value;\n\n      if (panelElem) {\n        panelElem.dataset.active = 'Y';\n\n        if (!reactData.inited) {\n          reactData.inited = true;\n        }\n\n        internalData.showTime = setTimeout(function () {\n          if (panelElem.dataset.active === 'Y') {\n            mouseenterEvent();\n          } else {\n            reactData.animatVisible = false;\n          }\n        }, 250);\n      }\n    };\n\n    var closePanel = function () {\n      var panelElem = refBtnPanel.value;\n      clearTimeout(internalData.showTime);\n\n      if (panelElem) {\n        panelElem.dataset.active = 'N';\n        setTimeout(function () {\n          if (panelElem.dataset.active !== 'Y') {\n            reactData.showPanel = false;\n            setTimeout(function () {\n              if (panelElem.dataset.active !== 'Y') {\n                reactData.animatVisible = false;\n              }\n            }, 350);\n          }\n        }, 100);\n      } else {\n        reactData.animatVisible = false;\n        reactData.showPanel = false;\n      }\n    };\n\n    var mouseleaveEvent = function () {\n      closePanel();\n    };\n\n    var renderContent = function () {\n      var content = props.content,\n          icon = props.icon,\n          loading = props.loading;\n      var contVNs = [];\n\n      if (loading) {\n        contVNs.push(h('i', {\n          class: ['vxe-button--loading-icon', GlobalConfig.icon.BUTTON_LOADING]\n        }));\n      } else if (icon) {\n        contVNs.push(h('i', {\n          class: ['vxe-button--icon', icon]\n        }));\n      }\n\n      if (slots.default) {\n        contVNs.push(h('span', {\n          class: 'vxe-button--content'\n        }, slots.default({})));\n      } else if (content) {\n        contVNs.push(h('span', {\n          class: 'vxe-button--content'\n        }, getFuncText(content)));\n      }\n\n      return contVNs;\n    };\n\n    buttonMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $button: $xebutton,\n          $event: evnt\n        }, params));\n      },\n      focus: function () {\n        var btnElem = refButton.value;\n        btnElem.focus();\n        return nextTick();\n      },\n      blur: function () {\n        var btnElem = refButton.value;\n        btnElem.blur();\n        return nextTick();\n      }\n    };\n    Object.assign($xebutton, buttonMethods);\n    onMounted(function () {\n      GlobalEvent.on($xebutton, 'mousewheel', function (evnt) {\n        var panelElem = refBtnPanel.value;\n\n        if (reactData.showPanel && !getEventTargetNode(evnt, panelElem).flag) {\n          closePanel();\n        }\n      });\n    });\n    onUnmounted(function () {\n      GlobalEvent.off($xebutton, 'mousewheel');\n    });\n\n    var renderVN = function () {\n      var _a, _b, _c, _d;\n\n      var className = props.className,\n          transfer = props.transfer,\n          type = props.type,\n          round = props.round,\n          circle = props.circle,\n          destroyOnClose = props.destroyOnClose,\n          status = props.status,\n          name = props.name,\n          disabled = props.disabled,\n          loading = props.loading;\n      var inited = reactData.inited,\n          showPanel = reactData.showPanel;\n      var isFormBtn = computeIsFormBtn.value;\n      var btnType = computeBtnType.value;\n      var vSize = computeSize.value;\n\n      if (slots.dropdowns) {\n        return h('div', {\n          ref: refElem,\n          class: ['vxe-button--dropdown', className, (_a = {}, _a[\"size--\" + vSize] = vSize, _a['is--active'] = showPanel, _a)]\n        }, [h('button', {\n          ref: refButton,\n          class: ['vxe-button', \"type--\" + btnType, (_b = {}, _b[\"size--\" + vSize] = vSize, _b[\"theme--\" + status] = status, _b['is--round'] = round, _b['is--circle'] = circle, _b['is--disabled'] = disabled || loading, _b['is--loading'] = loading, _b)],\n          name: name,\n          type: isFormBtn ? type : 'button',\n          disabled: disabled || loading,\n          onMouseenter: mouseenterTargetEvent,\n          onMouseleave: mouseleaveEvent,\n          onClick: clickEvent\n        }, renderContent().concat([h('i', {\n          class: \"vxe-button--dropdown-arrow \" + GlobalConfig.icon.BUTTON_DROPDOWN\n        })])), h(Teleport, {\n          to: 'body',\n          disabled: transfer ? !inited : true\n        }, [h('div', {\n          ref: refBtnPanel,\n          class: ['vxe-button--dropdown-panel', (_c = {}, _c[\"size--\" + vSize] = vSize, _c['animat--leave'] = reactData.animatVisible, _c['animat--enter'] = showPanel, _c)],\n          placement: reactData.panelPlacement,\n          style: reactData.panelStyle\n        }, inited ? [h('div', {\n          class: 'vxe-button--dropdown-wrapper',\n          onMousedown: mousedownDropdownEvent,\n          onClick: clickDropdownEvent,\n          onMouseenter: mouseenterEvent,\n          onMouseleave: mouseleaveEvent\n        }, destroyOnClose && !showPanel ? [] : slots.dropdowns({}))] : [])])]);\n      }\n\n      return h('button', {\n        ref: refButton,\n        class: ['vxe-button', \"type--\" + btnType, (_d = {}, _d[\"size--\" + vSize] = vSize, _d[\"theme--\" + status] = status, _d['is--round'] = round, _d['is--circle'] = circle, _d['is--disabled'] = disabled || loading, _d['is--loading'] = loading, _d)],\n        name: name,\n        type: isFormBtn ? type : 'button',\n        disabled: disabled || loading,\n        onClick: clickEvent\n      }, renderContent());\n    };\n\n    $xebutton.renderVN = renderVN;\n    return $xebutton;\n  },\n  render: function () {\n    return this.renderVN();\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/button/src/button.js"],"names":["defineComponent","h","ref","computed","Teleport","onUnmounted","reactive","nextTick","onMounted","XEUtils","GlobalConfig","useSize","getAbsolutePos","getEventTargetNode","getFuncText","getLastZIndex","nextZIndex","GlobalEvent","name","props","type","String","className","size","default","button","Number","content","placement","status","icon","round","Boolean","circle","disabled","loading","destroyOnClose","transfer","emits","setup","context","slots","emit","xID","uniqueId","computeSize","reactData","inited","showPanel","animatVisible","panelIndex","panelStyle","panelPlacement","internalData","showTime","refElem","refButton","refBtnPanel","refMaps","$xebutton","getRefMaps","buttonMethods","computeIsFormBtn","indexOf","computeBtnType","updateZindex","updatePlacement","then","targetElem","value","panelElem","targetHeight","offsetHeight","targetWidth","offsetWidth","panelHeight","panelWidth","marginSize","zIndex","_a","top_1","top","left","boundingTop","visibleHeight","visibleWidth","btnLeft","btnTop","Object","assign","right","minWidth","bottom","clickEvent","evnt","dispatchEvent","$event","mousedownDropdownEvent","isLeftBtn","stopPropagation","clickDropdownEvent","dropdownElem","currentTarget","flag","dataset","active","setTimeout","getAttribute","mouseenterEvent","mouseenterTargetEvent","closePanel","clearTimeout","mouseleaveEvent","renderContent","contVNs","push","class","BUTTON_LOADING","params","$button","focus","btnElem","blur","on","off","renderVN","_b","_c","_d","isFormBtn","btnType","vSize","dropdowns","onMouseenter","onMouseleave","onClick","concat","BUTTON_DROPDOWN","to","style","onMousedown","render"],"mappings":"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","sourcesContent":["import { defineComponent, h, ref, computed, Teleport, onUnmounted, reactive, nextTick, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getAbsolutePos, getEventTargetNode } from '../../tools/dom';\nimport { getFuncText, getLastZIndex, nextZIndex } from '../../tools/utils';\nimport { GlobalEvent } from '../../tools/event';\nexport default defineComponent({\n    name: 'VxeButton',\n    props: {\n        /**\n         * 按钮类型\n         */\n        type: String,\n        className: String,\n        /**\n         * 按钮尺寸\n         */\n        size: { type: String, default: function () { return GlobalConfig.button.size || GlobalConfig.size; } },\n        /**\n         * 用来标识这一项\n         */\n        name: [String, Number],\n        /**\n         * 按钮内容\n         */\n        content: String,\n        /**\n         * 固定显示下拉面板的方向\n         */\n        placement: String,\n        /**\n         * 按钮状态\n         */\n        status: String,\n        /**\n         * 按钮的图标\n         */\n        icon: String,\n        /**\n         * 圆角边框\n         */\n        round: Boolean,\n        /**\n         * 圆角按钮\n         */\n        circle: Boolean,\n        /**\n         * 是否禁用\n         */\n        disabled: Boolean,\n        /**\n         * 是否加载中\n         */\n        loading: Boolean,\n        /**\n         * 在下拉面板关闭时销毁内容\n         */\n        destroyOnClose: Boolean,\n        /**\n         * 是否将弹框容器插入于 body 内\n         */\n        transfer: { type: Boolean, default: function () { return GlobalConfig.button.transfer; } }\n    },\n    emits: [\n        'click',\n        'dropdown-click'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var computeSize = useSize(props);\n        var reactData = reactive({\n            inited: false,\n            showPanel: false,\n            animatVisible: false,\n            panelIndex: 0,\n            panelStyle: {},\n            panelPlacement: ''\n        });\n        var internalData = {\n            showTime: null\n        };\n        var refElem = ref();\n        var refButton = ref();\n        var refBtnPanel = ref();\n        var refMaps = {\n            refElem: refElem\n        };\n        var $xebutton = {\n            xID: xID,\n            props: props,\n            context: context,\n            reactData: reactData,\n            internalData: internalData,\n            getRefMaps: function () { return refMaps; }\n        };\n        var buttonMethods = {};\n        var computeIsFormBtn = computed(function () {\n            var type = props.type;\n            if (type) {\n                return ['submit', 'reset', 'button'].indexOf(type) > -1;\n            }\n            return false;\n        });\n        var computeBtnType = computed(function () {\n            var type = props.type;\n            return type && type === 'text' ? type : 'button';\n        });\n        var updateZindex = function () {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        var updatePlacement = function () {\n            return nextTick().then(function () {\n                var transfer = props.transfer, placement = props.placement;\n                var panelIndex = reactData.panelIndex;\n                var targetElem = refButton.value;\n                var panelElem = refBtnPanel.value;\n                if (panelElem && targetElem) {\n                    var targetHeight = targetElem.offsetHeight;\n                    var targetWidth = targetElem.offsetWidth;\n                    var panelHeight = panelElem.offsetHeight;\n                    var panelWidth = panelElem.offsetWidth;\n                    var marginSize = 5;\n                    var panelStyle = {\n                        zIndex: panelIndex\n                    };\n                    var _a = getAbsolutePos(targetElem), top_1 = _a.top, left = _a.left, boundingTop = _a.boundingTop, visibleHeight = _a.visibleHeight, visibleWidth = _a.visibleWidth;\n                    var panelPlacement = 'bottom';\n                    if (transfer) {\n                        var btnLeft = left + targetWidth - panelWidth;\n                        var btnTop = top_1 + targetHeight;\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            btnTop = top_1 - panelHeight;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (boundingTop + targetHeight + panelHeight + marginSize > visibleHeight) {\n                                panelPlacement = 'top';\n                                btnTop = top_1 - panelHeight;\n                            }\n                            // 如果上面不够放，则向下（优先）\n                            if (btnTop < marginSize) {\n                                panelPlacement = 'bottom';\n                                btnTop = top_1 + targetHeight;\n                            }\n                        }\n                        // 如果溢出右边\n                        if (btnLeft + panelWidth + marginSize > visibleWidth) {\n                            btnLeft -= btnLeft + panelWidth + marginSize - visibleWidth;\n                        }\n                        // 如果溢出左边\n                        if (btnLeft < marginSize) {\n                            btnLeft = marginSize;\n                        }\n                        Object.assign(panelStyle, {\n                            left: btnLeft + \"px\",\n                            right: 'auto',\n                            top: btnTop + \"px\",\n                            minWidth: targetWidth + \"px\"\n                        });\n                    }\n                    else {\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            panelStyle.bottom = targetHeight + \"px\";\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                // 如果上面不够放，则向下（优先）\n                                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                    panelPlacement = 'top';\n                                    panelStyle.bottom = targetHeight + \"px\";\n                                }\n                            }\n                        }\n                    }\n                    reactData.panelStyle = panelStyle;\n                    reactData.panelPlacement = panelPlacement;\n                    return nextTick();\n                }\n            });\n        };\n        var clickEvent = function (evnt) {\n            buttonMethods.dispatchEvent('click', { $event: evnt }, evnt);\n        };\n        var mousedownDropdownEvent = function (evnt) {\n            var isLeftBtn = evnt.button === 0;\n            if (isLeftBtn) {\n                evnt.stopPropagation();\n            }\n        };\n        var clickDropdownEvent = function (evnt) {\n            var dropdownElem = evnt.currentTarget;\n            var panelElem = refBtnPanel.value;\n            var _a = getEventTargetNode(evnt, dropdownElem, 'vxe-button'), flag = _a.flag, targetElem = _a.targetElem;\n            if (flag) {\n                if (panelElem) {\n                    panelElem.dataset.active = 'N';\n                }\n                reactData.showPanel = false;\n                setTimeout(function () {\n                    if (!panelElem || panelElem.dataset.active !== 'Y') {\n                        reactData.animatVisible = false;\n                    }\n                }, 350);\n                buttonMethods.dispatchEvent('dropdown-click', { name: targetElem.getAttribute('name'), $event: evnt }, evnt);\n            }\n        };\n        var mouseenterEvent = function () {\n            var panelElem = refBtnPanel.value;\n            if (panelElem) {\n                panelElem.dataset.active = 'Y';\n                reactData.animatVisible = true;\n                setTimeout(function () {\n                    if (panelElem.dataset.active === 'Y') {\n                        reactData.showPanel = true;\n                        updateZindex();\n                        updatePlacement();\n                        setTimeout(function () {\n                            if (reactData.showPanel) {\n                                updatePlacement();\n                            }\n                        }, 50);\n                    }\n                }, 20);\n            }\n        };\n        var mouseenterTargetEvent = function () {\n            var panelElem = refBtnPanel.value;\n            if (panelElem) {\n                panelElem.dataset.active = 'Y';\n                if (!reactData.inited) {\n                    reactData.inited = true;\n                }\n                internalData.showTime = setTimeout(function () {\n                    if (panelElem.dataset.active === 'Y') {\n                        mouseenterEvent();\n                    }\n                    else {\n                        reactData.animatVisible = false;\n                    }\n                }, 250);\n            }\n        };\n        var closePanel = function () {\n            var panelElem = refBtnPanel.value;\n            clearTimeout(internalData.showTime);\n            if (panelElem) {\n                panelElem.dataset.active = 'N';\n                setTimeout(function () {\n                    if (panelElem.dataset.active !== 'Y') {\n                        reactData.showPanel = false;\n                        setTimeout(function () {\n                            if (panelElem.dataset.active !== 'Y') {\n                                reactData.animatVisible = false;\n                            }\n                        }, 350);\n                    }\n                }, 100);\n            }\n            else {\n                reactData.animatVisible = false;\n                reactData.showPanel = false;\n            }\n        };\n        var mouseleaveEvent = function () {\n            closePanel();\n        };\n        var renderContent = function () {\n            var content = props.content, icon = props.icon, loading = props.loading;\n            var contVNs = [];\n            if (loading) {\n                contVNs.push(h('i', {\n                    class: ['vxe-button--loading-icon', GlobalConfig.icon.BUTTON_LOADING]\n                }));\n            }\n            else if (icon) {\n                contVNs.push(h('i', {\n                    class: ['vxe-button--icon', icon]\n                }));\n            }\n            if (slots.default) {\n                contVNs.push(h('span', {\n                    class: 'vxe-button--content'\n                }, slots.default({})));\n            }\n            else if (content) {\n                contVNs.push(h('span', {\n                    class: 'vxe-button--content'\n                }, getFuncText(content)));\n            }\n            return contVNs;\n        };\n        buttonMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $button: $xebutton, $event: evnt }, params));\n            },\n            focus: function () {\n                var btnElem = refButton.value;\n                btnElem.focus();\n                return nextTick();\n            },\n            blur: function () {\n                var btnElem = refButton.value;\n                btnElem.blur();\n                return nextTick();\n            }\n        };\n        Object.assign($xebutton, buttonMethods);\n        onMounted(function () {\n            GlobalEvent.on($xebutton, 'mousewheel', function (evnt) {\n                var panelElem = refBtnPanel.value;\n                if (reactData.showPanel && !getEventTargetNode(evnt, panelElem).flag) {\n                    closePanel();\n                }\n            });\n        });\n        onUnmounted(function () {\n            GlobalEvent.off($xebutton, 'mousewheel');\n        });\n        var renderVN = function () {\n            var _a, _b, _c, _d;\n            var className = props.className, transfer = props.transfer, type = props.type, round = props.round, circle = props.circle, destroyOnClose = props.destroyOnClose, status = props.status, name = props.name, disabled = props.disabled, loading = props.loading;\n            var inited = reactData.inited, showPanel = reactData.showPanel;\n            var isFormBtn = computeIsFormBtn.value;\n            var btnType = computeBtnType.value;\n            var vSize = computeSize.value;\n            if (slots.dropdowns) {\n                return h('div', {\n                    ref: refElem,\n                    class: ['vxe-button--dropdown', className, (_a = {},\n                            _a[\"size--\" + vSize] = vSize,\n                            _a['is--active'] = showPanel,\n                            _a)]\n                }, [\n                    h('button', {\n                        ref: refButton,\n                        class: ['vxe-button', \"type--\" + btnType, (_b = {},\n                                _b[\"size--\" + vSize] = vSize,\n                                _b[\"theme--\" + status] = status,\n                                _b['is--round'] = round,\n                                _b['is--circle'] = circle,\n                                _b['is--disabled'] = disabled || loading,\n                                _b['is--loading'] = loading,\n                                _b)],\n                        name: name,\n                        type: isFormBtn ? type : 'button',\n                        disabled: disabled || loading,\n                        onMouseenter: mouseenterTargetEvent,\n                        onMouseleave: mouseleaveEvent,\n                        onClick: clickEvent\n                    }, renderContent().concat([\n                        h('i', {\n                            class: \"vxe-button--dropdown-arrow \" + GlobalConfig.icon.BUTTON_DROPDOWN\n                        })\n                    ])),\n                    h(Teleport, {\n                        to: 'body',\n                        disabled: transfer ? !inited : true\n                    }, [\n                        h('div', {\n                            ref: refBtnPanel,\n                            class: ['vxe-button--dropdown-panel', (_c = {},\n                                    _c[\"size--\" + vSize] = vSize,\n                                    _c['animat--leave'] = reactData.animatVisible,\n                                    _c['animat--enter'] = showPanel,\n                                    _c)],\n                            placement: reactData.panelPlacement,\n                            style: reactData.panelStyle\n                        }, inited ? [\n                            h('div', {\n                                class: 'vxe-button--dropdown-wrapper',\n                                onMousedown: mousedownDropdownEvent,\n                                onClick: clickDropdownEvent,\n                                onMouseenter: mouseenterEvent,\n                                onMouseleave: mouseleaveEvent\n                            }, destroyOnClose && !showPanel ? [] : slots.dropdowns({}))\n                        ] : [])\n                    ])\n                ]);\n            }\n            return h('button', {\n                ref: refButton,\n                class: ['vxe-button', \"type--\" + btnType, (_d = {},\n                        _d[\"size--\" + vSize] = vSize,\n                        _d[\"theme--\" + status] = status,\n                        _d['is--round'] = round,\n                        _d['is--circle'] = circle,\n                        _d['is--disabled'] = disabled || loading,\n                        _d['is--loading'] = loading,\n                        _d)],\n                name: name,\n                type: isFormBtn ? type : 'button',\n                disabled: disabled || loading,\n                onClick: clickEvent\n            }, renderContent());\n        };\n        $xebutton.renderVN = renderVN;\n        return $xebutton;\n    },\n    render: function () {\n        return this.renderVN();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}