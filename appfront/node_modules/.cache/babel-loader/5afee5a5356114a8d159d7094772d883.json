{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { inject } from 'vue';\nimport warning from 'warning';\nimport PropTypes from '../../../_util/vue-types';\nimport Tree from '../../../vc-tree';\nimport BaseMixin from '../../../_util/BaseMixin';\nimport { createRef } from '../util'; // export const popupContextTypes = {\n//   onPopupKeyDown: PropTypes.func.isRequired,\n//   onTreeNodeSelect: PropTypes.func.isRequired,\n//   onTreeNodeCheck: PropTypes.func.isRequired,\n// }\n\nfunction getDerivedState(nextProps, prevState) {\n  var _ref = prevState || {},\n      _ref$_prevProps = _ref._prevProps,\n      prevProps = _ref$_prevProps === void 0 ? {} : _ref$_prevProps,\n      loadedKeys = _ref._loadedKeys,\n      expandedKeyList = _ref._expandedKeyList,\n      cachedExpandedKeyList = _ref._cachedExpandedKeyList;\n\n  var valueList = nextProps.valueList,\n      valueEntities = nextProps.valueEntities,\n      keyEntities = nextProps.keyEntities,\n      treeExpandedKeys = nextProps.treeExpandedKeys,\n      filteredTreeNodes = nextProps.filteredTreeNodes,\n      upperSearchValue = nextProps.upperSearchValue;\n  var newState = {\n    _prevProps: _extends({}, nextProps)\n  }; // Check value update\n\n  if (valueList !== prevProps.valueList) {\n    newState._keyList = valueList.map(function (_ref2) {\n      var value = _ref2.value;\n      return valueEntities[value];\n    }).filter(function (entity) {\n      return entity;\n    }).map(function (_ref3) {\n      var key = _ref3.key;\n      return key;\n    });\n  } // Show all when tree is in filter mode\n\n\n  if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n    newState._expandedKeyList = _toConsumableArray(keyEntities.keys());\n  } // Cache `expandedKeyList` when filter set\n\n\n  if (upperSearchValue && !prevProps.upperSearchValue) {\n    newState._cachedExpandedKeyList = expandedKeyList;\n  } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {\n    newState._expandedKeyList = cachedExpandedKeyList || [];\n    newState._cachedExpandedKeyList = [];\n  } // Use expandedKeys if provided\n\n\n  if (prevProps.treeExpandedKeys !== treeExpandedKeys) {\n    newState._expandedKeyList = treeExpandedKeys;\n  } // Clean loadedKeys if key not exist in keyEntities anymore\n\n\n  if (nextProps.loadData) {\n    newState._loadedKeys = loadedKeys.filter(function (key) {\n      return keyEntities.has(key);\n    });\n  }\n\n  return newState;\n}\n\nvar BasePopup = {\n  mixins: [BaseMixin],\n  inheritAttrs: false,\n  name: 'BasePopup',\n  props: {\n    prefixCls: PropTypes.string,\n    upperSearchValue: PropTypes.string,\n    valueList: PropTypes.array,\n    searchHalfCheckedKeys: PropTypes.array,\n    valueEntities: PropTypes.object,\n    keyEntities: Map,\n    treeIcon: PropTypes.looseBool,\n    treeLine: PropTypes.looseBool,\n    treeNodeFilterProp: PropTypes.string,\n    treeCheckable: PropTypes.any,\n    treeCheckStrictly: PropTypes.looseBool,\n    treeDefaultExpandAll: PropTypes.looseBool,\n    treeDefaultExpandedKeys: PropTypes.array,\n    treeExpandedKeys: PropTypes.array,\n    loadData: PropTypes.func,\n    multiple: PropTypes.looseBool,\n    // onTreeExpand: PropTypes.func,\n    searchValue: PropTypes.string,\n    treeNodes: PropTypes.any,\n    filteredTreeNodes: PropTypes.any,\n    notFoundContent: PropTypes.any,\n    ariaId: PropTypes.string,\n    switcherIcon: PropTypes.any,\n    // HOC\n    renderSearch: PropTypes.func,\n    // onTreeExpanded: PropTypes.func,\n    __propsSymbol__: PropTypes.any\n  },\n  setup: function setup() {\n    return {\n      vcTreeSelect: inject('vcTreeSelect', {})\n    };\n  },\n  watch: {\n    __propsSymbol__: function __propsSymbol__() {\n      var state = getDerivedState(this.$props, this.$data);\n      this.setState(state);\n    }\n  },\n  data: function data() {\n    this.treeRef = createRef();\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    var _this$$props = this.$props,\n        treeDefaultExpandAll = _this$$props.treeDefaultExpandAll,\n        treeDefaultExpandedKeys = _this$$props.treeDefaultExpandedKeys,\n        keyEntities = _this$$props.keyEntities; // TODO: make `expandedKeyList` control\n\n    var expandedKeyList = treeDefaultExpandedKeys;\n\n    if (treeDefaultExpandAll) {\n      expandedKeyList = _toConsumableArray(keyEntities.keys());\n    }\n\n    var state = {\n      _keyList: [],\n      _expandedKeyList: expandedKeyList,\n      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedState`\n      _cachedExpandedKeyList: [],\n      _loadedKeys: [],\n      _prevProps: {}\n    };\n    return _extends(_extends({}, state), getDerivedState(this.$props, state));\n  },\n  methods: {\n    onTreeExpand: function onTreeExpand(expandedKeyList) {\n      var _this = this;\n\n      var treeExpandedKeys = this.$props.treeExpandedKeys; // Set uncontrolled state\n\n      if (!treeExpandedKeys) {\n        this.setState({\n          _expandedKeyList: expandedKeyList\n        }, function () {\n          _this.__emit('treeExpanded');\n        });\n      }\n\n      this.__emit('treeExpand', expandedKeyList);\n    },\n    onLoad: function onLoad(loadedKeys) {\n      this.setState({\n        _loadedKeys: loadedKeys\n      });\n    },\n    getTree: function getTree() {\n      return this.treeRef.current;\n    },\n\n    /**\n     * Not pass `loadData` when searching. To avoid loop ajax call makes browser crash.\n     */\n    getLoadData: function getLoadData() {\n      var _this$$props2 = this.$props,\n          loadData = _this$$props2.loadData,\n          upperSearchValue = _this$$props2.upperSearchValue;\n      if (upperSearchValue) return null;\n      return loadData;\n    },\n\n    /**\n     * This method pass to Tree component which is used for add filtered class\n     * in TreeNode > li\n     */\n    filterTreeNode: function filterTreeNode(treeNode) {\n      var _this$$props3 = this.$props,\n          upperSearchValue = _this$$props3.upperSearchValue,\n          treeNodeFilterProp = _this$$props3.treeNodeFilterProp;\n      var filterVal = treeNode[treeNodeFilterProp];\n\n      if (typeof filterVal === 'string') {\n        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n      }\n\n      return false;\n    },\n    renderNotFound: function renderNotFound() {\n      var _this$$props4 = this.$props,\n          prefixCls = _this$$props4.prefixCls,\n          notFoundContent = _this$$props4.notFoundContent;\n      return _createVNode(\"span\", {\n        \"class\": \"\".concat(prefixCls, \"-not-found\")\n      }, [notFoundContent]);\n    }\n  },\n  render: function render() {\n    var _this$$data = this.$data,\n        keyList = _this$$data._keyList,\n        expandedKeyList = _this$$data._expandedKeyList,\n        loadedKeys = _this$$data._loadedKeys;\n    var _this$$props5 = this.$props,\n        prefixCls = _this$$props5.prefixCls,\n        treeNodes = _this$$props5.treeNodes,\n        filteredTreeNodes = _this$$props5.filteredTreeNodes,\n        treeIcon = _this$$props5.treeIcon,\n        treeLine = _this$$props5.treeLine,\n        treeCheckable = _this$$props5.treeCheckable,\n        treeCheckStrictly = _this$$props5.treeCheckStrictly,\n        multiple = _this$$props5.multiple,\n        ariaId = _this$$props5.ariaId,\n        renderSearch = _this$$props5.renderSearch,\n        switcherIcon = _this$$props5.switcherIcon,\n        searchHalfCheckedKeys = _this$$props5.searchHalfCheckedKeys;\n    var _this$vcTreeSelect = this.vcTreeSelect,\n        onPopupKeyDown = _this$vcTreeSelect.onPopupKeyDown,\n        onTreeNodeSelect = _this$vcTreeSelect.onTreeNodeSelect,\n        onTreeNodeCheck = _this$vcTreeSelect.onTreeNodeCheck;\n    var loadData = this.getLoadData();\n    var treeProps = {};\n\n    if (treeCheckable) {\n      treeProps.checkedKeys = keyList;\n    } else {\n      treeProps.selectedKeys = keyList;\n    }\n\n    var $notFound;\n    var $treeNodes;\n\n    if (filteredTreeNodes) {\n      if (filteredTreeNodes.length) {\n        treeProps.checkStrictly = true;\n        $treeNodes = filteredTreeNodes; // Fill halfCheckedKeys\n\n        if (treeCheckable && !treeCheckStrictly) {\n          treeProps.checkedKeys = {\n            checked: keyList,\n            halfChecked: searchHalfCheckedKeys\n          };\n        }\n      } else {\n        $notFound = this.renderNotFound();\n      }\n    } else if (!treeNodes || !treeNodes.length) {\n      $notFound = this.renderNotFound();\n    } else {\n      $treeNodes = treeNodes;\n    }\n\n    var $tree;\n\n    if ($notFound) {\n      $tree = $notFound;\n    } else {\n      var treeAllProps = _extends(_extends({\n        prefixCls: \"\".concat(prefixCls, \"-tree\"),\n        showIcon: treeIcon,\n        showLine: treeLine,\n        selectable: !treeCheckable,\n        checkable: treeCheckable,\n        checkStrictly: treeCheckStrictly,\n        multiple: multiple,\n        loadData: loadData,\n        loadedKeys: loadedKeys,\n        expandedKeys: expandedKeyList,\n        filterTreeNode: this.filterTreeNode,\n        switcherIcon: switcherIcon\n      }, treeProps), {\n        children: $treeNodes,\n        onSelect: onTreeNodeSelect,\n        onCheck: onTreeNodeCheck,\n        onExpand: this.onTreeExpand,\n        onLoad: this.onLoad\n      });\n\n      $tree = _createVNode(Tree, _objectSpread(_objectSpread({}, treeAllProps), {}, {\n        \"ref\": this.treeRef,\n        \"__propsSymbol__\": []\n      }), null);\n    }\n\n    return _createVNode(\"div\", {\n      \"role\": \"listbox\",\n      \"id\": ariaId,\n      \"onKeydown\": onPopupKeyDown,\n      \"tabindex\": -1\n    }, [renderSearch ? renderSearch() : null, $tree]);\n  }\n};\nexport default BasePopup;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-tree-select/src/Base/BasePopup.js"],"names":["_objectSpread","_toConsumableArray","_extends","createVNode","_createVNode","inject","warning","PropTypes","Tree","BaseMixin","createRef","getDerivedState","nextProps","prevState","_ref","_ref$_prevProps","_prevProps","prevProps","loadedKeys","_loadedKeys","expandedKeyList","_expandedKeyList","cachedExpandedKeyList","_cachedExpandedKeyList","valueList","valueEntities","keyEntities","treeExpandedKeys","filteredTreeNodes","upperSearchValue","newState","_keyList","map","_ref2","value","filter","entity","_ref3","key","length","keys","loadData","has","BasePopup","mixins","inheritAttrs","name","props","prefixCls","string","array","searchHalfCheckedKeys","object","Map","treeIcon","looseBool","treeLine","treeNodeFilterProp","treeCheckable","any","treeCheckStrictly","treeDefaultExpandAll","treeDefaultExpandedKeys","func","multiple","searchValue","treeNodes","notFoundContent","ariaId","switcherIcon","renderSearch","__propsSymbol__","setup","vcTreeSelect","watch","state","$props","$data","setState","data","treeRef","_this$$props","methods","onTreeExpand","_this","__emit","onLoad","getTree","current","getLoadData","_this$$props2","filterTreeNode","treeNode","_this$$props3","filterVal","toUpperCase","indexOf","renderNotFound","_this$$props4","concat","render","_this$$data","keyList","_this$$props5","_this$vcTreeSelect","onPopupKeyDown","onTreeNodeSelect","onTreeNodeCheck","treeProps","checkedKeys","selectedKeys","$notFound","$treeNodes","checkStrictly","checked","halfChecked","$tree","treeAllProps","showIcon","showLine","selectable","checkable","expandedKeys","children","onSelect","onCheck","onExpand"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { inject } from 'vue';\nimport warning from 'warning';\nimport PropTypes from '../../../_util/vue-types';\nimport Tree from '../../../vc-tree';\nimport BaseMixin from '../../../_util/BaseMixin';\nimport { createRef } from '../util'; // export const popupContextTypes = {\n//   onPopupKeyDown: PropTypes.func.isRequired,\n//   onTreeNodeSelect: PropTypes.func.isRequired,\n//   onTreeNodeCheck: PropTypes.func.isRequired,\n// }\n\nfunction getDerivedState(nextProps, prevState) {\n  var _ref = prevState || {},\n      _ref$_prevProps = _ref._prevProps,\n      prevProps = _ref$_prevProps === void 0 ? {} : _ref$_prevProps,\n      loadedKeys = _ref._loadedKeys,\n      expandedKeyList = _ref._expandedKeyList,\n      cachedExpandedKeyList = _ref._cachedExpandedKeyList;\n\n  var valueList = nextProps.valueList,\n      valueEntities = nextProps.valueEntities,\n      keyEntities = nextProps.keyEntities,\n      treeExpandedKeys = nextProps.treeExpandedKeys,\n      filteredTreeNodes = nextProps.filteredTreeNodes,\n      upperSearchValue = nextProps.upperSearchValue;\n  var newState = {\n    _prevProps: _extends({}, nextProps)\n  }; // Check value update\n\n  if (valueList !== prevProps.valueList) {\n    newState._keyList = valueList.map(function (_ref2) {\n      var value = _ref2.value;\n      return valueEntities[value];\n    }).filter(function (entity) {\n      return entity;\n    }).map(function (_ref3) {\n      var key = _ref3.key;\n      return key;\n    });\n  } // Show all when tree is in filter mode\n\n\n  if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n    newState._expandedKeyList = _toConsumableArray(keyEntities.keys());\n  } // Cache `expandedKeyList` when filter set\n\n\n  if (upperSearchValue && !prevProps.upperSearchValue) {\n    newState._cachedExpandedKeyList = expandedKeyList;\n  } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {\n    newState._expandedKeyList = cachedExpandedKeyList || [];\n    newState._cachedExpandedKeyList = [];\n  } // Use expandedKeys if provided\n\n\n  if (prevProps.treeExpandedKeys !== treeExpandedKeys) {\n    newState._expandedKeyList = treeExpandedKeys;\n  } // Clean loadedKeys if key not exist in keyEntities anymore\n\n\n  if (nextProps.loadData) {\n    newState._loadedKeys = loadedKeys.filter(function (key) {\n      return keyEntities.has(key);\n    });\n  }\n\n  return newState;\n}\n\nvar BasePopup = {\n  mixins: [BaseMixin],\n  inheritAttrs: false,\n  name: 'BasePopup',\n  props: {\n    prefixCls: PropTypes.string,\n    upperSearchValue: PropTypes.string,\n    valueList: PropTypes.array,\n    searchHalfCheckedKeys: PropTypes.array,\n    valueEntities: PropTypes.object,\n    keyEntities: Map,\n    treeIcon: PropTypes.looseBool,\n    treeLine: PropTypes.looseBool,\n    treeNodeFilterProp: PropTypes.string,\n    treeCheckable: PropTypes.any,\n    treeCheckStrictly: PropTypes.looseBool,\n    treeDefaultExpandAll: PropTypes.looseBool,\n    treeDefaultExpandedKeys: PropTypes.array,\n    treeExpandedKeys: PropTypes.array,\n    loadData: PropTypes.func,\n    multiple: PropTypes.looseBool,\n    // onTreeExpand: PropTypes.func,\n    searchValue: PropTypes.string,\n    treeNodes: PropTypes.any,\n    filteredTreeNodes: PropTypes.any,\n    notFoundContent: PropTypes.any,\n    ariaId: PropTypes.string,\n    switcherIcon: PropTypes.any,\n    // HOC\n    renderSearch: PropTypes.func,\n    // onTreeExpanded: PropTypes.func,\n    __propsSymbol__: PropTypes.any\n  },\n  setup: function setup() {\n    return {\n      vcTreeSelect: inject('vcTreeSelect', {})\n    };\n  },\n  watch: {\n    __propsSymbol__: function __propsSymbol__() {\n      var state = getDerivedState(this.$props, this.$data);\n      this.setState(state);\n    }\n  },\n  data: function data() {\n    this.treeRef = createRef();\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    var _this$$props = this.$props,\n        treeDefaultExpandAll = _this$$props.treeDefaultExpandAll,\n        treeDefaultExpandedKeys = _this$$props.treeDefaultExpandedKeys,\n        keyEntities = _this$$props.keyEntities; // TODO: make `expandedKeyList` control\n\n    var expandedKeyList = treeDefaultExpandedKeys;\n\n    if (treeDefaultExpandAll) {\n      expandedKeyList = _toConsumableArray(keyEntities.keys());\n    }\n\n    var state = {\n      _keyList: [],\n      _expandedKeyList: expandedKeyList,\n      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedState`\n      _cachedExpandedKeyList: [],\n      _loadedKeys: [],\n      _prevProps: {}\n    };\n    return _extends(_extends({}, state), getDerivedState(this.$props, state));\n  },\n  methods: {\n    onTreeExpand: function onTreeExpand(expandedKeyList) {\n      var _this = this;\n\n      var treeExpandedKeys = this.$props.treeExpandedKeys; // Set uncontrolled state\n\n      if (!treeExpandedKeys) {\n        this.setState({\n          _expandedKeyList: expandedKeyList\n        }, function () {\n          _this.__emit('treeExpanded');\n        });\n      }\n\n      this.__emit('treeExpand', expandedKeyList);\n    },\n    onLoad: function onLoad(loadedKeys) {\n      this.setState({\n        _loadedKeys: loadedKeys\n      });\n    },\n    getTree: function getTree() {\n      return this.treeRef.current;\n    },\n\n    /**\n     * Not pass `loadData` when searching. To avoid loop ajax call makes browser crash.\n     */\n    getLoadData: function getLoadData() {\n      var _this$$props2 = this.$props,\n          loadData = _this$$props2.loadData,\n          upperSearchValue = _this$$props2.upperSearchValue;\n      if (upperSearchValue) return null;\n      return loadData;\n    },\n\n    /**\n     * This method pass to Tree component which is used for add filtered class\n     * in TreeNode > li\n     */\n    filterTreeNode: function filterTreeNode(treeNode) {\n      var _this$$props3 = this.$props,\n          upperSearchValue = _this$$props3.upperSearchValue,\n          treeNodeFilterProp = _this$$props3.treeNodeFilterProp;\n      var filterVal = treeNode[treeNodeFilterProp];\n\n      if (typeof filterVal === 'string') {\n        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n      }\n\n      return false;\n    },\n    renderNotFound: function renderNotFound() {\n      var _this$$props4 = this.$props,\n          prefixCls = _this$$props4.prefixCls,\n          notFoundContent = _this$$props4.notFoundContent;\n      return _createVNode(\"span\", {\n        \"class\": \"\".concat(prefixCls, \"-not-found\")\n      }, [notFoundContent]);\n    }\n  },\n  render: function render() {\n    var _this$$data = this.$data,\n        keyList = _this$$data._keyList,\n        expandedKeyList = _this$$data._expandedKeyList,\n        loadedKeys = _this$$data._loadedKeys;\n    var _this$$props5 = this.$props,\n        prefixCls = _this$$props5.prefixCls,\n        treeNodes = _this$$props5.treeNodes,\n        filteredTreeNodes = _this$$props5.filteredTreeNodes,\n        treeIcon = _this$$props5.treeIcon,\n        treeLine = _this$$props5.treeLine,\n        treeCheckable = _this$$props5.treeCheckable,\n        treeCheckStrictly = _this$$props5.treeCheckStrictly,\n        multiple = _this$$props5.multiple,\n        ariaId = _this$$props5.ariaId,\n        renderSearch = _this$$props5.renderSearch,\n        switcherIcon = _this$$props5.switcherIcon,\n        searchHalfCheckedKeys = _this$$props5.searchHalfCheckedKeys;\n    var _this$vcTreeSelect = this.vcTreeSelect,\n        onPopupKeyDown = _this$vcTreeSelect.onPopupKeyDown,\n        onTreeNodeSelect = _this$vcTreeSelect.onTreeNodeSelect,\n        onTreeNodeCheck = _this$vcTreeSelect.onTreeNodeCheck;\n    var loadData = this.getLoadData();\n    var treeProps = {};\n\n    if (treeCheckable) {\n      treeProps.checkedKeys = keyList;\n    } else {\n      treeProps.selectedKeys = keyList;\n    }\n\n    var $notFound;\n    var $treeNodes;\n\n    if (filteredTreeNodes) {\n      if (filteredTreeNodes.length) {\n        treeProps.checkStrictly = true;\n        $treeNodes = filteredTreeNodes; // Fill halfCheckedKeys\n\n        if (treeCheckable && !treeCheckStrictly) {\n          treeProps.checkedKeys = {\n            checked: keyList,\n            halfChecked: searchHalfCheckedKeys\n          };\n        }\n      } else {\n        $notFound = this.renderNotFound();\n      }\n    } else if (!treeNodes || !treeNodes.length) {\n      $notFound = this.renderNotFound();\n    } else {\n      $treeNodes = treeNodes;\n    }\n\n    var $tree;\n\n    if ($notFound) {\n      $tree = $notFound;\n    } else {\n      var treeAllProps = _extends(_extends({\n        prefixCls: \"\".concat(prefixCls, \"-tree\"),\n        showIcon: treeIcon,\n        showLine: treeLine,\n        selectable: !treeCheckable,\n        checkable: treeCheckable,\n        checkStrictly: treeCheckStrictly,\n        multiple: multiple,\n        loadData: loadData,\n        loadedKeys: loadedKeys,\n        expandedKeys: expandedKeyList,\n        filterTreeNode: this.filterTreeNode,\n        switcherIcon: switcherIcon\n      }, treeProps), {\n        children: $treeNodes,\n        onSelect: onTreeNodeSelect,\n        onCheck: onTreeNodeCheck,\n        onExpand: this.onTreeExpand,\n        onLoad: this.onLoad\n      });\n\n      $tree = _createVNode(Tree, _objectSpread(_objectSpread({}, treeAllProps), {}, {\n        \"ref\": this.treeRef,\n        \"__propsSymbol__\": []\n      }), null);\n    }\n\n    return _createVNode(\"div\", {\n      \"role\": \"listbox\",\n      \"id\": ariaId,\n      \"onKeydown\": onPopupKeyDown,\n      \"tabindex\": -1\n    }, [renderSearch ? renderSearch() : null, $tree]);\n  }\n};\nexport default BasePopup;"]},"metadata":{},"sourceType":"module"}