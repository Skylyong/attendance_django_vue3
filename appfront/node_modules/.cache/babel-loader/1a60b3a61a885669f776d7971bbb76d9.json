{"ast":null,"code":"export default {};","map":{"version":3,"mappings":"AA4GA,eAAe,EAAf","names":[],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n  \n\n<vxe-toolbar>\n          <template #buttons>\n            <vxe-button icon=\"fa fa-plus\" @click=\"insertEvent()\">新增</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          border\n          show-overflow\n          ref=\"xTable\"\n          height=\"300\"\n          :column-config=\"{resizable: true}\"\n          :row-config=\"{isHover: true}\"\n          :data=\"demo1.tableData\"\n          @cell-dblclick=\"cellDBLClickEvent\">\n          <vxe-column type=\"seq\" width=\"60\"></vxe-column>\n          <vxe-column field=\"name\" title=\"Name\"></vxe-column>\n          <vxe-column field=\"sex\" title=\"Sex\" :formatter=\"formatterSex\"></vxe-column>\n          <vxe-column field=\"age\" title=\"Age\"></vxe-column>\n          <vxe-column field=\"address\" title=\"Address\" show-overflow></vxe-column>\n          <vxe-column title=\"操作\" width=\"100\" show-overflow>\n            <template #default=\"{ row }\">\n              <vxe-button type=\"text\" icon=\"fa fa-edit\" @click=\"editEvent(row)\"></vxe-button>\n              <vxe-button type=\"text\" icon=\"fa fa-trash-o\" @click=\"removeEvent(row)\"></vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n\n        <vxe-modal v-model=\"demo1.showEdit\" :title=\"demo1.selectRow ? '编辑&保存' : '新增&保存'\" width=\"800\" min-width=\"600\" min-height=\"300\" :loading=\"demo1.submitLoading\" resize destroy-on-close>\n          <template #default>\n            <vxe-form :data=\"demo1.formData\" :rules=\"demo1.formRules\" title-align=\"right\" title-width=\"100\" @submit=\"submitEvent\">\n              <vxe-form-item title=\"Basic information\" title-align=\"left\" :title-width=\"200\" :span=\"24\" :title-prefix=\"{icon: 'fa fa-address-card-o'}\"></vxe-form-item>\n              <vxe-form-item field=\"name\" title=\"Name\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.name\" placeholder=\"请输入名称\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"nickname\" title=\"Nickname\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.name\" placeholder=\"请输入名称\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"role\" title=\"Role\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.name\" placeholder=\"请输入角色\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"sex\" title=\"Sex\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-select v-model=\"data.sex\" transfer>\n                    <vxe-option v-for=\"item in demo1.sexList\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></vxe-option>\n                  </vxe-select>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"age\" title=\"Age\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.age\" type=\"number\" placeholder=\"请输入年龄\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"flag1\" title=\"是否单身\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-radio-group v-model=\"data.flag1\">\n                    <vxe-radio label=\"Y\" content=\"是\"></vxe-radio>\n                    <vxe-radio label=\"N\" content=\"否\"></vxe-radio>\n                  </vxe-radio-group>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"checkedList\" title=\"可选信息\" :visible-method=\"visibleMethod\" :span=\"24\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-checkbox-group v-model=\"data.checkedList\">\n                    <vxe-checkbox label=\"1\" content=\"运动、跑步\"></vxe-checkbox>\n                    <vxe-checkbox label=\"2\" content=\"听音乐\"></vxe-checkbox>\n                    <vxe-checkbox label=\"3\" content=\"爬山\"></vxe-checkbox>\n                    <vxe-checkbox label=\"4\" content=\"吃美食\"></vxe-checkbox>\n                  </vxe-checkbox-group>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item title=\"Other information\" title-align=\"left\" :title-width=\"200\" :span=\"24\" :title-prefix=\"{message: '请填写必填项', icon: 'fa fa-info-circle'}\"></vxe-form-item>\n              <vxe-form-item field=\"num\" title=\"Number\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.num\" type=\"number\" placeholder=\"请输入数值\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"date3\" title=\"Date\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.date3\" type=\"date\" placeholder=\"请选择日期\" transfer></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"address\" title=\"Date\" :span=\"24\" :item-render=\"{}\" :title-suffix=\"{message: '提示信息！！', icon: 'fa fa-question-circle'}\">\n                <template #default=\"{ data }\">\n                  <vxe-textarea v-model=\"data.address\" :autosize=\"{minRows: 2, maxRows: 4}\"></vxe-textarea>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item align=\"center\" title-align=\"left\" :span=\"24\">\n                <template #default>\n                  <vxe-button type=\"submit\">提交</vxe-button>\n                  <vxe-button type=\"reset\">重置</vxe-button>\n                </template>\n              </vxe-form-item>\n            </vxe-form>\n          </template>\n        </vxe-modal>\n</template>\n\n<script>\nexport default {\n  \n}\n</script>\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VXETable, VxeTableInstance, VxeColumnPropTypes, VxeFormPropTypes, VxeFormItemPropTypes, VxeTableEvents } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const demo1 = reactive({\n              submitLoading: false,\n              tableData: [] as any[],\n              selectRow: null,\n              showEdit: false,\n              formData: {\n                name: '',\n                nickname: '',\n                role: '',\n                sex: '',\n                age: '',\n                num: '',\n                checkedList: [],\n                flag1: '',\n                date3: '',\n                address: ''\n              },\n              sexList: [\n                { label: '女', value: '0' },\n                { label: '男', value: '1' }\n              ],\n              formRules: {\n                name: [\n                  { required: true, message: '请输入名称' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符' }\n                ],\n                nickname: [\n                  { required: true, message: '请输入昵称' }\n                ],\n                sex: [\n                  { required: true, message: '请选择性别' }\n                ]\n              } as VxeFormPropTypes.Rules\n            })\n\n            const xTable = ref({} as VxeTableInstance)\n\n            const formatterSex: VxeColumnPropTypes.Formatter = ({ cellValue }) => {\n              const item = demo1.sexList.find(item => item.value === cellValue)\n              return item ? item.label : ''\n            }\n\n            const visibleMethod: VxeFormItemPropTypes.VisibleMethod = ({ data }) => {\n              return data.flag1 === 'Y'\n            }\n\n            const insertEvent = () => {\n              demo1.formData = {\n                name: '',\n                nickname: '',\n                role: '',\n                sex: '',\n                age: '',\n                num: '',\n                checkedList: [],\n                flag1: '',\n                date3: '',\n                address: ''\n              }\n              demo1.selectRow = null\n              demo1.showEdit = true\n            }\n\n            const editEvent = (row: any) => {\n              demo1.formData = {\n                name: row.name,\n                nickname: row.nickname,\n                role: row.role,\n                sex: row.sex,\n                age: row.age,\n                num: row.num,\n                checkedList: row.checkedList,\n                flag1: row.flag1,\n                date3: row.date3,\n                address: row.address\n              }\n              demo1.selectRow = row\n              demo1.showEdit = true\n            }\n\n            const cellDBLClickEvent: VxeTableEvents.CellDblclick = ({ row }) => {\n              editEvent(row)\n            }\n\n            const removeEvent = async (row: any) => {\n              const type = await VXETable.modal.confirm('您确定要删除该数据?')\n              if (type === 'confirm') {\n                const $table = xTable.value\n                $table.remove(row)\n              }\n            }\n\n            const submitEvent = () => {\n              demo1.submitLoading = true\n              setTimeout(() => {\n                const $table = xTable.value\n                demo1.submitLoading = false\n                demo1.showEdit = false\n                if (demo1.selectRow) {\n                  VXETable.modal.message({ content: '保存成功', status: 'success' })\n                  Object.assign(demo1.selectRow, demo1.formData)\n                } else {\n                  VXETable.modal.message({ content: '新增成功', status: 'success' })\n                  $table.insert(demo1.formData)\n                }\n              }, 500)\n            }\n            setTimeout(() => {\n              const list = [\n                { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '0', sex2: ['0'], num1: 40, age: 28, address: 'Shenzhen', date12: '', date13: '' },\n                { id: 10002, name: 'Test2', nickname: 'T2', role: 'Designer', sex: '1', sex2: ['0', '1'], num1: 20, age: 22, address: 'Guangzhou', date12: '', date13: '2020-08-20' },\n                { id: 10003, name: 'Test3', nickname: 'T3', role: 'Test', sex: '0', sex2: ['1'], num1: 200, age: 32, address: 'Shanghai', date12: '2020-09-10', date13: '' },\n                { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '1', sex2: ['1'], num1: 30, age: 23, address: 'Shenzhen', date12: '', date13: '2020-12-04' }\n              ]\n            }, 50)\n\n            return {\n              demo1,\n              xTable,\n              formatterSex,\n              visibleMethod,\n              cellDBLClickEvent,\n              insertEvent,\n              editEvent,\n              removeEvent,\n              submitEvent\n            }\n          }\n        })"]},"metadata":{},"sourceType":"module"}