{"ast":null,"code":"var helperNumberDecimal = require('./helperNumberDecimal');\n\nvar toNumberString = require('./toNumberString');\n\nvar multiply = require('./multiply');\n\nfunction helperNumberDivide(divisor, dividend) {\n  var str1 = toNumberString(divisor);\n  var str2 = toNumberString(dividend);\n  var divisorDecimal = helperNumberDecimal(str1);\n  var dividendDecimal = helperNumberDecimal(str2);\n  var powY = dividendDecimal - divisorDecimal;\n  var isMinus = powY < 0;\n  var multiplicand = Math.pow(10, isMinus ? Math.abs(powY) : powY);\n  return multiply(str1.replace('.', '') / str2.replace('.', ''), isMinus ? 1 / multiplicand : multiplicand);\n}\n\nmodule.exports = helperNumberDivide;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/helperNumberDivide.js"],"names":["helperNumberDecimal","require","toNumberString","multiply","helperNumberDivide","divisor","dividend","str1","str2","divisorDecimal","dividendDecimal","powY","isMinus","multiplicand","Math","pow","abs","replace","module","exports"],"mappings":"AAAA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AAEA,SAASG,kBAAT,CAA6BC,OAA7B,EAAsCC,QAAtC,EAAgD;AAC9C,MAAIC,IAAI,GAAGL,cAAc,CAACG,OAAD,CAAzB;AACA,MAAIG,IAAI,GAAGN,cAAc,CAACI,QAAD,CAAzB;AACA,MAAIG,cAAc,GAAGT,mBAAmB,CAACO,IAAD,CAAxC;AACA,MAAIG,eAAe,GAAGV,mBAAmB,CAACQ,IAAD,CAAzC;AACA,MAAIG,IAAI,GAAGD,eAAe,GAAGD,cAA7B;AACA,MAAIG,OAAO,GAAGD,IAAI,GAAG,CAArB;AACA,MAAIE,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaH,OAAO,GAAGE,IAAI,CAACE,GAAL,CAASL,IAAT,CAAH,GAAoBA,IAAxC,CAAnB;AACA,SAAOR,QAAQ,CAACI,IAAI,CAACU,OAAL,CAAa,GAAb,EAAkB,EAAlB,IAAwBT,IAAI,CAACS,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAzB,EAAgDL,OAAO,GAAG,IAAIC,YAAP,GAAsBA,YAA7E,CAAf;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBf,kBAAjB","sourcesContent":["var helperNumberDecimal = require('./helperNumberDecimal')\r\nvar toNumberString = require('./toNumberString')\r\nvar multiply = require('./multiply')\r\n\r\nfunction helperNumberDivide (divisor, dividend) {\r\n  var str1 = toNumberString(divisor)\r\n  var str2 = toNumberString(dividend)\r\n  var divisorDecimal = helperNumberDecimal(str1)\r\n  var dividendDecimal = helperNumberDecimal(str2)\r\n  var powY = dividendDecimal - divisorDecimal\r\n  var isMinus = powY < 0\r\n  var multiplicand = Math.pow(10, isMinus ? Math.abs(powY) : powY)\r\n  return multiply(str1.replace('.', '') / str2.replace('.', ''), isMinus ? 1 / multiplicand : multiplicand)\r\n}\r\n\r\nmodule.exports = helperNumberDivide\r\n"]},"metadata":{},"sourceType":"script"}