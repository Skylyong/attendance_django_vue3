{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, reactive, withKeys, defineComponent } from \"vue\";\nimport { noop, pick, extend, addUnit, truthProp, isFunction, BORDER_TOP, BORDER_LEFT, unknownProp, numericProp, makeStringProp, callInterceptor, createNamespace } from \"../utils\";\nimport { popupSharedProps, popupSharedPropKeys } from \"../popup/shared\";\nimport { Popup } from \"../popup\";\nimport { Button } from \"../button\";\nimport { ActionBar } from \"../action-bar\";\nimport { ActionBarButton } from \"../action-bar-button\";\nconst [name, bem, t] = createNamespace(\"dialog\");\nconst dialogProps = extend({}, popupSharedProps, {\n  title: String,\n  theme: String,\n  width: numericProp,\n  message: [String, Function],\n  callback: Function,\n  allowHtml: Boolean,\n  className: unknownProp,\n  transition: makeStringProp(\"van-dialog-bounce\"),\n  messageAlign: String,\n  closeOnPopstate: truthProp,\n  showCancelButton: Boolean,\n  cancelButtonText: String,\n  cancelButtonColor: String,\n  confirmButtonText: String,\n  confirmButtonColor: String,\n  showConfirmButton: truthProp,\n  closeOnClickOverlay: Boolean\n});\nconst popupInheritKeys = [...popupSharedPropKeys, \"transition\", \"closeOnPopstate\"];\nvar stdin_default = defineComponent({\n  name,\n  props: dialogProps,\n  emits: [\"confirm\", \"cancel\", \"keydown\", \"update:show\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const loading = reactive({\n      confirm: false,\n      cancel: false\n    });\n\n    const updateShow = value => emit(\"update:show\", value);\n\n    const close = action => {\n      var _a;\n\n      updateShow(false);\n      (_a = props.callback) == null ? void 0 : _a.call(props, action);\n    };\n\n    const getActionHandler = action => () => {\n      if (!props.show) {\n        return;\n      }\n\n      emit(action);\n\n      if (props.beforeClose) {\n        loading[action] = true;\n        callInterceptor(props.beforeClose, {\n          args: [action],\n\n          done() {\n            close(action);\n            loading[action] = false;\n          },\n\n          canceled() {\n            loading[action] = false;\n          }\n\n        });\n      } else {\n        close(action);\n      }\n    };\n\n    const onCancel = getActionHandler(\"cancel\");\n    const onConfirm = getActionHandler(\"confirm\");\n    const onKeydown = withKeys(event => {\n      var _a, _b;\n\n      if (event.target !== ((_b = (_a = root.value) == null ? void 0 : _a.popupRef) == null ? void 0 : _b.value)) {\n        return;\n      }\n\n      const onEventType = {\n        Enter: props.showConfirmButton ? onConfirm : noop,\n        Escape: props.showCancelButton ? onCancel : noop\n      };\n      onEventType[event.key]();\n      emit(\"keydown\", event);\n    }, [\"enter\", \"esc\"]);\n\n    const renderTitle = () => {\n      const title = slots.title ? slots.title() : props.title;\n\n      if (title) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"header\", {\n            isolated: !props.message && !slots.default\n          })\n        }, [title]);\n      }\n    };\n\n    const renderMessage = hasTitle => {\n      const {\n        message,\n        allowHtml,\n        messageAlign\n      } = props;\n      const classNames = bem(\"message\", {\n        \"has-title\": hasTitle,\n        [messageAlign]: messageAlign\n      });\n      const content = isFunction(message) ? message() : message;\n\n      if (allowHtml && typeof content === \"string\") {\n        return _createVNode(\"div\", {\n          \"class\": classNames,\n          \"innerHTML\": content\n        }, null);\n      }\n\n      return _createVNode(\"div\", {\n        \"class\": classNames\n      }, [content]);\n    };\n\n    const renderContent = () => {\n      if (slots.default) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"content\")\n        }, [slots.default()]);\n      }\n\n      const {\n        title,\n        message,\n        allowHtml\n      } = props;\n\n      if (message) {\n        const hasTitle = !!(title || slots.title);\n        return _createVNode(\"div\", {\n          \"key\": allowHtml ? 1 : 0,\n          \"class\": bem(\"content\", {\n            isolated: !hasTitle\n          })\n        }, [renderMessage(hasTitle)]);\n      }\n    };\n\n    const renderButtons = () => _createVNode(\"div\", {\n      \"class\": [BORDER_TOP, bem(\"footer\")]\n    }, [props.showCancelButton && _createVNode(Button, {\n      \"size\": \"large\",\n      \"text\": props.cancelButtonText || t(\"cancel\"),\n      \"class\": bem(\"cancel\"),\n      \"style\": {\n        color: props.cancelButtonColor\n      },\n      \"loading\": loading.cancel,\n      \"onClick\": onCancel\n    }, null), props.showConfirmButton && _createVNode(Button, {\n      \"size\": \"large\",\n      \"text\": props.confirmButtonText || t(\"confirm\"),\n      \"class\": [bem(\"confirm\"), {\n        [BORDER_LEFT]: props.showCancelButton\n      }],\n      \"style\": {\n        color: props.confirmButtonColor\n      },\n      \"loading\": loading.confirm,\n      \"onClick\": onConfirm\n    }, null)]);\n\n    const renderRoundButtons = () => _createVNode(ActionBar, {\n      \"class\": bem(\"footer\")\n    }, {\n      default: () => [props.showCancelButton && _createVNode(ActionBarButton, {\n        \"type\": \"warning\",\n        \"text\": props.cancelButtonText || t(\"cancel\"),\n        \"class\": bem(\"cancel\"),\n        \"color\": props.cancelButtonColor,\n        \"loading\": loading.cancel,\n        \"onClick\": onCancel\n      }, null), props.showConfirmButton && _createVNode(ActionBarButton, {\n        \"type\": \"danger\",\n        \"text\": props.confirmButtonText || t(\"confirm\"),\n        \"class\": bem(\"confirm\"),\n        \"color\": props.confirmButtonColor,\n        \"loading\": loading.confirm,\n        \"onClick\": onConfirm\n      }, null)]\n    });\n\n    const renderFooter = () => {\n      if (slots.footer) {\n        return slots.footer();\n      }\n\n      return props.theme === \"round-button\" ? renderRoundButtons() : renderButtons();\n    };\n\n    return () => {\n      const {\n        width,\n        title,\n        theme,\n        message,\n        className\n      } = props;\n      return _createVNode(Popup, _mergeProps({\n        \"ref\": root,\n        \"role\": \"dialog\",\n        \"class\": [bem([theme]), className],\n        \"style\": {\n          width: addUnit(width)\n        },\n        \"tabindex\": 0,\n        \"aria-labelledby\": title || message,\n        \"onKeydown\": onKeydown,\n        \"onUpdate:show\": updateShow\n      }, pick(props, popupInheritKeys)), {\n        default: () => [renderTitle(), renderContent(), renderFooter()]\n      });\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/dialog/Dialog.js"],"names":["mergeProps","_mergeProps","createVNode","_createVNode","ref","reactive","withKeys","defineComponent","noop","pick","extend","addUnit","truthProp","isFunction","BORDER_TOP","BORDER_LEFT","unknownProp","numericProp","makeStringProp","callInterceptor","createNamespace","popupSharedProps","popupSharedPropKeys","Popup","Button","ActionBar","ActionBarButton","name","bem","t","dialogProps","title","String","theme","width","message","Function","callback","allowHtml","Boolean","className","transition","messageAlign","closeOnPopstate","showCancelButton","cancelButtonText","cancelButtonColor","confirmButtonText","confirmButtonColor","showConfirmButton","closeOnClickOverlay","popupInheritKeys","stdin_default","props","emits","setup","emit","slots","root","loading","confirm","cancel","updateShow","value","close","action","_a","call","getActionHandler","show","beforeClose","args","done","canceled","onCancel","onConfirm","onKeydown","event","_b","target","popupRef","onEventType","Enter","Escape","key","renderTitle","isolated","default","renderMessage","hasTitle","classNames","content","renderContent","renderButtons","color","renderRoundButtons","renderFooter","footer"],"mappings":"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","sourcesContent":["import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, reactive, withKeys, defineComponent } from \"vue\";\nimport { noop, pick, extend, addUnit, truthProp, isFunction, BORDER_TOP, BORDER_LEFT, unknownProp, numericProp, makeStringProp, callInterceptor, createNamespace } from \"../utils\";\nimport { popupSharedProps, popupSharedPropKeys } from \"../popup/shared\";\nimport { Popup } from \"../popup\";\nimport { Button } from \"../button\";\nimport { ActionBar } from \"../action-bar\";\nimport { ActionBarButton } from \"../action-bar-button\";\nconst [name, bem, t] = createNamespace(\"dialog\");\nconst dialogProps = extend({}, popupSharedProps, {\n  title: String,\n  theme: String,\n  width: numericProp,\n  message: [String, Function],\n  callback: Function,\n  allowHtml: Boolean,\n  className: unknownProp,\n  transition: makeStringProp(\"van-dialog-bounce\"),\n  messageAlign: String,\n  closeOnPopstate: truthProp,\n  showCancelButton: Boolean,\n  cancelButtonText: String,\n  cancelButtonColor: String,\n  confirmButtonText: String,\n  confirmButtonColor: String,\n  showConfirmButton: truthProp,\n  closeOnClickOverlay: Boolean\n});\nconst popupInheritKeys = [...popupSharedPropKeys, \"transition\", \"closeOnPopstate\"];\nvar stdin_default = defineComponent({\n  name,\n  props: dialogProps,\n  emits: [\"confirm\", \"cancel\", \"keydown\", \"update:show\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const loading = reactive({\n      confirm: false,\n      cancel: false\n    });\n    const updateShow = (value) => emit(\"update:show\", value);\n    const close = (action) => {\n      var _a;\n      updateShow(false);\n      (_a = props.callback) == null ? void 0 : _a.call(props, action);\n    };\n    const getActionHandler = (action) => () => {\n      if (!props.show) {\n        return;\n      }\n      emit(action);\n      if (props.beforeClose) {\n        loading[action] = true;\n        callInterceptor(props.beforeClose, {\n          args: [action],\n          done() {\n            close(action);\n            loading[action] = false;\n          },\n          canceled() {\n            loading[action] = false;\n          }\n        });\n      } else {\n        close(action);\n      }\n    };\n    const onCancel = getActionHandler(\"cancel\");\n    const onConfirm = getActionHandler(\"confirm\");\n    const onKeydown = withKeys((event) => {\n      var _a, _b;\n      if (event.target !== ((_b = (_a = root.value) == null ? void 0 : _a.popupRef) == null ? void 0 : _b.value)) {\n        return;\n      }\n      const onEventType = {\n        Enter: props.showConfirmButton ? onConfirm : noop,\n        Escape: props.showCancelButton ? onCancel : noop\n      };\n      onEventType[event.key]();\n      emit(\"keydown\", event);\n    }, [\"enter\", \"esc\"]);\n    const renderTitle = () => {\n      const title = slots.title ? slots.title() : props.title;\n      if (title) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"header\", {\n            isolated: !props.message && !slots.default\n          })\n        }, [title]);\n      }\n    };\n    const renderMessage = (hasTitle) => {\n      const {\n        message,\n        allowHtml,\n        messageAlign\n      } = props;\n      const classNames = bem(\"message\", {\n        \"has-title\": hasTitle,\n        [messageAlign]: messageAlign\n      });\n      const content = isFunction(message) ? message() : message;\n      if (allowHtml && typeof content === \"string\") {\n        return _createVNode(\"div\", {\n          \"class\": classNames,\n          \"innerHTML\": content\n        }, null);\n      }\n      return _createVNode(\"div\", {\n        \"class\": classNames\n      }, [content]);\n    };\n    const renderContent = () => {\n      if (slots.default) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"content\")\n        }, [slots.default()]);\n      }\n      const {\n        title,\n        message,\n        allowHtml\n      } = props;\n      if (message) {\n        const hasTitle = !!(title || slots.title);\n        return _createVNode(\"div\", {\n          \"key\": allowHtml ? 1 : 0,\n          \"class\": bem(\"content\", {\n            isolated: !hasTitle\n          })\n        }, [renderMessage(hasTitle)]);\n      }\n    };\n    const renderButtons = () => _createVNode(\"div\", {\n      \"class\": [BORDER_TOP, bem(\"footer\")]\n    }, [props.showCancelButton && _createVNode(Button, {\n      \"size\": \"large\",\n      \"text\": props.cancelButtonText || t(\"cancel\"),\n      \"class\": bem(\"cancel\"),\n      \"style\": {\n        color: props.cancelButtonColor\n      },\n      \"loading\": loading.cancel,\n      \"onClick\": onCancel\n    }, null), props.showConfirmButton && _createVNode(Button, {\n      \"size\": \"large\",\n      \"text\": props.confirmButtonText || t(\"confirm\"),\n      \"class\": [bem(\"confirm\"), {\n        [BORDER_LEFT]: props.showCancelButton\n      }],\n      \"style\": {\n        color: props.confirmButtonColor\n      },\n      \"loading\": loading.confirm,\n      \"onClick\": onConfirm\n    }, null)]);\n    const renderRoundButtons = () => _createVNode(ActionBar, {\n      \"class\": bem(\"footer\")\n    }, {\n      default: () => [props.showCancelButton && _createVNode(ActionBarButton, {\n        \"type\": \"warning\",\n        \"text\": props.cancelButtonText || t(\"cancel\"),\n        \"class\": bem(\"cancel\"),\n        \"color\": props.cancelButtonColor,\n        \"loading\": loading.cancel,\n        \"onClick\": onCancel\n      }, null), props.showConfirmButton && _createVNode(ActionBarButton, {\n        \"type\": \"danger\",\n        \"text\": props.confirmButtonText || t(\"confirm\"),\n        \"class\": bem(\"confirm\"),\n        \"color\": props.confirmButtonColor,\n        \"loading\": loading.confirm,\n        \"onClick\": onConfirm\n      }, null)]\n    });\n    const renderFooter = () => {\n      if (slots.footer) {\n        return slots.footer();\n      }\n      return props.theme === \"round-button\" ? renderRoundButtons() : renderButtons();\n    };\n    return () => {\n      const {\n        width,\n        title,\n        theme,\n        message,\n        className\n      } = props;\n      return _createVNode(Popup, _mergeProps({\n        \"ref\": root,\n        \"role\": \"dialog\",\n        \"class\": [bem([theme]), className],\n        \"style\": {\n          width: addUnit(width)\n        },\n        \"tabindex\": 0,\n        \"aria-labelledby\": title || message,\n        \"onKeydown\": onKeydown,\n        \"onUpdate:show\": updateShow\n      }, pick(props, popupInheritKeys)), {\n        default: () => [renderTitle(), renderContent(), renderFooter()]\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}