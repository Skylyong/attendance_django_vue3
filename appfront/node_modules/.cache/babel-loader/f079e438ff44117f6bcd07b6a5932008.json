{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, inject, provide } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport Checkbox from './Checkbox';\nimport hasProp, { getSlot } from '../_util/props-util';\nimport { defaultConfigProvider } from '../config-provider';\n\nfunction noop() {}\n\nexport default defineComponent({\n  name: 'ACheckboxGroup',\n  props: {\n    name: PropTypes.string,\n    prefixCls: PropTypes.string,\n    defaultValue: {\n      type: Array\n    },\n    value: {\n      type: Array\n    },\n    options: {\n      type: Array\n    },\n    disabled: PropTypes.looseBool,\n    onChange: PropTypes.func\n  },\n  emits: ['change', 'update:value'],\n  setup: function setup() {\n    return {\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  data: function data() {\n    var value = this.value,\n        defaultValue = this.defaultValue;\n    return {\n      sValue: value || defaultValue || [],\n      registeredValues: []\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.sValue = val || [];\n    }\n  },\n  created: function created() {\n    provide('checkboxGroupContext', this);\n  },\n  methods: {\n    getOptions: function getOptions() {\n      var _this$options = this.options,\n          options = _this$options === void 0 ? [] : _this$options,\n          $slots = this.$slots;\n      return options.map(function (option) {\n        if (typeof option === 'string') {\n          return {\n            label: option,\n            value: option\n          };\n        }\n\n        var label = option.label;\n\n        if (label === undefined && $slots.label) {\n          label = $slots.label(option);\n        }\n\n        return _extends(_extends({}, option), {\n          label: label\n        });\n      });\n    },\n    cancelValue: function cancelValue(value) {\n      this.registeredValues = this.registeredValues.filter(function (val) {\n        return val !== value;\n      });\n    },\n    registerValue: function registerValue(value) {\n      this.registeredValues = [].concat(_toConsumableArray(this.registeredValues), [value]);\n    },\n    toggleOption: function toggleOption(option) {\n      var registeredValues = this.registeredValues;\n      var optionIndex = this.sValue.indexOf(option.value);\n\n      var value = _toConsumableArray(this.sValue);\n\n      if (optionIndex === -1) {\n        value.push(option.value);\n      } else {\n        value.splice(optionIndex, 1);\n      }\n\n      if (!hasProp(this, 'value')) {\n        this.sValue = value;\n      }\n\n      var options = this.getOptions();\n      var val = value.filter(function (val) {\n        return registeredValues.indexOf(val) !== -1;\n      }).sort(function (a, b) {\n        var indexA = options.findIndex(function (opt) {\n          return opt.value === a;\n        });\n        var indexB = options.findIndex(function (opt) {\n          return opt.value === b;\n        });\n        return indexA - indexB;\n      }); // this.$emit('input', val);\n\n      this.$emit('update:value', val);\n      this.$emit('change', val);\n    }\n  },\n  render: function render() {\n    var props = this.$props,\n        state = this.$data;\n    var customizePrefixCls = props.prefixCls,\n        options = props.options;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n    var children = getSlot(this);\n    var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n\n    if (options && options.length > 0) {\n      children = this.getOptions().map(function (option) {\n        return _createVNode(Checkbox, {\n          \"prefixCls\": prefixCls,\n          \"key\": option.value.toString(),\n          \"disabled\": 'disabled' in option ? option.disabled : props.disabled,\n          \"indeterminate\": option.indeterminate,\n          \"value\": option.value,\n          \"checked\": state.sValue.indexOf(option.value) !== -1,\n          \"onChange\": option.onChange || noop,\n          \"class\": \"\".concat(groupPrefixCls, \"-item\")\n        }, {\n          default: function _default() {\n            return [option.label];\n          }\n        });\n      });\n    }\n\n    return _createVNode(\"div\", {\n      \"class\": groupPrefixCls\n    }, [children]);\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/checkbox/Group.js"],"names":["_toConsumableArray","_extends","createVNode","_createVNode","defineComponent","inject","provide","PropTypes","Checkbox","hasProp","getSlot","defaultConfigProvider","noop","name","props","string","prefixCls","defaultValue","type","Array","value","options","disabled","looseBool","onChange","func","emits","setup","configProvider","data","sValue","registeredValues","watch","val","created","methods","getOptions","_this$options","$slots","map","option","label","undefined","cancelValue","filter","registerValue","concat","toggleOption","optionIndex","indexOf","push","splice","sort","a","b","indexA","findIndex","opt","indexB","$emit","render","$props","state","$data","customizePrefixCls","getPrefixCls","children","groupPrefixCls","length","toString","indeterminate","default","_default"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, inject, provide } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport Checkbox from './Checkbox';\nimport hasProp, { getSlot } from '../_util/props-util';\nimport { defaultConfigProvider } from '../config-provider';\n\nfunction noop() {}\n\nexport default defineComponent({\n  name: 'ACheckboxGroup',\n  props: {\n    name: PropTypes.string,\n    prefixCls: PropTypes.string,\n    defaultValue: {\n      type: Array\n    },\n    value: {\n      type: Array\n    },\n    options: {\n      type: Array\n    },\n    disabled: PropTypes.looseBool,\n    onChange: PropTypes.func\n  },\n  emits: ['change', 'update:value'],\n  setup: function setup() {\n    return {\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  data: function data() {\n    var value = this.value,\n        defaultValue = this.defaultValue;\n    return {\n      sValue: value || defaultValue || [],\n      registeredValues: []\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.sValue = val || [];\n    }\n  },\n  created: function created() {\n    provide('checkboxGroupContext', this);\n  },\n  methods: {\n    getOptions: function getOptions() {\n      var _this$options = this.options,\n          options = _this$options === void 0 ? [] : _this$options,\n          $slots = this.$slots;\n      return options.map(function (option) {\n        if (typeof option === 'string') {\n          return {\n            label: option,\n            value: option\n          };\n        }\n\n        var label = option.label;\n\n        if (label === undefined && $slots.label) {\n          label = $slots.label(option);\n        }\n\n        return _extends(_extends({}, option), {\n          label: label\n        });\n      });\n    },\n    cancelValue: function cancelValue(value) {\n      this.registeredValues = this.registeredValues.filter(function (val) {\n        return val !== value;\n      });\n    },\n    registerValue: function registerValue(value) {\n      this.registeredValues = [].concat(_toConsumableArray(this.registeredValues), [value]);\n    },\n    toggleOption: function toggleOption(option) {\n      var registeredValues = this.registeredValues;\n      var optionIndex = this.sValue.indexOf(option.value);\n\n      var value = _toConsumableArray(this.sValue);\n\n      if (optionIndex === -1) {\n        value.push(option.value);\n      } else {\n        value.splice(optionIndex, 1);\n      }\n\n      if (!hasProp(this, 'value')) {\n        this.sValue = value;\n      }\n\n      var options = this.getOptions();\n      var val = value.filter(function (val) {\n        return registeredValues.indexOf(val) !== -1;\n      }).sort(function (a, b) {\n        var indexA = options.findIndex(function (opt) {\n          return opt.value === a;\n        });\n        var indexB = options.findIndex(function (opt) {\n          return opt.value === b;\n        });\n        return indexA - indexB;\n      }); // this.$emit('input', val);\n\n      this.$emit('update:value', val);\n      this.$emit('change', val);\n    }\n  },\n  render: function render() {\n    var props = this.$props,\n        state = this.$data;\n    var customizePrefixCls = props.prefixCls,\n        options = props.options;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n    var children = getSlot(this);\n    var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n\n    if (options && options.length > 0) {\n      children = this.getOptions().map(function (option) {\n        return _createVNode(Checkbox, {\n          \"prefixCls\": prefixCls,\n          \"key\": option.value.toString(),\n          \"disabled\": 'disabled' in option ? option.disabled : props.disabled,\n          \"indeterminate\": option.indeterminate,\n          \"value\": option.value,\n          \"checked\": state.sValue.indexOf(option.value) !== -1,\n          \"onChange\": option.onChange || noop,\n          \"class\": \"\".concat(groupPrefixCls, \"-item\")\n        }, {\n          default: function _default() {\n            return [option.label];\n          }\n        });\n      });\n    }\n\n    return _createVNode(\"div\", {\n      \"class\": groupPrefixCls\n    }, [children]);\n  }\n});"]},"metadata":{},"sourceType":"module"}