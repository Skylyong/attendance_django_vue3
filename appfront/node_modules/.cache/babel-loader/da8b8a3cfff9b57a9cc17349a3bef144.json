{"ast":null,"code":"import { defineComponent, reactive, ref } from 'vue';\nimport { VXETable, VxeTableInstance, VxeColumnPropTypes, VxeFormPropTypes, VxeFormItemPropTypes, VxeTableEvents } from 'vxe-table';\nexport default defineComponent({\n  setup() {\n    const demo1 = reactive({\n      submitLoading: false,\n      tableData: [],\n      selectRow: null,\n      showEdit: false,\n      formData: {\n        name: '',\n        nickname: '',\n        role: '',\n        sex: '',\n        age: '',\n        num: '',\n        checkedList: [],\n        flag1: '',\n        date3: '',\n        address: ''\n      },\n      sexList: [{\n        label: '女',\n        value: '0'\n      }, {\n        label: '男',\n        value: '1'\n      }],\n      formRules: {\n        name: [{\n          required: true,\n          message: '请输入名称'\n        }, {\n          min: 3,\n          max: 5,\n          message: '长度在 3 到 5 个字符'\n        }],\n        // nickname: [\n        //   { required: true, message: '请输入昵称' }\n        // ],\n        sex: [{\n          required: true,\n          message: '请选择性别'\n        }]\n      }\n    });\n    const xTable = ref({});\n\n    const formatterSex = ({\n      cellValue\n    }) => {\n      const item = demo1.sexList.find(item => item.value === cellValue);\n      return item ? item.label : '';\n    };\n\n    const visibleMethod = ({\n      data\n    }) => {\n      return data.flag1 === 'Y';\n    };\n\n    const insertEvent = () => {\n      demo1.formData = {\n        name: '',\n        nickname: '',\n        role: '',\n        sex: '',\n        age: '',\n        num: '',\n        checkedList: [],\n        flag1: '',\n        date3: '',\n        address: ''\n      };\n      demo1.selectRow = null;\n      demo1.showEdit = true;\n    };\n\n    const editEvent = row => {\n      demo1.formData = {\n        name: row.name,\n        nickname: row.nickname,\n        role: row.role,\n        sex: row.sex,\n        age: row.age,\n        num: row.num,\n        checkedList: row.checkedList,\n        flag1: row.flag1,\n        date3: row.date3,\n        address: row.address\n      };\n      demo1.selectRow = row;\n      demo1.showEdit = true;\n    };\n\n    const cellDBLClickEvent = ({\n      row\n    }) => {\n      editEvent(row);\n    };\n\n    const removeEvent = async row => {\n      const type = await VXETable.modal.confirm('您确定要删除该数据?');\n\n      if (type === 'confirm') {\n        const $table = xTable.value;\n        $table.remove(row);\n      }\n    };\n\n    const submitEvent = () => {\n      demo1.submitLoading = true; // const errMap = $table.validate(true)\n\n      setTimeout(() => {\n        // const $table = xTable.value\n        demo1.submitLoading = false;\n        demo1.showEdit = false; // if (errMap) {\n        //   VXETable.modal.message({ status: 'error', content: '请按照要求填写！' })\n        // } else {\n        //   if (demo1.selectRow) {\n        //   VXETable.modal.message({ content: '保存成功', status: 'success' })\n        //   Object.assign(demo1.selectRow, demo1.formData)\n        // } else {\n        //   VXETable.modal.message({ content: '新增成功', status: 'success' })\n        //   $table.insert(demo1.formData)\n        // }\n        // }\n\n        if (demo1.selectRow) {\n          VXETable.modal.message({\n            content: '保存成功',\n            status: 'success'\n          });\n          Object.assign(demo1.selectRow, demo1.formData);\n        } else {\n          VXETable.modal.message({\n            content: '新增成功',\n            status: 'success'\n          });\n          $table.insert(demo1.formData);\n        }\n      }, 500);\n    };\n\n    setTimeout(() => {\n      const list = [{\n        id: 10001,\n        name: 'Test1',\n        nickname: 'T1',\n        role: 'Develop',\n        sex: '0',\n        sex2: ['0'],\n        num1: 40,\n        age: 28,\n        address: 'Shenzhen',\n        date12: '',\n        date13: ''\n      }, {\n        id: 10002,\n        name: 'Test2',\n        nickname: 'T2',\n        role: 'Designer',\n        sex: '1',\n        sex2: ['0', '1'],\n        num1: 20,\n        age: 22,\n        address: 'Guangzhou',\n        date12: '',\n        date13: '2020-08-20'\n      }, {\n        id: 10003,\n        name: 'Test3',\n        nickname: 'T3',\n        role: 'Test',\n        sex: '0',\n        sex2: ['1'],\n        num1: 200,\n        age: 32,\n        address: 'Shanghai',\n        date12: '2020-09-10',\n        date13: ''\n      }, {\n        id: 10004,\n        name: 'Test4',\n        nickname: 'T4',\n        role: 'Designer',\n        sex: '1',\n        sex2: ['1'],\n        num1: 30,\n        age: 23,\n        address: 'Shenzhen',\n        date12: '',\n        date13: '2020-12-04'\n      }];\n    }, 50);\n    return {\n      demo1,\n      xTable,\n      formatterSex,\n      visibleMethod,\n      cellDBLClickEvent,\n      insertEvent,\n      editEvent,\n      removeEvent,\n      submitEvent\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["defineComponent","reactive","ref","VXETable","VxeTableInstance","VxeColumnPropTypes","VxeFormPropTypes","VxeFormItemPropTypes","VxeTableEvents","setup","demo1","submitLoading","tableData","selectRow","showEdit","formData","name","nickname","role","sex","age","num","checkedList","flag1","date3","address","sexList","label","value","formRules","required","message","min","max","xTable","formatterSex","cellValue","item","find","visibleMethod","data","insertEvent","editEvent","row","cellDBLClickEvent","removeEvent","type","modal","confirm","$table","remove","submitEvent","setTimeout","content","status","Object","assign","insert","list","id","sex2","num1","date12","date13"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n    <vxe-toolbar>\n          <template #buttons>\n            <vxe-button icon=\"fa fa-plus\" @click=\"insertEvent()\">新增</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          border\n          show-overflow\n          ref=\"xTable\"\n          height=\"300\"\n          :column-config=\"{resizable: true}\"\n          :row-config=\"{isHover: true}\"\n          :data=\"demo1.tableData\"\n          @cell-dblclick=\"cellDBLClickEvent\">\n          <vxe-column type=\"seq\" width=\"60\"></vxe-column>\n          <vxe-column field=\"name\" title=\"Name\"></vxe-column>\n          <vxe-column field=\"sex\" title=\"Sex\" :formatter=\"formatterSex\"></vxe-column>\n          <vxe-column field=\"age\" title=\"Age\"></vxe-column>\n          <vxe-column field=\"address\" title=\"Address\" show-overflow></vxe-column>\n          <vxe-column title=\"操作\" width=\"150\" show-overflow>\n            <template #default=\"{ row }\">\n              <!-- <vxe-button type=\"text\" icon=\"fa fa-edit\" @click=\"editEvent(row)\"></vxe-button> -->\n              <vxe-button type=\"text\"  @click=\"editEvent(row)\">编辑</vxe-button>\n              <vxe-button type=\"text\"  @click=\"removeEvent(row)\">删除</vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n\n        <vxe-modal v-model=\"demo1.showEdit\" :title=\"demo1.selectRow ? '编辑&保存' : '新增&保存'\" width=\"800\" min-width=\"600\" min-height=\"300\" :loading=\"demo1.submitLoading\" resize destroy-on-close>\n          <template #default>\n            <vxe-form :data=\"demo1.formData\" :rules=\"demo1.formRules\" title-align=\"right\" title-width=\"100\" @submit=\"submitEvent\">\n              <vxe-form-item title=\"Basic information\" title-align=\"left\" :title-width=\"200\" :span=\"24\" :title-prefix=\"{icon: 'fa fa-address-card-o'}\"></vxe-form-item>\n              <vxe-form-item field=\"name\" title=\"Name\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.name\" placeholder=\"请输入名称\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"nickname\" title=\"Nickname\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.name\" placeholder=\"请输入名称\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"role\" title=\"Role\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.name\" placeholder=\"请输入角色\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"sex\" title=\"Sex\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-select v-model=\"data.sex\" transfer>\n                    <vxe-option v-for=\"item in demo1.sexList\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></vxe-option>\n                  </vxe-select>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"age\" title=\"Age\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.age\" type=\"number\" placeholder=\"请输入年龄\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"flag1\" title=\"是否单身\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-radio-group v-model=\"data.flag1\">\n                    <vxe-radio label=\"Y\" content=\"是\"></vxe-radio>\n                    <vxe-radio label=\"N\" content=\"否\"></vxe-radio>\n                  </vxe-radio-group>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"checkedList\" title=\"可选信息\" :visible-method=\"visibleMethod\" :span=\"24\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-checkbox-group v-model=\"data.checkedList\">\n                    <vxe-checkbox label=\"1\" content=\"运动、跑步\"></vxe-checkbox>\n                    <vxe-checkbox label=\"2\" content=\"听音乐\"></vxe-checkbox>\n                    <vxe-checkbox label=\"3\" content=\"爬山\"></vxe-checkbox>\n                    <vxe-checkbox label=\"4\" content=\"吃美食\"></vxe-checkbox>\n                  </vxe-checkbox-group>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item title=\"Other information\" title-align=\"left\" :title-width=\"200\" :span=\"24\" :title-prefix=\"{message: '请填写必填项', icon: 'fa fa-info-circle'}\"></vxe-form-item>\n              <vxe-form-item field=\"num\" title=\"Number\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.num\" type=\"number\" placeholder=\"请输入数值\"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"date3\" title=\"Date\" :span=\"12\" :item-render=\"{}\">\n                <template #default=\"{ data }\">\n                  <vxe-input v-model=\"data.date3\" type=\"date\" placeholder=\"请选择日期\" transfer></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item field=\"address\" title=\"Date\" :span=\"24\" :item-render=\"{}\" :title-suffix=\"{message: '提示信息！！', icon: 'fa fa-question-circle'}\">\n                <template #default=\"{ data }\">\n                  <vxe-textarea v-model=\"data.address\" :autosize=\"{minRows: 2, maxRows: 4}\"></vxe-textarea>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item align=\"center\" title-align=\"left\" :span=\"24\">\n                <template #default>\n                  <vxe-button type=\"submit\">提交</vxe-button>\n                  <vxe-button type=\"reset\">重置</vxe-button>\n                </template>\n              </vxe-form-item>\n            </vxe-form>\n          </template>\n        </vxe-modal>\n        \n</template>\n\n<script>\n  import { defineComponent, reactive, ref } from 'vue'\n        import { VXETable, VxeTableInstance, VxeColumnPropTypes, VxeFormPropTypes, VxeFormItemPropTypes, VxeTableEvents } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const demo1 = reactive({\n              submitLoading: false,\n              tableData: [] ,\n              selectRow: null,\n              showEdit: false,\n              formData: {\n                name: '',\n                nickname: '',\n                role: '',\n                sex: '',\n                age: '',\n                num: '',\n                checkedList: [],\n                flag1: '',\n                date3: '',\n                address: ''\n              },\n              sexList: [\n                { label: '女', value: '0' },\n                { label: '男', value: '1' }\n              ],\n              formRules: {\n                name: [\n                  { required: true, message: '请输入名称' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符' }\n                ],\n                // nickname: [\n                //   { required: true, message: '请输入昵称' }\n                // ],\n                sex: [\n                  { required: true, message: '请选择性别' }\n                ]\n              } \n            })\n\n            const xTable = ref({})\n\n            const formatterSex = ({ cellValue }) => {\n              const item = demo1.sexList.find(item => item.value === cellValue)\n              return item ? item.label : ''\n            }\n\n            const visibleMethod = ({ data }) => {\n              return data.flag1 === 'Y'\n            }\n\n            const insertEvent = () => {\n              demo1.formData = {\n                name: '',\n                nickname: '',\n                role: '',\n                sex: '',\n                age: '',\n                num: '',\n                checkedList: [],\n                flag1: '',\n                date3: '',\n                address: ''\n              }\n              demo1.selectRow = null\n              demo1.showEdit = true\n            }\n\n            const editEvent = (row) => {\n              demo1.formData = {\n                name: row.name,\n                nickname: row.nickname,\n                role: row.role,\n                sex: row.sex,\n                age: row.age,\n                num: row.num,\n                checkedList: row.checkedList,\n                flag1: row.flag1,\n                date3: row.date3,\n                address: row.address\n              }\n              demo1.selectRow = row\n              demo1.showEdit = true\n            }\n\n            const cellDBLClickEvent= ({ row }) => {\n              editEvent(row)\n            }\n\n            const removeEvent = async (row) => {\n              const type = await VXETable.modal.confirm('您确定要删除该数据?')\n              if (type === 'confirm') {\n                const $table = xTable.value\n                $table.remove(row)\n              }\n            }\n\n            const submitEvent = () => {\n              demo1.submitLoading = true\n              // const errMap = $table.validate(true)\n              setTimeout(() => {\n                // const $table = xTable.value\n                demo1.submitLoading = false\n                demo1.showEdit = false\n                // if (errMap) {\n                //   VXETable.modal.message({ status: 'error', content: '请按照要求填写！' })\n                // } else {\n                //   if (demo1.selectRow) {\n                //   VXETable.modal.message({ content: '保存成功', status: 'success' })\n                //   Object.assign(demo1.selectRow, demo1.formData)\n                // } else {\n                //   VXETable.modal.message({ content: '新增成功', status: 'success' })\n                //   $table.insert(demo1.formData)\n                // }\n                // }\n                if (demo1.selectRow) {\n                  VXETable.modal.message({ content: '保存成功', status: 'success' })\n                  Object.assign(demo1.selectRow, demo1.formData)\n                } else {\n                  VXETable.modal.message({ content: '新增成功', status: 'success' })\n                  $table.insert(demo1.formData)\n                }\n              }, 500)\n            }\n            setTimeout(() => {\n              const list = [\n                { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '0', sex2: ['0'], num1: 40, age: 28, address: 'Shenzhen', date12: '', date13: '' },\n                { id: 10002, name: 'Test2', nickname: 'T2', role: 'Designer', sex: '1', sex2: ['0', '1'], num1: 20, age: 22, address: 'Guangzhou', date12: '', date13: '2020-08-20' },\n                { id: 10003, name: 'Test3', nickname: 'T3', role: 'Test', sex: '0', sex2: ['1'], num1: 200, age: 32, address: 'Shanghai', date12: '2020-09-10', date13: '' },\n                { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '1', sex2: ['1'], num1: 30, age: 23, address: 'Shenzhen', date12: '', date13: '2020-12-04' }\n              ]\n            }, 50)\n\n            return {\n              demo1,\n              xTable,\n              formatterSex,\n              visibleMethod,\n              cellDBLClickEvent,\n              insertEvent,\n              editEvent,\n              removeEvent,\n              submitEvent\n            }\n          }\n        })\n        </script>\n"]},"metadata":{},"sourceType":"module"}