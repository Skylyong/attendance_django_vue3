{"ast":null,"code":"import { remove } from \"./util\";\nconst defaultOptions = {\n  selector: \"img\"\n};\n\nclass LazyContainer {\n  constructor({\n    el,\n    binding,\n    vnode,\n    lazy\n  }) {\n    this.el = null;\n    this.vnode = vnode;\n    this.binding = binding;\n    this.options = {};\n    this.lazy = lazy;\n    this.queue = [];\n    this.update({\n      el,\n      binding\n    });\n  }\n\n  update({\n    el,\n    binding\n  }) {\n    this.el = el;\n    this.options = Object.assign({}, defaultOptions, binding.value);\n    const imgs = this.getImgs();\n    imgs.forEach(el2 => {\n      this.lazy.add(el2, Object.assign({}, this.binding, {\n        value: {\n          src: \"dataset\" in el2 ? el2.dataset.src : el2.getAttribute(\"data-src\"),\n          error: (\"dataset\" in el2 ? el2.dataset.error : el2.getAttribute(\"data-error\")) || this.options.error,\n          loading: (\"dataset\" in el2 ? el2.dataset.loading : el2.getAttribute(\"data-loading\")) || this.options.loading\n        }\n      }), this.vnode);\n    });\n  }\n\n  getImgs() {\n    return Array.from(this.el.querySelectorAll(this.options.selector));\n  }\n\n  clear() {\n    const imgs = this.getImgs();\n    imgs.forEach(el => this.lazy.remove(el));\n    this.vnode = null;\n    this.binding = null;\n    this.lazy = null;\n  }\n\n}\n\nclass LazyContainerManager {\n  constructor({\n    lazy\n  }) {\n    this.lazy = lazy;\n    this.queue = [];\n  }\n\n  bind(el, binding, vnode) {\n    const container = new LazyContainer({\n      el,\n      binding,\n      vnode,\n      lazy: this.lazy\n    });\n    this.queue.push(container);\n  }\n\n  update(el, binding, vnode) {\n    const container = this.queue.find(item => item.el === el);\n    if (!container) return;\n    container.update({\n      el,\n      binding,\n      vnode\n    });\n  }\n\n  unbind(el) {\n    const container = this.queue.find(item => item.el === el);\n    if (!container) return;\n    container.clear();\n    remove(this.queue, container);\n  }\n\n}\n\nexport { LazyContainerManager as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/lazyload/vue-lazyload/lazy-container.js"],"names":["remove","defaultOptions","selector","LazyContainer","constructor","el","binding","vnode","lazy","options","queue","update","Object","assign","value","imgs","getImgs","forEach","el2","add","src","dataset","getAttribute","error","loading","Array","from","querySelectorAll","clear","LazyContainerManager","bind","container","push","find","item","unbind","default"],"mappings":"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","sourcesContent":["import { remove } from \"./util\";\nconst defaultOptions = {\n  selector: \"img\"\n};\nclass LazyContainer {\n  constructor({ el, binding, vnode, lazy }) {\n    this.el = null;\n    this.vnode = vnode;\n    this.binding = binding;\n    this.options = {};\n    this.lazy = lazy;\n    this.queue = [];\n    this.update({ el, binding });\n  }\n  update({ el, binding }) {\n    this.el = el;\n    this.options = Object.assign({}, defaultOptions, binding.value);\n    const imgs = this.getImgs();\n    imgs.forEach((el2) => {\n      this.lazy.add(el2, Object.assign({}, this.binding, {\n        value: {\n          src: \"dataset\" in el2 ? el2.dataset.src : el2.getAttribute(\"data-src\"),\n          error: (\"dataset\" in el2 ? el2.dataset.error : el2.getAttribute(\"data-error\")) || this.options.error,\n          loading: (\"dataset\" in el2 ? el2.dataset.loading : el2.getAttribute(\"data-loading\")) || this.options.loading\n        }\n      }), this.vnode);\n    });\n  }\n  getImgs() {\n    return Array.from(this.el.querySelectorAll(this.options.selector));\n  }\n  clear() {\n    const imgs = this.getImgs();\n    imgs.forEach((el) => this.lazy.remove(el));\n    this.vnode = null;\n    this.binding = null;\n    this.lazy = null;\n  }\n}\nclass LazyContainerManager {\n  constructor({ lazy }) {\n    this.lazy = lazy;\n    this.queue = [];\n  }\n  bind(el, binding, vnode) {\n    const container = new LazyContainer({\n      el,\n      binding,\n      vnode,\n      lazy: this.lazy\n    });\n    this.queue.push(container);\n  }\n  update(el, binding, vnode) {\n    const container = this.queue.find((item) => item.el === el);\n    if (!container)\n      return;\n    container.update({ el, binding, vnode });\n  }\n  unbind(el) {\n    const container = this.queue.find((item) => item.el === el);\n    if (!container)\n      return;\n    container.clear();\n    remove(this.queue, container);\n  }\n}\nexport {\n  LazyContainerManager as default\n};\n"]},"metadata":{},"sourceType":"module"}