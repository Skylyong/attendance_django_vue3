{"ast":null,"code":"var helperDeleteProperty = require('./helperDeleteProperty');\n\nvar isFunction = require('./isFunction');\n\nvar isArray = require('./isArray');\n\nvar each = require('./each');\n\nvar arrayEach = require('./arrayEach');\n\nvar lastEach = require('./lastEach');\n\nvar clear = require('./clear');\n\nvar eqNull = require('./eqNull');\n\nfunction pluckProperty(name) {\n  return function (obj, key) {\n    return key === name;\n  };\n}\n/**\r\n  * 移除对象属性\r\n  *\r\n  * @param {Object/Array} obj 对象/数组\r\n  * @param {Function/String} iterate 方法或属性\r\n  * @param {Object} context 上下文\r\n  * @return {Object/Array}\r\n  */\n\n\nfunction remove(obj, iterate, context) {\n  if (obj) {\n    if (!eqNull(iterate)) {\n      var removeKeys = [];\n      var rest = [];\n\n      if (!isFunction(iterate)) {\n        iterate = pluckProperty(iterate);\n      }\n\n      each(obj, function (item, index, rest) {\n        if (iterate.call(context, item, index, rest)) {\n          removeKeys.push(index);\n        }\n      });\n\n      if (isArray(obj)) {\n        lastEach(removeKeys, function (item, key) {\n          rest.push(obj[item]);\n          obj.splice(item, 1);\n        });\n      } else {\n        rest = {};\n        arrayEach(removeKeys, function (key) {\n          rest[key] = obj[key];\n          helperDeleteProperty(obj, key);\n        });\n      }\n\n      return rest;\n    }\n\n    return clear(obj);\n  }\n\n  return obj;\n}\n\nmodule.exports = remove;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/remove.js"],"names":["helperDeleteProperty","require","isFunction","isArray","each","arrayEach","lastEach","clear","eqNull","pluckProperty","name","obj","key","remove","iterate","context","removeKeys","rest","item","index","call","push","splice","module","exports"],"mappings":"AAAA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIM,KAAK,GAAGN,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIO,MAAM,GAAGP,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASQ,aAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACzB,WAAOA,GAAG,KAAKF,IAAf;AACD,GAFD;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,MAAT,CAAiBF,GAAjB,EAAsBG,OAAtB,EAA+BC,OAA/B,EAAwC;AACtC,MAAIJ,GAAJ,EAAS;AACP,QAAI,CAACH,MAAM,CAACM,OAAD,CAAX,EAAsB;AACpB,UAAIE,UAAU,GAAG,EAAjB;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,UAAI,CAACf,UAAU,CAACY,OAAD,CAAf,EAA0B;AACxBA,QAAAA,OAAO,GAAGL,aAAa,CAACK,OAAD,CAAvB;AACD;;AACDV,MAAAA,IAAI,CAACO,GAAD,EAAM,UAAUO,IAAV,EAAgBC,KAAhB,EAAuBF,IAAvB,EAA6B;AACrC,YAAIH,OAAO,CAACM,IAAR,CAAaL,OAAb,EAAsBG,IAAtB,EAA4BC,KAA5B,EAAmCF,IAAnC,CAAJ,EAA8C;AAC5CD,UAAAA,UAAU,CAACK,IAAX,CAAgBF,KAAhB;AACD;AACF,OAJG,CAAJ;;AAKA,UAAIhB,OAAO,CAACQ,GAAD,CAAX,EAAkB;AAChBL,QAAAA,QAAQ,CAACU,UAAD,EAAa,UAAUE,IAAV,EAAgBN,GAAhB,EAAqB;AACxCK,UAAAA,IAAI,CAACI,IAAL,CAAUV,GAAG,CAACO,IAAD,CAAb;AACAP,UAAAA,GAAG,CAACW,MAAJ,CAAWJ,IAAX,EAAiB,CAAjB;AACD,SAHO,CAAR;AAID,OALD,MAKO;AACLD,QAAAA,IAAI,GAAG,EAAP;AACAZ,QAAAA,SAAS,CAACW,UAAD,EAAa,UAAUJ,GAAV,EAAe;AACnCK,UAAAA,IAAI,CAACL,GAAD,CAAJ,GAAYD,GAAG,CAACC,GAAD,CAAf;AACAZ,UAAAA,oBAAoB,CAACW,GAAD,EAAMC,GAAN,CAApB;AACD,SAHQ,CAAT;AAID;;AACD,aAAOK,IAAP;AACD;;AACD,WAAOV,KAAK,CAACI,GAAD,CAAZ;AACD;;AACD,SAAOA,GAAP;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBX,MAAjB","sourcesContent":["var helperDeleteProperty = require('./helperDeleteProperty')\r\n\r\nvar isFunction = require('./isFunction')\r\nvar isArray = require('./isArray')\r\nvar each = require('./each')\r\nvar arrayEach = require('./arrayEach')\r\nvar lastEach = require('./lastEach')\r\nvar clear = require('./clear')\r\nvar eqNull = require('./eqNull')\r\n\r\nfunction pluckProperty (name) {\r\n  return function (obj, key) {\r\n    return key === name\r\n  }\r\n}\r\n\r\n/**\r\n  * 移除对象属性\r\n  *\r\n  * @param {Object/Array} obj 对象/数组\r\n  * @param {Function/String} iterate 方法或属性\r\n  * @param {Object} context 上下文\r\n  * @return {Object/Array}\r\n  */\r\nfunction remove (obj, iterate, context) {\r\n  if (obj) {\r\n    if (!eqNull(iterate)) {\r\n      var removeKeys = []\r\n      var rest = []\r\n      if (!isFunction(iterate)) {\r\n        iterate = pluckProperty(iterate)\r\n      }\r\n      each(obj, function (item, index, rest) {\r\n        if (iterate.call(context, item, index, rest)) {\r\n          removeKeys.push(index)\r\n        }\r\n      })\r\n      if (isArray(obj)) {\r\n        lastEach(removeKeys, function (item, key) {\r\n          rest.push(obj[item])\r\n          obj.splice(item, 1)\r\n        })\r\n      } else {\r\n        rest = {}\r\n        arrayEach(removeKeys, function (key) {\r\n          rest[key] = obj[key]\r\n          helperDeleteProperty(obj, key)\r\n        })\r\n      }\r\n      return rest\r\n    }\r\n    return clear(obj)\r\n  }\r\n  return obj\r\n}\r\n\r\nmodule.exports = remove\r\n"]},"metadata":{},"sourceType":"script"}