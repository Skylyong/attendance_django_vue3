{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createBlock(_component_a_table, {\n    columns: _ctx.columns,\n    \"row-key\": record => record.login.uuid,\n    \"data-source\": _ctx.dataSource,\n    pagination: _ctx.pagination,\n    loading: _ctx.loading,\n    onChange: _ctx.handleTableChange\n  }, {\n    name: _withCtx(({\n      text\n    }) => [_createTextVNode(_toDisplayString(text.first) + \" \" + _toDisplayString(text.last), 1\n    /* TEXT */\n    )]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"columns\", \"row-key\", \"data-source\", \"pagination\", \"loading\", \"onChange\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aASUC,kBATV,EASU;AARPC,WAAO,EAAEC,YAQF;AAPP,eAASC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,IAOzB;AANP,mBAAaH,eAMN;AALPI,cAAU,EAAEJ,eAKL;AAJPK,WAAO,EAAEL,YAIF;AAHPM,YAAM,EAAEN;AAGD,GATV;AAQaO,QAAI,WAAY,CAAgB;AAAxBC;AAAwB,KAAhB,KAAJ,mCAAOA,IAAI,CAACC,SAAQ,MAACC,iBAAGF,IAAI,CAACG,IAAR,GAAY;AAAA;KAAjC,CAAR;;;;GARjB;;AAAA","names":["_createBlock","_component_a_table","columns","_ctx","record","login","uuid","pagination","loading","onChange","name","text","first","_toDisplayString","last"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/worker/workerApplyHistory.vue"],"sourcesContent":["<template>\n  <a-table\n    :columns=\"columns\"\n    :row-key=\"record => record.login.uuid\"\n    :data-source=\"dataSource\"\n    :pagination=\"pagination\"\n    :loading=\"loading\"\n    @change=\"handleTableChange\"\n  >\n    <template #name=\"{ text }\">{{ text.first }} {{ text.last }}</template>\n  </a-table>\n</template>\n<script>\nimport { usePagination } from 'vue-request';\nimport{getworkerApplyHistory} from '../../api/api.js'\nimport { computed, defineComponent, hydrate } from 'vue';\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: true,\n    width: '20%',\n    slots: {\n      customRender: 'name',\n    },\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'phone',\n    filters: [\n      {\n        text: 'Male',\n        value: 'male',\n      },\n      {\n        text: 'Female',\n        value: 'female',\n      },\n    ],\n    width: '20%',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n  },\n];\n\n\nconst queryData = params => {\n    console.log('fdsfsdf', params)\n    var h = `https://randomuser.me/api?noinfo&${new URLSearchParams(params)}`;\n    var h = 'http://127.0.0.1:8000/api/getApplicationHistory&userId=2'\n     console.log('hhhhhh', h)\n  return h;\n};\n\nconsole.log('happy:',queryData)\n\nexport default defineComponent({\n  setup() {\n    const {\n      data: dataSource,\n      run,\n      loading,\n      current, //  getworkerApplyHistory(2)\n      pageSize,\n    } = usePagination(getworkerApplyHistory(2), {\n    //   formatResult: res => res.data.data,\n    \n      pagination: {\n        currentKey: 'page',\n        pageSizeKey: 'results',\n      },\n    });\n\n    const pagination = computed(() => ({\n      total: 200,\n      current: current.value,\n      pageSize: pageSize.value,\n    }));\n\n    const handleTableChange = (pag, filters, sorter) => {\n      run({\n        results: pag.pageSize,\n        page: pag?.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    };\n    console.log('datadfdfsd:', dataSource)\n    return {\n      dataSource,\n      pagination,\n      loading,\n      columns,\n      handleTableChange,\n      queryData\n    };\n  },\n});\n</script>"]},"metadata":{},"sourceType":"module"}