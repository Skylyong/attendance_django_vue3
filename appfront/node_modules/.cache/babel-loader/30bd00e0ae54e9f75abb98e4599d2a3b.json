{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { nextTick } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { VXETable } from '../../v-x-e-table';\nimport { toFilters, handleFieldOrColumn } from '../../table/src/util';\nimport { getDomNode, triggerEvent } from '../../tools/dom';\nvar tableFilterMethodKeys = ['setFilter', 'clearFilter', 'getCheckedFilters'];\nvar tableFilterHook = {\n  setupTable: function ($xetable) {\n    var reactData = $xetable.reactData,\n        internalData = $xetable.internalData;\n\n    var _a = $xetable.getRefMaps(),\n        refTableBody = _a.refTableBody,\n        refTableFilter = _a.refTableFilter;\n\n    var computeFilterOpts = $xetable.getComputeMaps().computeFilterOpts;\n    var filterPrivateMethods = {\n      checkFilterOptions: function () {\n        var filterStore = reactData.filterStore;\n        filterStore.isAllSelected = filterStore.options.every(function (item) {\n          return item._checked;\n        });\n        filterStore.isIndeterminate = !filterStore.isAllSelected && filterStore.options.some(function (item) {\n          return item._checked;\n        });\n      },\n\n      /**\n       * 点击筛选事件\n       * 当筛选图标被点击时触发\n       * 更新选项是否全部状态\n       * 打开筛选面板\n       * @param {Event} evnt 事件\n       * @param {ColumnInfo} column 列配置\n       * @param {Object} params 参数\n       */\n      triggerFilterEvent: function (evnt, column, params) {\n        var initStore = reactData.initStore,\n            filterStore = reactData.filterStore;\n\n        if (filterStore.column === column && filterStore.visible) {\n          filterStore.visible = false;\n        } else {\n          var targetElem_1 = evnt.target,\n              pageX_1 = evnt.pageX;\n          var visibleWidth_1 = getDomNode().visibleWidth;\n          var filters = column.filters,\n              filterMultiple = column.filterMultiple,\n              filterRender = column.filterRender;\n          var compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null;\n          var filterRecoverMethod_1 = column.filterRecoverMethod || (compConf ? compConf.filterRecoverMethod : null);\n          internalData._currFilterParams = params;\n          Object.assign(filterStore, {\n            multiple: filterMultiple,\n            options: filters,\n            column: column,\n            style: null\n          }); // 复原状态\n\n          filterStore.options.forEach(function (option) {\n            var _checked = option._checked,\n                checked = option.checked;\n            option._checked = checked;\n\n            if (!checked && _checked !== checked) {\n              if (filterRecoverMethod_1) {\n                filterRecoverMethod_1({\n                  option: option,\n                  column: column,\n                  $table: $xetable\n                });\n              }\n            }\n          });\n          this.checkFilterOptions();\n          filterStore.visible = true;\n          initStore.filter = true;\n          nextTick(function () {\n            var tableBody = refTableBody.value;\n            var bodyElem = tableBody.$el;\n            var tableFilter = refTableFilter.value;\n            var filterWrapperElem = tableFilter ? tableFilter.$el : null;\n            var filterWidth = 0;\n            var filterHeight = 0;\n            var filterHeadElem = null;\n            var filterFootElem = null;\n\n            if (filterWrapperElem) {\n              filterWidth = filterWrapperElem.offsetWidth;\n              filterHeight = filterWrapperElem.offsetHeight;\n              filterHeadElem = filterWrapperElem.querySelector('.vxe-table--filter-header');\n              filterFootElem = filterWrapperElem.querySelector('.vxe-table--filter-footer');\n            }\n\n            var centerWidth = filterWidth / 2;\n            var minMargin = 10;\n            var maxLeft = bodyElem.clientWidth - filterWidth - minMargin;\n            var left, right;\n            var style = {\n              top: targetElem_1.offsetTop + targetElem_1.offsetParent.offsetTop + targetElem_1.offsetHeight + 8 + \"px\"\n            }; // 判断面板不能大于表格高度\n\n            var maxHeight = null;\n\n            if (filterHeight >= bodyElem.clientHeight) {\n              maxHeight = Math.max(60, bodyElem.clientHeight - (filterFootElem ? filterFootElem.offsetHeight : 0) - (filterHeadElem ? filterHeadElem.offsetHeight : 0));\n            }\n\n            if (column.fixed === 'left') {\n              left = targetElem_1.offsetLeft + targetElem_1.offsetParent.offsetLeft - centerWidth;\n            } else if (column.fixed === 'right') {\n              right = targetElem_1.offsetParent.offsetWidth - targetElem_1.offsetLeft + (targetElem_1.offsetParent.offsetParent.offsetWidth - targetElem_1.offsetParent.offsetLeft) - column.renderWidth - centerWidth;\n            } else {\n              left = targetElem_1.offsetLeft + targetElem_1.offsetParent.offsetLeft - centerWidth - bodyElem.scrollLeft;\n            }\n\n            if (left) {\n              var overflowWidth = pageX_1 + filterWidth - centerWidth + minMargin - visibleWidth_1;\n\n              if (overflowWidth > 0) {\n                left -= overflowWidth;\n              }\n\n              style.left = Math.min(maxLeft, Math.max(minMargin, left)) + \"px\";\n            } else if (right) {\n              var overflowWidth = pageX_1 + filterWidth - centerWidth + minMargin - visibleWidth_1;\n\n              if (overflowWidth > 0) {\n                right += overflowWidth;\n              }\n\n              style.right = Math.max(minMargin, right) + \"px\";\n            }\n\n            filterStore.style = style;\n            filterStore.maxHeight = maxHeight;\n          });\n        }\n\n        $xetable.dispatchEvent('filter-visible', {\n          column: column,\n          property: column.property,\n          filterList: $xetable.getCheckedFilters(),\n          visible: filterStore.visible\n        }, evnt);\n      },\n      handleClearFilter: function (column) {\n        if (column) {\n          var filters = column.filters,\n              filterRender = column.filterRender;\n\n          if (filters) {\n            var compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null;\n            var filterResetMethod_1 = column.filterResetMethod || (compConf ? compConf.filterResetMethod : null);\n            filters.forEach(function (item) {\n              item._checked = false;\n              item.checked = false;\n\n              if (!filterResetMethod_1) {\n                item.data = XEUtils.clone(item.resetValue, true);\n              }\n            });\n\n            if (filterResetMethod_1) {\n              filterResetMethod_1({\n                options: filters,\n                column: column,\n                $table: $xetable\n              });\n            }\n          }\n        }\n      },\n\n      /**\n       * 确认筛选\n       * 当筛选面板中的确定按钮被按下时触发\n       * @param {Event} evnt 事件\n       */\n      confirmFilterEvent: function (evnt) {\n        var filterStore = reactData.filterStore,\n            oldScrollXLoad = reactData.scrollXLoad,\n            oldScrollYLoad = reactData.scrollYLoad;\n        var filterOpts = computeFilterOpts.value;\n        var column = filterStore.column;\n        var property = column.property;\n        var values = [];\n        var datas = [];\n        column.filters.forEach(function (item) {\n          if (item.checked) {\n            values.push(item.value);\n            datas.push(item.data);\n          }\n        });\n        var filterList = $xetable.getCheckedFilters(); // 如果是服务端筛选，则跳过本地筛选处理\n\n        if (!filterOpts.remote) {\n          $xetable.handleTableData(true);\n          $xetable.checkSelectionStatus();\n        }\n\n        $xetable.dispatchEvent('filter-change', {\n          column: column,\n          property: property,\n          values: values,\n          datas: datas,\n          filters: filterList,\n          filterList: filterList\n        }, evnt);\n        $xetable.closeFilter();\n        $xetable.updateFooter().then(function () {\n          var scrollXLoad = reactData.scrollXLoad,\n              scrollYLoad = reactData.scrollYLoad;\n\n          if (oldScrollXLoad || scrollXLoad || oldScrollYLoad || scrollYLoad) {\n            if (oldScrollXLoad || scrollXLoad) {\n              $xetable.updateScrollXSpace();\n            }\n\n            if (oldScrollYLoad || scrollYLoad) {\n              $xetable.updateScrollYSpace();\n            }\n\n            return $xetable.refreshScroll();\n          }\n        }).then(function () {\n          $xetable.updateCellAreas();\n          return $xetable.recalculate(true);\n        }).then(function () {\n          // 存在滚动行为未结束情况\n          setTimeout(function () {\n            return $xetable.recalculate();\n          }, 50);\n        });\n      }\n    };\n    var filterMethods = {\n      /**\n       * 手动弹出筛选面板\n       * @param column\n       */\n      openFilter: function (fieldOrColumn) {\n        var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n        if (column && column.filters) {\n          var elemStore_1 = internalData.elemStore;\n          var fixed_1 = column.fixed;\n          return $xetable.scrollToColumn(column).then(function () {\n            var headerWrapperElem = elemStore_1[(fixed_1 || 'main') + \"-header-wrapper\"] || elemStore_1['main-header-wrapper'];\n\n            if (headerWrapperElem) {\n              var filterBtnElem = headerWrapperElem.querySelector(\".vxe-header--column.\" + column.id + \" .vxe-filter--btn\");\n              triggerEvent(filterBtnElem, 'click');\n            }\n          });\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 修改筛选条件列表\n       * @param {ColumnInfo} fieldOrColumn 列或字段名\n       * @param {Array} options 选项\n       */\n      setFilter: function (fieldOrColumn, options) {\n        var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n        if (column && column.filters && options) {\n          column.filters = toFilters(options);\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 清空指定列的筛选条件\n       * 如果为空则清空所有列的筛选条件\n       * @param {String} fieldOrColumn 列或字段名\n       */\n      clearFilter: function (fieldOrColumn) {\n        var filterStore = reactData.filterStore;\n        var tableFullColumn = internalData.tableFullColumn;\n        var filterOpts = computeFilterOpts.value;\n        var column;\n\n        if (fieldOrColumn) {\n          column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n          if (column) {\n            filterPrivateMethods.handleClearFilter(column);\n          }\n        } else {\n          tableFullColumn.forEach(filterPrivateMethods.handleClearFilter);\n        }\n\n        if (!fieldOrColumn || column !== filterStore.column) {\n          Object.assign(filterStore, {\n            isAllSelected: false,\n            isIndeterminate: false,\n            style: null,\n            options: [],\n            column: null,\n            multiple: false,\n            visible: false\n          });\n        }\n\n        if (!filterOpts.remote) {\n          return $xetable.updateData();\n        }\n\n        return nextTick();\n      },\n      getCheckedFilters: function () {\n        var tableFullColumn = internalData.tableFullColumn;\n        var filterList = [];\n        tableFullColumn.filter(function (column) {\n          var property = column.property,\n              filters = column.filters;\n          var valueList = [];\n          var dataList = [];\n\n          if (filters && filters.length) {\n            filters.forEach(function (item) {\n              if (item.checked) {\n                valueList.push(item.value);\n                dataList.push(item.data);\n              }\n            });\n\n            if (valueList.length) {\n              filterList.push({\n                column: column,\n                property: property,\n                values: valueList,\n                datas: dataList\n              });\n            }\n          }\n        });\n        return filterList;\n      }\n    };\n    return __assign(__assign({}, filterMethods), filterPrivateMethods);\n  },\n  setupGrid: function ($xegrid) {\n    return $xegrid.extendTableMethods(tableFilterMethodKeys);\n  }\n};\nexport default tableFilterHook;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/filter/src/hook.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","nextTick","XEUtils","VXETable","toFilters","handleFieldOrColumn","getDomNode","triggerEvent","tableFilterMethodKeys","tableFilterHook","setupTable","$xetable","reactData","internalData","_a","getRefMaps","refTableBody","refTableFilter","computeFilterOpts","getComputeMaps","filterPrivateMethods","checkFilterOptions","filterStore","isAllSelected","options","every","item","_checked","isIndeterminate","some","triggerFilterEvent","evnt","column","params","initStore","visible","targetElem_1","target","pageX_1","pageX","visibleWidth_1","visibleWidth","filters","filterMultiple","filterRender","compConf","renderer","get","name","filterRecoverMethod_1","filterRecoverMethod","_currFilterParams","multiple","style","forEach","option","checked","$table","filter","tableBody","value","bodyElem","$el","tableFilter","filterWrapperElem","filterWidth","filterHeight","filterHeadElem","filterFootElem","offsetWidth","offsetHeight","querySelector","centerWidth","minMargin","maxLeft","clientWidth","left","right","top","offsetTop","offsetParent","maxHeight","clientHeight","Math","max","fixed","offsetLeft","renderWidth","scrollLeft","overflowWidth","min","dispatchEvent","property","filterList","getCheckedFilters","handleClearFilter","filterResetMethod_1","filterResetMethod","data","clone","resetValue","confirmFilterEvent","oldScrollXLoad","scrollXLoad","oldScrollYLoad","scrollYLoad","filterOpts","values","datas","push","remote","handleTableData","checkSelectionStatus","closeFilter","updateFooter","then","updateScrollXSpace","updateScrollYSpace","refreshScroll","updateCellAreas","recalculate","setTimeout","filterMethods","openFilter","fieldOrColumn","elemStore_1","elemStore","fixed_1","scrollToColumn","headerWrapperElem","filterBtnElem","id","setFilter","clearFilter","tableFullColumn","updateData","valueList","dataList","setupGrid","$xegrid","extendTableMethods"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { nextTick } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { VXETable } from '../../v-x-e-table';\nimport { toFilters, handleFieldOrColumn } from '../../table/src/util';\nimport { getDomNode, triggerEvent } from '../../tools/dom';\nvar tableFilterMethodKeys = ['setFilter', 'clearFilter', 'getCheckedFilters'];\nvar tableFilterHook = {\n    setupTable: function ($xetable) {\n        var reactData = $xetable.reactData, internalData = $xetable.internalData;\n        var _a = $xetable.getRefMaps(), refTableBody = _a.refTableBody, refTableFilter = _a.refTableFilter;\n        var computeFilterOpts = $xetable.getComputeMaps().computeFilterOpts;\n        var filterPrivateMethods = {\n            checkFilterOptions: function () {\n                var filterStore = reactData.filterStore;\n                filterStore.isAllSelected = filterStore.options.every(function (item) { return item._checked; });\n                filterStore.isIndeterminate = !filterStore.isAllSelected && filterStore.options.some(function (item) { return item._checked; });\n            },\n            /**\n             * 点击筛选事件\n             * 当筛选图标被点击时触发\n             * 更新选项是否全部状态\n             * 打开筛选面板\n             * @param {Event} evnt 事件\n             * @param {ColumnInfo} column 列配置\n             * @param {Object} params 参数\n             */\n            triggerFilterEvent: function (evnt, column, params) {\n                var initStore = reactData.initStore, filterStore = reactData.filterStore;\n                if (filterStore.column === column && filterStore.visible) {\n                    filterStore.visible = false;\n                }\n                else {\n                    var targetElem_1 = evnt.target, pageX_1 = evnt.pageX;\n                    var visibleWidth_1 = getDomNode().visibleWidth;\n                    var filters = column.filters, filterMultiple = column.filterMultiple, filterRender = column.filterRender;\n                    var compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null;\n                    var filterRecoverMethod_1 = column.filterRecoverMethod || (compConf ? compConf.filterRecoverMethod : null);\n                    internalData._currFilterParams = params;\n                    Object.assign(filterStore, {\n                        multiple: filterMultiple,\n                        options: filters,\n                        column: column,\n                        style: null\n                    });\n                    // 复原状态\n                    filterStore.options.forEach(function (option) {\n                        var _checked = option._checked, checked = option.checked;\n                        option._checked = checked;\n                        if (!checked && _checked !== checked) {\n                            if (filterRecoverMethod_1) {\n                                filterRecoverMethod_1({ option: option, column: column, $table: $xetable });\n                            }\n                        }\n                    });\n                    this.checkFilterOptions();\n                    filterStore.visible = true;\n                    initStore.filter = true;\n                    nextTick(function () {\n                        var tableBody = refTableBody.value;\n                        var bodyElem = tableBody.$el;\n                        var tableFilter = refTableFilter.value;\n                        var filterWrapperElem = tableFilter ? tableFilter.$el : null;\n                        var filterWidth = 0;\n                        var filterHeight = 0;\n                        var filterHeadElem = null;\n                        var filterFootElem = null;\n                        if (filterWrapperElem) {\n                            filterWidth = filterWrapperElem.offsetWidth;\n                            filterHeight = filterWrapperElem.offsetHeight;\n                            filterHeadElem = filterWrapperElem.querySelector('.vxe-table--filter-header');\n                            filterFootElem = filterWrapperElem.querySelector('.vxe-table--filter-footer');\n                        }\n                        var centerWidth = filterWidth / 2;\n                        var minMargin = 10;\n                        var maxLeft = bodyElem.clientWidth - filterWidth - minMargin;\n                        var left, right;\n                        var style = {\n                            top: targetElem_1.offsetTop + targetElem_1.offsetParent.offsetTop + targetElem_1.offsetHeight + 8 + \"px\"\n                        };\n                        // 判断面板不能大于表格高度\n                        var maxHeight = null;\n                        if (filterHeight >= bodyElem.clientHeight) {\n                            maxHeight = Math.max(60, bodyElem.clientHeight - (filterFootElem ? filterFootElem.offsetHeight : 0) - (filterHeadElem ? filterHeadElem.offsetHeight : 0));\n                        }\n                        if (column.fixed === 'left') {\n                            left = targetElem_1.offsetLeft + targetElem_1.offsetParent.offsetLeft - centerWidth;\n                        }\n                        else if (column.fixed === 'right') {\n                            right = (targetElem_1.offsetParent.offsetWidth - targetElem_1.offsetLeft) + (targetElem_1.offsetParent.offsetParent.offsetWidth - targetElem_1.offsetParent.offsetLeft) - column.renderWidth - centerWidth;\n                        }\n                        else {\n                            left = targetElem_1.offsetLeft + targetElem_1.offsetParent.offsetLeft - centerWidth - bodyElem.scrollLeft;\n                        }\n                        if (left) {\n                            var overflowWidth = (pageX_1 + filterWidth - centerWidth + minMargin) - visibleWidth_1;\n                            if (overflowWidth > 0) {\n                                left -= overflowWidth;\n                            }\n                            style.left = Math.min(maxLeft, Math.max(minMargin, left)) + \"px\";\n                        }\n                        else if (right) {\n                            var overflowWidth = (pageX_1 + filterWidth - centerWidth + minMargin) - visibleWidth_1;\n                            if (overflowWidth > 0) {\n                                right += overflowWidth;\n                            }\n                            style.right = Math.max(minMargin, right) + \"px\";\n                        }\n                        filterStore.style = style;\n                        filterStore.maxHeight = maxHeight;\n                    });\n                }\n                $xetable.dispatchEvent('filter-visible', { column: column, property: column.property, filterList: $xetable.getCheckedFilters(), visible: filterStore.visible }, evnt);\n            },\n            handleClearFilter: function (column) {\n                if (column) {\n                    var filters = column.filters, filterRender = column.filterRender;\n                    if (filters) {\n                        var compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null;\n                        var filterResetMethod_1 = column.filterResetMethod || (compConf ? compConf.filterResetMethod : null);\n                        filters.forEach(function (item) {\n                            item._checked = false;\n                            item.checked = false;\n                            if (!filterResetMethod_1) {\n                                item.data = XEUtils.clone(item.resetValue, true);\n                            }\n                        });\n                        if (filterResetMethod_1) {\n                            filterResetMethod_1({ options: filters, column: column, $table: $xetable });\n                        }\n                    }\n                }\n            },\n            /**\n             * 确认筛选\n             * 当筛选面板中的确定按钮被按下时触发\n             * @param {Event} evnt 事件\n             */\n            confirmFilterEvent: function (evnt) {\n                var filterStore = reactData.filterStore, oldScrollXLoad = reactData.scrollXLoad, oldScrollYLoad = reactData.scrollYLoad;\n                var filterOpts = computeFilterOpts.value;\n                var column = filterStore.column;\n                var property = column.property;\n                var values = [];\n                var datas = [];\n                column.filters.forEach(function (item) {\n                    if (item.checked) {\n                        values.push(item.value);\n                        datas.push(item.data);\n                    }\n                });\n                var filterList = $xetable.getCheckedFilters();\n                // 如果是服务端筛选，则跳过本地筛选处理\n                if (!filterOpts.remote) {\n                    $xetable.handleTableData(true);\n                    $xetable.checkSelectionStatus();\n                }\n                $xetable.dispatchEvent('filter-change', { column: column, property: property, values: values, datas: datas, filters: filterList, filterList: filterList }, evnt);\n                $xetable.closeFilter();\n                $xetable.updateFooter().then(function () {\n                    var scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad;\n                    if ((oldScrollXLoad || scrollXLoad) || (oldScrollYLoad || scrollYLoad)) {\n                        if (oldScrollXLoad || scrollXLoad) {\n                            $xetable.updateScrollXSpace();\n                        }\n                        if (oldScrollYLoad || scrollYLoad) {\n                            $xetable.updateScrollYSpace();\n                        }\n                        return $xetable.refreshScroll();\n                    }\n                }).then(function () {\n                    $xetable.updateCellAreas();\n                    return $xetable.recalculate(true);\n                }).then(function () {\n                    // 存在滚动行为未结束情况\n                    setTimeout(function () { return $xetable.recalculate(); }, 50);\n                });\n            }\n        };\n        var filterMethods = {\n            /**\n             * 手动弹出筛选面板\n             * @param column\n             */\n            openFilter: function (fieldOrColumn) {\n                var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                if (column && column.filters) {\n                    var elemStore_1 = internalData.elemStore;\n                    var fixed_1 = column.fixed;\n                    return $xetable.scrollToColumn(column).then(function () {\n                        var headerWrapperElem = elemStore_1[(fixed_1 || 'main') + \"-header-wrapper\"] || elemStore_1['main-header-wrapper'];\n                        if (headerWrapperElem) {\n                            var filterBtnElem = headerWrapperElem.querySelector(\".vxe-header--column.\" + column.id + \" .vxe-filter--btn\");\n                            triggerEvent(filterBtnElem, 'click');\n                        }\n                    });\n                }\n                return nextTick();\n            },\n            /**\n             * 修改筛选条件列表\n             * @param {ColumnInfo} fieldOrColumn 列或字段名\n             * @param {Array} options 选项\n             */\n            setFilter: function (fieldOrColumn, options) {\n                var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                if (column && column.filters && options) {\n                    column.filters = toFilters(options);\n                }\n                return nextTick();\n            },\n            /**\n             * 清空指定列的筛选条件\n             * 如果为空则清空所有列的筛选条件\n             * @param {String} fieldOrColumn 列或字段名\n             */\n            clearFilter: function (fieldOrColumn) {\n                var filterStore = reactData.filterStore;\n                var tableFullColumn = internalData.tableFullColumn;\n                var filterOpts = computeFilterOpts.value;\n                var column;\n                if (fieldOrColumn) {\n                    column = handleFieldOrColumn($xetable, fieldOrColumn);\n                    if (column) {\n                        filterPrivateMethods.handleClearFilter(column);\n                    }\n                }\n                else {\n                    tableFullColumn.forEach(filterPrivateMethods.handleClearFilter);\n                }\n                if (!fieldOrColumn || column !== filterStore.column) {\n                    Object.assign(filterStore, {\n                        isAllSelected: false,\n                        isIndeterminate: false,\n                        style: null,\n                        options: [],\n                        column: null,\n                        multiple: false,\n                        visible: false\n                    });\n                }\n                if (!filterOpts.remote) {\n                    return $xetable.updateData();\n                }\n                return nextTick();\n            },\n            getCheckedFilters: function () {\n                var tableFullColumn = internalData.tableFullColumn;\n                var filterList = [];\n                tableFullColumn.filter(function (column) {\n                    var property = column.property, filters = column.filters;\n                    var valueList = [];\n                    var dataList = [];\n                    if (filters && filters.length) {\n                        filters.forEach(function (item) {\n                            if (item.checked) {\n                                valueList.push(item.value);\n                                dataList.push(item.data);\n                            }\n                        });\n                        if (valueList.length) {\n                            filterList.push({ column: column, property: property, values: valueList, datas: dataList });\n                        }\n                    }\n                });\n                return filterList;\n            }\n        };\n        return __assign(__assign({}, filterMethods), filterPrivateMethods);\n    },\n    setupGrid: function ($xegrid) {\n        return $xegrid.extendTableMethods(tableFilterMethodKeys);\n    }\n};\nexport default tableFilterHook;\n"]},"metadata":{},"sourceType":"module"}