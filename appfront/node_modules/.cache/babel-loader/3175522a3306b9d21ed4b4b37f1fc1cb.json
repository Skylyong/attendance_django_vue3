{"ast":null,"code":"import { SearchOutlined } from '@ant-design/icons-vue';\nimport { defineComponent, reactive, ref, toRefs } from 'vue';\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Joe Black',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Jim Green',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\nexport default defineComponent({\n  components: {\n    SearchOutlined\n  },\n\n  setup() {\n    const state = reactive({\n      searchText: '',\n      searchedColumn: ''\n    });\n    const searchInput = ref();\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      customFilterDropdown: true,\n      onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => {\n            searchInput.value.focus();\n          }, 100);\n        }\n      }\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age'\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      customFilterDropdown: true,\n      onFilter: (value, record) => record.address.toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => {\n            searchInput.value.focus();\n          }, 100);\n        }\n      }\n    }];\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      state.searchText = selectedKeys[0];\n      state.searchedColumn = dataIndex;\n    };\n\n    const handleReset = clearFilters => {\n      clearFilters();\n      state.searchText = '';\n    };\n\n    return {\n      data,\n      columns,\n      handleSearch,\n      handleReset,\n      searchInput,\n      ...toRefs(state)\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAyDA,SAASA,cAAT,QAA+B,uBAA/B;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,MAAzC,QAAuD,KAAvD;AACA,MAAMC,IAAG,GAAI,CAAC;AACZC,KAAG,EAAE,GADO;AAEZC,MAAI,EAAE,YAFM;AAGZC,KAAG,EAAE,EAHO;AAIZC,SAAO,EAAE;AAJG,CAAD,EAKV;AACDH,KAAG,EAAE,GADJ;AAEDC,MAAI,EAAE,WAFL;AAGDC,KAAG,EAAE,EAHJ;AAIDC,SAAO,EAAE;AAJR,CALU,EAUV;AACDH,KAAG,EAAE,GADJ;AAEDC,MAAI,EAAE,WAFL;AAGDC,KAAG,EAAE,EAHJ;AAIDC,SAAO,EAAE;AAJR,CAVU,EAeV;AACDH,KAAG,EAAE,GADJ;AAEDC,MAAI,EAAE,SAFL;AAGDC,KAAG,EAAE,EAHJ;AAIDC,SAAO,EAAE;AAJR,CAfU,CAAb;AAqBA,eAAeR,eAAe,CAAC;AAC7BS,YAAU,EAAE;AACVV;AADU,GADiB;;AAK7BW,OAAK,GAAG;AACN,UAAMC,KAAI,GAAIV,QAAQ,CAAC;AACrBW,gBAAU,EAAE,EADS;AAErBC,oBAAc,EAAE;AAFK,KAAD,CAAtB;AAIA,UAAMC,WAAU,GAAIZ,GAAG,EAAvB;AACA,UAAMa,OAAM,GAAI,CAAC;AACfC,WAAK,EAAE,MADQ;AAEfC,eAAS,EAAE,MAFI;AAGfZ,SAAG,EAAE,MAHU;AAIfa,0BAAoB,EAAE,IAJP;AAKfC,cAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACf,IAAP,CAAYgB,QAAZ,GAAuBC,WAAvB,GAAqCC,QAArC,CAA8CJ,KAAK,CAACG,WAAN,EAA9C,CALd;AAMfE,mCAA6B,EAAEC,OAAM,IAAK;AACxC,YAAIA,OAAJ,EAAa;AACXC,oBAAU,CAAC,MAAM;AACfb,uBAAW,CAACM,KAAZ,CAAkBQ,KAAlB;AACD,WAFS,EAEP,GAFO,CAAV;AAGF;AACD;AAZc,KAAD,EAab;AACDZ,WAAK,EAAE,KADN;AAEDC,eAAS,EAAE,KAFV;AAGDZ,SAAG,EAAE;AAHJ,KAba,EAiBb;AACDW,WAAK,EAAE,SADN;AAEDC,eAAS,EAAE,SAFV;AAGDZ,SAAG,EAAE,SAHJ;AAIDa,0BAAoB,EAAE,IAJrB;AAKDC,cAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACb,OAAP,CAAec,QAAf,GAA0BC,WAA1B,GAAwCC,QAAxC,CAAiDJ,KAAK,CAACG,WAAN,EAAjD,CAL5B;AAMDE,mCAA6B,EAAEC,OAAM,IAAK;AACxC,YAAIA,OAAJ,EAAa;AACXC,oBAAU,CAAC,MAAM;AACfb,uBAAW,CAACM,KAAZ,CAAkBQ,KAAlB;AACD,WAFS,EAEP,GAFO,CAAV;AAGF;AACD;AAZA,KAjBa,CAAhB;;AAgCA,UAAMC,YAAW,GAAI,CAACC,YAAD,EAAeC,OAAf,EAAwBd,SAAxB,KAAsC;AACzDc,aAAO;AACPpB,WAAK,CAACC,UAAN,GAAmBkB,YAAY,CAAC,CAAD,CAA/B;AACAnB,WAAK,CAACE,cAAN,GAAuBI,SAAvB;AACD,KAJD;;AAMA,UAAMe,WAAU,GAAIC,YAAW,IAAK;AAClCA,kBAAY;AACZtB,WAAK,CAACC,UAAN,GAAmB,EAAnB;AACD,KAHD;;AAKA,WAAO;AACLR,UADK;AAELW,aAFK;AAGLc,kBAHK;AAILG,iBAJK;AAKLlB,iBALK;AAML,SAAGX,MAAM,CAACQ,KAAD;AANJ,KAAP;AAQD;;AA9D4B,CAAD,CAA9B","names":["SearchOutlined","defineComponent","reactive","ref","toRefs","data","key","name","age","address","components","setup","state","searchText","searchedColumn","searchInput","columns","title","dataIndex","customFilterDropdown","onFilter","value","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","focus","handleSearch","selectedKeys","confirm","handleReset","clearFilters"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/src/components/worker/workerDetailData.vue"],"sourcesContent":["<template>\n  <a-table :data-source=\"data\" :columns=\"columns\">\n    <template #headerCell=\"{ column }\">\n      <template v-if=\"column.key === 'name'\">\n        <span style=\"color: #1890ff\">Name</span>\n      </template>\n    </template>\n    <template\n      #customFilterDropdown=\"{ setSelectedKeys, selectedKeys, confirm, clearFilters, column }\"\n    >\n      <div style=\"padding: 8px\">\n        <a-input\n          ref=\"searchInput\"\n          :placeholder=\"`Search ${column.dataIndex}`\"\n          :value=\"selectedKeys[0]\"\n          style=\"width: 188px; margin-bottom: 8px; display: block\"\n          @change=\"e => setSelectedKeys(e.target.value ? [e.target.value] : [])\"\n          @pressEnter=\"handleSearch(selectedKeys, confirm, column.dataIndex)\"\n        />\n        <a-button\n          type=\"primary\"\n          size=\"small\"\n          style=\"width: 90px; margin-right: 8px\"\n          @click=\"handleSearch(selectedKeys, confirm, column.dataIndex)\"\n        >\n          <template #icon><SearchOutlined /></template>\n          Search\n        </a-button>\n        <a-button size=\"small\" style=\"width: 90px\" @click=\"handleReset(clearFilters)\">\n          Reset\n        </a-button>\n      </div>\n    </template>\n    <template #customFilterIcon=\"{ filtered }\">\n      <search-outlined :style=\"{ color: filtered ? '#108ee9' : undefined }\" />\n    </template>\n    <template #bodyCell=\"{ text, column }\">\n      <span v-if=\"searchText && searchedColumn === column.dataIndex\">\n        <template\n          v-for=\"(fragment, i) in text\n            .toString()\n            .split(new RegExp(`(?<=${searchText})|(?=${searchText})`, 'i'))\"\n        >\n          <mark\n            v-if=\"fragment.toLowerCase() === searchText.toLowerCase()\"\n            :key=\"i\"\n            class=\"highlight\"\n          >\n            {{ fragment }}\n          </mark>\n          <template v-else>{{ fragment }}</template>\n        </template>\n      </span>\n    </template>\n  </a-table>\n</template>\n<script>\nimport { SearchOutlined } from '@ant-design/icons-vue';\nimport { defineComponent, reactive, ref, toRefs } from 'vue';\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park',\n}, {\n  key: '2',\n  name: 'Joe Black',\n  age: 42,\n  address: 'London No. 1 Lake Park',\n}, {\n  key: '3',\n  name: 'Jim Green',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park',\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park',\n}];\nexport default defineComponent({\n  components: {\n    SearchOutlined,\n  },\n\n  setup() {\n    const state = reactive({\n      searchText: '',\n      searchedColumn: '',\n    });\n    const searchInput = ref();\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      customFilterDropdown: true,\n      onFilter: (value, record) => record.name.toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => {\n            searchInput.value.focus();\n          }, 100);\n        }\n      },\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      customFilterDropdown: true,\n      onFilter: (value, record) => record.address.toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => {\n            searchInput.value.focus();\n          }, 100);\n        }\n      },\n    }];\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      state.searchText = selectedKeys[0];\n      state.searchedColumn = dataIndex;\n    };\n\n    const handleReset = clearFilters => {\n      clearFilters();\n      state.searchText = '';\n    };\n\n    return {\n      data,\n      columns,\n      handleSearch,\n      handleReset,\n      searchInput,\n      ...toRefs(state),\n    };\n  },\n\n});\n</script>\n<style scoped>\n.highlight {\n  background-color: rgb(255, 192, 105);\n  padding: 0px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}