{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, nextTick, Teleport, onMounted, defineComponent } from \"vue\";\nimport { isDef, isHidden, truthProp, numericProp, getScrollTop, preventDefault, makeNumberProp, createNamespace, getRootScrollTop, setRootScrollTop } from \"../utils\";\nimport { useRect, useChildren, useScrollParent, useEventListener } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { useExpose } from \"../composables/use-expose\";\n\nfunction genAlphabet() {\n  const charCodeOfA = \"A\".charCodeAt(0);\n  const indexList = Array(26).fill(\"\").map((_, i) => String.fromCharCode(charCodeOfA + i));\n  return indexList;\n}\n\nconst [name, bem] = createNamespace(\"index-bar\");\nconst indexBarProps = {\n  sticky: truthProp,\n  zIndex: numericProp,\n  teleport: [String, Object],\n  highlightColor: String,\n  stickyOffsetTop: makeNumberProp(0),\n  indexList: {\n    type: Array,\n    default: genAlphabet\n  }\n};\nconst INDEX_BAR_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: indexBarProps,\n  emits: [\"select\", \"change\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const activeAnchor = ref(\"\");\n    const touch = useTouch();\n    const scrollParent = useScrollParent(root);\n    const {\n      children,\n      linkChildren\n    } = useChildren(INDEX_BAR_KEY);\n    linkChildren({\n      props\n    });\n    const sidebarStyle = computed(() => {\n      if (isDef(props.zIndex)) {\n        return {\n          zIndex: +props.zIndex + 1\n        };\n      }\n    });\n    const highlightStyle = computed(() => {\n      if (props.highlightColor) {\n        return {\n          color: props.highlightColor\n        };\n      }\n    });\n\n    const getActiveAnchor = (scrollTop, rects) => {\n      for (let i = children.length - 1; i >= 0; i--) {\n        const prevHeight = i > 0 ? rects[i - 1].height : 0;\n        const reachTop = props.sticky ? prevHeight + props.stickyOffsetTop : 0;\n\n        if (scrollTop + reachTop >= rects[i].top) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    const onScroll = () => {\n      if (isHidden(root)) {\n        return;\n      }\n\n      const {\n        sticky,\n        indexList\n      } = props;\n      const scrollTop = getScrollTop(scrollParent.value);\n      const scrollParentRect = useRect(scrollParent);\n      const rects = children.map(item => item.getRect(scrollParent.value, scrollParentRect));\n      const active = getActiveAnchor(scrollTop, rects);\n      activeAnchor.value = indexList[active];\n\n      if (sticky) {\n        children.forEach((item, index) => {\n          const {\n            state,\n            $el\n          } = item;\n\n          if (index === active || index === active - 1) {\n            const rect = $el.getBoundingClientRect();\n            state.left = rect.left;\n            state.width = rect.width;\n          } else {\n            state.left = null;\n            state.width = null;\n          }\n\n          if (index === active) {\n            state.active = true;\n            state.top = Math.max(props.stickyOffsetTop, rects[index].top - scrollTop) + scrollParentRect.top;\n          } else if (index === active - 1) {\n            const activeItemTop = rects[active].top - scrollTop;\n            state.active = activeItemTop > 0;\n            state.top = activeItemTop + scrollParentRect.top - rects[index].height;\n          } else {\n            state.active = false;\n          }\n        });\n      }\n    };\n\n    const init = () => {\n      nextTick(onScroll);\n    };\n\n    useEventListener(\"scroll\", onScroll, {\n      target: scrollParent\n    });\n    onMounted(init);\n    watch(() => props.indexList, init);\n    watch(activeAnchor, value => {\n      if (value) {\n        emit(\"change\", value);\n      }\n    });\n\n    const renderIndexes = () => props.indexList.map(index => {\n      const active = index === activeAnchor.value;\n      return _createVNode(\"span\", {\n        \"class\": bem(\"index\", {\n          active\n        }),\n        \"style\": active ? highlightStyle.value : void 0,\n        \"data-index\": index\n      }, [index]);\n    });\n\n    const scrollTo = index => {\n      index = String(index);\n      const match = children.find(item => String(item.index) === index);\n\n      if (match) {\n        match.$el.scrollIntoView();\n\n        if (props.sticky && props.stickyOffsetTop) {\n          setRootScrollTop(getRootScrollTop() - props.stickyOffsetTop);\n        }\n\n        emit(\"select\", match.index);\n      }\n    };\n\n    const scrollToElement = element => {\n      const {\n        index\n      } = element.dataset;\n\n      if (index) {\n        scrollTo(index);\n      }\n    };\n\n    const onClickSidebar = event => {\n      scrollToElement(event.target);\n    };\n\n    let touchActiveIndex;\n\n    const onTouchMove = event => {\n      touch.move(event);\n\n      if (touch.isVertical()) {\n        preventDefault(event);\n        const {\n          clientX,\n          clientY\n        } = event.touches[0];\n        const target = document.elementFromPoint(clientX, clientY);\n\n        if (target) {\n          const {\n            index\n          } = target.dataset;\n\n          if (index && touchActiveIndex !== index) {\n            touchActiveIndex = index;\n            scrollToElement(target);\n          }\n        }\n      }\n    };\n\n    const renderSidebar = () => _createVNode(\"div\", {\n      \"class\": bem(\"sidebar\"),\n      \"style\": sidebarStyle.value,\n      \"onClick\": onClickSidebar,\n      \"onTouchstart\": touch.start,\n      \"onTouchmove\": onTouchMove\n    }, [renderIndexes()]);\n\n    useExpose({\n      scrollTo\n    });\n    return () => {\n      var _a;\n\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [props.teleport ? _createVNode(Teleport, {\n        \"to\": props.teleport\n      }, {\n        default: () => [renderSidebar()]\n      }) : renderSidebar(), (_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n\n});\nexport { INDEX_BAR_KEY, stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/index-bar/IndexBar.js"],"names":["createVNode","_createVNode","ref","watch","computed","nextTick","Teleport","onMounted","defineComponent","isDef","isHidden","truthProp","numericProp","getScrollTop","preventDefault","makeNumberProp","createNamespace","getRootScrollTop","setRootScrollTop","useRect","useChildren","useScrollParent","useEventListener","useTouch","useExpose","genAlphabet","charCodeOfA","charCodeAt","indexList","Array","fill","map","_","i","String","fromCharCode","name","bem","indexBarProps","sticky","zIndex","teleport","Object","highlightColor","stickyOffsetTop","type","default","INDEX_BAR_KEY","Symbol","stdin_default","props","emits","setup","emit","slots","root","activeAnchor","touch","scrollParent","children","linkChildren","sidebarStyle","highlightStyle","color","getActiveAnchor","scrollTop","rects","length","prevHeight","height","reachTop","top","onScroll","value","scrollParentRect","item","getRect","active","forEach","index","state","$el","rect","getBoundingClientRect","left","width","Math","max","activeItemTop","init","target","renderIndexes","scrollTo","match","find","scrollIntoView","scrollToElement","element","dataset","onClickSidebar","event","touchActiveIndex","onTouchMove","move","isVertical","clientX","clientY","touches","document","elementFromPoint","renderSidebar","start","_a","call"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, nextTick, Teleport, onMounted, defineComponent } from \"vue\";\nimport { isDef, isHidden, truthProp, numericProp, getScrollTop, preventDefault, makeNumberProp, createNamespace, getRootScrollTop, setRootScrollTop } from \"../utils\";\nimport { useRect, useChildren, useScrollParent, useEventListener } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { useExpose } from \"../composables/use-expose\";\nfunction genAlphabet() {\n  const charCodeOfA = \"A\".charCodeAt(0);\n  const indexList = Array(26).fill(\"\").map((_, i) => String.fromCharCode(charCodeOfA + i));\n  return indexList;\n}\nconst [name, bem] = createNamespace(\"index-bar\");\nconst indexBarProps = {\n  sticky: truthProp,\n  zIndex: numericProp,\n  teleport: [String, Object],\n  highlightColor: String,\n  stickyOffsetTop: makeNumberProp(0),\n  indexList: {\n    type: Array,\n    default: genAlphabet\n  }\n};\nconst INDEX_BAR_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: indexBarProps,\n  emits: [\"select\", \"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const activeAnchor = ref(\"\");\n    const touch = useTouch();\n    const scrollParent = useScrollParent(root);\n    const {\n      children,\n      linkChildren\n    } = useChildren(INDEX_BAR_KEY);\n    linkChildren({\n      props\n    });\n    const sidebarStyle = computed(() => {\n      if (isDef(props.zIndex)) {\n        return {\n          zIndex: +props.zIndex + 1\n        };\n      }\n    });\n    const highlightStyle = computed(() => {\n      if (props.highlightColor) {\n        return {\n          color: props.highlightColor\n        };\n      }\n    });\n    const getActiveAnchor = (scrollTop, rects) => {\n      for (let i = children.length - 1; i >= 0; i--) {\n        const prevHeight = i > 0 ? rects[i - 1].height : 0;\n        const reachTop = props.sticky ? prevHeight + props.stickyOffsetTop : 0;\n        if (scrollTop + reachTop >= rects[i].top) {\n          return i;\n        }\n      }\n      return -1;\n    };\n    const onScroll = () => {\n      if (isHidden(root)) {\n        return;\n      }\n      const {\n        sticky,\n        indexList\n      } = props;\n      const scrollTop = getScrollTop(scrollParent.value);\n      const scrollParentRect = useRect(scrollParent);\n      const rects = children.map((item) => item.getRect(scrollParent.value, scrollParentRect));\n      const active = getActiveAnchor(scrollTop, rects);\n      activeAnchor.value = indexList[active];\n      if (sticky) {\n        children.forEach((item, index) => {\n          const {\n            state,\n            $el\n          } = item;\n          if (index === active || index === active - 1) {\n            const rect = $el.getBoundingClientRect();\n            state.left = rect.left;\n            state.width = rect.width;\n          } else {\n            state.left = null;\n            state.width = null;\n          }\n          if (index === active) {\n            state.active = true;\n            state.top = Math.max(props.stickyOffsetTop, rects[index].top - scrollTop) + scrollParentRect.top;\n          } else if (index === active - 1) {\n            const activeItemTop = rects[active].top - scrollTop;\n            state.active = activeItemTop > 0;\n            state.top = activeItemTop + scrollParentRect.top - rects[index].height;\n          } else {\n            state.active = false;\n          }\n        });\n      }\n    };\n    const init = () => {\n      nextTick(onScroll);\n    };\n    useEventListener(\"scroll\", onScroll, {\n      target: scrollParent\n    });\n    onMounted(init);\n    watch(() => props.indexList, init);\n    watch(activeAnchor, (value) => {\n      if (value) {\n        emit(\"change\", value);\n      }\n    });\n    const renderIndexes = () => props.indexList.map((index) => {\n      const active = index === activeAnchor.value;\n      return _createVNode(\"span\", {\n        \"class\": bem(\"index\", {\n          active\n        }),\n        \"style\": active ? highlightStyle.value : void 0,\n        \"data-index\": index\n      }, [index]);\n    });\n    const scrollTo = (index) => {\n      index = String(index);\n      const match = children.find((item) => String(item.index) === index);\n      if (match) {\n        match.$el.scrollIntoView();\n        if (props.sticky && props.stickyOffsetTop) {\n          setRootScrollTop(getRootScrollTop() - props.stickyOffsetTop);\n        }\n        emit(\"select\", match.index);\n      }\n    };\n    const scrollToElement = (element) => {\n      const {\n        index\n      } = element.dataset;\n      if (index) {\n        scrollTo(index);\n      }\n    };\n    const onClickSidebar = (event) => {\n      scrollToElement(event.target);\n    };\n    let touchActiveIndex;\n    const onTouchMove = (event) => {\n      touch.move(event);\n      if (touch.isVertical()) {\n        preventDefault(event);\n        const {\n          clientX,\n          clientY\n        } = event.touches[0];\n        const target = document.elementFromPoint(clientX, clientY);\n        if (target) {\n          const {\n            index\n          } = target.dataset;\n          if (index && touchActiveIndex !== index) {\n            touchActiveIndex = index;\n            scrollToElement(target);\n          }\n        }\n      }\n    };\n    const renderSidebar = () => _createVNode(\"div\", {\n      \"class\": bem(\"sidebar\"),\n      \"style\": sidebarStyle.value,\n      \"onClick\": onClickSidebar,\n      \"onTouchstart\": touch.start,\n      \"onTouchmove\": onTouchMove\n    }, [renderIndexes()]);\n    useExpose({\n      scrollTo\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [props.teleport ? _createVNode(Teleport, {\n        \"to\": props.teleport\n      }, {\n        default: () => [renderSidebar()]\n      }) : renderSidebar(), (_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  INDEX_BAR_KEY,\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}