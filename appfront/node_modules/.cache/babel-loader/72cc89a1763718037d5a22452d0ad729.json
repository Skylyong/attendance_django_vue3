{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { inject, defineComponent, computed } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport defaultLocaleData from './default';\nexport default defineComponent({\n  name: 'LocaleReceiver',\n  props: {\n    componentName: PropTypes.string,\n    defaultLocale: {\n      type: [Object, Function]\n    },\n    children: {\n      type: Function\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var localeData = inject('localeData', {});\n    var locale = computed(function () {\n      var _props$componentName = props.componentName,\n          componentName = _props$componentName === void 0 ? 'global' : _props$componentName,\n          defaultLocale = props.defaultLocale;\n      var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n      var antLocale = localeData.antLocale;\n      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n      return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n    });\n    var localeCode = computed(function () {\n      var antLocale = localeData.antLocale;\n      var localeCode = antLocale && antLocale.locale; // Had use LocaleProvide but didn't set locale\n\n      if (antLocale && antLocale.exist && !localeCode) {\n        return defaultLocaleData.locale;\n      }\n\n      return localeCode;\n    });\n    return function () {\n      var children = props.children || slots.default;\n      var antLocale = localeData.antLocale;\n      return children === null || children === void 0 ? void 0 : children(locale.value, localeCode.value, antLocale);\n    };\n  }\n});\nexport function useLocaleReceiver(componentName, defaultLocale) {\n  var localeData = inject('localeData', {});\n  var componentLocale = computed(function () {\n    var antLocale = localeData.antLocale;\n    var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n    var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n    return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  });\n  return [componentLocale];\n}","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/locale-provider/LocaleReceiver.js"],"names":["_extends","inject","defineComponent","computed","PropTypes","defaultLocaleData","name","props","componentName","string","defaultLocale","type","Object","Function","children","setup","_ref","slots","localeData","locale","_props$componentName","antLocale","localeFromContext","localeCode","exist","default","value","useLocaleReceiver","componentLocale"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { inject, defineComponent, computed } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport defaultLocaleData from './default';\nexport default defineComponent({\n  name: 'LocaleReceiver',\n  props: {\n    componentName: PropTypes.string,\n    defaultLocale: {\n      type: [Object, Function]\n    },\n    children: {\n      type: Function\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var localeData = inject('localeData', {});\n    var locale = computed(function () {\n      var _props$componentName = props.componentName,\n          componentName = _props$componentName === void 0 ? 'global' : _props$componentName,\n          defaultLocale = props.defaultLocale;\n      var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n      var antLocale = localeData.antLocale;\n      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n      return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n    });\n    var localeCode = computed(function () {\n      var antLocale = localeData.antLocale;\n      var localeCode = antLocale && antLocale.locale; // Had use LocaleProvide but didn't set locale\n\n      if (antLocale && antLocale.exist && !localeCode) {\n        return defaultLocaleData.locale;\n      }\n\n      return localeCode;\n    });\n    return function () {\n      var children = props.children || slots.default;\n      var antLocale = localeData.antLocale;\n      return children === null || children === void 0 ? void 0 : children(locale.value, localeCode.value, antLocale);\n    };\n  }\n});\nexport function useLocaleReceiver(componentName, defaultLocale) {\n  var localeData = inject('localeData', {});\n  var componentLocale = computed(function () {\n    var antLocale = localeData.antLocale;\n    var locale = defaultLocale || defaultLocaleData[componentName || 'global'];\n    var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n    return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  });\n  return [componentLocale];\n}"]},"metadata":{},"sourceType":"module"}