{"ast":null,"code":"import { VXETable, VxeFormEvents, VxeFormPropTypes } from 'vxe-table';\nimport { defineComponent, onMounted, reactive, ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport XEUtils from 'xe-utils';\nimport { VxeGridInstance, VxeGridListeners, VxeGridProps } from 'vxe-table';\nexport default defineComponent({\n  setup() {\n    const xGrid = ref();\n    const gridOptions = reactive < VxeGridProps > {\n      border: true,\n      keepSource: true,\n      showOverflow: true,\n      height: 530,\n      loading: false,\n      columnConfig: {\n        resizable: true\n      },\n      pagerConfig: {\n        total: 0,\n        currentPage: 1,\n        pageSize: 10,\n        pageSizes: [10, 20, 50, 100, 200, 500]\n      },\n      editConfig: {\n        trigger: 'manual',\n        mode: 'row',\n        showStatus: true,\n        icon: 'fa fa-file-text-o'\n      },\n      columns: [{\n        type: 'seq',\n        width: 60\n      }, {\n        type: 'checkbox',\n        width: 50\n      }, {\n        field: 'name',\n        title: 'Name',\n        editRender: {\n          autofocus: '.vxe-input--inner'\n        },\n        slots: {\n          edit: 'name_edit'\n        }\n      }, {\n        field: 'nickname',\n        title: 'Nickname',\n        editRender: {\n          autofocus: '.vxe-input--inner'\n        },\n        slots: {\n          edit: 'nickname_edit'\n        }\n      }, {\n        field: 'sex',\n        title: 'Sex',\n        editRender: {},\n        slots: {\n          default: 'sex_default',\n          edit: 'sex_edit'\n        }\n      }, {\n        field: 'role',\n        title: 'Role',\n        editRender: {},\n        slots: {\n          edit: 'role_edit'\n        }\n      }, {\n        field: 'describe',\n        title: 'Describe',\n        showOverflow: true,\n        editRender: {},\n        slots: {\n          edit: 'describe_edit'\n        }\n      }, {\n        title: '操作',\n        width: 200,\n        slots: {\n          default: 'operate'\n        }\n      }],\n      data: []\n    };\n    const sexList1 = ref([{\n      value: '1',\n      label: '男'\n    }, {\n      value: '0',\n      label: '女'\n    }]);\n\n    const findList = () => {\n      gridOptions.loading = true;\n      setTimeout(() => {\n        gridOptions.loading = false;\n\n        if (gridOptions.pagerConfig) {\n          gridOptions.pagerConfig.total = 10;\n        }\n\n        gridOptions.data = [{\n          id: 10001,\n          name: 'Test1',\n          nickname: 'T1',\n          role: 'Develop',\n          sex: '1',\n          age: 28,\n          address: 'Shenzhen'\n        }, {\n          id: 10002,\n          name: 'Test2',\n          nickname: 'T2',\n          role: 'Test',\n          sex: '0',\n          age: 22,\n          address: 'Guangzhou'\n        }, {\n          id: 10003,\n          name: 'Test3',\n          nickname: 'T3',\n          role: 'PM',\n          sex: '1',\n          age: 32,\n          address: 'Shanghai'\n        }, {\n          id: 10004,\n          name: 'Test4',\n          nickname: 'T4',\n          role: 'Designer',\n          sex: '0',\n          age: 23,\n          address: 'Shenzhen'\n        }, {\n          id: 10005,\n          name: 'Test5',\n          nickname: 'T5',\n          role: 'Develop',\n          sex: '0',\n          age: 30,\n          address: 'Shanghai'\n        }, {\n          id: 10006,\n          name: 'Test6',\n          nickname: 'T6',\n          role: 'Develop',\n          sex: '0',\n          age: 27,\n          address: 'Shanghai'\n        }, {\n          id: 10007,\n          name: 'Test7',\n          nickname: 'T7',\n          role: 'Develop',\n          sex: '1',\n          age: 29,\n          address: 'Shenzhen'\n        }, {\n          id: 10008,\n          name: 'Test8',\n          nickname: 'T8',\n          role: 'Develop',\n          sex: '0',\n          age: 32,\n          address: 'Shanghai'\n        }, {\n          id: 10009,\n          name: 'Test9',\n          nickname: 'T9',\n          role: 'Develop',\n          sex: '1',\n          age: 30,\n          address: 'Shenzhen'\n        }, {\n          id: 10010,\n          name: 'Test10',\n          nickname: 'T10',\n          role: 'Develop',\n          sex: '0',\n          age: 34,\n          address: 'Shanghai'\n        }];\n      }, 300);\n    };\n\n    const gridEvents = {\n      pageChange({\n        currentPage,\n        pageSize\n      }) {\n        if (gridOptions.pagerConfig) {\n          gridOptions.pagerConfig.currentPage = currentPage;\n          gridOptions.pagerConfig.pageSize = pageSize;\n        }\n\n        findList();\n      }\n\n    };\n\n    const formatSex = value => {\n      if (value === '1') {\n        return '男';\n      }\n\n      if (value === '0') {\n        return '女';\n      }\n\n      return '';\n    };\n\n    const editRowEvent = row => {\n      const $grid = xGrid.value;\n\n      if ($grid) {\n        $grid.setActiveRow(row);\n      }\n    };\n\n    const saveRowEvent = async () => {\n      const $grid = xGrid.value;\n\n      if ($grid) {\n        await $grid.clearActived();\n        gridOptions.loading = true; // 模拟异步保存\n\n        setTimeout(() => {\n          gridOptions.loading = false;\n          VXETable.modal.message({\n            content: '保存成功！',\n            status: 'success'\n          });\n        }, 300);\n      }\n    };\n\n    const removeRowEvent = async row => {\n      const type = await VXETable.modal.confirm('您确定要删除该数据?');\n      const $grid = xGrid.value;\n\n      if ($grid) {\n        if (type === 'confirm') {\n          await $grid.remove(row);\n        }\n      }\n    };\n\n    findList();\n    return {\n      xGrid,\n      sexList1,\n      gridOptions,\n      formatSex,\n      gridEvents,\n      editRowEvent,\n      saveRowEvent,\n      removeRowEvent\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VXETable","VxeFormEvents","VxeFormPropTypes","defineComponent","onMounted","reactive","ref","computed","useStore","XEUtils","VxeGridInstance","VxeGridListeners","VxeGridProps","setup","xGrid","gridOptions","border","keepSource","showOverflow","height","loading","columnConfig","resizable","pagerConfig","total","currentPage","pageSize","pageSizes","editConfig","trigger","mode","showStatus","icon","columns","type","width","field","title","editRender","autofocus","slots","edit","default","data","sexList1","value","label","findList","setTimeout","id","name","nickname","role","sex","age","address","gridEvents","pageChange","formatSex","editRowEvent","row","$grid","setActiveRow","saveRowEvent","clearActived","modal","message","content","status","removeRowEvent","confirm","remove"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n       <vxe-grid ref=\"xGrid\" v-bind=\"gridOptions\" v-on=\"gridEvents\">\n          <template #operate=\"{ row }\">\n            <template v-if=\"$refs.xGrid.isActiveByRow(row)\">\n              <vxe-button icon=\"fa fa-save\" status=\"primary\" title=\"保存\" circle @click=\"saveRowEvent(row)\"></vxe-button>\n            </template>\n            <template v-else>\n              <vxe-button icon=\"fa fa-edit\" title=\"编辑\" circle @click=\"editRowEvent(row)\"></vxe-button>\n            </template>\n            <vxe-button icon=\"fa fa-trash\" title=\"删除\" circle @click=\"removeRowEvent(row)\"></vxe-button>\n            <vxe-button icon=\"fa fa-eye\" title=\"查看\" circle></vxe-button>\n            <vxe-button icon=\"fa fa-gear\" title=\"设置\" circle></vxe-button>\n          </template>\n\n          <template #name_edit=\"{ row }\">\n            <vxe-input v-model=\"row.name\"></vxe-input>\n          </template>\n          <template #nickname_edit=\"{ row }\">\n            <vxe-input v-model=\"row.nickname\"></vxe-input>\n          </template>\n          <template #sex_default=\"{ row }\">\n            <span>{{ formatSex(row.sex) }}</span>\n          </template>\n          <template #sex_edit=\"{ row }\">\n            <vxe-select v-model=\"row.sex\" transfer>\n              <vxe-option v-for=\"item in sexList1\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></vxe-option>\n            </vxe-select>\n          </template>\n          <template #role_edit=\"{ row }\">\n            <vxe-input v-model=\"row.role\"></vxe-input>\n          </template>\n          <template #describe_edit=\"{ row }\">\n            <vxe-input v-model=\"row.describe\"></vxe-input>\n          </template>\n        </vxe-grid>\n        \n        \n</template>\n\n<script>\n  import { VXETable, VxeFormEvents, VxeFormPropTypes } from 'vxe-table'\n  import { defineComponent, onMounted, reactive, ref, computed } from 'vue'\n  import { useStore } from 'vuex'\n  import XEUtils from 'xe-utils'\n  import {VxeGridInstance, VxeGridListeners, VxeGridProps } from 'vxe-table'\n\n\n  export default defineComponent({\n    setup  () {\n      const xGrid = ref()\n      const gridOptions = reactive<VxeGridProps>({\n        border: true,\n        keepSource: true,\n        showOverflow: true,\n        height: 530,\n        loading: false,\n        columnConfig: {\n          resizable: true\n        },\n        pagerConfig: {\n          total: 0,\n          currentPage: 1,\n          pageSize: 10,\n          pageSizes: [10, 20, 50, 100, 200, 500]\n        },\n        editConfig: {\n          trigger: 'manual',\n          mode: 'row',\n          showStatus: true,\n          icon: 'fa fa-file-text-o'\n        },\n        columns: [\n          { type: 'seq', width: 60 },\n          { type: 'checkbox', width: 50 },\n          { field: 'name', title: 'Name', editRender: { autofocus: '.vxe-input--inner' }, slots: { edit: 'name_edit' } },\n          { field: 'nickname', title: 'Nickname', editRender: { autofocus: '.vxe-input--inner' }, slots: { edit: 'nickname_edit' } },\n          { field: 'sex', title: 'Sex', editRender: {}, slots: { default: 'sex_default', edit: 'sex_edit' } },\n          { field: 'role', title: 'Role', editRender: {}, slots: { edit: 'role_edit' } },\n          { field: 'describe', title: 'Describe', showOverflow: true, editRender: {}, slots: { edit: 'describe_edit' } },\n          { title: '操作', width: 200, slots: { default: 'operate' } }\n        ],\n        data: []\n      })\n\n      const sexList1 = ref([\n        { value: '1', label: '男' },\n        { value: '0', label: '女' }\n      ])\n\n      const findList = () => {\n        gridOptions.loading = true\n        setTimeout(() => {\n          gridOptions.loading = false\n          if (gridOptions.pagerConfig) {\n            gridOptions.pagerConfig.total = 10\n          }\n          gridOptions.data = [\n            { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: '1', age: 28, address: 'Shenzhen' },\n            { id: 10002, name: 'Test2', nickname: 'T2', role: 'Test', sex: '0', age: 22, address: 'Guangzhou' },\n            { id: 10003, name: 'Test3', nickname: 'T3', role: 'PM', sex: '1', age: 32, address: 'Shanghai' },\n            { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: '0', age: 23, address: 'Shenzhen' },\n            { id: 10005, name: 'Test5', nickname: 'T5', role: 'Develop', sex: '0', age: 30, address: 'Shanghai' },\n            { id: 10006, name: 'Test6', nickname: 'T6', role: 'Develop', sex: '0', age: 27, address: 'Shanghai' },\n            { id: 10007, name: 'Test7', nickname: 'T7', role: 'Develop', sex: '1', age: 29, address: 'Shenzhen' },\n            { id: 10008, name: 'Test8', nickname: 'T8', role: 'Develop', sex: '0', age: 32, address: 'Shanghai' },\n            { id: 10009, name: 'Test9', nickname: 'T9', role: 'Develop', sex: '1', age: 30, address: 'Shenzhen' },\n            { id: 10010, name: 'Test10', nickname: 'T10', role: 'Develop', sex: '0', age: 34, address: 'Shanghai' }\n          ]\n        }, 300)\n      }\n\n      const gridEvents = {\n        pageChange ({ currentPage, pageSize }) {\n          if (gridOptions.pagerConfig) {\n            gridOptions.pagerConfig.currentPage = currentPage\n            gridOptions.pagerConfig.pageSize = pageSize\n          }\n          findList()\n        }\n      }\n\n      const formatSex = (value) => {\n        if (value === '1') {\n          return '男'\n        }\n        if (value === '0') {\n          return '女'\n        }\n        return ''\n      }\n\n      const editRowEvent = (row) => {\n        const $grid = xGrid.value\n        if ($grid) {\n          $grid.setActiveRow(row)\n        }\n      }\n\n      const saveRowEvent = async () => {\n        const $grid = xGrid.value\n        if ($grid) {\n          await $grid.clearActived()\n          gridOptions.loading = true\n          // 模拟异步保存\n          setTimeout(() => {\n            gridOptions.loading = false\n            VXETable.modal.message({ content: '保存成功！', status: 'success' })\n          }, 300)\n        }\n      }\n\n      const removeRowEvent = async (row) => {\n        const type = await VXETable.modal.confirm('您确定要删除该数据?')\n        const $grid = xGrid.value\n        if ($grid) {\n          if (type === 'confirm') {\n            await $grid.remove(row)\n          }\n        }\n      }\n\n      findList()\n\n      return {\n        xGrid,\n        sexList1,\n        gridOptions,\n        formatSex,\n        gridEvents,\n        editRowEvent,\n        saveRowEvent,\n        removeRowEvent\n      }\n      }\n    })\n</script>"]},"metadata":{},"sourceType":"module"}