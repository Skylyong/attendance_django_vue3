{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { truthProp, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nimport { parseFormat } from \"./utils\";\nimport { useCountDown } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"count-down\");\nconst countDownProps = {\n  time: makeNumericProp(0),\n  format: makeStringProp(\"HH:mm:ss\"),\n  autoStart: truthProp,\n  millisecond: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: countDownProps,\n  emits: [\"change\", \"finish\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      start,\n      pause,\n      reset,\n      current\n    } = useCountDown({\n      time: +props.time,\n      millisecond: props.millisecond,\n      onChange: current2 => emit(\"change\", current2),\n      onFinish: () => emit(\"finish\")\n    });\n    const timeText = computed(() => parseFormat(props.format, current.value));\n\n    const resetTime = () => {\n      reset(+props.time);\n\n      if (props.autoStart) {\n        start();\n      }\n    };\n\n    watch(() => props.time, resetTime, {\n      immediate: true\n    });\n    useExpose({\n      start,\n      pause,\n      reset: resetTime\n    });\n    return () => _createVNode(\"div\", {\n      \"role\": \"timer\",\n      \"class\": bem()\n    }, [slots.default ? slots.default(current.value) : timeText.value]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/count-down/CountDown.js"],"names":["createVNode","_createVNode","watch","computed","defineComponent","truthProp","makeStringProp","makeNumericProp","createNamespace","parseFormat","useCountDown","useExpose","name","bem","countDownProps","time","format","autoStart","millisecond","Boolean","stdin_default","props","emits","setup","emit","slots","start","pause","reset","current","onChange","current2","onFinish","timeText","value","resetTime","immediate","default"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,eAA1B,QAAiD,KAAjD;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,eAApC,EAAqDC,eAArD,QAA4E,UAA5E;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,IAAcL,eAAe,CAAC,YAAD,CAAnC;AACA,MAAMM,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAER,eAAe,CAAC,CAAD,CADA;AAErBS,EAAAA,MAAM,EAAEV,cAAc,CAAC,UAAD,CAFD;AAGrBW,EAAAA,SAAS,EAAEZ,SAHU;AAIrBa,EAAAA,WAAW,EAAEC;AAJQ,CAAvB;AAMA,IAAIC,aAAa,GAAGhB,eAAe,CAAC;AAClCQ,EAAAA,IADkC;AAElCS,EAAAA,KAAK,EAAEP,cAF2B;AAGlCQ,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,CAH2B;;AAIlCC,EAAAA,KAAK,CAACF,KAAD,EAAQ;AACXG,IAAAA,IADW;AAEXC,IAAAA;AAFW,GAAR,EAGF;AACD,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA;AAJI,QAKFnB,YAAY,CAAC;AACfK,MAAAA,IAAI,EAAE,CAACM,KAAK,CAACN,IADE;AAEfG,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFJ;AAGfY,MAAAA,QAAQ,EAAGC,QAAD,IAAcP,IAAI,CAAC,QAAD,EAAWO,QAAX,CAHb;AAIfC,MAAAA,QAAQ,EAAE,MAAMR,IAAI,CAAC,QAAD;AAJL,KAAD,CALhB;AAWA,UAAMS,QAAQ,GAAG9B,QAAQ,CAAC,MAAMM,WAAW,CAACY,KAAK,CAACL,MAAP,EAAea,OAAO,CAACK,KAAvB,CAAlB,CAAzB;;AACA,UAAMC,SAAS,GAAG,MAAM;AACtBP,MAAAA,KAAK,CAAC,CAACP,KAAK,CAACN,IAAR,CAAL;;AACA,UAAIM,KAAK,CAACJ,SAAV,EAAqB;AACnBS,QAAAA,KAAK;AACN;AACF,KALD;;AAMAxB,IAAAA,KAAK,CAAC,MAAMmB,KAAK,CAACN,IAAb,EAAmBoB,SAAnB,EAA8B;AACjCC,MAAAA,SAAS,EAAE;AADsB,KAA9B,CAAL;AAGAzB,IAAAA,SAAS,CAAC;AACRe,MAAAA,KADQ;AAERC,MAAAA,KAFQ;AAGRC,MAAAA,KAAK,EAAEO;AAHC,KAAD,CAAT;AAKA,WAAO,MAAMlC,YAAY,CAAC,KAAD,EAAQ;AAC/B,cAAQ,OADuB;AAE/B,eAASY,GAAG;AAFmB,KAAR,EAGtB,CAACY,KAAK,CAACY,OAAN,GAAgBZ,KAAK,CAACY,OAAN,CAAcR,OAAO,CAACK,KAAtB,CAAhB,GAA+CD,QAAQ,CAACC,KAAzD,CAHsB,CAAzB;AAID;;AAtCiC,CAAD,CAAnC;AAwCA,SACEd,aAAa,IAAIiB,OADnB","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, defineComponent } from \"vue\";\nimport { truthProp, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nimport { parseFormat } from \"./utils\";\nimport { useCountDown } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"count-down\");\nconst countDownProps = {\n  time: makeNumericProp(0),\n  format: makeStringProp(\"HH:mm:ss\"),\n  autoStart: truthProp,\n  millisecond: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: countDownProps,\n  emits: [\"change\", \"finish\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      start,\n      pause,\n      reset,\n      current\n    } = useCountDown({\n      time: +props.time,\n      millisecond: props.millisecond,\n      onChange: (current2) => emit(\"change\", current2),\n      onFinish: () => emit(\"finish\")\n    });\n    const timeText = computed(() => parseFormat(props.format, current.value));\n    const resetTime = () => {\n      reset(+props.time);\n      if (props.autoStart) {\n        start();\n      }\n    };\n    watch(() => props.time, resetTime, {\n      immediate: true\n    });\n    useExpose({\n      start,\n      pause,\n      reset: resetTime\n    });\n    return () => _createVNode(\"div\", {\n      \"role\": \"timer\",\n      \"class\": bem()\n    }, [slots.default ? slots.default(current.value) : timeText.value]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}