{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { truthProp, makeStringProp, createNamespace } from \"../utils\";\nimport { Cell } from \"../cell\";\nconst [name, bem, t] = createNamespace(\"contact-card\");\nconst contactCardProps = {\n  tel: String,\n  name: String,\n  type: makeStringProp(\"add\"),\n  addText: String,\n  editable: truthProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: contactCardProps,\n  emits: [\"click\"],\n\n  setup(props, {\n    emit\n  }) {\n    const onClick = event => {\n      if (props.editable) {\n        emit(\"click\", event);\n      }\n    };\n\n    const renderContent = () => {\n      if (props.type === \"add\") {\n        return props.addText || t(\"addContact\");\n      }\n\n      return [_createVNode(\"div\", null, [`${t(\"name\")}\\uFF1A${props.name}`]), _createVNode(\"div\", null, [`${t(\"tel\")}\\uFF1A${props.tel}`])];\n    };\n\n    return () => _createVNode(Cell, {\n      \"center\": true,\n      \"icon\": props.type === \"edit\" ? \"contact\" : \"add-square\",\n      \"class\": bem([props.type]),\n      \"border\": false,\n      \"isLink\": props.editable,\n      \"valueClass\": bem(\"value\"),\n      \"onClick\": onClick\n    }, {\n      value: renderContent\n    });\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/contact-card/ContactCard.js"],"names":["createVNode","_createVNode","defineComponent","truthProp","makeStringProp","createNamespace","Cell","name","bem","t","contactCardProps","tel","String","type","addText","editable","stdin_default","props","emits","setup","emit","onClick","event","renderContent","value","default"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,eAApC,QAA2D,UAA3D;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,EAAYC,CAAZ,IAAiBJ,eAAe,CAAC,cAAD,CAAtC;AACA,MAAMK,gBAAgB,GAAG;AACvBC,EAAAA,GAAG,EAAEC,MADkB;AAEvBL,EAAAA,IAAI,EAAEK,MAFiB;AAGvBC,EAAAA,IAAI,EAAET,cAAc,CAAC,KAAD,CAHG;AAIvBU,EAAAA,OAAO,EAAEF,MAJc;AAKvBG,EAAAA,QAAQ,EAAEZ;AALa,CAAzB;AAOA,IAAIa,aAAa,GAAGd,eAAe,CAAC;AAClCK,EAAAA,IADkC;AAElCU,EAAAA,KAAK,EAAEP,gBAF2B;AAGlCQ,EAAAA,KAAK,EAAE,CAAC,OAAD,CAH2B;;AAIlCC,EAAAA,KAAK,CAACF,KAAD,EAAQ;AACXG,IAAAA;AADW,GAAR,EAEF;AACD,UAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,UAAIL,KAAK,CAACF,QAAV,EAAoB;AAClBK,QAAAA,IAAI,CAAC,OAAD,EAAUE,KAAV,CAAJ;AACD;AACF,KAJD;;AAKA,UAAMC,aAAa,GAAG,MAAM;AAC1B,UAAIN,KAAK,CAACJ,IAAN,KAAe,KAAnB,EAA0B;AACxB,eAAOI,KAAK,CAACH,OAAN,IAAiBL,CAAC,CAAC,YAAD,CAAzB;AACD;;AACD,aAAO,CAACR,YAAY,CAAC,KAAD,EAAQ,IAAR,EAAc,CAAE,GAAEQ,CAAC,CAAC,MAAD,CAAS,SAAQQ,KAAK,CAACV,IAAK,EAAjC,CAAd,CAAb,EAAiEN,YAAY,CAAC,KAAD,EAAQ,IAAR,EAAc,CAAE,GAAEQ,CAAC,CAAC,KAAD,CAAQ,SAAQQ,KAAK,CAACN,GAAI,EAA/B,CAAd,CAA7E,CAAP;AACD,KALD;;AAMA,WAAO,MAAMV,YAAY,CAACK,IAAD,EAAO;AAC9B,gBAAU,IADoB;AAE9B,cAAQW,KAAK,CAACJ,IAAN,KAAe,MAAf,GAAwB,SAAxB,GAAoC,YAFd;AAG9B,eAASL,GAAG,CAAC,CAACS,KAAK,CAACJ,IAAP,CAAD,CAHkB;AAI9B,gBAAU,KAJoB;AAK9B,gBAAUI,KAAK,CAACF,QALc;AAM9B,oBAAcP,GAAG,CAAC,OAAD,CANa;AAO9B,iBAAWa;AAPmB,KAAP,EAQtB;AACDG,MAAAA,KAAK,EAAED;AADN,KARsB,CAAzB;AAWD;;AA7BiC,CAAD,CAAnC;AA+BA,SACEP,aAAa,IAAIS,OADnB","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { truthProp, makeStringProp, createNamespace } from \"../utils\";\nimport { Cell } from \"../cell\";\nconst [name, bem, t] = createNamespace(\"contact-card\");\nconst contactCardProps = {\n  tel: String,\n  name: String,\n  type: makeStringProp(\"add\"),\n  addText: String,\n  editable: truthProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: contactCardProps,\n  emits: [\"click\"],\n  setup(props, {\n    emit\n  }) {\n    const onClick = (event) => {\n      if (props.editable) {\n        emit(\"click\", event);\n      }\n    };\n    const renderContent = () => {\n      if (props.type === \"add\") {\n        return props.addText || t(\"addContact\");\n      }\n      return [_createVNode(\"div\", null, [`${t(\"name\")}\\uFF1A${props.name}`]), _createVNode(\"div\", null, [`${t(\"tel\")}\\uFF1A${props.tel}`])];\n    };\n    return () => _createVNode(Cell, {\n      \"center\": true,\n      \"icon\": props.type === \"edit\" ? \"contact\" : \"add-square\",\n      \"class\": bem([props.type]),\n      \"border\": false,\n      \"isLink\": props.editable,\n      \"valueClass\": bem(\"value\"),\n      \"onClick\": onClick\n    }, {\n      value: renderContent\n    });\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}