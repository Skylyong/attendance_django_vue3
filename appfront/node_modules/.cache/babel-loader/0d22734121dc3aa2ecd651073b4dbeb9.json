{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createVNode as _createVNode } from \"vue\";\nimport classNames from '../_util/classNames';\nimport { tuple } from '../_util/type';\nimport PropTypes from '../_util/vue-types';\nexport var skeletonElementProps = function skeletonElementProps() {\n  return {\n    prefixCls: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.oneOf(tuple('large', 'small', 'default')), PropTypes.number]),\n    shape: PropTypes.oneOf(tuple('circle', 'square', 'round')),\n    active: PropTypes.looseBool\n  };\n};\n\nvar Element = function Element(props) {\n  var _classNames, _classNames2;\n\n  var prefixCls = props.prefixCls,\n      size = props.size,\n      shape = props.shape;\n  var sizeCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _classNames));\n  var shapeCls = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-circle\"), shape === 'circle'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-square\"), shape === 'square'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-round\"), shape === 'round'), _classNames2));\n  var sizeStyle = typeof size === 'number' ? {\n    width: \"\".concat(size, \"px\"),\n    height: \"\".concat(size, \"px\"),\n    lineHeight: \"\".concat(size, \"px\")\n  } : {};\n  return _createVNode(\"span\", {\n    \"class\": classNames(prefixCls, sizeCls, shapeCls),\n    \"style\": sizeStyle\n  }, null);\n};\n\nElement.displayName = 'SkeletonElement';\nexport default Element;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/skeleton/Element.js"],"names":["_defineProperty","createVNode","_createVNode","classNames","tuple","PropTypes","skeletonElementProps","prefixCls","string","size","oneOfType","oneOf","number","shape","active","looseBool","Element","props","_classNames","_classNames2","sizeCls","concat","shapeCls","sizeStyle","width","height","lineHeight","displayName"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,IAAIC,oBAAoB,GAAG,SAASA,oBAAT,GAAgC;AAChE,SAAO;AACLC,IAAAA,SAAS,EAAEF,SAAS,CAACG,MADhB;AAELC,IAAAA,IAAI,EAAEJ,SAAS,CAACK,SAAV,CAAoB,CAACL,SAAS,CAACM,KAAV,CAAgBP,KAAK,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,CAArB,CAAD,EAAsDC,SAAS,CAACO,MAAhE,CAApB,CAFD;AAGLC,IAAAA,KAAK,EAAER,SAAS,CAACM,KAAV,CAAgBP,KAAK,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,CAArB,CAHF;AAILU,IAAAA,MAAM,EAAET,SAAS,CAACU;AAJb,GAAP;AAMD,CAPM;;AASP,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpC,MAAIC,WAAJ,EAAiBC,YAAjB;;AAEA,MAAIZ,SAAS,GAAGU,KAAK,CAACV,SAAtB;AAAA,MACIE,IAAI,GAAGQ,KAAK,CAACR,IADjB;AAAA,MAEII,KAAK,GAAGI,KAAK,CAACJ,KAFlB;AAGA,MAAIO,OAAO,GAAGjB,UAAU,EAAEe,WAAW,GAAG,EAAd,EAAkBlB,eAAe,CAACkB,WAAD,EAAc,GAAGG,MAAH,CAAUd,SAAV,EAAqB,KAArB,CAAd,EAA2CE,IAAI,KAAK,OAApD,CAAjC,EAA+FT,eAAe,CAACkB,WAAD,EAAc,GAAGG,MAAH,CAAUd,SAAV,EAAqB,KAArB,CAAd,EAA2CE,IAAI,KAAK,OAApD,CAA9G,EAA4KS,WAA9K,EAAxB;AACA,MAAII,QAAQ,GAAGnB,UAAU,EAAEgB,YAAY,GAAG,EAAf,EAAmBnB,eAAe,CAACmB,YAAD,EAAe,GAAGE,MAAH,CAAUd,SAAV,EAAqB,SAArB,CAAf,EAAgDM,KAAK,KAAK,QAA1D,CAAlC,EAAuGb,eAAe,CAACmB,YAAD,EAAe,GAAGE,MAAH,CAAUd,SAAV,EAAqB,SAArB,CAAf,EAAgDM,KAAK,KAAK,QAA1D,CAAtH,EAA2Lb,eAAe,CAACmB,YAAD,EAAe,GAAGE,MAAH,CAAUd,SAAV,EAAqB,QAArB,CAAf,EAA+CM,KAAK,KAAK,OAAzD,CAA1M,EAA6QM,YAA/Q,EAAzB;AACA,MAAII,SAAS,GAAG,OAAOd,IAAP,KAAgB,QAAhB,GAA2B;AACzCe,IAAAA,KAAK,EAAE,GAAGH,MAAH,CAAUZ,IAAV,EAAgB,IAAhB,CADkC;AAEzCgB,IAAAA,MAAM,EAAE,GAAGJ,MAAH,CAAUZ,IAAV,EAAgB,IAAhB,CAFiC;AAGzCiB,IAAAA,UAAU,EAAE,GAAGL,MAAH,CAAUZ,IAAV,EAAgB,IAAhB;AAH6B,GAA3B,GAIZ,EAJJ;AAKA,SAAOP,YAAY,CAAC,MAAD,EAAS;AAC1B,aAASC,UAAU,CAACI,SAAD,EAAYa,OAAZ,EAAqBE,QAArB,CADO;AAE1B,aAASC;AAFiB,GAAT,EAGhB,IAHgB,CAAnB;AAID,CAjBD;;AAmBAP,OAAO,CAACW,WAAR,GAAsB,iBAAtB;AACA,eAAeX,OAAf","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createVNode as _createVNode } from \"vue\";\nimport classNames from '../_util/classNames';\nimport { tuple } from '../_util/type';\nimport PropTypes from '../_util/vue-types';\nexport var skeletonElementProps = function skeletonElementProps() {\n  return {\n    prefixCls: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.oneOf(tuple('large', 'small', 'default')), PropTypes.number]),\n    shape: PropTypes.oneOf(tuple('circle', 'square', 'round')),\n    active: PropTypes.looseBool\n  };\n};\n\nvar Element = function Element(props) {\n  var _classNames, _classNames2;\n\n  var prefixCls = props.prefixCls,\n      size = props.size,\n      shape = props.shape;\n  var sizeCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _classNames));\n  var shapeCls = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-circle\"), shape === 'circle'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-square\"), shape === 'square'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-round\"), shape === 'round'), _classNames2));\n  var sizeStyle = typeof size === 'number' ? {\n    width: \"\".concat(size, \"px\"),\n    height: \"\".concat(size, \"px\"),\n    lineHeight: \"\".concat(size, \"px\")\n  } : {};\n  return _createVNode(\"span\", {\n    \"class\": classNames(prefixCls, sizeCls, shapeCls),\n    \"style\": sizeStyle\n  }, null);\n};\n\nElement.displayName = 'SkeletonElement';\nexport default Element;"]},"metadata":{},"sourceType":"module"}