{"ast":null,"code":"import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, defineComponent } from \"vue\";\nimport { isDef, createNamespace, makeNumericProp } from \"../utils\";\nimport { raf, useRect, doubleRaf, useEventListener, onMountedOrActivated } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { onPopupReopen } from \"../composables/on-popup-reopen\";\nimport { Icon } from \"../icon\";\nconst [name, bem] = createNamespace(\"notice-bar\");\nconst noticeBarProps = {\n  text: String,\n  mode: String,\n  color: String,\n  delay: makeNumericProp(1),\n  speed: makeNumericProp(60),\n  leftIcon: String,\n  wrapable: Boolean,\n  background: String,\n  scrollable: {\n    type: Boolean,\n    default: null\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: noticeBarProps,\n  emits: [\"close\", \"replay\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let wrapWidth = 0;\n    let contentWidth = 0;\n    let startTimer;\n    const wrapRef = ref();\n    const contentRef = ref();\n    const state = reactive({\n      show: true,\n      offset: 0,\n      duration: 0\n    });\n\n    const renderLeftIcon = () => {\n      if (slots[\"left-icon\"]) {\n        return slots[\"left-icon\"]();\n      }\n\n      if (props.leftIcon) {\n        return _createVNode(Icon, {\n          \"class\": bem(\"left-icon\"),\n          \"name\": props.leftIcon\n        }, null);\n      }\n    };\n\n    const getRightIconName = () => {\n      if (props.mode === \"closeable\") {\n        return \"cross\";\n      }\n\n      if (props.mode === \"link\") {\n        return \"arrow\";\n      }\n    };\n\n    const onClickRightIcon = event => {\n      if (props.mode === \"closeable\") {\n        state.show = false;\n        emit(\"close\", event);\n      }\n    };\n\n    const renderRightIcon = () => {\n      if (slots[\"right-icon\"]) {\n        return slots[\"right-icon\"]();\n      }\n\n      const name2 = getRightIconName();\n\n      if (name2) {\n        return _createVNode(Icon, {\n          \"name\": name2,\n          \"class\": bem(\"right-icon\"),\n          \"onClick\": onClickRightIcon\n        }, null);\n      }\n    };\n\n    const onTransitionEnd = () => {\n      state.offset = wrapWidth;\n      state.duration = 0;\n      raf(() => {\n        doubleRaf(() => {\n          state.offset = -contentWidth;\n          state.duration = (contentWidth + wrapWidth) / +props.speed;\n          emit(\"replay\");\n        });\n      });\n    };\n\n    const renderMarquee = () => {\n      const ellipsis = props.scrollable === false && !props.wrapable;\n      const style = {\n        transform: state.offset ? `translateX(${state.offset}px)` : \"\",\n        transitionDuration: `${state.duration}s`\n      };\n      return _createVNode(\"div\", {\n        \"ref\": wrapRef,\n        \"role\": \"marquee\",\n        \"class\": bem(\"wrap\")\n      }, [_createVNode(\"div\", {\n        \"ref\": contentRef,\n        \"style\": style,\n        \"class\": [bem(\"content\"), {\n          \"van-ellipsis\": ellipsis\n        }],\n        \"onTransitionend\": onTransitionEnd\n      }, [slots.default ? slots.default() : props.text])]);\n    };\n\n    const reset = () => {\n      const {\n        delay,\n        speed,\n        scrollable\n      } = props;\n      const ms = isDef(delay) ? +delay * 1e3 : 0;\n      wrapWidth = 0;\n      contentWidth = 0;\n      state.offset = 0;\n      state.duration = 0;\n      clearTimeout(startTimer);\n      startTimer = setTimeout(() => {\n        if (!wrapRef.value || !contentRef.value || scrollable === false) {\n          return;\n        }\n\n        const wrapRefWidth = useRect(wrapRef).width;\n        const contentRefWidth = useRect(contentRef).width;\n\n        if (scrollable || contentRefWidth > wrapRefWidth) {\n          doubleRaf(() => {\n            wrapWidth = wrapRefWidth;\n            contentWidth = contentRefWidth;\n            state.offset = -contentWidth;\n            state.duration = contentWidth / +speed;\n          });\n        }\n      }, ms);\n    };\n\n    onPopupReopen(reset);\n    onMountedOrActivated(reset);\n    useEventListener(\"pageshow\", reset);\n    useExpose({\n      reset\n    });\n    watch(() => [props.text, props.scrollable], reset);\n    return () => {\n      const {\n        color,\n        wrapable,\n        background\n      } = props;\n      return _withDirectives(_createVNode(\"div\", {\n        \"role\": \"alert\",\n        \"class\": bem({\n          wrapable\n        }),\n        \"style\": {\n          color,\n          background\n        }\n      }, [renderLeftIcon(), renderMarquee(), renderRightIcon()]), [[_vShow, state.show]]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/notice-bar/NoticeBar.js"],"names":["withDirectives","_withDirectives","vShow","_vShow","createVNode","_createVNode","ref","watch","reactive","defineComponent","isDef","createNamespace","makeNumericProp","raf","useRect","doubleRaf","useEventListener","onMountedOrActivated","useExpose","onPopupReopen","Icon","name","bem","noticeBarProps","text","String","mode","color","delay","speed","leftIcon","wrapable","Boolean","background","scrollable","type","default","stdin_default","props","emits","setup","emit","slots","wrapWidth","contentWidth","startTimer","wrapRef","contentRef","state","show","offset","duration","renderLeftIcon","getRightIconName","onClickRightIcon","event","renderRightIcon","name2","onTransitionEnd","renderMarquee","ellipsis","style","transform","transitionDuration","reset","ms","clearTimeout","setTimeout","value","wrapRefWidth","width","contentRefWidth"],"mappings":"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","sourcesContent":["import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, defineComponent } from \"vue\";\nimport { isDef, createNamespace, makeNumericProp } from \"../utils\";\nimport { raf, useRect, doubleRaf, useEventListener, onMountedOrActivated } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { onPopupReopen } from \"../composables/on-popup-reopen\";\nimport { Icon } from \"../icon\";\nconst [name, bem] = createNamespace(\"notice-bar\");\nconst noticeBarProps = {\n  text: String,\n  mode: String,\n  color: String,\n  delay: makeNumericProp(1),\n  speed: makeNumericProp(60),\n  leftIcon: String,\n  wrapable: Boolean,\n  background: String,\n  scrollable: {\n    type: Boolean,\n    default: null\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: noticeBarProps,\n  emits: [\"close\", \"replay\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let wrapWidth = 0;\n    let contentWidth = 0;\n    let startTimer;\n    const wrapRef = ref();\n    const contentRef = ref();\n    const state = reactive({\n      show: true,\n      offset: 0,\n      duration: 0\n    });\n    const renderLeftIcon = () => {\n      if (slots[\"left-icon\"]) {\n        return slots[\"left-icon\"]();\n      }\n      if (props.leftIcon) {\n        return _createVNode(Icon, {\n          \"class\": bem(\"left-icon\"),\n          \"name\": props.leftIcon\n        }, null);\n      }\n    };\n    const getRightIconName = () => {\n      if (props.mode === \"closeable\") {\n        return \"cross\";\n      }\n      if (props.mode === \"link\") {\n        return \"arrow\";\n      }\n    };\n    const onClickRightIcon = (event) => {\n      if (props.mode === \"closeable\") {\n        state.show = false;\n        emit(\"close\", event);\n      }\n    };\n    const renderRightIcon = () => {\n      if (slots[\"right-icon\"]) {\n        return slots[\"right-icon\"]();\n      }\n      const name2 = getRightIconName();\n      if (name2) {\n        return _createVNode(Icon, {\n          \"name\": name2,\n          \"class\": bem(\"right-icon\"),\n          \"onClick\": onClickRightIcon\n        }, null);\n      }\n    };\n    const onTransitionEnd = () => {\n      state.offset = wrapWidth;\n      state.duration = 0;\n      raf(() => {\n        doubleRaf(() => {\n          state.offset = -contentWidth;\n          state.duration = (contentWidth + wrapWidth) / +props.speed;\n          emit(\"replay\");\n        });\n      });\n    };\n    const renderMarquee = () => {\n      const ellipsis = props.scrollable === false && !props.wrapable;\n      const style = {\n        transform: state.offset ? `translateX(${state.offset}px)` : \"\",\n        transitionDuration: `${state.duration}s`\n      };\n      return _createVNode(\"div\", {\n        \"ref\": wrapRef,\n        \"role\": \"marquee\",\n        \"class\": bem(\"wrap\")\n      }, [_createVNode(\"div\", {\n        \"ref\": contentRef,\n        \"style\": style,\n        \"class\": [bem(\"content\"), {\n          \"van-ellipsis\": ellipsis\n        }],\n        \"onTransitionend\": onTransitionEnd\n      }, [slots.default ? slots.default() : props.text])]);\n    };\n    const reset = () => {\n      const {\n        delay,\n        speed,\n        scrollable\n      } = props;\n      const ms = isDef(delay) ? +delay * 1e3 : 0;\n      wrapWidth = 0;\n      contentWidth = 0;\n      state.offset = 0;\n      state.duration = 0;\n      clearTimeout(startTimer);\n      startTimer = setTimeout(() => {\n        if (!wrapRef.value || !contentRef.value || scrollable === false) {\n          return;\n        }\n        const wrapRefWidth = useRect(wrapRef).width;\n        const contentRefWidth = useRect(contentRef).width;\n        if (scrollable || contentRefWidth > wrapRefWidth) {\n          doubleRaf(() => {\n            wrapWidth = wrapRefWidth;\n            contentWidth = contentRefWidth;\n            state.offset = -contentWidth;\n            state.duration = contentWidth / +speed;\n          });\n        }\n      }, ms);\n    };\n    onPopupReopen(reset);\n    onMountedOrActivated(reset);\n    useEventListener(\"pageshow\", reset);\n    useExpose({\n      reset\n    });\n    watch(() => [props.text, props.scrollable], reset);\n    return () => {\n      const {\n        color,\n        wrapable,\n        background\n      } = props;\n      return _withDirectives(_createVNode(\"div\", {\n        \"role\": \"alert\",\n        \"class\": bem({\n          wrapable\n        }),\n        \"style\": {\n          color,\n          background\n        }\n      }, [renderLeftIcon(), renderMarquee(), renderRightIcon()]), [[_vShow, state.show]]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}