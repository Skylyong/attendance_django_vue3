{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock, Fragment as _Fragment } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Add\");\n\nconst _hoisted_2 = {\n  class: \"editable-cell\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"editable-cell-input-wrapper\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"editable-cell-text-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"editable-cell\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"editable-cell-input-wrapper\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"editable-cell-text-wrapper\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"a\", null, \"Delete\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_check_outlined = _resolveComponent(\"check-outlined\");\n\n  const _component_edit_outlined = _resolveComponent(\"edit-outlined\");\n\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_a_button, {\n    class: \"editable-add-btn\",\n    onClick: _ctx.handleAdd,\n    style: {\n      \"margin-bottom\": \"8px\"\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"]), _createVNode(_component_a_table, {\n    bordered: \"\",\n    \"data-source\": _ctx.dataSource,\n    columns: _ctx.columns\n  }, {\n    name: _withCtx(({\n      text,\n      record\n    }) => [_createElementVNode(\"div\", _hoisted_2, [_ctx.editableData[record.key] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_a_input, {\n      value: _ctx.editableData[record.key].name,\n      \"onUpdate:value\": $event => _ctx.editableData[record.key].name = $event,\n      onPressEnter: $event => _ctx.save(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"onUpdate:value\", \"onPressEnter\"]), _createVNode(_component_check_outlined, {\n      class: \"editable-cell-icon-check\",\n      onClick: $event => _ctx.save(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createTextVNode(_toDisplayString(text || ' ') + \" \", 1\n    /* TEXT */\n    ), _createVNode(_component_edit_outlined, {\n      class: \"editable-cell-icon\",\n      onClick: $event => _ctx.edit(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])]))])]),\n    age: _withCtx(({\n      text,\n      record\n    }) => [_createElementVNode(\"div\", _hoisted_5, [_ctx.editableData[record.key] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_a_input, {\n      value: _ctx.editableData[record.key].name,\n      \"onUpdate:value\": $event => _ctx.editableData[record.key].name = $event,\n      onPressEnter: $event => _ctx.save(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"onUpdate:value\", \"onPressEnter\"]), _createVNode(_component_check_outlined, {\n      class: \"editable-cell-icon-check\",\n      onClick: $event => _ctx.save(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_a_input, {\n      value: _ctx.editableData[record.key].age,\n      \"onUpdate:value\": $event => _ctx.editableData[record.key].age = $event,\n      onPressEnter: $event => _ctx.save(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"onUpdate:value\", \"onPressEnter\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createTextVNode(_toDisplayString(text || ' ') + \" \", 1\n    /* TEXT */\n    ), _createVNode(_component_edit_outlined, {\n      class: \"editable-cell-icon\",\n      onClick: $event => _ctx.edit(record.key)\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"])]))])]),\n    operation: _withCtx(({\n      record\n    }) => [_ctx.dataSource.length ? (_openBlock(), _createBlock(_component_a_popconfirm, {\n      key: 0,\n      title: \"Sure to delete?\",\n      onConfirm: $event => _ctx.onDelete(record.key)\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onConfirm\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data-source\", \"columns\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createVNode","_component_a_button","onClick","_ctx","style","_component_a_table","bordered","columns","name","text","record","key","_createElementBlock","_component_a_input","value","$event","onPressEnter","_component_check_outlined","_component_edit_outlined","age","operation","length","_createBlock","_component_a_popconfirm","title","onConfirm","_hoisted_8"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n  <a-button class=\"editable-add-btn\" @click=\"handleAdd\" style=\"margin-bottom: 8px\">Add</a-button>\n  <a-table bordered :data-source=\"dataSource\" :columns=\"columns\">\n    <template #name=\"{ text, record }\">\n      <div class=\"editable-cell\">\n\n\n\n        <div v-if=\"editableData[record.key]\" class=\"editable-cell-input-wrapper\">\n\n          <a-input v-model:value=\"editableData[record.key].name\" @pressEnter=\"save(record.key)\" />\n\n\n\n          <check-outlined class=\"editable-cell-icon-check\" @click=\"save(record.key)\" />\n        \n      </div>\n\n\n\n\n        <div v-else class=\"editable-cell-text-wrapper\">\n          {{ text || ' ' }}\n          <edit-outlined class=\"editable-cell-icon\" @click=\"edit(record.key)\" />\n        </div>\n\n\n      </div>\n    </template>\n\n\n\n   <template #age=\"{ text, record }\">\n      <div class=\"editable-cell\">\n\n\n\n        <div v-if=\"editableData[record.key]\" class=\"editable-cell-input-wrapper\">\n\n          <a-input v-model:value=\"editableData[record.key].name\" @pressEnter=\"save(record.key)\" />\n\n\n\n          <check-outlined class=\"editable-cell-icon-check\" @click=\"save(record.key)\" />\n        \n        <a-input v-model:value=\"editableData[record.key].age\" @pressEnter=\"save(record.key)\" />\n      </div>\n\n\n\n\n        <div v-else class=\"editable-cell-text-wrapper\">\n          {{ text || ' ' }}\n          <edit-outlined class=\"editable-cell-icon\" @click=\"edit(record.key)\" />\n        </div>\n\n\n      </div>\n    </template>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <template #operation=\"{ record }\">\n      <a-popconfirm\n        v-if=\"dataSource.length\"\n        title=\"Sure to delete?\"\n        @confirm=\"onDelete(record.key)\"\n      >\n        <a>Delete</a>\n      </a-popconfirm>\n    </template>\n  </a-table>\n</template>\n<script>\nimport { computed, defineComponent, reactive, ref } from 'vue';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons-vue';\nimport { cloneDeep } from 'lodash-es';\nimport { message } from 'ant-design-vue';\nexport default defineComponent({\n  components: {\n    CheckOutlined,\n    EditOutlined,\n  },\n\n  setup() {\n    const columns = [\n      {\n        title: 'name',\n        dataIndex: 'name',\n        width: '30%',\n        slots: {\n          customRender: 'name',\n        },\n      },\n      {\n        title: 'age',\n        dataIndex: 'age',\n        slots: {\n          customRender: 'age',\n        },\n      },\n      {\n        title: 'address',\n        dataIndex: 'address',\n      },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        slots: {\n          customRender: 'operation',\n        },\n      },\n    ];\n    const dataSource = ref([\n      {\n        key: '0',\n        name: 'Edward King 0',\n        age: 32,\n        address: 'London, Park Lane no. 0',\n      },\n      {\n        key: '1',\n        name: 'Edward King 1',\n        age: 32,\n        address: 'London, Park Lane no. 1',\n      },\n    ]);\n    const count = computed(() => dataSource.value.length + 1);\n    const editableData = reactive({});\n\n    const edit = key => {\n      editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n      message.success(editableData)\n    };\n\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n    \n\n    const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    const handleAdd = () => {\n      const newData = {\n        key: `${count.value}`,\n        name: `Edward King ${count.value}`,\n        age: 32,\n        address: `London, Park Lane no. ${count.value}`,\n      };\n      dataSource.value.push(newData);\n    };\n\n    return {\n      columns,\n      onDelete,\n      handleAdd,\n      dataSource,\n      editableData,\n      count,\n      edit,\n      save,\n    };\n  },\n});\n</script>\n<style lang=\"less\">\n.editable-cell {\n  position: relative;\n  .editable-cell-input-wrapper,\n  .editable-cell-text-wrapper {\n    padding-right: 24px;\n  }\n\n  .editable-cell-text-wrapper {\n    padding: 5px 24px 5px 5px;\n  }\n\n  .editable-cell-icon,\n  .editable-cell-icon-check {\n    position: absolute;\n    right: 0;\n    width: 20px;\n    cursor: pointer;\n  }\n\n  .editable-cell-icon {\n    margin-top: 4px;\n    display: none;\n  }\n\n  .editable-cell-icon-check {\n    line-height: 28px;\n  }\n\n  .editable-cell-icon:hover,\n  .editable-cell-icon-check:hover {\n    color: #108ee9;\n  }\n\n  .editable-add-btn {\n    margin-bottom: 8px;\n  }\n}\n.editable-cell:hover .editable-cell-icon {\n  display: inline-block;\n}\n</style>"]},"metadata":{},"sourceType":"module"}