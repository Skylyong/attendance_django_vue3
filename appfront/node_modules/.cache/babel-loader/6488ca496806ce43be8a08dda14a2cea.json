{"ast":null,"code":"import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { reactive, Teleport, defineComponent } from \"vue\";\nimport { truthProp, unknownProp, getZIndexStyle, createNamespace, makeArrayProp } from \"../utils\";\nimport { DROPDOWN_KEY } from \"../dropdown-menu/DropdownMenu\";\nimport { useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Cell } from \"../cell\";\nimport { Icon } from \"../icon\";\nimport { Popup } from \"../popup\";\nconst [name, bem] = createNamespace(\"dropdown-item\");\nconst dropdownItemProps = {\n  title: String,\n  options: makeArrayProp(),\n  disabled: Boolean,\n  teleport: [String, Object],\n  lazyRender: truthProp,\n  modelValue: unknownProp,\n  titleClass: unknownProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: dropdownItemProps,\n  emits: [\"open\", \"opened\", \"close\", \"closed\", \"change\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const state = reactive({\n      showPopup: false,\n      transition: true,\n      showWrapper: false\n    });\n    const {\n      parent,\n      index\n    } = useParent(DROPDOWN_KEY);\n\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <DropdownItem> must be a child component of <DropdownMenu>.\");\n      }\n\n      return;\n    }\n\n    const getEmitter = name2 => () => emit(name2);\n\n    const onOpen = getEmitter(\"open\");\n    const onClose = getEmitter(\"close\");\n    const onOpened = getEmitter(\"opened\");\n\n    const onClosed = () => {\n      state.showWrapper = false;\n      emit(\"closed\");\n    };\n\n    const onClickWrapper = event => {\n      if (props.teleport) {\n        event.stopPropagation();\n      }\n    };\n\n    const toggle = (show = !state.showPopup, options = {}) => {\n      if (show === state.showPopup) {\n        return;\n      }\n\n      state.showPopup = show;\n      state.transition = !options.immediate;\n\n      if (show) {\n        state.showWrapper = true;\n      }\n    };\n\n    const renderTitle = () => {\n      if (slots.title) {\n        return slots.title();\n      }\n\n      if (props.title) {\n        return props.title;\n      }\n\n      const match = props.options.find(option => option.value === props.modelValue);\n      return match ? match.text : \"\";\n    };\n\n    const renderOption = option => {\n      const {\n        activeColor\n      } = parent.props;\n      const active = option.value === props.modelValue;\n\n      const onClick = () => {\n        state.showPopup = false;\n\n        if (option.value !== props.modelValue) {\n          emit(\"update:modelValue\", option.value);\n          emit(\"change\", option.value);\n        }\n      };\n\n      const renderIcon = () => {\n        if (active) {\n          return _createVNode(Icon, {\n            \"class\": bem(\"icon\"),\n            \"color\": activeColor,\n            \"name\": \"success\"\n          }, null);\n        }\n      };\n\n      return _createVNode(Cell, {\n        \"role\": \"menuitem\",\n        \"key\": option.value,\n        \"icon\": option.icon,\n        \"title\": option.text,\n        \"class\": bem(\"option\", {\n          active\n        }),\n        \"style\": {\n          color: active ? activeColor : \"\"\n        },\n        \"tabindex\": active ? 0 : -1,\n        \"clickable\": true,\n        \"onClick\": onClick\n      }, {\n        value: renderIcon\n      });\n    };\n\n    const renderContent = () => {\n      const {\n        offset\n      } = parent;\n      const {\n        zIndex,\n        overlay,\n        duration,\n        direction,\n        closeOnClickOverlay\n      } = parent.props;\n      const style = getZIndexStyle(zIndex);\n\n      if (direction === \"down\") {\n        style.top = `${offset.value}px`;\n      } else {\n        style.bottom = `${offset.value}px`;\n      }\n\n      return _withDirectives(_createVNode(\"div\", {\n        \"style\": style,\n        \"class\": bem([direction]),\n        \"onClick\": onClickWrapper\n      }, [_createVNode(Popup, {\n        \"show\": state.showPopup,\n        \"onUpdate:show\": $event => state.showPopup = $event,\n        \"role\": \"menu\",\n        \"class\": bem(\"content\"),\n        \"overlay\": overlay,\n        \"position\": direction === \"down\" ? \"top\" : \"bottom\",\n        \"duration\": state.transition ? duration : 0,\n        \"lazyRender\": props.lazyRender,\n        \"overlayStyle\": {\n          position: \"absolute\"\n        },\n        \"aria-labelledby\": `${parent.id}-${index.value}`,\n        \"closeOnClickOverlay\": closeOnClickOverlay,\n        \"onOpen\": onOpen,\n        \"onClose\": onClose,\n        \"onOpened\": onOpened,\n        \"onClosed\": onClosed\n      }, {\n        default: () => {\n          var _a;\n\n          return [props.options.map(renderOption), (_a = slots.default) == null ? void 0 : _a.call(slots)];\n        }\n      })]), [[_vShow, state.showWrapper]]);\n    };\n\n    useExpose({\n      state,\n      toggle,\n      renderTitle\n    });\n    return () => {\n      if (props.teleport) {\n        return _createVNode(Teleport, {\n          \"to\": props.teleport\n        }, {\n          default: () => [renderContent()]\n        });\n      }\n\n      return renderContent();\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/dropdown-item/DropdownItem.js"],"names":["withDirectives","_withDirectives","vShow","_vShow","createVNode","_createVNode","reactive","Teleport","defineComponent","truthProp","unknownProp","getZIndexStyle","createNamespace","makeArrayProp","DROPDOWN_KEY","useParent","useExpose","Cell","Icon","Popup","name","bem","dropdownItemProps","title","String","options","disabled","Boolean","teleport","Object","lazyRender","modelValue","titleClass","stdin_default","props","emits","setup","emit","slots","state","showPopup","transition","showWrapper","parent","index","process","env","NODE_ENV","console","error","getEmitter","name2","onOpen","onClose","onOpened","onClosed","onClickWrapper","event","stopPropagation","toggle","show","immediate","renderTitle","match","find","option","value","text","renderOption","activeColor","active","onClick","renderIcon","icon","color","renderContent","offset","zIndex","overlay","duration","direction","closeOnClickOverlay","style","top","bottom","$event","position","id","default","_a","map","call"],"mappings":"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","sourcesContent":["import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { reactive, Teleport, defineComponent } from \"vue\";\nimport { truthProp, unknownProp, getZIndexStyle, createNamespace, makeArrayProp } from \"../utils\";\nimport { DROPDOWN_KEY } from \"../dropdown-menu/DropdownMenu\";\nimport { useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Cell } from \"../cell\";\nimport { Icon } from \"../icon\";\nimport { Popup } from \"../popup\";\nconst [name, bem] = createNamespace(\"dropdown-item\");\nconst dropdownItemProps = {\n  title: String,\n  options: makeArrayProp(),\n  disabled: Boolean,\n  teleport: [String, Object],\n  lazyRender: truthProp,\n  modelValue: unknownProp,\n  titleClass: unknownProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: dropdownItemProps,\n  emits: [\"open\", \"opened\", \"close\", \"closed\", \"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const state = reactive({\n      showPopup: false,\n      transition: true,\n      showWrapper: false\n    });\n    const {\n      parent,\n      index\n    } = useParent(DROPDOWN_KEY);\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <DropdownItem> must be a child component of <DropdownMenu>.\");\n      }\n      return;\n    }\n    const getEmitter = (name2) => () => emit(name2);\n    const onOpen = getEmitter(\"open\");\n    const onClose = getEmitter(\"close\");\n    const onOpened = getEmitter(\"opened\");\n    const onClosed = () => {\n      state.showWrapper = false;\n      emit(\"closed\");\n    };\n    const onClickWrapper = (event) => {\n      if (props.teleport) {\n        event.stopPropagation();\n      }\n    };\n    const toggle = (show = !state.showPopup, options = {}) => {\n      if (show === state.showPopup) {\n        return;\n      }\n      state.showPopup = show;\n      state.transition = !options.immediate;\n      if (show) {\n        state.showWrapper = true;\n      }\n    };\n    const renderTitle = () => {\n      if (slots.title) {\n        return slots.title();\n      }\n      if (props.title) {\n        return props.title;\n      }\n      const match = props.options.find((option) => option.value === props.modelValue);\n      return match ? match.text : \"\";\n    };\n    const renderOption = (option) => {\n      const {\n        activeColor\n      } = parent.props;\n      const active = option.value === props.modelValue;\n      const onClick = () => {\n        state.showPopup = false;\n        if (option.value !== props.modelValue) {\n          emit(\"update:modelValue\", option.value);\n          emit(\"change\", option.value);\n        }\n      };\n      const renderIcon = () => {\n        if (active) {\n          return _createVNode(Icon, {\n            \"class\": bem(\"icon\"),\n            \"color\": activeColor,\n            \"name\": \"success\"\n          }, null);\n        }\n      };\n      return _createVNode(Cell, {\n        \"role\": \"menuitem\",\n        \"key\": option.value,\n        \"icon\": option.icon,\n        \"title\": option.text,\n        \"class\": bem(\"option\", {\n          active\n        }),\n        \"style\": {\n          color: active ? activeColor : \"\"\n        },\n        \"tabindex\": active ? 0 : -1,\n        \"clickable\": true,\n        \"onClick\": onClick\n      }, {\n        value: renderIcon\n      });\n    };\n    const renderContent = () => {\n      const {\n        offset\n      } = parent;\n      const {\n        zIndex,\n        overlay,\n        duration,\n        direction,\n        closeOnClickOverlay\n      } = parent.props;\n      const style = getZIndexStyle(zIndex);\n      if (direction === \"down\") {\n        style.top = `${offset.value}px`;\n      } else {\n        style.bottom = `${offset.value}px`;\n      }\n      return _withDirectives(_createVNode(\"div\", {\n        \"style\": style,\n        \"class\": bem([direction]),\n        \"onClick\": onClickWrapper\n      }, [_createVNode(Popup, {\n        \"show\": state.showPopup,\n        \"onUpdate:show\": ($event) => state.showPopup = $event,\n        \"role\": \"menu\",\n        \"class\": bem(\"content\"),\n        \"overlay\": overlay,\n        \"position\": direction === \"down\" ? \"top\" : \"bottom\",\n        \"duration\": state.transition ? duration : 0,\n        \"lazyRender\": props.lazyRender,\n        \"overlayStyle\": {\n          position: \"absolute\"\n        },\n        \"aria-labelledby\": `${parent.id}-${index.value}`,\n        \"closeOnClickOverlay\": closeOnClickOverlay,\n        \"onOpen\": onOpen,\n        \"onClose\": onClose,\n        \"onOpened\": onOpened,\n        \"onClosed\": onClosed\n      }, {\n        default: () => {\n          var _a;\n          return [props.options.map(renderOption), (_a = slots.default) == null ? void 0 : _a.call(slots)];\n        }\n      })]), [[_vShow, state.showWrapper]]);\n    };\n    useExpose({\n      state,\n      toggle,\n      renderTitle\n    });\n    return () => {\n      if (props.teleport) {\n        return _createVNode(Teleport, {\n          \"to\": props.teleport\n        }, {\n          default: () => [renderContent()]\n        });\n      }\n      return renderContent();\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}