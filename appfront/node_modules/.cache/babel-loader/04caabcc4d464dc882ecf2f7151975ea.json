{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport generateSelector, { selectorPropTypes } from '../Base/BaseSelector';\nimport { toTitle } from '../util';\nimport { getOptionProps } from '../../../_util/props-util';\nimport { createRef } from '../util';\nimport SearchInput from '../SearchInput';\nvar Selector = generateSelector('single');\nvar SingleSelector = {\n  name: 'SingleSelector',\n  inheritAttrs: false,\n  props: selectorPropTypes(),\n  created: function created() {\n    this.selectorRef = createRef();\n    this.inputRef = createRef();\n  },\n  data: function data() {\n    return {\n      mirrorSearchValue: this.searchValue\n    };\n  },\n  watch: {\n    searchValue: function searchValue(val) {\n      this.mirrorSearchValue = val;\n    }\n  },\n  methods: {\n    onPlaceholderClick: function onPlaceholderClick() {\n      this.inputRef.current.focus();\n    },\n    focus: function focus() {\n      this.selectorRef.current.focus();\n    },\n    blur: function blur() {\n      this.selectorRef.current.blur();\n    },\n    _renderPlaceholder: function _renderPlaceholder() {\n      var _this$$props = this.$props,\n          prefixCls = _this$$props.prefixCls,\n          placeholder = _this$$props.placeholder,\n          searchPlaceholder = _this$$props.searchPlaceholder,\n          selectorValueList = _this$$props.selectorValueList;\n      var currentPlaceholder = placeholder || searchPlaceholder;\n      if (!currentPlaceholder) return null;\n      var hidden = this.mirrorSearchValue || selectorValueList.length; // [Legacy] Not remove the placeholder\n\n      return _createVNode(\"span\", {\n        \"style\": {\n          display: hidden ? 'none' : 'block'\n        },\n        \"onClick\": this.onPlaceholderClick,\n        \"class\": \"\".concat(prefixCls, \"-selection-placeholder\")\n      }, [currentPlaceholder]);\n    },\n    onMirrorSearchValueChange: function onMirrorSearchValueChange(value) {\n      this.mirrorSearchValue = value;\n    },\n    renderSelection: function renderSelection() {\n      var _this$$props2 = this.$props,\n          selectorValueList = _this$$props2.selectorValueList,\n          prefixCls = _this$$props2.prefixCls;\n      var selectedValueNodes = [];\n\n      if (selectorValueList.length && !this.mirrorSearchValue) {\n        var _selectorValueList$ = selectorValueList[0],\n            label = _selectorValueList$.label,\n            value = _selectorValueList$.value;\n        selectedValueNodes.push(_createVNode(\"span\", {\n          \"key\": value,\n          \"title\": toTitle(label),\n          \"class\": \"\".concat(prefixCls, \"-selection-item\")\n        }, [label || value]));\n      }\n\n      selectedValueNodes.push(_createVNode(SearchInput, _objectSpread(_objectSpread(_objectSpread({}, this.$props), this.$attrs), {}, {\n        \"ref\": this.inputRef,\n        \"isMultiple\": false,\n        \"onMirrorSearchValueChange\": this.onMirrorSearchValueChange\n      }), null));\n      return selectedValueNodes;\n    }\n  },\n  render: function render() {\n    var props = _extends(_extends(_extends({}, getOptionProps(this)), this.$attrs), {\n      renderSelection: this.renderSelection,\n      renderPlaceholder: this._renderPlaceholder,\n      ref: this.selectorRef\n    });\n\n    return _createVNode(Selector, props, null);\n  }\n};\nexport default SingleSelector;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/vc-tree-select/src/Selector/SingleSelector.js"],"names":["_extends","_objectSpread","createVNode","_createVNode","generateSelector","selectorPropTypes","toTitle","getOptionProps","createRef","SearchInput","Selector","SingleSelector","name","inheritAttrs","props","created","selectorRef","inputRef","data","mirrorSearchValue","searchValue","watch","val","methods","onPlaceholderClick","current","focus","blur","_renderPlaceholder","_this$$props","$props","prefixCls","placeholder","searchPlaceholder","selectorValueList","currentPlaceholder","hidden","length","display","concat","onMirrorSearchValueChange","value","renderSelection","_this$$props2","selectedValueNodes","_selectorValueList$","label","push","$attrs","render","renderPlaceholder","ref"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport generateSelector, { selectorPropTypes } from '../Base/BaseSelector';\nimport { toTitle } from '../util';\nimport { getOptionProps } from '../../../_util/props-util';\nimport { createRef } from '../util';\nimport SearchInput from '../SearchInput';\nvar Selector = generateSelector('single');\nvar SingleSelector = {\n  name: 'SingleSelector',\n  inheritAttrs: false,\n  props: selectorPropTypes(),\n  created: function created() {\n    this.selectorRef = createRef();\n    this.inputRef = createRef();\n  },\n  data: function data() {\n    return {\n      mirrorSearchValue: this.searchValue\n    };\n  },\n  watch: {\n    searchValue: function searchValue(val) {\n      this.mirrorSearchValue = val;\n    }\n  },\n  methods: {\n    onPlaceholderClick: function onPlaceholderClick() {\n      this.inputRef.current.focus();\n    },\n    focus: function focus() {\n      this.selectorRef.current.focus();\n    },\n    blur: function blur() {\n      this.selectorRef.current.blur();\n    },\n    _renderPlaceholder: function _renderPlaceholder() {\n      var _this$$props = this.$props,\n          prefixCls = _this$$props.prefixCls,\n          placeholder = _this$$props.placeholder,\n          searchPlaceholder = _this$$props.searchPlaceholder,\n          selectorValueList = _this$$props.selectorValueList;\n      var currentPlaceholder = placeholder || searchPlaceholder;\n      if (!currentPlaceholder) return null;\n      var hidden = this.mirrorSearchValue || selectorValueList.length; // [Legacy] Not remove the placeholder\n\n      return _createVNode(\"span\", {\n        \"style\": {\n          display: hidden ? 'none' : 'block'\n        },\n        \"onClick\": this.onPlaceholderClick,\n        \"class\": \"\".concat(prefixCls, \"-selection-placeholder\")\n      }, [currentPlaceholder]);\n    },\n    onMirrorSearchValueChange: function onMirrorSearchValueChange(value) {\n      this.mirrorSearchValue = value;\n    },\n    renderSelection: function renderSelection() {\n      var _this$$props2 = this.$props,\n          selectorValueList = _this$$props2.selectorValueList,\n          prefixCls = _this$$props2.prefixCls;\n      var selectedValueNodes = [];\n\n      if (selectorValueList.length && !this.mirrorSearchValue) {\n        var _selectorValueList$ = selectorValueList[0],\n            label = _selectorValueList$.label,\n            value = _selectorValueList$.value;\n        selectedValueNodes.push(_createVNode(\"span\", {\n          \"key\": value,\n          \"title\": toTitle(label),\n          \"class\": \"\".concat(prefixCls, \"-selection-item\")\n        }, [label || value]));\n      }\n\n      selectedValueNodes.push(_createVNode(SearchInput, _objectSpread(_objectSpread(_objectSpread({}, this.$props), this.$attrs), {}, {\n        \"ref\": this.inputRef,\n        \"isMultiple\": false,\n        \"onMirrorSearchValueChange\": this.onMirrorSearchValueChange\n      }), null));\n      return selectedValueNodes;\n    }\n  },\n  render: function render() {\n    var props = _extends(_extends(_extends({}, getOptionProps(this)), this.$attrs), {\n      renderSelection: this.renderSelection,\n      renderPlaceholder: this._renderPlaceholder,\n      ref: this.selectorRef\n    });\n\n    return _createVNode(Selector, props, null);\n  }\n};\nexport default SingleSelector;"]},"metadata":{},"sourceType":"module"}