{"ast":null,"code":"import { watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { OptionInfo } from './optionInfo';\nexport function isOption(option) {\n  return option instanceof OptionInfo;\n}\nexport function createOption($xeselect, _vm) {\n  return isOption(_vm) ? _vm : new OptionInfo($xeselect, _vm);\n}\nexport function watchOption(props, option) {\n  Object.keys(props).forEach(function (name) {\n    watch(function () {\n      return props[name];\n    }, function (value) {\n      option.update(name, value);\n    });\n  });\n}\nexport function assemOption($xeselect, el, option, optgroup) {\n  var reactData = $xeselect.reactData;\n  var staticOptions = reactData.staticOptions;\n  var parentElem = el.parentNode;\n  var parentOption = optgroup ? optgroup.option : null;\n  var parentCols = parentOption ? parentOption.options : staticOptions;\n\n  if (parentElem && parentCols) {\n    parentCols.splice(XEUtils.arrayIndexOf(parentElem.children, el), 0, option);\n    reactData.staticOptions = staticOptions.slice(0);\n  }\n}\nexport function destroyOption($xeselect, option) {\n  var reactData = $xeselect.reactData;\n  var staticOptions = reactData.staticOptions;\n  var matchObj = XEUtils.findTree(staticOptions, function (item) {\n    return item.id === option.id;\n  }, {\n    children: 'options'\n  });\n\n  if (matchObj) {\n    matchObj.items.splice(matchObj.index, 1);\n  }\n\n  reactData.staticOptions = staticOptions.slice(0);\n}","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/select/src/util.js"],"names":["watch","XEUtils","OptionInfo","isOption","option","createOption","$xeselect","_vm","watchOption","props","Object","keys","forEach","name","value","update","assemOption","el","optgroup","reactData","staticOptions","parentElem","parentNode","parentOption","parentCols","options","splice","arrayIndexOf","children","slice","destroyOption","matchObj","findTree","item","id","items","index"],"mappings":"AAAA,SAASA,KAAT,QAAsB,KAAtB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC7B,SAAOA,MAAM,YAAYF,UAAzB;AACH;AACD,OAAO,SAASG,YAAT,CAAsBC,SAAtB,EAAiCC,GAAjC,EAAsC;AACzC,SAAOJ,QAAQ,CAACI,GAAD,CAAR,GAAgBA,GAAhB,GAAsB,IAAIL,UAAJ,CAAeI,SAAf,EAA0BC,GAA1B,CAA7B;AACH;AACD,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BL,MAA5B,EAAoC;AACvCM,EAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,OAAnB,CAA2B,UAAUC,IAAV,EAAgB;AACvCb,IAAAA,KAAK,CAAC,YAAY;AAAE,aAAOS,KAAK,CAACI,IAAD,CAAZ;AAAqB,KAApC,EAAsC,UAAUC,KAAV,EAAiB;AACxDV,MAAAA,MAAM,CAACW,MAAP,CAAcF,IAAd,EAAoBC,KAApB;AACH,KAFI,CAAL;AAGH,GAJD;AAKH;AACD,OAAO,SAASE,WAAT,CAAqBV,SAArB,EAAgCW,EAAhC,EAAoCb,MAApC,EAA4Cc,QAA5C,EAAsD;AACzD,MAAIC,SAAS,GAAGb,SAAS,CAACa,SAA1B;AACA,MAAIC,aAAa,GAAGD,SAAS,CAACC,aAA9B;AACA,MAAIC,UAAU,GAAGJ,EAAE,CAACK,UAApB;AACA,MAAIC,YAAY,GAAGL,QAAQ,GAAGA,QAAQ,CAACd,MAAZ,GAAqB,IAAhD;AACA,MAAIoB,UAAU,GAAGD,YAAY,GAAGA,YAAY,CAACE,OAAhB,GAA0BL,aAAvD;;AACA,MAAIC,UAAU,IAAIG,UAAlB,EAA8B;AAC1BA,IAAAA,UAAU,CAACE,MAAX,CAAkBzB,OAAO,CAAC0B,YAAR,CAAqBN,UAAU,CAACO,QAAhC,EAA0CX,EAA1C,CAAlB,EAAiE,CAAjE,EAAoEb,MAApE;AACAe,IAAAA,SAAS,CAACC,aAAV,GAA0BA,aAAa,CAACS,KAAd,CAAoB,CAApB,CAA1B;AACH;AACJ;AACD,OAAO,SAASC,aAAT,CAAuBxB,SAAvB,EAAkCF,MAAlC,EAA0C;AAC7C,MAAIe,SAAS,GAAGb,SAAS,CAACa,SAA1B;AACA,MAAIC,aAAa,GAAGD,SAAS,CAACC,aAA9B;AACA,MAAIW,QAAQ,GAAG9B,OAAO,CAAC+B,QAAR,CAAiBZ,aAAjB,EAAgC,UAAUa,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACC,EAAL,KAAY9B,MAAM,CAAC8B,EAA1B;AAA+B,GAAjF,EAAmF;AAAEN,IAAAA,QAAQ,EAAE;AAAZ,GAAnF,CAAf;;AACA,MAAIG,QAAJ,EAAc;AACVA,IAAAA,QAAQ,CAACI,KAAT,CAAeT,MAAf,CAAsBK,QAAQ,CAACK,KAA/B,EAAsC,CAAtC;AACH;;AACDjB,EAAAA,SAAS,CAACC,aAAV,GAA0BA,aAAa,CAACS,KAAd,CAAoB,CAApB,CAA1B;AACH","sourcesContent":["import { watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { OptionInfo } from './optionInfo';\nexport function isOption(option) {\n    return option instanceof OptionInfo;\n}\nexport function createOption($xeselect, _vm) {\n    return isOption(_vm) ? _vm : new OptionInfo($xeselect, _vm);\n}\nexport function watchOption(props, option) {\n    Object.keys(props).forEach(function (name) {\n        watch(function () { return props[name]; }, function (value) {\n            option.update(name, value);\n        });\n    });\n}\nexport function assemOption($xeselect, el, option, optgroup) {\n    var reactData = $xeselect.reactData;\n    var staticOptions = reactData.staticOptions;\n    var parentElem = el.parentNode;\n    var parentOption = optgroup ? optgroup.option : null;\n    var parentCols = parentOption ? parentOption.options : staticOptions;\n    if (parentElem && parentCols) {\n        parentCols.splice(XEUtils.arrayIndexOf(parentElem.children, el), 0, option);\n        reactData.staticOptions = staticOptions.slice(0);\n    }\n}\nexport function destroyOption($xeselect, option) {\n    var reactData = $xeselect.reactData;\n    var staticOptions = reactData.staticOptions;\n    var matchObj = XEUtils.findTree(staticOptions, function (item) { return item.id === option.id; }, { children: 'options' });\n    if (matchObj) {\n        matchObj.items.splice(matchObj.index, 1);\n    }\n    reactData.staticOptions = staticOptions.slice(0);\n}\n"]},"metadata":{},"sourceType":"module"}