{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createBlock(_component_a_table, {\n    columns: _ctx.columns,\n    \"row-key\": record => record.login.uuid,\n    \"data-source\": _ctx.dataSource,\n    pagination: _ctx.pagination,\n    loading: _ctx.loading,\n    onChange: _ctx.handleTableChange\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" <template #bodyCell=\\\"{ column, text }\\\">\\n      <template v-if=\\\"column.dataIndex === 'name'\\\">{{ text.first }} {{ text.last }}</template>\\n    </template> \")]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"columns\", \"row-key\", \"data-source\", \"pagination\", \"loading\", \"onChange\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aAWUC,kBAXV,EAWU;AAVPC,WAAO,EAAEC,YAUF;AATP,eAASC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,IASzB;AARP,mBAAaH,eAQN;AAPPI,cAAU,EAAEJ,eAOL;AANPK,WAAO,EAAEL,YAMF;AALPM,YAAM,EAAEN;AAKD,GAXV;sBAQE,MAEe,CAFfO,qLAEe;;;;GAVjB;;AAAA","names":["_createBlock","_component_a_table","columns","_ctx","record","login","uuid","pagination","loading","onChange","_createCommentVNode"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/src/components/worker/workerApplyStatistics.vue"],"sourcesContent":["<template>\n  <a-table\n    :columns=\"columns\"\n    :row-key=\"record => record.login.uuid\"\n    :data-source=\"dataSource\"\n    :pagination=\"pagination\"\n    :loading=\"loading\"\n    @change=\"handleTableChange\"\n  >\n    <!-- <template #bodyCell=\"{ column, text }\">\n      <template v-if=\"column.dataIndex === 'name'\">{{ text.first }} {{ text.last }}</template>\n    </template> -->\n  </a-table>\n</template>\n<script>\nimport { usePagination } from 'vue-request';\nimport { computed, defineComponent } from 'vue';\nimport axios from 'axios';\nconst columns = [{\n  title: '公休总天数(2022年)',\n  dataIndex: 'name',\n  sorter: true,\n  width: '20%',\n}, {\n  title: '公休剩余(天:时)',\n  dataIndex: 'gender',\n  filters: [{\n    text: 'Male',\n    value: 'male',\n  }, {\n    text: 'Female',\n    value: 'female',\n  }],\n  width: '20%',\n}, {\n  title: '积休剩余(天:时)',\n  dataIndex: 'email',\n},\n{\n  title: '积休已经用(天:时)',\n  dataIndex: 'email',\n},\n{\n  title: '值班加班换积休(天:时)',\n  dataIndex: 'email',\n},\n{\n  title: '总休息池(天:时)',\n  dataIndex: 'email',\n}\n\n];\n\nconst queryData = params => {\n  return axios.get('https://randomuser.me/api?noinfo', {\n    params,\n  });\n};\n\nexport default defineComponent({\n  setup() {\n    const {\n      data: dataSource,\n      run,\n      loading,\n      current,\n      pageSize,\n    } = usePagination(queryData, {\n      formatResult: res => res.data.results,\n      pagination: {\n        currentKey: 'page',\n        pageSizeKey: 'results',\n      },\n    });\n    const pagination = computed(() => ({\n      total: 200,\n      current: current.value,\n      pageSize: pageSize.value,\n    }));\n\n    const handleTableChange = (pag, filters, sorter) => {\n      run({\n        results: pag.pageSize,\n        page: pag?.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    };\n\n    return {\n      dataSource,\n      pagination,\n      loading,\n      columns,\n      handleTableChange,\n    };\n  },\n\n});\n</script>"]},"metadata":{},"sourceType":"module"}