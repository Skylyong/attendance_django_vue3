{"ast":null,"code":"var isArray = require('./isArray');\n/**\r\n  * 浅复制数组的一部分到同一数组中的另一个位置,数组大小不变\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Number} target 从该位置开始替换数据\r\n  * @param {Number} start 从该位置开始读取数据，默认为 0 。如果为负值，表示倒数\r\n  * @param {Number} end 到该位置前停止读取数据，默认等于数组长度。如果为负值，表示倒数\r\n  * @return {Array}\r\n  */\n\n\nfunction copyWithin(array, target, start, end) {\n  if (isArray(array) && array.copyWithin) {\n    return array.copyWithin(target, start, end);\n  }\n\n  var replaceIndex, replaceArray;\n  var targetIndex = target >> 0;\n  var startIndex = start >> 0;\n  var len = array.length;\n  var endIndex = arguments.length > 3 ? end >> 0 : len;\n\n  if (targetIndex < len) {\n    targetIndex = targetIndex >= 0 ? targetIndex : len + targetIndex;\n\n    if (targetIndex >= 0) {\n      startIndex = startIndex >= 0 ? startIndex : len + startIndex;\n      endIndex = endIndex >= 0 ? endIndex : len + endIndex;\n\n      if (startIndex < endIndex) {\n        for (replaceIndex = 0, replaceArray = array.slice(startIndex, endIndex); targetIndex < len; targetIndex++) {\n          if (replaceArray.length <= replaceIndex) {\n            break;\n          }\n\n          array[targetIndex] = replaceArray[replaceIndex++];\n        }\n      }\n    }\n  }\n\n  return array;\n}\n\nmodule.exports = copyWithin;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/copyWithin.js"],"names":["isArray","require","copyWithin","array","target","start","end","replaceIndex","replaceArray","targetIndex","startIndex","len","length","endIndex","arguments","slice","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,GAA3C,EAAgD;AAC9C,MAAIN,OAAO,CAACG,KAAD,CAAP,IAAkBA,KAAK,CAACD,UAA5B,EAAwC;AACtC,WAAOC,KAAK,CAACD,UAAN,CAAiBE,MAAjB,EAAyBC,KAAzB,EAAgCC,GAAhC,CAAP;AACD;;AACD,MAAIC,YAAJ,EAAkBC,YAAlB;AACA,MAAIC,WAAW,GAAGL,MAAM,IAAI,CAA5B;AACA,MAAIM,UAAU,GAAGL,KAAK,IAAI,CAA1B;AACA,MAAIM,GAAG,GAAGR,KAAK,CAACS,MAAhB;AACA,MAAIC,QAAQ,GAAGC,SAAS,CAACF,MAAV,GAAmB,CAAnB,GAAuBN,GAAG,IAAI,CAA9B,GAAkCK,GAAjD;;AACA,MAAIF,WAAW,GAAGE,GAAlB,EAAuB;AACrBF,IAAAA,WAAW,GAAGA,WAAW,IAAI,CAAf,GAAmBA,WAAnB,GAAiCE,GAAG,GAAGF,WAArD;;AACA,QAAIA,WAAW,IAAI,CAAnB,EAAsB;AACpBC,MAAAA,UAAU,GAAGA,UAAU,IAAI,CAAd,GAAkBA,UAAlB,GAA+BC,GAAG,GAAGD,UAAlD;AACAG,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,CAAZ,GAAgBA,QAAhB,GAA2BF,GAAG,GAAGE,QAA5C;;AACA,UAAIH,UAAU,GAAGG,QAAjB,EAA2B;AACzB,aAAKN,YAAY,GAAG,CAAf,EAAkBC,YAAY,GAAGL,KAAK,CAACY,KAAN,CAAYL,UAAZ,EAAwBG,QAAxB,CAAtC,EAAyEJ,WAAW,GAAGE,GAAvF,EAA4FF,WAAW,EAAvG,EAA2G;AACzG,cAAID,YAAY,CAACI,MAAb,IAAuBL,YAA3B,EAAyC;AACvC;AACD;;AACDJ,UAAAA,KAAK,CAACM,WAAD,CAAL,GAAqBD,YAAY,CAACD,YAAY,EAAb,CAAjC;AACD;AACF;AACF;AACF;;AACD,SAAOJ,KAAP;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiBf,UAAjB","sourcesContent":["var isArray = require('./isArray')\r\n\r\n/**\r\n  * 浅复制数组的一部分到同一数组中的另一个位置,数组大小不变\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Number} target 从该位置开始替换数据\r\n  * @param {Number} start 从该位置开始读取数据，默认为 0 。如果为负值，表示倒数\r\n  * @param {Number} end 到该位置前停止读取数据，默认等于数组长度。如果为负值，表示倒数\r\n  * @return {Array}\r\n  */\r\nfunction copyWithin (array, target, start, end) {\r\n  if (isArray(array) && array.copyWithin) {\r\n    return array.copyWithin(target, start, end)\r\n  }\r\n  var replaceIndex, replaceArray\r\n  var targetIndex = target >> 0\r\n  var startIndex = start >> 0\r\n  var len = array.length\r\n  var endIndex = arguments.length > 3 ? end >> 0 : len\r\n  if (targetIndex < len) {\r\n    targetIndex = targetIndex >= 0 ? targetIndex : len + targetIndex\r\n    if (targetIndex >= 0) {\r\n      startIndex = startIndex >= 0 ? startIndex : len + startIndex\r\n      endIndex = endIndex >= 0 ? endIndex : len + endIndex\r\n      if (startIndex < endIndex) {\r\n        for (replaceIndex = 0, replaceArray = array.slice(startIndex, endIndex); targetIndex < len; targetIndex++) {\r\n          if (replaceArray.length <= replaceIndex) {\r\n            break\r\n          }\r\n          array[targetIndex] = replaceArray[replaceIndex++]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nmodule.exports = copyWithin\r\n"]},"metadata":{},"sourceType":"script"}