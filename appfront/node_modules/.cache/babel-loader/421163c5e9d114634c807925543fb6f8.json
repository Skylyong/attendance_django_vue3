{"ast":null,"code":"var staticLocation = require('./staticLocation');\n\nvar unserialize = require('./unserialize');\n\nvar helperGetLocatOrigin = require('./helperGetLocatOrigin');\n\nfunction parseURLQuery(uri) {\n  return unserialize(uri.split('?')[1] || '');\n}\n\nfunction parseUrl(url) {\n  var hashs, portText, searchs, parsed;\n  var href = '' + url;\n\n  if (href.indexOf('//') === 0) {\n    href = (staticLocation ? staticLocation.protocol : '') + href;\n  } else if (href.indexOf('/') === 0) {\n    href = helperGetLocatOrigin() + href;\n  }\n\n  searchs = href.replace(/#.*/, '').match(/(\\?.*)/);\n  parsed = {\n    href: href,\n    hash: '',\n    host: '',\n    hostname: '',\n    protocol: '',\n    port: '',\n    search: searchs && searchs[1] && searchs[1].length > 1 ? searchs[1] : ''\n  };\n  parsed.path = href.replace(/^([a-z0-9.+-]*:)\\/\\//, function (text, protocol) {\n    parsed.protocol = protocol;\n    return '';\n  }).replace(/^([a-z0-9.+-]*)(:\\d+)?\\/?/, function (text, hostname, port) {\n    portText = port || '';\n    parsed.port = portText.replace(':', '');\n    parsed.hostname = hostname;\n    parsed.host = hostname + portText;\n    return '/';\n  }).replace(/(#.*)/, function (text, hash) {\n    parsed.hash = hash.length > 1 ? hash : '';\n    return '';\n  });\n  hashs = parsed.hash.match(/#((.*)\\?|(.*))/);\n  parsed.pathname = parsed.path.replace(/(\\?|#.*).*/, '');\n  parsed.origin = parsed.protocol + '//' + parsed.host;\n  parsed.hashKey = hashs ? hashs[2] || hashs[1] || '' : '';\n  parsed.hashQuery = parseURLQuery(parsed.hash);\n  parsed.searchQuery = parseURLQuery(parsed.search);\n  return parsed;\n}\n\nmodule.exports = parseUrl;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/parseUrl.js"],"names":["staticLocation","require","unserialize","helperGetLocatOrigin","parseURLQuery","uri","split","parseUrl","url","hashs","portText","searchs","parsed","href","indexOf","protocol","replace","match","hash","host","hostname","port","search","length","path","text","pathname","origin","hashKey","hashQuery","searchQuery","module","exports"],"mappings":"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","sourcesContent":["var staticLocation = require('./staticLocation')\r\n\r\nvar unserialize = require('./unserialize')\r\n\r\nvar helperGetLocatOrigin = require('./helperGetLocatOrigin')\r\n\r\nfunction parseURLQuery (uri) {\r\n  return unserialize(uri.split('?')[1] || '')\r\n}\r\n\r\nfunction parseUrl (url) {\r\n  var hashs, portText, searchs, parsed\r\n  var href = '' + url\r\n  if (href.indexOf('//') === 0) {\r\n    href = (staticLocation ? staticLocation.protocol : '') + href\r\n  } else if (href.indexOf('/') === 0) {\r\n    href = helperGetLocatOrigin() + href\r\n  }\r\n  searchs = href.replace(/#.*/, '').match(/(\\?.*)/)\r\n  parsed = {\r\n    href: href,\r\n    hash: '',\r\n    host: '',\r\n    hostname: '',\r\n    protocol: '',\r\n    port: '',\r\n    search: searchs && searchs[1] && searchs[1].length > 1 ? searchs[1] : ''\r\n  }\r\n  parsed.path = href.replace(/^([a-z0-9.+-]*:)\\/\\//, function (text, protocol) {\r\n    parsed.protocol = protocol\r\n    return ''\r\n  }).replace(/^([a-z0-9.+-]*)(:\\d+)?\\/?/, function (text, hostname, port) {\r\n    portText = port || ''\r\n    parsed.port = portText.replace(':', '')\r\n    parsed.hostname = hostname\r\n    parsed.host = hostname + portText\r\n    return '/'\r\n  }).replace(/(#.*)/, function (text, hash) {\r\n    parsed.hash = hash.length > 1 ? hash : ''\r\n    return ''\r\n  })\r\n  hashs = parsed.hash.match(/#((.*)\\?|(.*))/)\r\n  parsed.pathname = parsed.path.replace(/(\\?|#.*).*/, '')\r\n  parsed.origin = parsed.protocol + '//' + parsed.host\r\n  parsed.hashKey = hashs ? (hashs[2] || hashs[1] || '') : ''\r\n  parsed.hashQuery = parseURLQuery(parsed.hash)\r\n  parsed.searchQuery = parseURLQuery(parsed.search)\r\n  return parsed\r\n}\r\n\r\nmodule.exports = parseUrl\r\n"]},"metadata":{},"sourceType":"script"}