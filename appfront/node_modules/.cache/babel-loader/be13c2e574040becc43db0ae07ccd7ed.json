{"ast":null,"code":"var setupDefaults = require('./setupDefaults');\n\nvar each = require('./each');\n\nvar assign = require('./assign');\n\nfunction unTreeList(result, array, opts) {\n  var optChildren = opts.children;\n  var optData = opts.data;\n  var optClear = opts.clear;\n  each(array, function (item) {\n    var children = item[optChildren];\n\n    if (optData) {\n      item = item[optData];\n    }\n\n    result.push(item);\n\n    if (children && children.length) {\n      unTreeList(result, children, opts);\n    }\n\n    if (optClear) {\n      delete item[optChildren];\n    }\n  });\n  return result;\n}\n/**\r\n  * 将一个树结构转成数组列表\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Object} options { children: 'children', data: 'data', clear: false }\r\n  * @return {Array}\r\n  */\n\n\nfunction toTreeArray(array, options) {\n  return unTreeList([], array, assign({}, setupDefaults.treeOptions, options));\n}\n\nmodule.exports = toTreeArray;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/toTreeArray.js"],"names":["setupDefaults","require","each","assign","unTreeList","result","array","opts","optChildren","children","optData","data","optClear","clear","item","push","length","toTreeArray","options","treeOptions","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASG,UAAT,CAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0C;AACxC,MAAIC,WAAW,GAAGD,IAAI,CAACE,QAAvB;AACA,MAAIC,OAAO,GAAGH,IAAI,CAACI,IAAnB;AACA,MAAIC,QAAQ,GAAGL,IAAI,CAACM,KAApB;AACAX,EAAAA,IAAI,CAACI,KAAD,EAAQ,UAAUQ,IAAV,EAAgB;AAC1B,QAAIL,QAAQ,GAAGK,IAAI,CAACN,WAAD,CAAnB;;AACA,QAAIE,OAAJ,EAAa;AACXI,MAAAA,IAAI,GAAGA,IAAI,CAACJ,OAAD,CAAX;AACD;;AACDL,IAAAA,MAAM,CAACU,IAAP,CAAYD,IAAZ;;AACA,QAAIL,QAAQ,IAAIA,QAAQ,CAACO,MAAzB,EAAiC;AAC/BZ,MAAAA,UAAU,CAACC,MAAD,EAASI,QAAT,EAAmBF,IAAnB,CAAV;AACD;;AACD,QAAIK,QAAJ,EAAc;AACZ,aAAOE,IAAI,CAACN,WAAD,CAAX;AACD;AACF,GAZG,CAAJ;AAaA,SAAOH,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,WAAT,CAAsBX,KAAtB,EAA6BY,OAA7B,EAAsC;AACpC,SAAOd,UAAU,CAAC,EAAD,EAAKE,KAAL,EAAYH,MAAM,CAAC,EAAD,EAAKH,aAAa,CAACmB,WAAnB,EAAgCD,OAAhC,CAAlB,CAAjB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBJ,WAAjB","sourcesContent":["var setupDefaults = require('./setupDefaults')\r\n\r\nvar each = require('./each')\r\n\r\nvar assign = require('./assign')\r\n\r\nfunction unTreeList (result, array, opts) {\r\n  var optChildren = opts.children\r\n  var optData = opts.data\r\n  var optClear = opts.clear\r\n  each(array, function (item) {\r\n    var children = item[optChildren]\r\n    if (optData) {\r\n      item = item[optData]\r\n    }\r\n    result.push(item)\r\n    if (children && children.length) {\r\n      unTreeList(result, children, opts)\r\n    }\r\n    if (optClear) {\r\n      delete item[optChildren]\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n  * 将一个树结构转成数组列表\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Object} options { children: 'children', data: 'data', clear: false }\r\n  * @return {Array}\r\n  */\r\nfunction toTreeArray (array, options) {\r\n  return unTreeList([], array, assign({}, setupDefaults.treeOptions, options))\r\n}\r\n\r\nmodule.exports = toTreeArray\r\n"]},"metadata":{},"sourceType":"script"}