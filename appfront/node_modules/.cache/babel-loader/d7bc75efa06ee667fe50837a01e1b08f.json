{"ast":null,"code":"import XEUtils from 'xe-utils';\nimport GlobalConfig from '../v-x-e-table/src/conf';\n/**\n * 监听 resize 事件\n * 如果项目中已使用了 resize-observer-polyfill，那么只需要将方法定义全局，该组件就会自动使用\n */\n\nvar resizeTimeout;\n/* eslint-disable no-use-before-define */\n\nvar eventStore = [];\nvar defaultInterval = 500;\n\nfunction eventHandle() {\n  if (eventStore.length) {\n    eventStore.forEach(function (item) {\n      item.tarList.forEach(function (observer) {\n        var target = observer.target,\n            width = observer.width,\n            heighe = observer.heighe;\n        var clientWidth = target.clientWidth;\n        var clientHeight = target.clientHeight;\n        var rWidth = clientWidth && width !== clientWidth;\n        var rHeight = clientHeight && heighe !== clientHeight;\n\n        if (rWidth || rHeight) {\n          observer.width = clientWidth;\n          observer.heighe = clientHeight;\n          setTimeout(item.callback);\n        }\n      });\n    });\n    /* eslint-disable @typescript-eslint/no-use-before-define */\n\n    eventListener();\n  }\n}\n\nfunction eventListener() {\n  clearTimeout(resizeTimeout);\n  resizeTimeout = setTimeout(eventHandle, GlobalConfig.resizeInterval || defaultInterval);\n}\n\nvar XEResizeObserver =\n/** @class */\nfunction () {\n  function XEResizeObserver(callback) {\n    this.tarList = [];\n    this.callback = callback;\n  }\n\n  XEResizeObserver.prototype.observe = function (target) {\n    var _this = this;\n\n    if (target) {\n      var tarList = this.tarList;\n\n      if (!tarList.some(function (observer) {\n        return observer.target === target;\n      })) {\n        tarList.push({\n          target: target,\n          width: target.clientWidth,\n          heighe: target.clientHeight\n        });\n      }\n\n      if (!eventStore.length) {\n        eventListener();\n      }\n\n      if (!eventStore.some(function (item) {\n        return item === _this;\n      })) {\n        eventStore.push(this);\n      }\n    }\n  };\n\n  XEResizeObserver.prototype.unobserve = function (target) {\n    XEUtils.remove(eventStore, function (item) {\n      return item.tarList.some(function (observer) {\n        return observer.target === target;\n      });\n    });\n  };\n\n  XEResizeObserver.prototype.disconnect = function () {\n    var _this = this;\n\n    XEUtils.remove(eventStore, function (item) {\n      return item === _this;\n    });\n  };\n\n  return XEResizeObserver;\n}();\n\nexport { XEResizeObserver };\nexport function createResizeEvent(callback) {\n  if (window.ResizeObserver) {\n    return new window.ResizeObserver(callback);\n  }\n\n  return new XEResizeObserver(callback);\n}","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/tools/resize.js"],"names":["XEUtils","GlobalConfig","resizeTimeout","eventStore","defaultInterval","eventHandle","length","forEach","item","tarList","observer","target","width","heighe","clientWidth","clientHeight","rWidth","rHeight","setTimeout","callback","eventListener","clearTimeout","resizeInterval","XEResizeObserver","prototype","observe","_this","some","push","unobserve","remove","disconnect","createResizeEvent","window","ResizeObserver"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils';\nimport GlobalConfig from '../v-x-e-table/src/conf';\n/**\n * 监听 resize 事件\n * 如果项目中已使用了 resize-observer-polyfill，那么只需要将方法定义全局，该组件就会自动使用\n */\nvar resizeTimeout;\n/* eslint-disable no-use-before-define */\nvar eventStore = [];\nvar defaultInterval = 500;\nfunction eventHandle() {\n    if (eventStore.length) {\n        eventStore.forEach(function (item) {\n            item.tarList.forEach(function (observer) {\n                var target = observer.target, width = observer.width, heighe = observer.heighe;\n                var clientWidth = target.clientWidth;\n                var clientHeight = target.clientHeight;\n                var rWidth = clientWidth && width !== clientWidth;\n                var rHeight = clientHeight && heighe !== clientHeight;\n                if (rWidth || rHeight) {\n                    observer.width = clientWidth;\n                    observer.heighe = clientHeight;\n                    setTimeout(item.callback);\n                }\n            });\n        });\n        /* eslint-disable @typescript-eslint/no-use-before-define */\n        eventListener();\n    }\n}\nfunction eventListener() {\n    clearTimeout(resizeTimeout);\n    resizeTimeout = setTimeout(eventHandle, GlobalConfig.resizeInterval || defaultInterval);\n}\nvar XEResizeObserver = /** @class */ (function () {\n    function XEResizeObserver(callback) {\n        this.tarList = [];\n        this.callback = callback;\n    }\n    XEResizeObserver.prototype.observe = function (target) {\n        var _this = this;\n        if (target) {\n            var tarList = this.tarList;\n            if (!tarList.some(function (observer) { return observer.target === target; })) {\n                tarList.push({\n                    target: target,\n                    width: target.clientWidth,\n                    heighe: target.clientHeight\n                });\n            }\n            if (!eventStore.length) {\n                eventListener();\n            }\n            if (!eventStore.some(function (item) { return item === _this; })) {\n                eventStore.push(this);\n            }\n        }\n    };\n    XEResizeObserver.prototype.unobserve = function (target) {\n        XEUtils.remove(eventStore, function (item) { return item.tarList.some(function (observer) { return observer.target === target; }); });\n    };\n    XEResizeObserver.prototype.disconnect = function () {\n        var _this = this;\n        XEUtils.remove(eventStore, function (item) { return item === _this; });\n    };\n    return XEResizeObserver;\n}());\nexport { XEResizeObserver };\nexport function createResizeEvent(callback) {\n    if (window.ResizeObserver) {\n        return new window.ResizeObserver(callback);\n    }\n    return new XEResizeObserver(callback);\n}\n"]},"metadata":{},"sourceType":"module"}