{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { computed, defineComponent, ref, watch } from 'vue';\nimport ResizeObserver from '../vc-resize-observer';\nimport classNames from '../_util/classNames';\nimport PropTypes from '../_util/vue-types';\nimport { OverflowContextProvider } from './context';\nimport Item from './Item';\nimport RawItem from './RawItem';\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\n\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\n\nvar Overflow = defineComponent({\n  name: 'Overflow',\n  inheritAttrs: false,\n  props: {\n    prefixCls: String,\n    data: Array,\n    itemKey: [String, Number, Function],\n\n    /** Used for `responsive`. It will limit render node to avoid perf issue */\n    itemWidth: {\n      type: Number,\n      default: 10\n    },\n    renderItem: Function,\n\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawItem: Function,\n    maxCount: [Number, String],\n    renderRest: Function,\n\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawRest: Function,\n    suffix: PropTypes.any,\n    component: String,\n    itemComponent: PropTypes.any,\n\n    /** @private This API may be refactor since not well design */\n    onVisibleChange: Function,\n\n    /** When set to `full`, ssr will render full items by default and remove at client side */\n    ssr: String\n  },\n  emits: ['visibleChange'],\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit;\n    var fullySSR = computed(function () {\n      return props.ssr === 'full';\n    });\n    var containerWidth = ref(null);\n    var mergedContainerWidth = computed(function () {\n      return containerWidth.value || 0;\n    });\n    var itemWidths = ref(new Map());\n    var prevRestWidth = ref(0);\n    var restWidth = ref(0);\n    var suffixWidth = ref(0);\n    var suffixFixedStart = ref(null);\n    var displayCount = ref(null);\n    var mergedDisplayCount = computed(function () {\n      if (displayCount.value === null && fullySSR.value) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n\n      return displayCount.value || 0;\n    });\n    var restReady = ref(false);\n    var itemPrefixCls = computed(function () {\n      return \"\".concat(props.prefixCls, \"-item\");\n    }); // Always use the max width to avoid blink\n\n    var mergedRestWidth = computed(function () {\n      return Math.max(prevRestWidth.value, restWidth.value);\n    }); // ================================= Data =================================\n\n    var isResponsive = computed(function () {\n      return !!(props.data.length && props.maxCount === RESPONSIVE);\n    });\n    var invalidate = computed(function () {\n      return props.maxCount === INVALIDATE;\n    });\n    /**\n     * When is `responsive`, we will always render rest node to get the real width of it for calculation\n     */\n\n    var showRest = computed(function () {\n      return isResponsive.value || typeof props.maxCount === 'number' && props.data.length > props.maxCount;\n    });\n    var mergedData = computed(function () {\n      var items = props.data;\n\n      if (isResponsive.value) {\n        if (containerWidth.value === null && fullySSR.value) {\n          items = props.data;\n        } else {\n          items = props.data.slice(0, Math.min(props.data.length, mergedContainerWidth.value / props.itemWidth));\n        }\n      } else if (typeof props.maxCount === 'number') {\n        items = props.data.slice(0, props.maxCount);\n      }\n\n      return items;\n    });\n    var omittedItems = computed(function () {\n      if (isResponsive.value) {\n        return props.data.slice(mergedDisplayCount.value + 1);\n      }\n\n      return props.data.slice(mergedData.value.length);\n    }); // ================================= Item =================================\n\n    var getKey = function getKey(item, index) {\n      var _a, _b;\n\n      if (typeof props.itemKey === 'function') {\n        return props.itemKey(item);\n      }\n\n      return (_b = props.itemKey && ((_a = item) === null || _a === void 0 ? void 0 : _a[props.itemKey])) !== null && _b !== void 0 ? _b : index;\n    };\n\n    var mergedRenderItem = computed(function () {\n      return props.renderItem || function (item) {\n        return item;\n      };\n    });\n\n    var updateDisplayCount = function updateDisplayCount(count, notReady) {\n      displayCount.value = count;\n\n      if (!notReady) {\n        restReady.value = count < props.data.length - 1;\n        emit('visibleChange', count);\n      }\n    }; // ================================= Size =================================\n\n\n    var onOverflowResize = function onOverflowResize(_, element) {\n      containerWidth.value = element.clientWidth;\n    };\n\n    var registerSize = function registerSize(key, width) {\n      var clone = new Map(itemWidths.value);\n\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n\n      itemWidths.value = clone;\n    };\n\n    var registerOverflowSize = function registerOverflowSize(_, width) {\n      prevRestWidth.value = restWidth.value;\n      restWidth.value = width;\n    };\n\n    var registerSuffixSize = function registerSuffixSize(_, width) {\n      suffixWidth.value = width;\n    }; // ================================ Effect ================================\n\n\n    var getItemWidth = function getItemWidth(index) {\n      return itemWidths.value.get(getKey(mergedData.value[index], index));\n    };\n\n    watch([mergedContainerWidth, itemWidths, restWidth, suffixWidth, function () {\n      return props.itemKey;\n    }, mergedData], function () {\n      if (mergedContainerWidth.value && mergedRestWidth.value && mergedData.value) {\n        var totalWidth = suffixWidth.value;\n        var len = mergedData.value.length;\n        var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n        if (!len) {\n          updateDisplayCount(0);\n          suffixFixedStart.value = null;\n          return;\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          var currentItemWidth = getItemWidth(i); // Break since data not ready\n\n          if (currentItemWidth === undefined) {\n            updateDisplayCount(i - 1, true);\n            break;\n          } // Find best match\n\n\n          totalWidth += currentItemWidth;\n\n          if ( // Only one means `totalWidth` is the final width\n          lastIndex === 0 && totalWidth <= mergedContainerWidth.value || i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth.value) {\n            // Additional check if match the end\n            updateDisplayCount(lastIndex);\n            suffixFixedStart.value = null;\n            break;\n          } else if (totalWidth + mergedRestWidth.value > mergedContainerWidth.value) {\n            // Can not hold all the content to show rest\n            updateDisplayCount(i - 1);\n            suffixFixedStart.value = totalWidth - currentItemWidth - suffixWidth.value + restWidth.value;\n            break;\n          }\n        }\n\n        if (props.suffix && getItemWidth(0) + suffixWidth.value > mergedContainerWidth.value) {\n          suffixFixedStart.value = null;\n        }\n      }\n    });\n    return function () {\n      // ================================ Render ================================\n      var displayRest = restReady.value && !!omittedItems.value.length;\n      var itemComponent = props.itemComponent,\n          renderRawItem = props.renderRawItem,\n          renderRawRest = props.renderRawRest,\n          renderRest = props.renderRest,\n          _props$prefixCls = props.prefixCls,\n          prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n          suffix = props.suffix,\n          _props$component = props.component,\n          Component = _props$component === void 0 ? 'div' : _props$component;\n\n      var className = attrs.class,\n          style = attrs.style,\n          restAttrs = __rest(attrs, [\"class\", \"style\"]);\n\n      var suffixStyle = {};\n\n      if (suffixFixedStart.value !== null && isResponsive.value) {\n        suffixStyle = {\n          position: 'absolute',\n          left: \"\".concat(suffixFixedStart.value, \"px\"),\n          top: 0\n        };\n      }\n\n      var itemSharedProps = {\n        prefixCls: itemPrefixCls.value,\n        responsive: isResponsive.value,\n        component: itemComponent,\n        invalidate: invalidate.value\n      }; // >>>>> Choice render fun by `renderRawItem`\n\n      var internalRenderItemNode = renderRawItem ? function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(OverflowContextProvider, {\n          \"key\": key,\n          \"value\": _extends(_extends({}, itemSharedProps), {\n            order: index,\n            item: item,\n            itemKey: key,\n            registerSize: registerSize,\n            display: index <= mergedDisplayCount.value\n          })\n        }, {\n          default: function _default() {\n            return [renderRawItem(item, index)];\n          }\n        });\n      } : function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n          \"order\": index,\n          \"key\": key,\n          \"item\": item,\n          \"renderItem\": mergedRenderItem.value,\n          \"itemKey\": key,\n          \"registerSize\": registerSize,\n          \"display\": index <= mergedDisplayCount.value\n        }), null);\n      }; // >>>>> Rest node\n\n      var restNode;\n      var restContextProps = {\n        order: displayRest ? mergedDisplayCount.value : Number.MAX_SAFE_INTEGER,\n        className: \"\".concat(itemPrefixCls.value, \"-rest\"),\n        registerSize: registerOverflowSize,\n        display: displayRest\n      };\n\n      if (!renderRawRest) {\n        var mergedRenderRest = renderRest || defaultRenderRest;\n        restNode = _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), restContextProps), {\n          default: function _default() {\n            return [typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems.value) : mergedRenderRest];\n          }\n        });\n      } else if (renderRawRest) {\n        restNode = _createVNode(OverflowContextProvider, {\n          \"value\": _extends(_extends({}, itemSharedProps), restContextProps)\n        }, {\n          default: function _default() {\n            return [renderRawRest(omittedItems.value)];\n          }\n        });\n      }\n\n      var overflowNode = _createVNode(Component, _objectSpread({\n        \"class\": classNames(!invalidate.value && prefixCls, className),\n        \"style\": style\n      }, restAttrs), {\n        default: function _default() {\n          return [mergedData.value.map(internalRenderItemNode), showRest.value ? restNode : null, suffix && _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n            \"order\": mergedDisplayCount.value,\n            \"class\": \"\".concat(itemPrefixCls.value, \"-suffix\"),\n            \"registerSize\": registerSuffixSize,\n            \"display\": true,\n            \"style\": suffixStyle\n          }), {\n            default: function _default() {\n              return [suffix];\n            }\n          })];\n        }\n      }); // 使用 disabled  避免结构不一致 导致子组件 rerender\n\n\n      return _createVNode(ResizeObserver, {\n        \"disabled\": !isResponsive.value,\n        \"onResize\": onOverflowResize\n      }, {\n        default: function _default() {\n          return [overflowNode];\n        }\n      });\n    };\n  }\n});\nOverflow.Item = RawItem;\nOverflow.RESPONSIVE = RESPONSIVE;\nOverflow.INVALIDATE = INVALIDATE;\nexport default Overflow;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-overflow/Overflow.js"],"names":["_objectSpread","_extends","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","computed","defineComponent","ref","watch","ResizeObserver","classNames","PropTypes","OverflowContextProvider","Item","RawItem","RESPONSIVE","INVALIDATE","defaultRenderRest","omittedItems","concat","Overflow","name","inheritAttrs","props","prefixCls","String","data","Array","itemKey","Number","Function","itemWidth","type","default","renderItem","renderRawItem","maxCount","renderRest","renderRawRest","suffix","any","component","itemComponent","onVisibleChange","ssr","emits","setup","_ref","attrs","emit","fullySSR","containerWidth","mergedContainerWidth","value","itemWidths","Map","prevRestWidth","restWidth","suffixWidth","suffixFixedStart","displayCount","mergedDisplayCount","MAX_SAFE_INTEGER","restReady","itemPrefixCls","mergedRestWidth","Math","max","isResponsive","invalidate","showRest","mergedData","items","slice","min","getKey","item","index","_a","_b","mergedRenderItem","updateDisplayCount","count","notReady","onOverflowResize","_","element","clientWidth","registerSize","key","width","clone","delete","set","registerOverflowSize","registerSuffixSize","getItemWidth","get","totalWidth","len","lastIndex","currentItemWidth","undefined","displayRest","_props$prefixCls","_props$component","Component","className","class","style","restAttrs","suffixStyle","position","left","top","itemSharedProps","responsive","internalRenderItemNode","order","display","_default","restNode","restContextProps","mergedRenderRest","overflowNode","map"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { computed, defineComponent, ref, watch } from 'vue';\nimport ResizeObserver from '../vc-resize-observer';\nimport classNames from '../_util/classNames';\nimport PropTypes from '../_util/vue-types';\nimport { OverflowContextProvider } from './context';\nimport Item from './Item';\nimport RawItem from './RawItem';\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\n\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\n\nvar Overflow = defineComponent({\n  name: 'Overflow',\n  inheritAttrs: false,\n  props: {\n    prefixCls: String,\n    data: Array,\n    itemKey: [String, Number, Function],\n\n    /** Used for `responsive`. It will limit render node to avoid perf issue */\n    itemWidth: {\n      type: Number,\n      default: 10\n    },\n    renderItem: Function,\n\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawItem: Function,\n    maxCount: [Number, String],\n    renderRest: Function,\n\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawRest: Function,\n    suffix: PropTypes.any,\n    component: String,\n    itemComponent: PropTypes.any,\n\n    /** @private This API may be refactor since not well design */\n    onVisibleChange: Function,\n\n    /** When set to `full`, ssr will render full items by default and remove at client side */\n    ssr: String\n  },\n  emits: ['visibleChange'],\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit;\n    var fullySSR = computed(function () {\n      return props.ssr === 'full';\n    });\n    var containerWidth = ref(null);\n    var mergedContainerWidth = computed(function () {\n      return containerWidth.value || 0;\n    });\n    var itemWidths = ref(new Map());\n    var prevRestWidth = ref(0);\n    var restWidth = ref(0);\n    var suffixWidth = ref(0);\n    var suffixFixedStart = ref(null);\n    var displayCount = ref(null);\n    var mergedDisplayCount = computed(function () {\n      if (displayCount.value === null && fullySSR.value) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n\n      return displayCount.value || 0;\n    });\n    var restReady = ref(false);\n    var itemPrefixCls = computed(function () {\n      return \"\".concat(props.prefixCls, \"-item\");\n    }); // Always use the max width to avoid blink\n\n    var mergedRestWidth = computed(function () {\n      return Math.max(prevRestWidth.value, restWidth.value);\n    }); // ================================= Data =================================\n\n    var isResponsive = computed(function () {\n      return !!(props.data.length && props.maxCount === RESPONSIVE);\n    });\n    var invalidate = computed(function () {\n      return props.maxCount === INVALIDATE;\n    });\n    /**\n     * When is `responsive`, we will always render rest node to get the real width of it for calculation\n     */\n\n    var showRest = computed(function () {\n      return isResponsive.value || typeof props.maxCount === 'number' && props.data.length > props.maxCount;\n    });\n    var mergedData = computed(function () {\n      var items = props.data;\n\n      if (isResponsive.value) {\n        if (containerWidth.value === null && fullySSR.value) {\n          items = props.data;\n        } else {\n          items = props.data.slice(0, Math.min(props.data.length, mergedContainerWidth.value / props.itemWidth));\n        }\n      } else if (typeof props.maxCount === 'number') {\n        items = props.data.slice(0, props.maxCount);\n      }\n\n      return items;\n    });\n    var omittedItems = computed(function () {\n      if (isResponsive.value) {\n        return props.data.slice(mergedDisplayCount.value + 1);\n      }\n\n      return props.data.slice(mergedData.value.length);\n    }); // ================================= Item =================================\n\n    var getKey = function getKey(item, index) {\n      var _a, _b;\n\n      if (typeof props.itemKey === 'function') {\n        return props.itemKey(item);\n      }\n\n      return (_b = props.itemKey && ((_a = item) === null || _a === void 0 ? void 0 : _a[props.itemKey])) !== null && _b !== void 0 ? _b : index;\n    };\n\n    var mergedRenderItem = computed(function () {\n      return props.renderItem || function (item) {\n        return item;\n      };\n    });\n\n    var updateDisplayCount = function updateDisplayCount(count, notReady) {\n      displayCount.value = count;\n\n      if (!notReady) {\n        restReady.value = count < props.data.length - 1;\n        emit('visibleChange', count);\n      }\n    }; // ================================= Size =================================\n\n\n    var onOverflowResize = function onOverflowResize(_, element) {\n      containerWidth.value = element.clientWidth;\n    };\n\n    var registerSize = function registerSize(key, width) {\n      var clone = new Map(itemWidths.value);\n\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n\n      itemWidths.value = clone;\n    };\n\n    var registerOverflowSize = function registerOverflowSize(_, width) {\n      prevRestWidth.value = restWidth.value;\n      restWidth.value = width;\n    };\n\n    var registerSuffixSize = function registerSuffixSize(_, width) {\n      suffixWidth.value = width;\n    }; // ================================ Effect ================================\n\n\n    var getItemWidth = function getItemWidth(index) {\n      return itemWidths.value.get(getKey(mergedData.value[index], index));\n    };\n\n    watch([mergedContainerWidth, itemWidths, restWidth, suffixWidth, function () {\n      return props.itemKey;\n    }, mergedData], function () {\n      if (mergedContainerWidth.value && mergedRestWidth.value && mergedData.value) {\n        var totalWidth = suffixWidth.value;\n        var len = mergedData.value.length;\n        var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n        if (!len) {\n          updateDisplayCount(0);\n          suffixFixedStart.value = null;\n          return;\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          var currentItemWidth = getItemWidth(i); // Break since data not ready\n\n          if (currentItemWidth === undefined) {\n            updateDisplayCount(i - 1, true);\n            break;\n          } // Find best match\n\n\n          totalWidth += currentItemWidth;\n\n          if ( // Only one means `totalWidth` is the final width\n          lastIndex === 0 && totalWidth <= mergedContainerWidth.value || i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth.value) {\n            // Additional check if match the end\n            updateDisplayCount(lastIndex);\n            suffixFixedStart.value = null;\n            break;\n          } else if (totalWidth + mergedRestWidth.value > mergedContainerWidth.value) {\n            // Can not hold all the content to show rest\n            updateDisplayCount(i - 1);\n            suffixFixedStart.value = totalWidth - currentItemWidth - suffixWidth.value + restWidth.value;\n            break;\n          }\n        }\n\n        if (props.suffix && getItemWidth(0) + suffixWidth.value > mergedContainerWidth.value) {\n          suffixFixedStart.value = null;\n        }\n      }\n    });\n    return function () {\n      // ================================ Render ================================\n      var displayRest = restReady.value && !!omittedItems.value.length;\n      var itemComponent = props.itemComponent,\n          renderRawItem = props.renderRawItem,\n          renderRawRest = props.renderRawRest,\n          renderRest = props.renderRest,\n          _props$prefixCls = props.prefixCls,\n          prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n          suffix = props.suffix,\n          _props$component = props.component,\n          Component = _props$component === void 0 ? 'div' : _props$component;\n\n      var className = attrs.class,\n          style = attrs.style,\n          restAttrs = __rest(attrs, [\"class\", \"style\"]);\n\n      var suffixStyle = {};\n\n      if (suffixFixedStart.value !== null && isResponsive.value) {\n        suffixStyle = {\n          position: 'absolute',\n          left: \"\".concat(suffixFixedStart.value, \"px\"),\n          top: 0\n        };\n      }\n\n      var itemSharedProps = {\n        prefixCls: itemPrefixCls.value,\n        responsive: isResponsive.value,\n        component: itemComponent,\n        invalidate: invalidate.value\n      }; // >>>>> Choice render fun by `renderRawItem`\n\n      var internalRenderItemNode = renderRawItem ? function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(OverflowContextProvider, {\n          \"key\": key,\n          \"value\": _extends(_extends({}, itemSharedProps), {\n            order: index,\n            item: item,\n            itemKey: key,\n            registerSize: registerSize,\n            display: index <= mergedDisplayCount.value\n          })\n        }, {\n          default: function _default() {\n            return [renderRawItem(item, index)];\n          }\n        });\n      } : function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n          \"order\": index,\n          \"key\": key,\n          \"item\": item,\n          \"renderItem\": mergedRenderItem.value,\n          \"itemKey\": key,\n          \"registerSize\": registerSize,\n          \"display\": index <= mergedDisplayCount.value\n        }), null);\n      }; // >>>>> Rest node\n\n      var restNode;\n      var restContextProps = {\n        order: displayRest ? mergedDisplayCount.value : Number.MAX_SAFE_INTEGER,\n        className: \"\".concat(itemPrefixCls.value, \"-rest\"),\n        registerSize: registerOverflowSize,\n        display: displayRest\n      };\n\n      if (!renderRawRest) {\n        var mergedRenderRest = renderRest || defaultRenderRest;\n        restNode = _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), restContextProps), {\n          default: function _default() {\n            return [typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems.value) : mergedRenderRest];\n          }\n        });\n      } else if (renderRawRest) {\n        restNode = _createVNode(OverflowContextProvider, {\n          \"value\": _extends(_extends({}, itemSharedProps), restContextProps)\n        }, {\n          default: function _default() {\n            return [renderRawRest(omittedItems.value)];\n          }\n        });\n      }\n\n      var overflowNode = _createVNode(Component, _objectSpread({\n        \"class\": classNames(!invalidate.value && prefixCls, className),\n        \"style\": style\n      }, restAttrs), {\n        default: function _default() {\n          return [mergedData.value.map(internalRenderItemNode), showRest.value ? restNode : null, suffix && _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n            \"order\": mergedDisplayCount.value,\n            \"class\": \"\".concat(itemPrefixCls.value, \"-suffix\"),\n            \"registerSize\": registerSuffixSize,\n            \"display\": true,\n            \"style\": suffixStyle\n          }), {\n            default: function _default() {\n              return [suffix];\n            }\n          })];\n        }\n      }); // 使用 disabled  避免结构不一致 导致子组件 rerender\n\n\n      return _createVNode(ResizeObserver, {\n        \"disabled\": !isResponsive.value,\n        \"onResize\": onOverflowResize\n      }, {\n        default: function _default() {\n          return [overflowNode];\n        }\n      });\n    };\n  }\n});\nOverflow.Item = RawItem;\nOverflow.RESPONSIVE = RESPONSIVE;\nOverflow.INVALIDATE = INVALIDATE;\nexport default Overflow;"]},"metadata":{},"sourceType":"module"}