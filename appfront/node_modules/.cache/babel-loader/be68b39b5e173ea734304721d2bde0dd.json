{"ast":null,"code":"var map = require('./map');\n\nvar isArray = require('./isArray');\n\nfunction deepGetObj(obj, path) {\n  var index = 0;\n  var len = path.length;\n\n  while (obj && index < len) {\n    obj = obj[path[index++]];\n  }\n\n  return len && obj ? obj : 0;\n}\n/**\r\n * 在list的每个元素上执行方法,任何传递的额外参数都会在调用方法的时候传递给它\r\n *\r\n * @param {Array} list\r\n * @param {Array/String/Function} path\r\n * @param {...Object} arguments\r\n * @return {Array}\r\n */\n\n\nfunction invoke(list, path) {\n  var func;\n  var args = arguments;\n  var params = [];\n  var paths = [];\n  var index = 2;\n  var len = args.length;\n\n  for (; index < len; index++) {\n    params.push(args[index]);\n  }\n\n  if (isArray(path)) {\n    len = path.length - 1;\n\n    for (index = 0; index < len; index++) {\n      paths.push(path[index]);\n    }\n\n    path = path[len];\n  }\n\n  return map(list, function (context) {\n    if (paths.length) {\n      context = deepGetObj(context, paths);\n    }\n\n    func = context[path] || path;\n\n    if (func && func.apply) {\n      return func.apply(context, params);\n    }\n  });\n}\n\nmodule.exports = invoke;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/invoke.js"],"names":["map","require","isArray","deepGetObj","obj","path","index","len","length","invoke","list","func","args","arguments","params","paths","push","context","apply","module","exports"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;;AAEA,SAASE,UAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC9B,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGF,IAAI,CAACG,MAAf;;AACA,SAAOJ,GAAG,IAAIE,KAAK,GAAGC,GAAtB,EAA2B;AACzBH,IAAAA,GAAG,GAAGA,GAAG,CAACC,IAAI,CAACC,KAAK,EAAN,CAAL,CAAT;AACD;;AACD,SAAOC,GAAG,IAAIH,GAAP,GAAaA,GAAb,GAAmB,CAA1B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,MAAT,CAAiBC,IAAjB,EAAuBL,IAAvB,EAA6B;AAC3B,MAAIM,IAAJ;AACA,MAAIC,IAAI,GAAGC,SAAX;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIT,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGK,IAAI,CAACJ,MAAf;;AACA,SAAOF,KAAK,GAAGC,GAAf,EAAoBD,KAAK,EAAzB,EAA6B;AAC3BQ,IAAAA,MAAM,CAACE,IAAP,CAAYJ,IAAI,CAACN,KAAD,CAAhB;AACD;;AACD,MAAIJ,OAAO,CAACG,IAAD,CAAX,EAAmB;AACjBE,IAAAA,GAAG,GAAGF,IAAI,CAACG,MAAL,GAAc,CAApB;;AACA,SAAKF,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAGC,GAAxB,EAA6BD,KAAK,EAAlC,EAAsC;AACpCS,MAAAA,KAAK,CAACC,IAAN,CAAWX,IAAI,CAACC,KAAD,CAAf;AACD;;AACDD,IAAAA,IAAI,GAAGA,IAAI,CAACE,GAAD,CAAX;AACD;;AACD,SAAOP,GAAG,CAACU,IAAD,EAAO,UAAUO,OAAV,EAAmB;AAClC,QAAIF,KAAK,CAACP,MAAV,EAAkB;AAChBS,MAAAA,OAAO,GAAGd,UAAU,CAACc,OAAD,EAAUF,KAAV,CAApB;AACD;;AACDJ,IAAAA,IAAI,GAAGM,OAAO,CAACZ,IAAD,CAAP,IAAiBA,IAAxB;;AACA,QAAIM,IAAI,IAAIA,IAAI,CAACO,KAAjB,EAAwB;AACtB,aAAOP,IAAI,CAACO,KAAL,CAAWD,OAAX,EAAoBH,MAApB,CAAP;AACD;AACF,GARS,CAAV;AASD;;AAEDK,MAAM,CAACC,OAAP,GAAiBX,MAAjB","sourcesContent":["var map = require('./map')\r\n\r\nvar isArray = require('./isArray')\r\n\r\nfunction deepGetObj (obj, path) {\r\n  var index = 0\r\n  var len = path.length\r\n  while (obj && index < len) {\r\n    obj = obj[path[index++]]\r\n  }\r\n  return len && obj ? obj : 0\r\n}\r\n\r\n/**\r\n * 在list的每个元素上执行方法,任何传递的额外参数都会在调用方法的时候传递给它\r\n *\r\n * @param {Array} list\r\n * @param {Array/String/Function} path\r\n * @param {...Object} arguments\r\n * @return {Array}\r\n */\r\nfunction invoke (list, path) {\r\n  var func\r\n  var args = arguments\r\n  var params = []\r\n  var paths = []\r\n  var index = 2\r\n  var len = args.length\r\n  for (; index < len; index++) {\r\n    params.push(args[index])\r\n  }\r\n  if (isArray(path)) {\r\n    len = path.length - 1\r\n    for (index = 0; index < len; index++) {\r\n      paths.push(path[index])\r\n    }\r\n    path = path[len]\r\n  }\r\n  return map(list, function (context) {\r\n    if (paths.length) {\r\n      context = deepGetObj(context, paths)\r\n    }\r\n    func = context[path] || path\r\n    if (func && func.apply) {\r\n      return func.apply(context, params)\r\n    }\r\n  })\r\n}\r\n\r\nmodule.exports = invoke\r\n"]},"metadata":{},"sourceType":"script"}