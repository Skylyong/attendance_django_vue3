{"ast":null,"code":"var isArray = require('./isArray');\n\nvar isPlainObject = require('./isPlainObject');\n\nvar each = require('./each');\n\nfunction handleMerge(target, source) {\n  if (isPlainObject(target) && isPlainObject(source) || isArray(target) && isArray(source)) {\n    each(source, function (obj, key) {\n      target[key] = handleMerge(target[key], obj);\n    });\n    return target;\n  }\n\n  return source;\n}\n/**\r\n  * 将一个或多个源对象合并到目标对象中\r\n  *\r\n  * @param {Object} target 目标对象\r\n  * @param {...Object}\r\n  * @return {Boolean}\r\n  */\n\n\nvar merge = function (target) {\n  if (!target) {\n    target = {};\n  }\n\n  var args = arguments;\n  var len = args.length;\n\n  for (var source, index = 1; index < len; index++) {\n    source = args[index];\n\n    if (source) {\n      handleMerge(target, source);\n    }\n  }\n\n  return target;\n};\n\nmodule.exports = merge;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/merge.js"],"names":["isArray","require","isPlainObject","each","handleMerge","target","source","obj","key","merge","args","arguments","len","length","index","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;AAEA,SAASG,WAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC;AACpC,MAAKJ,aAAa,CAACG,MAAD,CAAb,IAAyBH,aAAa,CAACI,MAAD,CAAvC,IAAqDN,OAAO,CAACK,MAAD,CAAP,IAAmBL,OAAO,CAACM,MAAD,CAAnF,EAA8F;AAC5FH,IAAAA,IAAI,CAACG,MAAD,EAAS,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/BH,MAAAA,MAAM,CAACG,GAAD,CAAN,GAAcJ,WAAW,CAACC,MAAM,CAACG,GAAD,CAAP,EAAcD,GAAd,CAAzB;AACD,KAFG,CAAJ;AAGA,WAAOF,MAAP;AACD;;AACD,SAAOC,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,IAAIG,KAAK,GAAG,UAAUJ,MAAV,EAAkB;AAC7B,MAAI,CAACA,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG,EAAT;AACD;;AACD,MAAIK,IAAI,GAAGC,SAAX;AACA,MAAIC,GAAG,GAAGF,IAAI,CAACG,MAAf;;AACA,OAAK,IAAIP,MAAJ,EAAYQ,KAAK,GAAG,CAAzB,EAA4BA,KAAK,GAAGF,GAApC,EAAyCE,KAAK,EAA9C,EAAkD;AAChDR,IAAAA,MAAM,GAAGI,IAAI,CAACI,KAAD,CAAb;;AACA,QAAIR,MAAJ,EAAY;AACVF,MAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,CAAX;AACD;AACF;;AACD,SAAOD,MAAP;AACD,CAbA;;AAeDU,MAAM,CAACC,OAAP,GAAiBP,KAAjB","sourcesContent":["var isArray = require('./isArray')\r\nvar isPlainObject = require('./isPlainObject')\r\nvar each = require('./each')\r\n\r\nfunction handleMerge (target, source) {\r\n  if ((isPlainObject(target) && isPlainObject(source)) || (isArray(target) && isArray(source))) {\r\n    each(source, function (obj, key) {\r\n      target[key] = handleMerge(target[key], obj)\r\n    })\r\n    return target\r\n  }\r\n  return source\r\n}\r\n\r\n/**\r\n  * 将一个或多个源对象合并到目标对象中\r\n  *\r\n  * @param {Object} target 目标对象\r\n  * @param {...Object}\r\n  * @return {Boolean}\r\n  */\r\n var merge = function (target) {\r\n  if (!target) {\r\n    target = {}\r\n  }\r\n  var args = arguments\r\n  var len = args.length\r\n  for (var source, index = 1; index < len; index++) {\r\n    source = args[index]\r\n    if (source) {\r\n      handleMerge(target, source)\r\n    }\r\n  }\r\n  return target\r\n}\r\n\r\nmodule.exports = merge\r\n"]},"metadata":{},"sourceType":"script"}