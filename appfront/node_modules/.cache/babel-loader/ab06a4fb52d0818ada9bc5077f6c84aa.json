{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { Text } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { getSlot } from '../_util/props-util';\nexport default {\n  name: 'LazyRenderBox',\n  props: {\n    visible: PropTypes.looseBool,\n    hiddenClassName: PropTypes.string\n  },\n  render: function render() {\n    var hiddenClassName = this.$props.hiddenClassName;\n    var child = getSlot(this);\n\n    if (hiddenClassName || child && child.length > 1 || child && child[0] && child[0].type === Text) {\n      // const cls = '';\n      // if (!visible && hiddenClassName) {\n      //   // cls += ` ${hiddenClassName}`\n      // }\n      return _createVNode(\"div\", null, [child]);\n    }\n\n    return child && child[0];\n  }\n};","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-trigger/LazyRenderBox.js"],"names":["createVNode","_createVNode","Text","PropTypes","getSlot","name","props","visible","looseBool","hiddenClassName","string","render","$props","child","length","type"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,SAASC,IAAT,QAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,eAAe;AACbC,EAAAA,IAAI,EAAE,eADO;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,SAAS,CAACK,SADd;AAELC,IAAAA,eAAe,EAAEN,SAAS,CAACO;AAFtB,GAFM;AAMbC,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,QAAIF,eAAe,GAAG,KAAKG,MAAL,CAAYH,eAAlC;AACA,QAAII,KAAK,GAAGT,OAAO,CAAC,IAAD,CAAnB;;AAEA,QAAIK,eAAe,IAAII,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,CAA3C,IAAgDD,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,IAAqBA,KAAK,CAAC,CAAD,CAAL,CAASE,IAAT,KAAkBb,IAA3F,EAAiG;AAC/F;AACA;AACA;AACA;AACA,aAAOD,YAAY,CAAC,KAAD,EAAQ,IAAR,EAAc,CAACY,KAAD,CAAd,CAAnB;AACD;;AAED,WAAOA,KAAK,IAAIA,KAAK,CAAC,CAAD,CAArB;AACD;AAnBY,CAAf","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { Text } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { getSlot } from '../_util/props-util';\nexport default {\n  name: 'LazyRenderBox',\n  props: {\n    visible: PropTypes.looseBool,\n    hiddenClassName: PropTypes.string\n  },\n  render: function render() {\n    var hiddenClassName = this.$props.hiddenClassName;\n    var child = getSlot(this);\n\n    if (hiddenClassName || child && child.length > 1 || child && child[0] && child[0].type === Text) {\n      // const cls = '';\n      // if (!visible && hiddenClassName) {\n      //   // cls += ` ${hiddenClassName}`\n      // }\n      return _createVNode(\"div\", null, [child]);\n    }\n\n    return child && child[0];\n  }\n};"]},"metadata":{},"sourceType":"module"}