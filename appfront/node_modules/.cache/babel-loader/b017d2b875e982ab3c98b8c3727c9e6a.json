{"ast":null,"code":"import { VXETable, VxeFormEvents, VxeFormPropTypes } from 'vxe-table';\nimport { defineComponent, onMounted, reactive, ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { VxeGridInstance, VxeGridProps } from 'vxe-table';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n  setup() {\n    const demo2 = reactive({\n      formData2: {\n        name: '张三',\n        userId: '311251'\n      }\n    });\n    const tableData1 = ref([{\n      id: 10001,\n      name: 'Test1',\n      role: 'Develop',\n      sex: 'Man',\n      age: 28,\n      address: 'test abc'\n    }]);\n    const store = useStore();\n    const serveApiUrl = computed(() => store.state.serveApiUrl);\n    const xGrid = ref({});\n    const gridOptions = reactive < VxeGridProps > {\n      border: true,\n      showHeaderOverflow: true,\n      showOverflow: true,\n      keepSource: true,\n      id: 'full_edit_1',\n      height: 600,\n      rowConfig: {\n        keyField: 'id',\n        isHover: true\n      },\n      columnConfig: {\n        resizable: true\n      },\n      customConfig: {\n        storage: true,\n\n        checkMethod({\n          column\n        }) {\n          if (['nickname', 'role'].includes(column.property)) {\n            return false;\n          }\n\n          return true;\n        }\n\n      },\n      printConfig: {\n        columns: [{\n          field: 'name'\n        }, {\n          field: 'email'\n        }, {\n          field: 'nickname'\n        }, {\n          field: 'age'\n        }, {\n          field: 'amount'\n        }]\n      },\n      sortConfig: {\n        trigger: 'cell',\n        remote: true\n      },\n      filterConfig: {\n        remote: true\n      },\n      pagerConfig: {\n        pageSize: 10,\n        pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000]\n      },\n      formConfig: {\n        titleWidth: 100,\n        titleAlign: 'right',\n        items: [{\n          field: 'name',\n          title: 'app.body.label.name',\n          span: 8,\n          titlePrefix: {\n            message: 'app.body.valid.rName',\n            icon: 'fa fa-exclamation-circle'\n          },\n          itemRender: {\n            name: '$input',\n            props: {\n              placeholder: '请输入名称'\n            }\n          }\n        }, {\n          field: 'email',\n          title: '邮件',\n          span: 8,\n          titlePrefix: {\n            useHTML: true,\n            message: '点击链接：<a class=\"link\" href=\"https://vxetable.cn\" target=\"_blank\">vxe-table官网</a>',\n            icon: 'vxe-icon--question'\n          },\n          itemRender: {\n            name: '$input',\n            props: {\n              placeholder: '请输入邮件'\n            }\n          }\n        }, {\n          field: 'nickname',\n          title: '昵称',\n          span: 8,\n          itemRender: {\n            name: '$input',\n            props: {\n              placeholder: '请输入昵称'\n            }\n          }\n        }, {\n          field: 'role',\n          title: '角色',\n          span: 8,\n          folding: true,\n          itemRender: {\n            name: '$input',\n            props: {\n              placeholder: '请输入角色'\n            }\n          }\n        }, {\n          field: 'sex',\n          title: '性别',\n          span: 8,\n          folding: true,\n          titleSuffix: {\n            message: '注意，必填信息！',\n            icon: 'fa fa-info-circle'\n          },\n          itemRender: {\n            name: '$select',\n            options: []\n          }\n        }, {\n          field: 'age',\n          title: '年龄',\n          span: 8,\n          folding: true,\n          itemRender: {\n            name: '$input',\n            props: {\n              type: 'number',\n              min: 1,\n              max: 120,\n              placeholder: '请输入年龄'\n            }\n          }\n        }, {\n          span: 24,\n          align: 'center',\n          collapseNode: true,\n          itemRender: {\n            name: '$buttons',\n            children: [{\n              props: {\n                type: 'submit',\n                content: 'app.body.label.search',\n                status: 'primary'\n              }\n            }, {\n              props: {\n                type: 'reset',\n                content: 'app.body.label.reset'\n              }\n            }]\n          }\n        }]\n      },\n      toolbarConfig: {\n        buttons: [{\n          code: 'insert_actived',\n          name: '新增',\n          icon: 'fa fa-plus'\n        }, {\n          code: 'delete',\n          name: '直接删除',\n          icon: 'fa fa-trash-o'\n        }, {\n          code: 'mark_cancel',\n          name: '删除/取消',\n          icon: 'fa fa-trash-o'\n        }, {\n          code: 'save',\n          name: 'app.body.button.save',\n          icon: 'fa fa-save',\n          status: 'success'\n        }],\n        refresh: true,\n        import: true,\n        export: true,\n        print: true,\n        zoom: true,\n        custom: true\n      },\n      proxyConfig: {\n        seq: true,\n        // 启用动态序号代理，每一页的序号会根据当前页数变化\n        sort: true,\n        // 启用排序代理，当点击排序时会自动触发 query 行为\n        filter: true,\n        // 启用筛选代理，当点击筛选时会自动触发 query 行为\n        form: true,\n        // 启用表单代理，当点击表单提交按钮时会自动触发 reload 行为\n        // 对应响应结果 { result: [], page: { total: 100 } }\n        props: {\n          result: 'result',\n          // 配置响应结果列表字段\n          total: 'page.total' // 配置响应结果总页数字段\n\n        },\n        // 只接收Promise，具体实现自由发挥\n        ajax: {\n          // 当点击工具栏查询按钮或者手动提交指令 query或reload 时会被触发\n          query: ({\n            page,\n            sorts,\n            filters,\n            form\n          }) => {\n            const queryParams = Object.assign({}, form); // 处理排序条件\n\n            const firstSort = sorts[0];\n\n            if (firstSort) {\n              queryParams.sort = firstSort.property;\n              queryParams.order = firstSort.order;\n            } // 处理筛选条件\n\n\n            filters.forEach(({\n              property,\n              values\n            }) => {\n              queryParams[property] = values.join(',');\n            });\n            return fetch(`${serveApiUrl.value}/api/pub/page/list/${page.pageSize}/${page.currentPage}?${XEUtils.serialize(queryParams)}`).then(response => response.json());\n          },\n          // 当点击工具栏删除按钮或者手动提交指令 delete 时会被触发\n          delete: ({\n            body\n          }) => {\n            return fetch(`${serveApiUrl.value}/api/pub/save`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(body)\n            }).then(response => response.json());\n          },\n          // 当点击工具栏保存按钮或者手动提交指令 save 时会被触发\n          save: ({\n            body\n          }) => {\n            return fetch(`${serveApiUrl.value}/api/pub/save`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(body)\n            }).then(response => response.json());\n          }\n        }\n      },\n      columns: [{\n        type: 'checkbox',\n        title: 'ID',\n        width: 120\n      }, {\n        field: 'name',\n        title: 'Name',\n        sortable: true,\n        titleHelp: {\n          message: '名称必须填写！'\n        },\n        editRender: {\n          name: 'input',\n          attrs: {\n            placeholder: '请输入名称'\n          }\n        }\n      }, {\n        field: 'role',\n        title: 'Role',\n        sortable: true,\n        titleHelp: {\n          useHTML: true,\n          content: '点击链接：<a class=\"link\" href=\"https://vxetable.cn\" target=\"_blank\">vxe-table官网</a>'\n        },\n        filters: [{\n          label: '前端开发',\n          value: '前端'\n        }, {\n          label: '后端开发',\n          value: '后端'\n        }, {\n          label: '测试',\n          value: '测试'\n        }, {\n          label: '程序员鼓励师',\n          value: '程序员鼓励师'\n        }],\n        filterMultiple: false,\n        editRender: {\n          name: 'input',\n          attrs: {\n            placeholder: '请输入角色'\n          }\n        }\n      }, {\n        field: 'email',\n        title: 'Email',\n        width: 160,\n        editRender: {\n          name: '$input',\n          props: {\n            placeholder: '请输入邮件'\n          }\n        }\n      }, {\n        field: 'nickname',\n        title: 'Nickname',\n        editRender: {\n          name: 'input',\n          attrs: {\n            placeholder: '请输入昵称'\n          }\n        }\n      }, {\n        field: 'sex',\n        title: 'Sex',\n        filters: [{\n          label: '男',\n          value: '1'\n        }, {\n          label: '女',\n          value: '0'\n        }],\n        editRender: {\n          name: '$select',\n          options: [],\n          props: {\n            placeholder: '请选择性别'\n          }\n        }\n      }, {\n        field: 'age',\n        title: 'Age',\n        visible: false,\n        sortable: true,\n        editRender: {\n          name: '$input',\n          props: {\n            type: 'number',\n            min: 1,\n            max: 120\n          }\n        }\n      }, {\n        field: 'amount',\n        title: 'Amount',\n\n        formatter({\n          cellValue\n        }) {\n          return cellValue ? `￥${XEUtils.commafy(XEUtils.toNumber(cellValue), {\n            digits: 2\n          })}` : '';\n        },\n\n        editRender: {\n          name: '$input',\n          props: {\n            type: 'float',\n            digits: 2,\n            placeholder: '请输入数值'\n          }\n        }\n      }, {\n        field: 'updateDate',\n        title: 'Update Date',\n        width: 160,\n        visible: false,\n        sortable: true,\n\n        formatter({\n          cellValue\n        }) {\n          return XEUtils.toDateString(cellValue, 'yyyy-MM-dd HH:ss:mm');\n        }\n\n      }, {\n        field: 'createDate',\n        title: 'Create Date',\n        width: 160,\n        visible: false,\n        sortable: true,\n\n        formatter({\n          cellValue\n        }) {\n          return XEUtils.toDateString(cellValue, 'yyyy-MM-dd');\n        }\n\n      }],\n      importConfig: {\n        remote: true,\n        types: ['xlsx'],\n        modes: ['insert'],\n\n        // 自定义服务端导入\n        importMethod({\n          file\n        }) {\n          const $grid = xGrid.value;\n          const formBody = new FormData();\n          formBody.append('file', file);\n          return fetch(`${serveApiUrl.value}/api/pub/import`, {\n            method: 'POST',\n            body: formBody\n          }).then(response => response.json()).then(data => {\n            VXETable.modal.message({\n              content: `成功导入 ${data.result.insertRows} 条记录！`,\n              status: 'success'\n            }); // 导入完成，刷新表格\n\n            $grid.commitProxy('query');\n          }).catch(() => {\n            VXETable.modal.message({\n              content: '导入失败，请检查数据是否正确！',\n              status: 'error'\n            });\n          });\n        }\n\n      },\n      exportConfig: {\n        remote: true,\n        types: ['xlsx'],\n        modes: ['current', 'selected', 'all'],\n\n        // 自定义服务端导出\n        exportMethod({\n          options\n        }) {\n          const $grid = xGrid.value;\n          const proxyInfo = $grid.getProxyInfo(); // 传给服务端的参数\n\n          const body = {\n            filename: options.filename,\n            sheetName: options.sheetName,\n            isHeader: options.isHeader,\n            original: options.original,\n            mode: options.mode,\n            pager: proxyInfo ? proxyInfo.pager : null,\n            ids: options.mode === 'selected' ? options.data.map(item => item.id) : [],\n            fields: options.columns.map(column => {\n              return {\n                field: column.property,\n                title: column.title\n              };\n            })\n          }; // 开始服务端导出\n\n          return fetch(`${serveApiUrl.value}/api/pub/export`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n          }).then(response => response.json()).then(data => {\n            if (data.id) {\n              VXETable.modal.message({\n                content: '导出成功，开始下载',\n                status: 'success'\n              }); // 读取路径，请求文件\n\n              fetch(`${serveApiUrl.value}/api/pub/export/download/${data.id}`).then(response => {\n                response.blob().then(blob => {\n                  // 开始下载\n                  VXETable.saveFile({\n                    filename: '导出数据',\n                    type: 'xlsx',\n                    content: blob\n                  });\n                });\n              });\n            }\n          }).catch(() => {\n            VXETable.modal.message({\n              content: '导出失败！',\n              status: 'error'\n            });\n          });\n        }\n\n      },\n      checkboxConfig: {\n        labelField: 'id',\n        reserve: true,\n        highlight: true,\n        range: true\n      },\n      editRules: {\n        name: [{\n          required: true,\n          message: 'app.body.valid.rName'\n        }, {\n          min: 3,\n          max: 50,\n          message: '名称长度在 3 到 50 个字符'\n        }],\n        email: [{\n          required: true,\n          message: '邮件必须填写'\n        }],\n        role: [{\n          required: true,\n          message: '角色必须填写'\n        }]\n      },\n      editConfig: {\n        trigger: 'click',\n        mode: 'row',\n        showStatus: true\n      }\n    };\n    onMounted(() => {\n      const sexList = [{\n        label: '女',\n        value: '0'\n      }, {\n        label: '男',\n        value: '1'\n      }];\n      const {\n        formConfig,\n        columns\n      } = gridOptions;\n\n      if (columns) {\n        const sexColumn = columns[5];\n\n        if (sexColumn && sexColumn.editRender) {\n          sexColumn.editRender.options = sexList;\n        }\n      }\n\n      if (formConfig && formConfig.items) {\n        const sexItem = formConfig.items[4];\n\n        if (sexItem && sexItem.itemRender) {\n          sexItem.itemRender.options = sexList;\n        }\n      }\n    });\n    return {\n      demo2,\n      tableData1,\n      xGrid,\n      gridOptions\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VXETable","VxeFormEvents","VxeFormPropTypes","defineComponent","onMounted","reactive","ref","computed","useStore","VxeGridInstance","VxeGridProps","XEUtils","setup","demo2","formData2","name","userId","tableData1","id","role","sex","age","address","store","serveApiUrl","state","xGrid","gridOptions","border","showHeaderOverflow","showOverflow","keepSource","height","rowConfig","keyField","isHover","columnConfig","resizable","customConfig","storage","checkMethod","column","includes","property","printConfig","columns","field","sortConfig","trigger","remote","filterConfig","pagerConfig","pageSize","pageSizes","formConfig","titleWidth","titleAlign","items","title","span","titlePrefix","message","icon","itemRender","props","placeholder","useHTML","folding","titleSuffix","options","type","min","max","align","collapseNode","children","content","status","toolbarConfig","buttons","code","refresh","import","export","print","zoom","custom","proxyConfig","seq","sort","filter","form","result","total","ajax","query","page","sorts","filters","queryParams","Object","assign","firstSort","order","forEach","values","join","fetch","value","currentPage","serialize","then","response","json","delete","body","method","headers","JSON","stringify","save","width","sortable","titleHelp","editRender","attrs","label","filterMultiple","visible","formatter","cellValue","commafy","toNumber","digits","toDateString","importConfig","types","modes","importMethod","file","$grid","formBody","FormData","append","data","modal","insertRows","commitProxy","catch","exportConfig","exportMethod","proxyInfo","getProxyInfo","filename","sheetName","isHeader","original","mode","pager","ids","map","item","fields","blob","saveFile","checkboxConfig","labelField","reserve","highlight","range","editRules","required","email","editConfig","showStatus","sexList","sexColumn","sexItem"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n    \n        <vxe-form\n          title-colon\n          ref=\"xForm\"\n          title-align=\"right\"\n          title-width=\"100\"\n          :data=\"demo2.formData2\"\n        >\n          <vxe-form-gather span=\"48\">\n            <div style=\"float:left\">\n            <vxe-form-item title=\"姓 名\" field=\"name\" span=\"24\" ></vxe-form-item> </div>\n            <div style=\"float:right\">\n              <vxe-form-item title=\"工 号\" field=\"userId\" span=\"24\" ></vxe-form-item>\n            </div>\n          </vxe-form-gather>\n        </vxe-form>\n\n        <vxe-table\n          :align=center\n          :data=\"tableData1\">\n          <vxe-column field=\"name\" title=\"Name\"></vxe-column>\n          <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>\n          <vxe-column field=\"age\" title=\"Age\"></vxe-column>\n        </vxe-table>\n\n      <vxe-grid ref='xGrid' v-bind=\"gridOptions\"></vxe-grid>\n\n\n        \n</template>\n\n<script>\n  import { VXETable, VxeFormEvents, VxeFormPropTypes } from 'vxe-table'\n  import { defineComponent, onMounted, reactive, ref, computed } from 'vue'\n  import { useStore } from 'vuex'\n  import {VxeGridInstance, VxeGridProps } from 'vxe-table'\n  import XEUtils from 'xe-utils'\n\n  export default defineComponent({\n    setup  () {\n      const demo2 = reactive({\n        formData2: {\n          name: '张三',\n          userId: '311251',\n        },\n      })\n      const tableData1 = ref([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' }\n            ])\n      const store = useStore()\n      const serveApiUrl = computed(() => store.state.serveApiUrl)\n\n        const xGrid = ref({})\n\n        const gridOptions = reactive<VxeGridProps>({\n          border: true,\n          showHeaderOverflow: true,\n          showOverflow: true,\n          keepSource: true,\n          id: 'full_edit_1',\n          height: 600,\n          rowConfig: {\n            keyField: 'id',\n            isHover: true\n          },\n          columnConfig: {\n            resizable: true\n          },\n          customConfig: {\n            storage: true,\n            checkMethod ({ column }) {\n              if (['nickname', 'role'].includes(column.property)) {\n                return false\n              }\n              return true\n            }\n          },\n          printConfig: {\n            columns: [\n              { field: 'name' },\n              { field: 'email' },\n              { field: 'nickname' },\n              { field: 'age' },\n              { field: 'amount' }\n            ]\n          },\n          sortConfig: {\n            trigger: 'cell',\n            remote: true\n          },\n          filterConfig: {\n            remote: true\n          },\n          pagerConfig: {\n            pageSize: 10,\n            pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000]\n          },\n          formConfig: {\n            titleWidth: 100,\n            titleAlign: 'right',\n            items: [\n              { field: 'name', title: 'app.body.label.name', span: 8, titlePrefix: { message: 'app.body.valid.rName', icon: 'fa fa-exclamation-circle' }, itemRender: { name: '$input', props: { placeholder: '请输入名称' } } },\n              { field: 'email', title: '邮件', span: 8, titlePrefix: { useHTML: true, message: '点击链接：<a class=\"link\" href=\"https://vxetable.cn\" target=\"_blank\">vxe-table官网</a>', icon: 'vxe-icon--question' }, itemRender: { name: '$input', props: { placeholder: '请输入邮件' } } },\n              { field: 'nickname', title: '昵称', span: 8, itemRender: { name: '$input', props: { placeholder: '请输入昵称' } } },\n              { field: 'role', title: '角色', span: 8, folding: true, itemRender: { name: '$input', props: { placeholder: '请输入角色' } } },\n              { field: 'sex', title: '性别', span: 8, folding: true, titleSuffix: { message: '注意，必填信息！', icon: 'fa fa-info-circle' }, itemRender: { name: '$select', options: [] } },\n              { field: 'age', title: '年龄', span: 8, folding: true, itemRender: { name: '$input', props: { type: 'number', min: 1, max: 120, placeholder: '请输入年龄' } } },\n              { span: 24, align: 'center', collapseNode: true, itemRender: { name: '$buttons', children: [{ props: { type: 'submit', content: 'app.body.label.search', status: 'primary' } }, { props: { type: 'reset', content: 'app.body.label.reset' } }] } }\n            ]\n          },\n          toolbarConfig: {\n            buttons: [\n              { code: 'insert_actived', name: '新增', icon: 'fa fa-plus' },\n              { code: 'delete', name: '直接删除', icon: 'fa fa-trash-o' },\n              { code: 'mark_cancel', name: '删除/取消', icon: 'fa fa-trash-o' },\n              { code: 'save', name: 'app.body.button.save', icon: 'fa fa-save', status: 'success' }\n            ],\n            refresh: true,\n            import: true,\n            export: true,\n            print: true,\n            zoom: true,\n            custom: true\n          },\n          proxyConfig: {\n            seq: true, // 启用动态序号代理，每一页的序号会根据当前页数变化\n            sort: true, // 启用排序代理，当点击排序时会自动触发 query 行为\n            filter: true, // 启用筛选代理，当点击筛选时会自动触发 query 行为\n            form: true, // 启用表单代理，当点击表单提交按钮时会自动触发 reload 行为\n            // 对应响应结果 { result: [], page: { total: 100 } }\n            props: {\n              result: 'result', // 配置响应结果列表字段\n              total: 'page.total' // 配置响应结果总页数字段\n            },\n            // 只接收Promise，具体实现自由发挥\n            ajax: {\n              // 当点击工具栏查询按钮或者手动提交指令 query或reload 时会被触发\n              query: ({ page, sorts, filters, form }) => {\n                const queryParams = Object.assign({}, form)\n                // 处理排序条件\n                const firstSort = sorts[0]\n                if (firstSort) {\n                  queryParams.sort = firstSort.property\n                  queryParams.order = firstSort.order\n                }\n                // 处理筛选条件\n                filters.forEach(({ property, values }) => {\n                  queryParams[property] = values.join(',')\n                })\n                return fetch(`${serveApiUrl.value}/api/pub/page/list/${page.pageSize}/${page.currentPage}?${XEUtils.serialize(queryParams)}`).then(response =>  response.json())\n              },\n              // 当点击工具栏删除按钮或者手动提交指令 delete 时会被触发\n              delete: ({ body }) => {\n                return fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) }).then(response => response.json())\n              },\n              // 当点击工具栏保存按钮或者手动提交指令 save 时会被触发\n              save: ({ body }) => {\n                return fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) }).then(response => response.json())\n              }\n            }\n                  },\n          columns: [\n            { type: 'checkbox', title: 'ID', width: 120 },\n            { field: 'name', title: 'Name', sortable: true, titleHelp: { message: '名称必须填写！' }, editRender: { name: 'input', attrs: { placeholder: '请输入名称' } } },\n            {\n              field: 'role',\n              title: 'Role',\n              sortable: true,\n              titleHelp: { useHTML: true, content: '点击链接：<a class=\"link\" href=\"https://vxetable.cn\" target=\"_blank\">vxe-table官网</a>' },\n              filters: [\n                { label: '前端开发', value: '前端' },\n                { label: '后端开发', value: '后端' },\n                { label: '测试', value: '测试' },\n                { label: '程序员鼓励师', value: '程序员鼓励师' }\n              ],\n              filterMultiple: false,\n              editRender: { name: 'input', attrs: { placeholder: '请输入角色' } }\n            },\n            { field: 'email', title: 'Email', width: 160, editRender: { name: '$input', props: { placeholder: '请输入邮件' } } },\n            { field: 'nickname', title: 'Nickname', editRender: { name: 'input', attrs: { placeholder: '请输入昵称' } } },\n            {\n              field: 'sex',\n              title: 'Sex',\n              filters: [\n                { label: '男', value: '1' },\n                { label: '女', value: '0' }\n              ],\n              editRender: { name: '$select', options: [], props: { placeholder: '请选择性别' } }\n            },\n            { field: 'age', title: 'Age', visible: false, sortable: true, editRender: { name: '$input', props: { type: 'number', min: 1, max: 120 } } },\n            {\n              field: 'amount',\n              title: 'Amount',\n              formatter ({ cellValue }) {\n                return cellValue ? `￥${XEUtils.commafy(XEUtils.toNumber(cellValue), { digits: 2 })}` : ''\n              },\n              editRender:\n              { name: '$input', props: { type: 'float', digits: 2, placeholder: '请输入数值' } }\n            },\n            {\n              field: 'updateDate',\n              title: 'Update Date',\n              width: 160,\n              visible: false,\n              sortable: true,\n              formatter ({ cellValue }) {\n                return XEUtils.toDateString(cellValue, 'yyyy-MM-dd HH:ss:mm')\n              }\n            },\n            {\n              field: 'createDate',\n              title: 'Create Date',\n              width: 160,\n              visible: false,\n              sortable: true,\n              formatter ({ cellValue }) {\n                return XEUtils.toDateString(cellValue, 'yyyy-MM-dd')\n              }\n            }\n          ],\n          importConfig: {\n            remote: true,\n            types: ['xlsx'],\n            modes: ['insert'],\n            // 自定义服务端导入\n            importMethod ({ file }) {\n              const $grid = xGrid.value\n              const formBody = new FormData()\n              formBody.append('file', file)\n              return fetch(`${serveApiUrl.value}/api/pub/import`, { method: 'POST', body: formBody }).then(response => response.json()).then(data => {\n                VXETable.modal.message({ content: `成功导入 ${data.result.insertRows} 条记录！`, status: 'success' })\n                // 导入完成，刷新表格\n                $grid.commitProxy('query')\n              }).catch(() => {\n                VXETable.modal.message({ content: '导入失败，请检查数据是否正确！', status: 'error' })\n              })\n            }\n          },\n          exportConfig: {\n            remote: true,\n            types: ['xlsx'],\n            modes: ['current', 'selected', 'all'],\n            // 自定义服务端导出\n            exportMethod ({ options }) {\n              const $grid = xGrid.value\n              const proxyInfo = $grid.getProxyInfo()\n              // 传给服务端的参数\n              const body = {\n                filename: options.filename,\n                sheetName: options.sheetName,\n                isHeader: options.isHeader,\n                original: options.original,\n                mode: options.mode,\n                pager: proxyInfo ? proxyInfo.pager : null,\n                ids: options.mode === 'selected' ? options.data.map((item) => item.id) : [],\n                fields: options.columns.map((column) => {\n                  return {\n                    field: column.property,\n                    title: column.title\n                  }\n                })\n              }\n              // 开始服务端导出\n              return fetch(`${serveApiUrl.value}/api/pub/export`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) }).then(response => response.json()).then(data => {\n                if (data.id) {\n                  VXETable.modal.message({ content: '导出成功，开始下载', status: 'success' })\n                  // 读取路径，请求文件\n                  fetch(`${serveApiUrl.value}/api/pub/export/download/${data.id}`).then(response => {\n                    response.blob().then(blob => {\n                      // 开始下载\n                      VXETable.saveFile({ filename: '导出数据', type: 'xlsx', content: blob })\n                    })\n                  })\n                }\n              }).catch(() => {\n                VXETable.modal.message({ content: '导出失败！', status: 'error' })\n              })\n            }\n          },\n          checkboxConfig: {\n            labelField: 'id',\n            reserve: true,\n            highlight: true,\n            range: true\n          },\n          editRules: {\n            name: [\n              { required: true, message: 'app.body.valid.rName' },\n              { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n            ],\n            email: [\n              { required: true, message: '邮件必须填写' }\n            ],\n            role: [\n              { required: true, message: '角色必须填写' }\n            ]\n          },\n          editConfig: {\n            trigger: 'click',\n            mode: 'row',\n            showStatus: true\n          }\n        })\n\n        onMounted(() => {\n          const sexList = [\n            { label: '女', value: '0' },\n            { label: '男', value: '1' }\n          ]\n          const { formConfig, columns } = gridOptions\n          if (columns) {\n            const sexColumn = columns[5]\n            if (sexColumn && sexColumn.editRender) {\n              sexColumn.editRender.options = sexList\n            }\n          }\n          if (formConfig && formConfig.items) {\n            const sexItem = formConfig.items[4]\n            if (sexItem && sexItem.itemRender) {\n              sexItem.itemRender.options = sexList\n            }\n          }\n        })\n        return {\n          demo2,\n          tableData1,\n          xGrid,\n          gridOptions\n        }\n      }\n    })\n</script>"]},"metadata":{},"sourceType":"module"}