{"ast":null,"code":"import { VXETable, VxeFormEvents, VxeFormPropTypes } from 'vxe-table';\nimport { defineComponent, onMounted, reactive, ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { VxeGridInstance, VxeGridProps } from 'vxe-table';\nimport XEUtils from 'xe-utils';\nexport default defineComponent({\n  setup() {\n    const demo2 = reactive({\n      formData2: {\n        name: '张三',\n        userId: '311251'\n      }\n    });\n    const tableData1 = ref([{\n      id: 10001,\n      name: 'Test1',\n      role: 'Develop',\n      sex: 'Man',\n      age: 28,\n      address: 'test abc'\n    }]);\n    return {\n      demo2,\n      tableData1\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAiEE,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,gBAAlC,QAA0D,WAA1D;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,GAA/C,EAAoDC,QAApD,QAAoE,KAApE;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAAQC,eAAR,EAAyBC,YAAzB,QAA6C,WAA7C;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,eAAeR,eAAe,CAAC;AAC7BS,OAAI,GAAM;AACR,UAAMC,KAAI,GAAIR,QAAQ,CAAC;AACrBS,eAAS,EAAE;AACTC,YAAI,EAAE,IADG;AAETC,cAAM,EAAE;AAFC;AADU,KAAD,CAAtB;AAMA,UAAMC,UAAS,GAAIX,GAAG,CAAC,CACf;AAAEY,QAAE,EAAE,KAAN;AAAaH,UAAI,EAAE,OAAnB;AAA4BI,UAAI,EAAE,SAAlC;AAA6CC,SAAG,EAAE,KAAlD;AAAyDC,SAAG,EAAE,EAA9D;AAAkEC,aAAO,EAAE;AAA3E,KADe,CAAD,CAAtB;AAIE,WAAO;AACLT,WADK;AAELI;AAFK,KAAP;AAKF;;AAjB2B,CAAD,CAA9B","names":["VXETable","VxeFormEvents","VxeFormPropTypes","defineComponent","onMounted","reactive","ref","computed","useStore","VxeGridInstance","VxeGridProps","XEUtils","setup","demo2","formData2","name","userId","tableData1","id","role","sex","age","address"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/manager/managerApprove.vue"],"sourcesContent":["<template>\n    \n        <vxe-form\n          title-colon\n          ref=\"xForm\"\n          title-align=\"right\"\n          title-width=\"100\"\n          :data=\"demo2.formData2\"\n        >\n          <vxe-form-gather span=\"48\">\n            <div style=\"float:left\">\n            <vxe-form-item title=\"姓 名\" field=\"name\" span=\"24\" ></vxe-form-item> </div>\n            <div style=\"float:right\">\n              <vxe-form-item title=\"工 号\" field=\"userId\" span=\"24\" ></vxe-form-item>\n            </div>\n          </vxe-form-gather>\n        </vxe-form>\n\n        <vxe-table\n          :align=center\n          :data=\"tableData1\">\n          <vxe-column field=\"name\" title=\"Name\"></vxe-column>\n          <vxe-column field=\"sex\" title=\"Sex\"></vxe-column>\n          <vxe-column field=\"age\" title=\"Age\"></vxe-column>\n        </vxe-table>\n\n       <vxe-grid ref=\"xGrid\" v-bind=\"gridOptions\" v-on=\"gridEvents\">\n          <template #operate=\"{ row }\">\n            <template v-if=\"$refs.xGrid.isActiveByRow(row)\">\n              <vxe-button icon=\"fa fa-save\" status=\"primary\" title=\"保存\" circle @click=\"saveRowEvent(row)\"></vxe-button>\n            </template>\n            <template v-else>\n              <vxe-button icon=\"fa fa-edit\" title=\"编辑\" circle @click=\"editRowEvent(row)\"></vxe-button>\n            </template>\n            <vxe-button icon=\"fa fa-trash\" title=\"删除\" circle @click=\"removeRowEvent(row)\"></vxe-button>\n            <vxe-button icon=\"fa fa-eye\" title=\"查看\" circle></vxe-button>\n            <vxe-button icon=\"fa fa-gear\" title=\"设置\" circle></vxe-button>\n          </template>\n\n          <template #name_edit=\"{ row }\">\n            <vxe-input v-model=\"row.name\"></vxe-input>\n          </template>\n          <template #nickname_edit=\"{ row }\">\n            <vxe-input v-model=\"row.nickname\"></vxe-input>\n          </template>\n          <template #sex_default=\"{ row }\">\n            <span>{{ formatSex(row.sex) }}</span>\n          </template>\n          <template #sex_edit=\"{ row }\">\n            <vxe-select v-model=\"row.sex\" transfer>\n              <vxe-option v-for=\"item in sexList1\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></vxe-option>\n            </vxe-select>\n          </template>\n          <template #role_edit=\"{ row }\">\n            <vxe-input v-model=\"row.role\"></vxe-input>\n          </template>\n          <template #describe_edit=\"{ row }\">\n            <vxe-input v-model=\"row.describe\"></vxe-input>\n          </template>\n        </vxe-grid>\n        \n        \n</template>\n\n<script>\n  import { VXETable, VxeFormEvents, VxeFormPropTypes } from 'vxe-table'\n  import { defineComponent, onMounted, reactive, ref, computed } from 'vue'\n  import { useStore } from 'vuex'\n  import {VxeGridInstance, VxeGridProps } from 'vxe-table'\n  import XEUtils from 'xe-utils'\n\n  export default defineComponent({\n    setup  () {\n      const demo2 = reactive({\n        formData2: {\n          name: '张三',\n          userId: '311251',\n        },\n      })\n      const tableData1 = ref([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' }\n            ])\n     \n        return {\n          demo2,\n          tableData1,\n         \n        }\n      }\n    })\n</script>"]},"metadata":{},"sourceType":"module"}