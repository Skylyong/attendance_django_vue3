{"ast":null,"code":"import { defineComponent, h, ref, computed, reactive, nextTick, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getFuncText } from '../../tools/utils';\nexport default defineComponent({\n  name: 'VxeSwitch',\n  props: {\n    modelValue: [String, Number, Boolean],\n    disabled: Boolean,\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.switch.size || GlobalConfig.size;\n      }\n    },\n    openLabel: String,\n    closeLabel: String,\n    openValue: {\n      type: [String, Number, Boolean],\n      default: true\n    },\n    closeValue: {\n      type: [String, Number, Boolean],\n      default: false\n    },\n    openIcon: String,\n    closeIcon: String\n  },\n  emits: ['update:modelValue', 'change', 'focus', 'blur'],\n  setup: function (props, context) {\n    var emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var computeSize = useSize(props);\n    var reactData = reactive({\n      isActivated: false,\n      hasAnimat: false,\n      offsetLeft: 0\n    });\n    var $xeswitch = {\n      xID: xID,\n      props: props,\n      context: context,\n      reactData: reactData\n    };\n    var refButton = ref();\n    var switchMethods = {};\n    var computeOnShowLabel = computed(function () {\n      return getFuncText(props.openLabel);\n    });\n    var computeOffShowLabel = computed(function () {\n      return getFuncText(props.closeLabel);\n    });\n    var computeIsChecked = computed(function () {\n      return props.modelValue === props.openValue;\n    });\n\n    var _atimeout;\n\n    var clickEvent = function (evnt) {\n      if (!props.disabled) {\n        var isChecked = computeIsChecked.value;\n        clearTimeout(_atimeout);\n        var value = isChecked ? props.closeValue : props.openValue;\n        reactData.hasAnimat = true;\n        emit('update:modelValue', value);\n        switchMethods.dispatchEvent('change', {\n          value: value\n        }, evnt);\n        _atimeout = setTimeout(function () {\n          reactData.hasAnimat = false;\n        }, 400);\n      }\n    };\n\n    var focusEvent = function (evnt) {\n      reactData.isActivated = true;\n      switchMethods.dispatchEvent('focus', {\n        value: props.modelValue\n      }, evnt);\n    };\n\n    var blurEvent = function (evnt) {\n      reactData.isActivated = false;\n      switchMethods.dispatchEvent('blur', {\n        value: props.modelValue\n      }, evnt);\n    };\n\n    switchMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $switch: $xeswitch,\n          $event: evnt\n        }, params));\n      },\n      focus: function () {\n        var btnElem = refButton.value;\n        reactData.isActivated = true;\n        btnElem.focus();\n        return nextTick();\n      },\n      blur: function () {\n        var btnElem = refButton.value;\n        btnElem.blur();\n        reactData.isActivated = false;\n        return nextTick();\n      }\n    };\n    Object.assign($xeswitch, switchMethods);\n\n    var renderVN = function () {\n      var _a;\n\n      var disabled = props.disabled,\n          openIcon = props.openIcon,\n          closeIcon = props.closeIcon;\n      var isChecked = computeIsChecked.value;\n      var vSize = computeSize.value;\n      var onShowLabel = computeOnShowLabel.value;\n      var offShowLabel = computeOffShowLabel.value;\n      return h('div', {\n        class: ['vxe-switch', isChecked ? 'is--on' : 'is--off', (_a = {}, _a[\"size--\" + vSize] = vSize, _a['is--disabled'] = disabled, _a['is--animat'] = reactData.hasAnimat, _a)]\n      }, [h('button', {\n        ref: refButton,\n        class: 'vxe-switch--button',\n        type: 'button',\n        disabled: disabled,\n        onClick: clickEvent,\n        onFocus: focusEvent,\n        onBlur: blurEvent\n      }, [h('span', {\n        class: 'vxe-switch--label vxe-switch--label-on'\n      }, [openIcon ? h('i', {\n        class: ['vxe-switch--label-icon', openIcon]\n      }) : createCommentVNode(), onShowLabel]), h('span', {\n        class: 'vxe-switch--label vxe-switch--label-off'\n      }, [closeIcon ? h('i', {\n        class: ['vxe-switch--label-icon', closeIcon]\n      }) : createCommentVNode(), offShowLabel]), h('span', {\n        class: 'vxe-switch--icon'\n      })])]);\n    };\n\n    $xeswitch.renderVN = renderVN;\n    return $xeswitch;\n  },\n  render: function () {\n    return this.renderVN();\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/switch/src/switch.js"],"names":["defineComponent","h","ref","computed","reactive","nextTick","createCommentVNode","XEUtils","GlobalConfig","useSize","getFuncText","name","props","modelValue","String","Number","Boolean","disabled","size","type","default","switch","openLabel","closeLabel","openValue","closeValue","openIcon","closeIcon","emits","setup","context","emit","xID","uniqueId","computeSize","reactData","isActivated","hasAnimat","offsetLeft","$xeswitch","refButton","switchMethods","computeOnShowLabel","computeOffShowLabel","computeIsChecked","_atimeout","clickEvent","evnt","isChecked","value","clearTimeout","dispatchEvent","setTimeout","focusEvent","blurEvent","params","Object","assign","$switch","$event","focus","btnElem","blur","renderVN","_a","vSize","onShowLabel","offShowLabel","class","onClick","onFocus","onBlur","render"],"mappings":"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","sourcesContent":["import { defineComponent, h, ref, computed, reactive, nextTick, createCommentVNode } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getFuncText } from '../../tools/utils';\nexport default defineComponent({\n    name: 'VxeSwitch',\n    props: {\n        modelValue: [String, Number, Boolean],\n        disabled: Boolean,\n        size: { type: String, default: function () { return GlobalConfig.switch.size || GlobalConfig.size; } },\n        openLabel: String,\n        closeLabel: String,\n        openValue: { type: [String, Number, Boolean], default: true },\n        closeValue: { type: [String, Number, Boolean], default: false },\n        openIcon: String,\n        closeIcon: String\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'focus',\n        'blur'\n    ],\n    setup: function (props, context) {\n        var emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var computeSize = useSize(props);\n        var reactData = reactive({\n            isActivated: false,\n            hasAnimat: false,\n            offsetLeft: 0\n        });\n        var $xeswitch = {\n            xID: xID,\n            props: props,\n            context: context,\n            reactData: reactData\n        };\n        var refButton = ref();\n        var switchMethods = {};\n        var computeOnShowLabel = computed(function () {\n            return getFuncText(props.openLabel);\n        });\n        var computeOffShowLabel = computed(function () {\n            return getFuncText(props.closeLabel);\n        });\n        var computeIsChecked = computed(function () {\n            return props.modelValue === props.openValue;\n        });\n        var _atimeout;\n        var clickEvent = function (evnt) {\n            if (!props.disabled) {\n                var isChecked = computeIsChecked.value;\n                clearTimeout(_atimeout);\n                var value = isChecked ? props.closeValue : props.openValue;\n                reactData.hasAnimat = true;\n                emit('update:modelValue', value);\n                switchMethods.dispatchEvent('change', { value: value }, evnt);\n                _atimeout = setTimeout(function () {\n                    reactData.hasAnimat = false;\n                }, 400);\n            }\n        };\n        var focusEvent = function (evnt) {\n            reactData.isActivated = true;\n            switchMethods.dispatchEvent('focus', { value: props.modelValue }, evnt);\n        };\n        var blurEvent = function (evnt) {\n            reactData.isActivated = false;\n            switchMethods.dispatchEvent('blur', { value: props.modelValue }, evnt);\n        };\n        switchMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $switch: $xeswitch, $event: evnt }, params));\n            },\n            focus: function () {\n                var btnElem = refButton.value;\n                reactData.isActivated = true;\n                btnElem.focus();\n                return nextTick();\n            },\n            blur: function () {\n                var btnElem = refButton.value;\n                btnElem.blur();\n                reactData.isActivated = false;\n                return nextTick();\n            }\n        };\n        Object.assign($xeswitch, switchMethods);\n        var renderVN = function () {\n            var _a;\n            var disabled = props.disabled, openIcon = props.openIcon, closeIcon = props.closeIcon;\n            var isChecked = computeIsChecked.value;\n            var vSize = computeSize.value;\n            var onShowLabel = computeOnShowLabel.value;\n            var offShowLabel = computeOffShowLabel.value;\n            return h('div', {\n                class: ['vxe-switch', isChecked ? 'is--on' : 'is--off', (_a = {},\n                        _a[\"size--\" + vSize] = vSize,\n                        _a['is--disabled'] = disabled,\n                        _a['is--animat'] = reactData.hasAnimat,\n                        _a)]\n            }, [\n                h('button', {\n                    ref: refButton,\n                    class: 'vxe-switch--button',\n                    type: 'button',\n                    disabled: disabled,\n                    onClick: clickEvent,\n                    onFocus: focusEvent,\n                    onBlur: blurEvent\n                }, [\n                    h('span', {\n                        class: 'vxe-switch--label vxe-switch--label-on'\n                    }, [\n                        openIcon ? h('i', {\n                            class: ['vxe-switch--label-icon', openIcon]\n                        }) : createCommentVNode(),\n                        onShowLabel\n                    ]),\n                    h('span', {\n                        class: 'vxe-switch--label vxe-switch--label-off'\n                    }, [\n                        closeIcon ? h('i', {\n                            class: ['vxe-switch--label-icon', closeIcon]\n                        }) : createCommentVNode(),\n                        offShowLabel\n                    ]),\n                    h('span', {\n                        class: 'vxe-switch--icon'\n                    })\n                ])\n            ]);\n        };\n        $xeswitch.renderVN = renderVN;\n        return $xeswitch;\n    },\n    render: function () {\n        return this.renderVN();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}