{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { computed, watchEffect, defineComponent } from \"vue\";\nimport { clamp, makeStringProp, makeNumberProp, makeNumericProp, createNamespace, BORDER_SURROUND } from \"../utils\";\nconst [name, bem, t] = createNamespace(\"pagination\");\n\nconst makePage = (number, text, active) => ({\n  number,\n  text,\n  active\n});\n\nconst paginationProps = {\n  mode: makeStringProp(\"multi\"),\n  prevText: String,\n  nextText: String,\n  pageCount: makeNumericProp(0),\n  modelValue: makeNumberProp(0),\n  totalItems: makeNumericProp(0),\n  showPageSize: makeNumericProp(5),\n  itemsPerPage: makeNumericProp(10),\n  forceEllipses: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: paginationProps,\n  emits: [\"change\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const count = computed(() => {\n      const {\n        pageCount,\n        totalItems,\n        itemsPerPage\n      } = props;\n      const count2 = +pageCount || Math.ceil(+totalItems / +itemsPerPage);\n      return Math.max(1, count2);\n    });\n    const pages = computed(() => {\n      const items = [];\n      const pageCount = count.value;\n      const showPageSize = +props.showPageSize;\n      const {\n        modelValue,\n        forceEllipses\n      } = props;\n      let startPage = 1;\n      let endPage = pageCount;\n      const isMaxSized = showPageSize < pageCount;\n\n      if (isMaxSized) {\n        startPage = Math.max(modelValue - Math.floor(showPageSize / 2), 1);\n        endPage = startPage + showPageSize - 1;\n\n        if (endPage > pageCount) {\n          endPage = pageCount;\n          startPage = endPage - showPageSize + 1;\n        }\n      }\n\n      for (let number = startPage; number <= endPage; number++) {\n        const page = makePage(number, number, number === modelValue);\n        items.push(page);\n      }\n\n      if (isMaxSized && showPageSize > 0 && forceEllipses) {\n        if (startPage > 1) {\n          const prevPages = makePage(startPage - 1, \"...\");\n          items.unshift(prevPages);\n        }\n\n        if (endPage < pageCount) {\n          const nextPages = makePage(endPage + 1, \"...\");\n          items.push(nextPages);\n        }\n      }\n\n      return items;\n    });\n\n    const updateModelValue = (value, emitChange) => {\n      value = clamp(value, 1, count.value);\n\n      if (props.modelValue !== value) {\n        emit(\"update:modelValue\", value);\n\n        if (emitChange) {\n          emit(\"change\", value);\n        }\n      }\n    };\n\n    watchEffect(() => updateModelValue(props.modelValue));\n\n    const renderDesc = () => _createVNode(\"li\", {\n      \"class\": bem(\"page-desc\")\n    }, [slots.pageDesc ? slots.pageDesc() : `${props.modelValue}/${count.value}`]);\n\n    const renderPrevButton = () => {\n      const {\n        mode,\n        modelValue\n      } = props;\n      const slot = slots[\"prev-text\"];\n      const disabled = modelValue === 1;\n      return _createVNode(\"li\", {\n        \"class\": [bem(\"item\", {\n          disabled,\n          border: mode === \"simple\",\n          prev: true\n        }), BORDER_SURROUND]\n      }, [_createVNode(\"button\", {\n        \"type\": \"button\",\n        \"disabled\": disabled,\n        \"onClick\": () => updateModelValue(modelValue - 1, true)\n      }, [slot ? slot() : props.prevText || t(\"prev\")])]);\n    };\n\n    const renderNextButton = () => {\n      const {\n        mode,\n        modelValue\n      } = props;\n      const slot = slots[\"next-text\"];\n      const disabled = modelValue === count.value;\n      return _createVNode(\"li\", {\n        \"class\": [bem(\"item\", {\n          disabled,\n          border: mode === \"simple\",\n          next: true\n        }), BORDER_SURROUND]\n      }, [_createVNode(\"button\", {\n        \"type\": \"button\",\n        \"disabled\": disabled,\n        \"onClick\": () => updateModelValue(modelValue + 1, true)\n      }, [slot ? slot() : props.nextText || t(\"next\")])]);\n    };\n\n    const renderPages = () => pages.value.map(page => _createVNode(\"li\", {\n      \"class\": [bem(\"item\", {\n        active: page.active,\n        page: true\n      }), BORDER_SURROUND]\n    }, [_createVNode(\"button\", {\n      \"type\": \"button\",\n      \"aria-current\": page.active || void 0,\n      \"onClick\": () => updateModelValue(page.number, true)\n    }, [slots.page ? slots.page(page) : page.text])]));\n\n    return () => _createVNode(\"nav\", {\n      \"role\": \"navigation\",\n      \"class\": bem()\n    }, [_createVNode(\"ul\", {\n      \"class\": bem(\"items\")\n    }, [renderPrevButton(), props.mode === \"simple\" ? renderDesc() : renderPages(), renderNextButton()])]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/pagination/Pagination.js"],"names":["createVNode","_createVNode","computed","watchEffect","defineComponent","clamp","makeStringProp","makeNumberProp","makeNumericProp","createNamespace","BORDER_SURROUND","name","bem","t","makePage","number","text","active","paginationProps","mode","prevText","String","nextText","pageCount","modelValue","totalItems","showPageSize","itemsPerPage","forceEllipses","Boolean","stdin_default","props","emits","setup","emit","slots","count","count2","Math","ceil","max","pages","items","value","startPage","endPage","isMaxSized","floor","page","push","prevPages","unshift","nextPages","updateModelValue","emitChange","renderDesc","pageDesc","renderPrevButton","slot","disabled","border","prev","renderNextButton","next","renderPages","map","default"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { computed, watchEffect, defineComponent } from \"vue\";\nimport { clamp, makeStringProp, makeNumberProp, makeNumericProp, createNamespace, BORDER_SURROUND } from \"../utils\";\nconst [name, bem, t] = createNamespace(\"pagination\");\nconst makePage = (number, text, active) => ({\n  number,\n  text,\n  active\n});\nconst paginationProps = {\n  mode: makeStringProp(\"multi\"),\n  prevText: String,\n  nextText: String,\n  pageCount: makeNumericProp(0),\n  modelValue: makeNumberProp(0),\n  totalItems: makeNumericProp(0),\n  showPageSize: makeNumericProp(5),\n  itemsPerPage: makeNumericProp(10),\n  forceEllipses: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: paginationProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const count = computed(() => {\n      const {\n        pageCount,\n        totalItems,\n        itemsPerPage\n      } = props;\n      const count2 = +pageCount || Math.ceil(+totalItems / +itemsPerPage);\n      return Math.max(1, count2);\n    });\n    const pages = computed(() => {\n      const items = [];\n      const pageCount = count.value;\n      const showPageSize = +props.showPageSize;\n      const {\n        modelValue,\n        forceEllipses\n      } = props;\n      let startPage = 1;\n      let endPage = pageCount;\n      const isMaxSized = showPageSize < pageCount;\n      if (isMaxSized) {\n        startPage = Math.max(modelValue - Math.floor(showPageSize / 2), 1);\n        endPage = startPage + showPageSize - 1;\n        if (endPage > pageCount) {\n          endPage = pageCount;\n          startPage = endPage - showPageSize + 1;\n        }\n      }\n      for (let number = startPage; number <= endPage; number++) {\n        const page = makePage(number, number, number === modelValue);\n        items.push(page);\n      }\n      if (isMaxSized && showPageSize > 0 && forceEllipses) {\n        if (startPage > 1) {\n          const prevPages = makePage(startPage - 1, \"...\");\n          items.unshift(prevPages);\n        }\n        if (endPage < pageCount) {\n          const nextPages = makePage(endPage + 1, \"...\");\n          items.push(nextPages);\n        }\n      }\n      return items;\n    });\n    const updateModelValue = (value, emitChange) => {\n      value = clamp(value, 1, count.value);\n      if (props.modelValue !== value) {\n        emit(\"update:modelValue\", value);\n        if (emitChange) {\n          emit(\"change\", value);\n        }\n      }\n    };\n    watchEffect(() => updateModelValue(props.modelValue));\n    const renderDesc = () => _createVNode(\"li\", {\n      \"class\": bem(\"page-desc\")\n    }, [slots.pageDesc ? slots.pageDesc() : `${props.modelValue}/${count.value}`]);\n    const renderPrevButton = () => {\n      const {\n        mode,\n        modelValue\n      } = props;\n      const slot = slots[\"prev-text\"];\n      const disabled = modelValue === 1;\n      return _createVNode(\"li\", {\n        \"class\": [bem(\"item\", {\n          disabled,\n          border: mode === \"simple\",\n          prev: true\n        }), BORDER_SURROUND]\n      }, [_createVNode(\"button\", {\n        \"type\": \"button\",\n        \"disabled\": disabled,\n        \"onClick\": () => updateModelValue(modelValue - 1, true)\n      }, [slot ? slot() : props.prevText || t(\"prev\")])]);\n    };\n    const renderNextButton = () => {\n      const {\n        mode,\n        modelValue\n      } = props;\n      const slot = slots[\"next-text\"];\n      const disabled = modelValue === count.value;\n      return _createVNode(\"li\", {\n        \"class\": [bem(\"item\", {\n          disabled,\n          border: mode === \"simple\",\n          next: true\n        }), BORDER_SURROUND]\n      }, [_createVNode(\"button\", {\n        \"type\": \"button\",\n        \"disabled\": disabled,\n        \"onClick\": () => updateModelValue(modelValue + 1, true)\n      }, [slot ? slot() : props.nextText || t(\"next\")])]);\n    };\n    const renderPages = () => pages.value.map((page) => _createVNode(\"li\", {\n      \"class\": [bem(\"item\", {\n        active: page.active,\n        page: true\n      }), BORDER_SURROUND]\n    }, [_createVNode(\"button\", {\n      \"type\": \"button\",\n      \"aria-current\": page.active || void 0,\n      \"onClick\": () => updateModelValue(page.number, true)\n    }, [slots.page ? slots.page(page) : page.text])]));\n    return () => _createVNode(\"nav\", {\n      \"role\": \"navigation\",\n      \"class\": bem()\n    }, [_createVNode(\"ul\", {\n      \"class\": bem(\"items\")\n    }, [renderPrevButton(), props.mode === \"simple\" ? renderDesc() : renderPages(), renderNextButton()])]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}