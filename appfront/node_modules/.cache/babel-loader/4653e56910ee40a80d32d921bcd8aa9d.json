{"ast":null,"code":"import { watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { ColumnInfo } from './columnInfo';\nimport { isPx, isScale } from '../../tools/dom';\nexport function restoreScrollLocation($xetable, scrollLeft, scrollTop) {\n  var internalData = $xetable.internalData;\n  return $xetable.clearScroll().then(function () {\n    if (scrollLeft || scrollTop) {\n      // 重置最后滚动状态\n      internalData.lastScrollLeft = 0;\n      internalData.lastScrollTop = 0; // 还原滚动状态\n\n      return $xetable.scrollTo(scrollLeft, scrollTop);\n    }\n  });\n}\nexport function removeScrollListener(scrollElem) {\n  if (scrollElem && scrollElem._onscroll) {\n    scrollElem.onscroll = null;\n  }\n}\nexport function restoreScrollListener(scrollElem) {\n  if (scrollElem && scrollElem._onscroll) {\n    scrollElem.onscroll = scrollElem._onscroll;\n  }\n}\n/**\n * 生成行的唯一主键\n */\n\nexport function getRowUniqueId() {\n  return XEUtils.uniqueId('row_');\n} // 行主键 key\n\nexport function getRowkey($xetable) {\n  var props = $xetable.props;\n  var computeRowOpts = $xetable.getComputeMaps().computeRowOpts;\n  var rowId = props.rowId;\n  var rowOpts = computeRowOpts.value;\n  return rowId || rowOpts.keyField || '_X_ROW_KEY';\n} // 行主键 value\n\nexport function getRowid($xetable, row) {\n  var rowid = XEUtils.get(row, getRowkey($xetable));\n  return XEUtils.eqNull(rowid) ? '' : encodeURIComponent(rowid);\n}\nexport var handleFieldOrColumn = function ($xetable, fieldOrColumn) {\n  if (fieldOrColumn) {\n    return XEUtils.isString(fieldOrColumn) ? $xetable.getColumnByField(fieldOrColumn) : fieldOrColumn;\n  }\n\n  return null;\n};\n\nfunction getPaddingLeftRightSize(elem) {\n  if (elem) {\n    var computedStyle = getComputedStyle(elem);\n    var paddingLeft = XEUtils.toNumber(computedStyle.paddingLeft);\n    var paddingRight = XEUtils.toNumber(computedStyle.paddingRight);\n    return paddingLeft + paddingRight;\n  }\n\n  return 0;\n}\n\nfunction getElemenMarginWidth(elem) {\n  if (elem) {\n    var computedStyle = getComputedStyle(elem);\n    var marginLeft = XEUtils.toNumber(computedStyle.marginLeft);\n    var marginRight = XEUtils.toNumber(computedStyle.marginRight);\n    return elem.offsetWidth + marginLeft + marginRight;\n  }\n\n  return 0;\n}\n\nfunction queryCellElement(cell, selector) {\n  return cell.querySelector('.vxe-cell' + selector);\n}\n\nexport function toFilters(filters) {\n  if (filters && XEUtils.isArray(filters)) {\n    return filters.map(function (_a) {\n      var label = _a.label,\n          value = _a.value,\n          data = _a.data,\n          resetValue = _a.resetValue,\n          checked = _a.checked;\n      return {\n        label: label,\n        value: value,\n        data: data,\n        resetValue: resetValue,\n        checked: !!checked,\n        _checked: !!checked\n      };\n    });\n  }\n\n  return filters;\n}\nexport function toTreePathSeq(path) {\n  return path.map(function (num, i) {\n    return i % 2 === 0 ? Number(num) + 1 : '.';\n  }).join('');\n}\nexport function getCellValue(row, column) {\n  return XEUtils.get(row, column.property);\n}\nexport function setCellValue(row, column, value) {\n  return XEUtils.set(row, column.property, value);\n}\nexport function getPropClass(property, params) {\n  return property ? XEUtils.isFunction(property) ? property(params) : property : '';\n}\nexport function getColMinWidth(params) {\n  var $table = params.$table,\n      column = params.column,\n      cell = params.cell;\n  var tableProps = $table.props;\n  var computeResizableOpts = $table.getComputeMaps().computeResizableOpts;\n  var resizableOpts = computeResizableOpts.value;\n  var reMinWidth = resizableOpts.minWidth; // 如果自定义调整宽度逻辑\n\n  if (reMinWidth) {\n    var customMinWidth = XEUtils.isFunction(reMinWidth) ? reMinWidth(params) : reMinWidth;\n\n    if (customMinWidth !== 'auto') {\n      return Math.max(1, XEUtils.toNumber(customMinWidth));\n    }\n  }\n\n  var allColumnHeaderOverflow = tableProps.showHeaderOverflow;\n  var showHeaderOverflow = column.showHeaderOverflow,\n      colMinWidth = column.minWidth;\n  var headOverflow = XEUtils.isUndefined(showHeaderOverflow) || XEUtils.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;\n  var showEllipsis = headOverflow === 'ellipsis';\n  var showTitle = headOverflow === 'title';\n  var showTooltip = headOverflow === true || headOverflow === 'tooltip';\n  var hasEllipsis = showTitle || showTooltip || showEllipsis;\n  var minTitleWidth = XEUtils.floor((XEUtils.toNumber(getComputedStyle(cell).fontSize) || 14) * 1.6);\n  var paddingLeftRight = getPaddingLeftRightSize(cell) + getPaddingLeftRightSize(queryCellElement(cell, ''));\n  var mWidth = minTitleWidth + paddingLeftRight; // 默认最小宽处理\n\n  if (hasEllipsis) {\n    var checkboxIconWidth = getPaddingLeftRightSize(queryCellElement(cell, '--title>.vxe-cell--checkbox'));\n    var requiredIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--required-icon'));\n    var editIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--edit-icon'));\n    var helpIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell-help-icon'));\n    var sortIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--sort'));\n    var filterIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--filter'));\n    mWidth += checkboxIconWidth + requiredIconWidth + editIconWidth + helpIconWidth + filterIconWidth + sortIconWidth;\n  } // 如果设置最小宽\n\n\n  if (colMinWidth) {\n    var refTableBody = $table.getRefMaps().refTableBody;\n    var tableBody = refTableBody.value;\n    var bodyElem = tableBody ? tableBody.$el : null;\n\n    if (bodyElem) {\n      if (isScale(colMinWidth)) {\n        var bodyWidth = bodyElem.clientWidth - 1;\n        var meanWidth = bodyWidth / 100;\n        return Math.max(mWidth, Math.floor(XEUtils.toInteger(colMinWidth) * meanWidth));\n      } else if (isPx(colMinWidth)) {\n        return Math.max(mWidth, XEUtils.toInteger(colMinWidth));\n      }\n    }\n  }\n\n  return mWidth;\n}\nexport function isColumnInfo(column) {\n  return column && (column.constructor === ColumnInfo || column instanceof ColumnInfo);\n}\nexport function createColumn($xetable, options, renderOptions) {\n  return isColumnInfo(options) ? options : new ColumnInfo($xetable, options, renderOptions);\n}\nexport function watchColumn(props, column) {\n  Object.keys(props).forEach(function (name) {\n    watch(function () {\n      return props[name];\n    }, function (value) {\n      column.update(name, value);\n    });\n  });\n}\nexport function assemColumn($xetable, elem, column, colgroup) {\n  var reactData = $xetable.reactData;\n  var staticColumns = reactData.staticColumns;\n  var parentElem = elem.parentNode;\n  var parentColumn = colgroup ? colgroup.column : null;\n  var parentCols = parentColumn ? parentColumn.children : staticColumns;\n\n  if (parentElem && parentCols) {\n    parentCols.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, column);\n    reactData.staticColumns = staticColumns.slice(0);\n  }\n}\nexport function destroyColumn($xetable, column) {\n  var reactData = $xetable.reactData;\n  var staticColumns = reactData.staticColumns;\n  var matchObj = XEUtils.findTree(staticColumns, function (item) {\n    return item.id === column.id;\n  }, {\n    children: 'children'\n  });\n\n  if (matchObj) {\n    matchObj.items.splice(matchObj.index, 1);\n  }\n\n  reactData.staticColumns = staticColumns.slice(0);\n}\nexport function mergeBodyMethod(mergeList, _rowIndex, _columnIndex) {\n  for (var mIndex = 0; mIndex < mergeList.length; mIndex++) {\n    var _a = mergeList[mIndex],\n        mergeRowIndex = _a.row,\n        mergeColIndex = _a.col,\n        mergeRowspan = _a.rowspan,\n        mergeColspan = _a.colspan;\n\n    if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\n      if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\n        return {\n          rowspan: mergeRowspan,\n          colspan: mergeColspan\n        };\n      }\n\n      if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\n        return {\n          rowspan: 0,\n          colspan: 0\n        };\n      }\n    }\n  }\n}\nexport function clearTableDefaultStatus($xetable) {\n  var props = $xetable.props,\n      internalData = $xetable.internalData;\n  internalData.initStatus = false;\n  $xetable.clearSort();\n  $xetable.clearCurrentRow();\n  $xetable.clearCurrentColumn();\n  $xetable.clearRadioRow();\n  $xetable.clearRadioReserve();\n  $xetable.clearCheckboxRow();\n  $xetable.clearCheckboxReserve();\n  $xetable.clearRowExpand();\n  $xetable.clearTreeExpand();\n  $xetable.clearTreeExpandReserve();\n\n  if ($xetable.clearFilter) {\n    $xetable.clearFilter();\n  }\n\n  if ($xetable.clearSelected && (props.keyboardConfig || props.mouseConfig)) {\n    $xetable.clearSelected();\n  }\n\n  if ($xetable.clearCellAreas && props.mouseConfig) {\n    $xetable.clearCellAreas();\n    $xetable.clearCopyCellArea();\n  }\n\n  return $xetable.clearScroll();\n}\nexport function clearTableAllStatus($xetable) {\n  if ($xetable.clearFilter) {\n    $xetable.clearFilter();\n  }\n\n  return clearTableDefaultStatus($xetable);\n}\nexport function rowToVisible($xetable, row) {\n  var reactData = $xetable.reactData,\n      internalData = $xetable.internalData;\n  var refTableBody = $xetable.getRefMaps().refTableBody;\n  var scrollYLoad = reactData.scrollYLoad;\n  var afterFullData = internalData.afterFullData,\n      scrollYStore = internalData.scrollYStore;\n  var tableBody = refTableBody.value;\n  var bodyElem = tableBody ? tableBody.$el : null;\n\n  if (bodyElem) {\n    var trElem = bodyElem.querySelector(\"[rowid=\\\"\" + getRowid($xetable, row) + \"\\\"]\");\n\n    if (trElem) {\n      var bodyHeight = bodyElem.clientHeight;\n      var bodySrcollTop = bodyElem.scrollTop;\n      var trOffsetParent = trElem.offsetParent;\n      var trOffsetTop = trElem.offsetTop + (trOffsetParent ? trOffsetParent.offsetTop : 0);\n      var trHeight = trElem.clientHeight; // 检测行是否在可视区中\n\n      if (trOffsetTop < bodySrcollTop || trOffsetTop > bodySrcollTop + bodyHeight) {\n        // 向上定位\n        return $xetable.scrollTo(null, trOffsetTop);\n      } else if (trOffsetTop + trHeight >= bodyHeight + bodySrcollTop) {\n        // 向下定位\n        return $xetable.scrollTo(null, bodySrcollTop + trHeight);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if (scrollYLoad) {\n        return $xetable.scrollTo(null, (afterFullData.indexOf(row) - 1) * scrollYStore.rowHeight);\n      }\n    }\n  }\n\n  return Promise.resolve();\n}\nexport function colToVisible($xetable, column) {\n  var reactData = $xetable.reactData,\n      internalData = $xetable.internalData;\n  var refTableBody = $xetable.getRefMaps().refTableBody;\n  var scrollXLoad = reactData.scrollXLoad;\n  var visibleColumn = internalData.visibleColumn;\n  var tableBody = refTableBody.value;\n  var bodyElem = tableBody ? tableBody.$el : null;\n\n  if (bodyElem) {\n    var tdElem = bodyElem.querySelector(\".\" + column.id);\n\n    if (tdElem) {\n      var bodyWidth = bodyElem.clientWidth;\n      var bodySrcollLeft = bodyElem.scrollLeft;\n      var tdOffsetParent = tdElem.offsetParent;\n      var tdOffsetLeft = tdElem.offsetLeft + (tdOffsetParent ? tdOffsetParent.offsetLeft : 0);\n      var tdWidth = tdElem.clientWidth; // 检测行是否在可视区中\n\n      if (tdOffsetLeft < bodySrcollLeft || tdOffsetLeft > bodySrcollLeft + bodyWidth) {\n        // 向左定位\n        return $xetable.scrollTo(tdOffsetLeft);\n      } else if (tdOffsetLeft + tdWidth >= bodyWidth + bodySrcollLeft) {\n        // 向右定位\n        return $xetable.scrollTo(bodySrcollLeft + tdWidth);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if (scrollXLoad) {\n        var scrollLeft = 0;\n\n        for (var index = 0; index < visibleColumn.length; index++) {\n          if (visibleColumn[index] === column) {\n            break;\n          }\n\n          scrollLeft += visibleColumn[index].renderWidth;\n        }\n\n        return $xetable.scrollTo(scrollLeft);\n      }\n    }\n  }\n\n  return Promise.resolve();\n}","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/table/src/util.js"],"names":["watch","XEUtils","ColumnInfo","isPx","isScale","restoreScrollLocation","$xetable","scrollLeft","scrollTop","internalData","clearScroll","then","lastScrollLeft","lastScrollTop","scrollTo","removeScrollListener","scrollElem","_onscroll","onscroll","restoreScrollListener","getRowUniqueId","uniqueId","getRowkey","props","computeRowOpts","getComputeMaps","rowId","rowOpts","value","keyField","getRowid","row","rowid","get","eqNull","encodeURIComponent","handleFieldOrColumn","fieldOrColumn","isString","getColumnByField","getPaddingLeftRightSize","elem","computedStyle","getComputedStyle","paddingLeft","toNumber","paddingRight","getElemenMarginWidth","marginLeft","marginRight","offsetWidth","queryCellElement","cell","selector","querySelector","toFilters","filters","isArray","map","_a","label","data","resetValue","checked","_checked","toTreePathSeq","path","num","i","Number","join","getCellValue","column","property","setCellValue","set","getPropClass","params","isFunction","getColMinWidth","$table","tableProps","computeResizableOpts","resizableOpts","reMinWidth","minWidth","customMinWidth","Math","max","allColumnHeaderOverflow","showHeaderOverflow","colMinWidth","headOverflow","isUndefined","isNull","showEllipsis","showTitle","showTooltip","hasEllipsis","minTitleWidth","floor","fontSize","paddingLeftRight","mWidth","checkboxIconWidth","requiredIconWidth","editIconWidth","helpIconWidth","sortIconWidth","filterIconWidth","refTableBody","getRefMaps","tableBody","bodyElem","$el","bodyWidth","clientWidth","meanWidth","toInteger","isColumnInfo","constructor","createColumn","options","renderOptions","watchColumn","Object","keys","forEach","name","update","assemColumn","colgroup","reactData","staticColumns","parentElem","parentNode","parentColumn","parentCols","children","splice","arrayIndexOf","slice","destroyColumn","matchObj","findTree","item","id","items","index","mergeBodyMethod","mergeList","_rowIndex","_columnIndex","mIndex","length","mergeRowIndex","mergeColIndex","col","mergeRowspan","rowspan","mergeColspan","colspan","clearTableDefaultStatus","initStatus","clearSort","clearCurrentRow","clearCurrentColumn","clearRadioRow","clearRadioReserve","clearCheckboxRow","clearCheckboxReserve","clearRowExpand","clearTreeExpand","clearTreeExpandReserve","clearFilter","clearSelected","keyboardConfig","mouseConfig","clearCellAreas","clearCopyCellArea","clearTableAllStatus","rowToVisible","scrollYLoad","afterFullData","scrollYStore","trElem","bodyHeight","clientHeight","bodySrcollTop","trOffsetParent","offsetParent","trOffsetTop","offsetTop","trHeight","indexOf","rowHeight","Promise","resolve","colToVisible","scrollXLoad","visibleColumn","tdElem","bodySrcollLeft","tdOffsetParent","tdOffsetLeft","offsetLeft","tdWidth","renderWidth"],"mappings":"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","sourcesContent":["import { watch } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { ColumnInfo } from './columnInfo';\nimport { isPx, isScale } from '../../tools/dom';\nexport function restoreScrollLocation($xetable, scrollLeft, scrollTop) {\n    var internalData = $xetable.internalData;\n    return $xetable.clearScroll().then(function () {\n        if (scrollLeft || scrollTop) {\n            // 重置最后滚动状态\n            internalData.lastScrollLeft = 0;\n            internalData.lastScrollTop = 0;\n            // 还原滚动状态\n            return $xetable.scrollTo(scrollLeft, scrollTop);\n        }\n    });\n}\nexport function removeScrollListener(scrollElem) {\n    if (scrollElem && scrollElem._onscroll) {\n        scrollElem.onscroll = null;\n    }\n}\nexport function restoreScrollListener(scrollElem) {\n    if (scrollElem && scrollElem._onscroll) {\n        scrollElem.onscroll = scrollElem._onscroll;\n    }\n}\n/**\n * 生成行的唯一主键\n */\nexport function getRowUniqueId() {\n    return XEUtils.uniqueId('row_');\n}\n// 行主键 key\nexport function getRowkey($xetable) {\n    var props = $xetable.props;\n    var computeRowOpts = $xetable.getComputeMaps().computeRowOpts;\n    var rowId = props.rowId;\n    var rowOpts = computeRowOpts.value;\n    return rowId || rowOpts.keyField || '_X_ROW_KEY';\n}\n// 行主键 value\nexport function getRowid($xetable, row) {\n    var rowid = XEUtils.get(row, getRowkey($xetable));\n    return XEUtils.eqNull(rowid) ? '' : encodeURIComponent(rowid);\n}\nexport var handleFieldOrColumn = function ($xetable, fieldOrColumn) {\n    if (fieldOrColumn) {\n        return XEUtils.isString(fieldOrColumn) ? $xetable.getColumnByField(fieldOrColumn) : fieldOrColumn;\n    }\n    return null;\n};\nfunction getPaddingLeftRightSize(elem) {\n    if (elem) {\n        var computedStyle = getComputedStyle(elem);\n        var paddingLeft = XEUtils.toNumber(computedStyle.paddingLeft);\n        var paddingRight = XEUtils.toNumber(computedStyle.paddingRight);\n        return paddingLeft + paddingRight;\n    }\n    return 0;\n}\nfunction getElemenMarginWidth(elem) {\n    if (elem) {\n        var computedStyle = getComputedStyle(elem);\n        var marginLeft = XEUtils.toNumber(computedStyle.marginLeft);\n        var marginRight = XEUtils.toNumber(computedStyle.marginRight);\n        return elem.offsetWidth + marginLeft + marginRight;\n    }\n    return 0;\n}\nfunction queryCellElement(cell, selector) {\n    return cell.querySelector('.vxe-cell' + selector);\n}\nexport function toFilters(filters) {\n    if (filters && XEUtils.isArray(filters)) {\n        return filters.map(function (_a) {\n            var label = _a.label, value = _a.value, data = _a.data, resetValue = _a.resetValue, checked = _a.checked;\n            return { label: label, value: value, data: data, resetValue: resetValue, checked: !!checked, _checked: !!checked };\n        });\n    }\n    return filters;\n}\nexport function toTreePathSeq(path) {\n    return path.map(function (num, i) { return i % 2 === 0 ? (Number(num) + 1) : '.'; }).join('');\n}\nexport function getCellValue(row, column) {\n    return XEUtils.get(row, column.property);\n}\nexport function setCellValue(row, column, value) {\n    return XEUtils.set(row, column.property, value);\n}\nexport function getPropClass(property, params) {\n    return property ? XEUtils.isFunction(property) ? property(params) : property : '';\n}\nexport function getColMinWidth(params) {\n    var $table = params.$table, column = params.column, cell = params.cell;\n    var tableProps = $table.props;\n    var computeResizableOpts = $table.getComputeMaps().computeResizableOpts;\n    var resizableOpts = computeResizableOpts.value;\n    var reMinWidth = resizableOpts.minWidth;\n    // 如果自定义调整宽度逻辑\n    if (reMinWidth) {\n        var customMinWidth = XEUtils.isFunction(reMinWidth) ? reMinWidth(params) : reMinWidth;\n        if (customMinWidth !== 'auto') {\n            return Math.max(1, XEUtils.toNumber(customMinWidth));\n        }\n    }\n    var allColumnHeaderOverflow = tableProps.showHeaderOverflow;\n    var showHeaderOverflow = column.showHeaderOverflow, colMinWidth = column.minWidth;\n    var headOverflow = XEUtils.isUndefined(showHeaderOverflow) || XEUtils.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;\n    var showEllipsis = headOverflow === 'ellipsis';\n    var showTitle = headOverflow === 'title';\n    var showTooltip = headOverflow === true || headOverflow === 'tooltip';\n    var hasEllipsis = showTitle || showTooltip || showEllipsis;\n    var minTitleWidth = XEUtils.floor((XEUtils.toNumber(getComputedStyle(cell).fontSize) || 14) * 1.6);\n    var paddingLeftRight = getPaddingLeftRightSize(cell) + getPaddingLeftRightSize(queryCellElement(cell, ''));\n    var mWidth = minTitleWidth + paddingLeftRight;\n    // 默认最小宽处理\n    if (hasEllipsis) {\n        var checkboxIconWidth = getPaddingLeftRightSize(queryCellElement(cell, '--title>.vxe-cell--checkbox'));\n        var requiredIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--required-icon'));\n        var editIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--edit-icon'));\n        var helpIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell-help-icon'));\n        var sortIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--sort'));\n        var filterIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--filter'));\n        mWidth += checkboxIconWidth + requiredIconWidth + editIconWidth + helpIconWidth + filterIconWidth + sortIconWidth;\n    }\n    // 如果设置最小宽\n    if (colMinWidth) {\n        var refTableBody = $table.getRefMaps().refTableBody;\n        var tableBody = refTableBody.value;\n        var bodyElem = tableBody ? tableBody.$el : null;\n        if (bodyElem) {\n            if (isScale(colMinWidth)) {\n                var bodyWidth = bodyElem.clientWidth - 1;\n                var meanWidth = bodyWidth / 100;\n                return Math.max(mWidth, Math.floor(XEUtils.toInteger(colMinWidth) * meanWidth));\n            }\n            else if (isPx(colMinWidth)) {\n                return Math.max(mWidth, XEUtils.toInteger(colMinWidth));\n            }\n        }\n    }\n    return mWidth;\n}\nexport function isColumnInfo(column) {\n    return column && (column.constructor === ColumnInfo || column instanceof ColumnInfo);\n}\nexport function createColumn($xetable, options, renderOptions) {\n    return isColumnInfo(options) ? options : new ColumnInfo($xetable, options, renderOptions);\n}\nexport function watchColumn(props, column) {\n    Object.keys(props).forEach(function (name) {\n        watch(function () { return props[name]; }, function (value) {\n            column.update(name, value);\n        });\n    });\n}\nexport function assemColumn($xetable, elem, column, colgroup) {\n    var reactData = $xetable.reactData;\n    var staticColumns = reactData.staticColumns;\n    var parentElem = elem.parentNode;\n    var parentColumn = colgroup ? colgroup.column : null;\n    var parentCols = parentColumn ? parentColumn.children : staticColumns;\n    if (parentElem && parentCols) {\n        parentCols.splice(XEUtils.arrayIndexOf(parentElem.children, elem), 0, column);\n        reactData.staticColumns = staticColumns.slice(0);\n    }\n}\nexport function destroyColumn($xetable, column) {\n    var reactData = $xetable.reactData;\n    var staticColumns = reactData.staticColumns;\n    var matchObj = XEUtils.findTree(staticColumns, function (item) { return item.id === column.id; }, { children: 'children' });\n    if (matchObj) {\n        matchObj.items.splice(matchObj.index, 1);\n    }\n    reactData.staticColumns = staticColumns.slice(0);\n}\nexport function mergeBodyMethod(mergeList, _rowIndex, _columnIndex) {\n    for (var mIndex = 0; mIndex < mergeList.length; mIndex++) {\n        var _a = mergeList[mIndex], mergeRowIndex = _a.row, mergeColIndex = _a.col, mergeRowspan = _a.rowspan, mergeColspan = _a.colspan;\n        if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\n            if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\n                return { rowspan: mergeRowspan, colspan: mergeColspan };\n            }\n            if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\n                return { rowspan: 0, colspan: 0 };\n            }\n        }\n    }\n}\nexport function clearTableDefaultStatus($xetable) {\n    var props = $xetable.props, internalData = $xetable.internalData;\n    internalData.initStatus = false;\n    $xetable.clearSort();\n    $xetable.clearCurrentRow();\n    $xetable.clearCurrentColumn();\n    $xetable.clearRadioRow();\n    $xetable.clearRadioReserve();\n    $xetable.clearCheckboxRow();\n    $xetable.clearCheckboxReserve();\n    $xetable.clearRowExpand();\n    $xetable.clearTreeExpand();\n    $xetable.clearTreeExpandReserve();\n    if ($xetable.clearFilter) {\n        $xetable.clearFilter();\n    }\n    if ($xetable.clearSelected && (props.keyboardConfig || props.mouseConfig)) {\n        $xetable.clearSelected();\n    }\n    if ($xetable.clearCellAreas && props.mouseConfig) {\n        $xetable.clearCellAreas();\n        $xetable.clearCopyCellArea();\n    }\n    return $xetable.clearScroll();\n}\nexport function clearTableAllStatus($xetable) {\n    if ($xetable.clearFilter) {\n        $xetable.clearFilter();\n    }\n    return clearTableDefaultStatus($xetable);\n}\nexport function rowToVisible($xetable, row) {\n    var reactData = $xetable.reactData, internalData = $xetable.internalData;\n    var refTableBody = $xetable.getRefMaps().refTableBody;\n    var scrollYLoad = reactData.scrollYLoad;\n    var afterFullData = internalData.afterFullData, scrollYStore = internalData.scrollYStore;\n    var tableBody = refTableBody.value;\n    var bodyElem = tableBody ? tableBody.$el : null;\n    if (bodyElem) {\n        var trElem = bodyElem.querySelector(\"[rowid=\\\"\" + getRowid($xetable, row) + \"\\\"]\");\n        if (trElem) {\n            var bodyHeight = bodyElem.clientHeight;\n            var bodySrcollTop = bodyElem.scrollTop;\n            var trOffsetParent = trElem.offsetParent;\n            var trOffsetTop = trElem.offsetTop + (trOffsetParent ? trOffsetParent.offsetTop : 0);\n            var trHeight = trElem.clientHeight;\n            // 检测行是否在可视区中\n            if (trOffsetTop < bodySrcollTop || trOffsetTop > bodySrcollTop + bodyHeight) {\n                // 向上定位\n                return $xetable.scrollTo(null, trOffsetTop);\n            }\n            else if (trOffsetTop + trHeight >= bodyHeight + bodySrcollTop) {\n                // 向下定位\n                return $xetable.scrollTo(null, bodySrcollTop + trHeight);\n            }\n        }\n        else {\n            // 如果是虚拟渲染跨行滚动\n            if (scrollYLoad) {\n                return $xetable.scrollTo(null, (afterFullData.indexOf(row) - 1) * scrollYStore.rowHeight);\n            }\n        }\n    }\n    return Promise.resolve();\n}\nexport function colToVisible($xetable, column) {\n    var reactData = $xetable.reactData, internalData = $xetable.internalData;\n    var refTableBody = $xetable.getRefMaps().refTableBody;\n    var scrollXLoad = reactData.scrollXLoad;\n    var visibleColumn = internalData.visibleColumn;\n    var tableBody = refTableBody.value;\n    var bodyElem = tableBody ? tableBody.$el : null;\n    if (bodyElem) {\n        var tdElem = bodyElem.querySelector(\".\" + column.id);\n        if (tdElem) {\n            var bodyWidth = bodyElem.clientWidth;\n            var bodySrcollLeft = bodyElem.scrollLeft;\n            var tdOffsetParent = tdElem.offsetParent;\n            var tdOffsetLeft = tdElem.offsetLeft + (tdOffsetParent ? tdOffsetParent.offsetLeft : 0);\n            var tdWidth = tdElem.clientWidth;\n            // 检测行是否在可视区中\n            if (tdOffsetLeft < bodySrcollLeft || tdOffsetLeft > bodySrcollLeft + bodyWidth) {\n                // 向左定位\n                return $xetable.scrollTo(tdOffsetLeft);\n            }\n            else if (tdOffsetLeft + tdWidth >= bodyWidth + bodySrcollLeft) {\n                // 向右定位\n                return $xetable.scrollTo(bodySrcollLeft + tdWidth);\n            }\n        }\n        else {\n            // 如果是虚拟渲染跨行滚动\n            if (scrollXLoad) {\n                var scrollLeft = 0;\n                for (var index = 0; index < visibleColumn.length; index++) {\n                    if (visibleColumn[index] === column) {\n                        break;\n                    }\n                    scrollLeft += visibleColumn[index].renderWidth;\n                }\n                return $xetable.scrollTo(scrollLeft);\n            }\n        }\n    }\n    return Promise.resolve();\n}\n"]},"metadata":{},"sourceType":"module"}