{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport PropTypes from '../_util/vue-types';\nvar widthUnit = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nexport var skeletonParagraphProps = {\n  prefixCls: PropTypes.string,\n  width: PropTypes.oneOfType([widthUnit, PropTypes.arrayOf(widthUnit)]),\n  rows: PropTypes.number\n};\nvar SkeletonParagraph = defineComponent({\n  name: 'SkeletonParagraph',\n  props: skeletonParagraphProps,\n  setup: function setup(props) {\n    var getWidth = function getWidth(index) {\n      var width = props.width,\n          _props$rows = props.rows,\n          rows = _props$rows === void 0 ? 2 : _props$rows;\n\n      if (Array.isArray(width)) {\n        return width[index];\n      } // last paragraph\n\n\n      if (rows - 1 === index) {\n        return width;\n      }\n\n      return undefined;\n    };\n\n    return function () {\n      var prefixCls = props.prefixCls,\n          rows = props.rows;\n\n      var rowList = _toConsumableArray(Array(rows)).map(function (_, index) {\n        var width = getWidth(index);\n        return _createVNode(\"li\", {\n          \"key\": index,\n          \"style\": {\n            width: typeof width === 'number' ? \"\".concat(width, \"px\") : width\n          }\n        }, null);\n      });\n\n      return _createVNode(\"ul\", {\n        \"class\": prefixCls\n      }, [rowList]);\n    };\n  }\n});\nexport default SkeletonParagraph;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/skeleton/Paragraph.js"],"names":["_toConsumableArray","createVNode","_createVNode","defineComponent","PropTypes","widthUnit","oneOfType","number","string","skeletonParagraphProps","prefixCls","width","arrayOf","rows","SkeletonParagraph","name","props","setup","getWidth","index","_props$rows","Array","isArray","undefined","rowList","map","_","concat"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,SAASC,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,IAAIC,SAAS,GAAGD,SAAS,CAACE,SAAV,CAAoB,CAACF,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACI,MAA7B,CAApB,CAAhB;AACA,OAAO,IAAIC,sBAAsB,GAAG;AAClCC,EAAAA,SAAS,EAAEN,SAAS,CAACI,MADa;AAElCG,EAAAA,KAAK,EAAEP,SAAS,CAACE,SAAV,CAAoB,CAACD,SAAD,EAAYD,SAAS,CAACQ,OAAV,CAAkBP,SAAlB,CAAZ,CAApB,CAF2B;AAGlCQ,EAAAA,IAAI,EAAET,SAAS,CAACG;AAHkB,CAA7B;AAKP,IAAIO,iBAAiB,GAAGX,eAAe,CAAC;AACtCY,EAAAA,IAAI,EAAE,mBADgC;AAEtCC,EAAAA,KAAK,EAAEP,sBAF+B;AAGtCQ,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeD,KAAf,EAAsB;AAC3B,QAAIE,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,UAAIR,KAAK,GAAGK,KAAK,CAACL,KAAlB;AAAA,UACIS,WAAW,GAAGJ,KAAK,CAACH,IADxB;AAAA,UAEIA,IAAI,GAAGO,WAAW,KAAK,KAAK,CAArB,GAAyB,CAAzB,GAA6BA,WAFxC;;AAIA,UAAIC,KAAK,CAACC,OAAN,CAAcX,KAAd,CAAJ,EAA0B;AACxB,eAAOA,KAAK,CAACQ,KAAD,CAAZ;AACD,OAPqC,CAOpC;;;AAGF,UAAIN,IAAI,GAAG,CAAP,KAAaM,KAAjB,EAAwB;AACtB,eAAOR,KAAP;AACD;;AAED,aAAOY,SAAP;AACD,KAfD;;AAiBA,WAAO,YAAY;AACjB,UAAIb,SAAS,GAAGM,KAAK,CAACN,SAAtB;AAAA,UACIG,IAAI,GAAGG,KAAK,CAACH,IADjB;;AAGA,UAAIW,OAAO,GAAGxB,kBAAkB,CAACqB,KAAK,CAACR,IAAD,CAAN,CAAlB,CAAgCY,GAAhC,CAAoC,UAAUC,CAAV,EAAaP,KAAb,EAAoB;AACpE,YAAIR,KAAK,GAAGO,QAAQ,CAACC,KAAD,CAApB;AACA,eAAOjB,YAAY,CAAC,IAAD,EAAO;AACxB,iBAAOiB,KADiB;AAExB,mBAAS;AACPR,YAAAA,KAAK,EAAE,OAAOA,KAAP,KAAiB,QAAjB,GAA4B,GAAGgB,MAAH,CAAUhB,KAAV,EAAiB,IAAjB,CAA5B,GAAqDA;AADrD;AAFe,SAAP,EAKhB,IALgB,CAAnB;AAMD,OARa,CAAd;;AAUA,aAAOT,YAAY,CAAC,IAAD,EAAO;AACxB,iBAASQ;AADe,OAAP,EAEhB,CAACc,OAAD,CAFgB,CAAnB;AAGD,KAjBD;AAkBD;AAvCqC,CAAD,CAAvC;AAyCA,eAAeV,iBAAf","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport PropTypes from '../_util/vue-types';\nvar widthUnit = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nexport var skeletonParagraphProps = {\n  prefixCls: PropTypes.string,\n  width: PropTypes.oneOfType([widthUnit, PropTypes.arrayOf(widthUnit)]),\n  rows: PropTypes.number\n};\nvar SkeletonParagraph = defineComponent({\n  name: 'SkeletonParagraph',\n  props: skeletonParagraphProps,\n  setup: function setup(props) {\n    var getWidth = function getWidth(index) {\n      var width = props.width,\n          _props$rows = props.rows,\n          rows = _props$rows === void 0 ? 2 : _props$rows;\n\n      if (Array.isArray(width)) {\n        return width[index];\n      } // last paragraph\n\n\n      if (rows - 1 === index) {\n        return width;\n      }\n\n      return undefined;\n    };\n\n    return function () {\n      var prefixCls = props.prefixCls,\n          rows = props.rows;\n\n      var rowList = _toConsumableArray(Array(rows)).map(function (_, index) {\n        var width = getWidth(index);\n        return _createVNode(\"li\", {\n          \"key\": index,\n          \"style\": {\n            width: typeof width === 'number' ? \"\".concat(width, \"px\") : width\n          }\n        }, null);\n      });\n\n      return _createVNode(\"ul\", {\n        \"class\": prefixCls\n      }, [rowList]);\n    };\n  }\n});\nexport default SkeletonParagraph;"]},"metadata":{},"sourceType":"module"}