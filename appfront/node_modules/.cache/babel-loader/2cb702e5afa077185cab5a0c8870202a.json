{"ast":null,"code":"import { Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { createNamespace, numericProp } from \"../utils\";\nimport { Cell } from \"../cell\";\nimport { Field } from \"../field\";\nconst [name, bem] = createNamespace(\"address-edit-detail\");\nconst t = createNamespace(\"address-edit\")[2];\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    show: Boolean,\n    rows: numericProp,\n    value: String,\n    rules: Array,\n    focused: Boolean,\n    maxlength: numericProp,\n    searchResult: Array,\n    showSearchResult: Boolean\n  },\n  emits: [\"blur\", \"focus\", \"input\", \"select-search\"],\n\n  setup(props, {\n    emit\n  }) {\n    const field = ref();\n\n    const showSearchResult = () => props.focused && props.searchResult && props.showSearchResult;\n\n    const onSelect = express => {\n      emit(\"select-search\", express);\n      emit(\"input\", `${express.address || \"\"} ${express.name || \"\"}`.trim());\n    };\n\n    const renderSearchTitle = express => {\n      if (express.name) {\n        const text = express.name.replace(props.value, `<span class=${bem(\"keyword\")}>${props.value}</span>`);\n        return _createVNode(\"div\", {\n          \"innerHTML\": text\n        }, null);\n      }\n    };\n\n    const renderSearchResult = () => {\n      if (!showSearchResult()) {\n        return;\n      }\n\n      const {\n        searchResult\n      } = props;\n      return searchResult.map(express => _createVNode(Cell, {\n        \"clickable\": true,\n        \"key\": express.name + express.address,\n        \"icon\": \"location-o\",\n        \"label\": express.address,\n        \"class\": bem(\"search-item\"),\n        \"border\": false,\n        \"onClick\": () => onSelect(express)\n      }, {\n        title: () => renderSearchTitle(express)\n      }));\n    };\n\n    const onBlur = event => emit(\"blur\", event);\n\n    const onFocus = event => emit(\"focus\", event);\n\n    const onInput = value => emit(\"input\", value);\n\n    return () => {\n      if (props.show) {\n        return _createVNode(_Fragment, null, [_createVNode(Field, {\n          \"autosize\": true,\n          \"clearable\": true,\n          \"ref\": field,\n          \"class\": bem(),\n          \"rows\": props.rows,\n          \"type\": \"textarea\",\n          \"rules\": props.rules,\n          \"label\": t(\"addressDetail\"),\n          \"border\": !showSearchResult(),\n          \"maxlength\": props.maxlength,\n          \"modelValue\": props.value,\n          \"placeholder\": t(\"addressDetail\"),\n          \"onBlur\": onBlur,\n          \"onFocus\": onFocus,\n          \"onUpdate:modelValue\": onInput\n        }, null), renderSearchResult()]);\n      }\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/address-edit/AddressEditDetail.js"],"names":["Fragment","_Fragment","createVNode","_createVNode","ref","defineComponent","createNamespace","numericProp","Cell","Field","name","bem","t","stdin_default","props","show","Boolean","rows","value","String","rules","Array","focused","maxlength","searchResult","showSearchResult","emits","setup","emit","field","onSelect","express","address","trim","renderSearchTitle","text","replace","renderSearchResult","map","title","onBlur","event","onFocus","onInput","default"],"mappings":"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","sourcesContent":["import { Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { createNamespace, numericProp } from \"../utils\";\nimport { Cell } from \"../cell\";\nimport { Field } from \"../field\";\nconst [name, bem] = createNamespace(\"address-edit-detail\");\nconst t = createNamespace(\"address-edit\")[2];\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    show: Boolean,\n    rows: numericProp,\n    value: String,\n    rules: Array,\n    focused: Boolean,\n    maxlength: numericProp,\n    searchResult: Array,\n    showSearchResult: Boolean\n  },\n  emits: [\"blur\", \"focus\", \"input\", \"select-search\"],\n  setup(props, {\n    emit\n  }) {\n    const field = ref();\n    const showSearchResult = () => props.focused && props.searchResult && props.showSearchResult;\n    const onSelect = (express) => {\n      emit(\"select-search\", express);\n      emit(\"input\", `${express.address || \"\"} ${express.name || \"\"}`.trim());\n    };\n    const renderSearchTitle = (express) => {\n      if (express.name) {\n        const text = express.name.replace(props.value, `<span class=${bem(\"keyword\")}>${props.value}</span>`);\n        return _createVNode(\"div\", {\n          \"innerHTML\": text\n        }, null);\n      }\n    };\n    const renderSearchResult = () => {\n      if (!showSearchResult()) {\n        return;\n      }\n      const {\n        searchResult\n      } = props;\n      return searchResult.map((express) => _createVNode(Cell, {\n        \"clickable\": true,\n        \"key\": express.name + express.address,\n        \"icon\": \"location-o\",\n        \"label\": express.address,\n        \"class\": bem(\"search-item\"),\n        \"border\": false,\n        \"onClick\": () => onSelect(express)\n      }, {\n        title: () => renderSearchTitle(express)\n      }));\n    };\n    const onBlur = (event) => emit(\"blur\", event);\n    const onFocus = (event) => emit(\"focus\", event);\n    const onInput = (value) => emit(\"input\", value);\n    return () => {\n      if (props.show) {\n        return _createVNode(_Fragment, null, [_createVNode(Field, {\n          \"autosize\": true,\n          \"clearable\": true,\n          \"ref\": field,\n          \"class\": bem(),\n          \"rows\": props.rows,\n          \"type\": \"textarea\",\n          \"rules\": props.rules,\n          \"label\": t(\"addressDetail\"),\n          \"border\": !showSearchResult(),\n          \"maxlength\": props.maxlength,\n          \"modelValue\": props.value,\n          \"placeholder\": t(\"addressDetail\"),\n          \"onBlur\": onBlur,\n          \"onFocus\": onFocus,\n          \"onUpdate:modelValue\": onInput\n        }, null), renderSearchResult()]);\n      }\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}