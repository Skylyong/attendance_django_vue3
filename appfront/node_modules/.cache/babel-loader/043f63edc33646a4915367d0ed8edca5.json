{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { FORM_KEY, truthProp, numericProp, preventDefault, makeStringProp, createNamespace } from \"../utils\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"form\");\nconst formProps = {\n  colon: Boolean,\n  disabled: Boolean,\n  readonly: Boolean,\n  showError: Boolean,\n  labelWidth: numericProp,\n  labelAlign: String,\n  inputAlign: String,\n  scrollToError: Boolean,\n  validateFirst: Boolean,\n  submitOnEnter: truthProp,\n  validateTrigger: makeStringProp(\"onBlur\"),\n  showErrorMessage: truthProp,\n  errorMessageAlign: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: formProps,\n  emits: [\"submit\", \"failed\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(FORM_KEY);\n\n    const getFieldsByNames = names => {\n      if (names) {\n        return children.filter(field => names.includes(field.name));\n      }\n\n      return children;\n    };\n\n    const validateSeq = names => new Promise((resolve, reject) => {\n      const errors = [];\n      const fields = getFieldsByNames(names);\n      fields.reduce((promise, field) => promise.then(() => {\n        if (!errors.length) {\n          return field.validate().then(error => {\n            if (error) {\n              errors.push(error);\n            }\n          });\n        }\n      }), Promise.resolve()).then(() => {\n        if (errors.length) {\n          reject(errors);\n        } else {\n          resolve();\n        }\n      });\n    });\n\n    const validateAll = names => new Promise((resolve, reject) => {\n      const fields = getFieldsByNames(names);\n      Promise.all(fields.map(item => item.validate())).then(errors => {\n        errors = errors.filter(Boolean);\n\n        if (errors.length) {\n          reject(errors);\n        } else {\n          resolve();\n        }\n      });\n    });\n\n    const validateField = name2 => {\n      const matched = children.find(item => item.name === name2);\n\n      if (matched) {\n        return new Promise((resolve, reject) => {\n          matched.validate().then(error => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve();\n            }\n          });\n        });\n      }\n\n      return Promise.reject();\n    };\n\n    const validate = name2 => {\n      if (typeof name2 === \"string\") {\n        return validateField(name2);\n      }\n\n      return props.validateFirst ? validateSeq(name2) : validateAll(name2);\n    };\n\n    const resetValidation = name2 => {\n      if (typeof name2 === \"string\") {\n        name2 = [name2];\n      }\n\n      const fields = getFieldsByNames(name2);\n      fields.forEach(item => {\n        item.resetValidation();\n      });\n    };\n\n    const scrollToField = (name2, options) => {\n      children.some(item => {\n        if (item.name === name2) {\n          item.$el.scrollIntoView(options);\n          return true;\n        }\n\n        return false;\n      });\n    };\n\n    const getValues = () => children.reduce((form, field) => {\n      form[field.name] = field.formValue.value;\n      return form;\n    }, {});\n\n    const submit = () => {\n      const values = getValues();\n      validate().then(() => emit(\"submit\", values)).catch(errors => {\n        emit(\"failed\", {\n          values,\n          errors\n        });\n\n        if (props.scrollToError && errors[0].name) {\n          scrollToField(errors[0].name);\n        }\n      });\n    };\n\n    const onSubmit = event => {\n      preventDefault(event);\n      submit();\n    };\n\n    linkChildren({\n      props\n    });\n    useExpose({\n      submit,\n      validate,\n      scrollToField,\n      resetValidation\n    });\n    return () => {\n      var _a;\n\n      return _createVNode(\"form\", {\n        \"class\": bem(),\n        \"onSubmit\": onSubmit\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/form/Form.js"],"names":["createVNode","_createVNode","defineComponent","FORM_KEY","truthProp","numericProp","preventDefault","makeStringProp","createNamespace","useChildren","useExpose","name","bem","formProps","colon","Boolean","disabled","readonly","showError","labelWidth","labelAlign","String","inputAlign","scrollToError","validateFirst","submitOnEnter","validateTrigger","showErrorMessage","errorMessageAlign","stdin_default","props","emits","setup","emit","slots","children","linkChildren","getFieldsByNames","names","filter","field","includes","validateSeq","Promise","resolve","reject","errors","fields","reduce","promise","then","length","validate","error","push","validateAll","all","map","item","validateField","name2","matched","find","resetValidation","forEach","scrollToField","options","some","$el","scrollIntoView","getValues","form","formValue","value","submit","values","catch","onSubmit","event","_a","default","call"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { FORM_KEY, truthProp, numericProp, preventDefault, makeStringProp, createNamespace } from \"../utils\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"form\");\nconst formProps = {\n  colon: Boolean,\n  disabled: Boolean,\n  readonly: Boolean,\n  showError: Boolean,\n  labelWidth: numericProp,\n  labelAlign: String,\n  inputAlign: String,\n  scrollToError: Boolean,\n  validateFirst: Boolean,\n  submitOnEnter: truthProp,\n  validateTrigger: makeStringProp(\"onBlur\"),\n  showErrorMessage: truthProp,\n  errorMessageAlign: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: formProps,\n  emits: [\"submit\", \"failed\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(FORM_KEY);\n    const getFieldsByNames = (names) => {\n      if (names) {\n        return children.filter((field) => names.includes(field.name));\n      }\n      return children;\n    };\n    const validateSeq = (names) => new Promise((resolve, reject) => {\n      const errors = [];\n      const fields = getFieldsByNames(names);\n      fields.reduce((promise, field) => promise.then(() => {\n        if (!errors.length) {\n          return field.validate().then((error) => {\n            if (error) {\n              errors.push(error);\n            }\n          });\n        }\n      }), Promise.resolve()).then(() => {\n        if (errors.length) {\n          reject(errors);\n        } else {\n          resolve();\n        }\n      });\n    });\n    const validateAll = (names) => new Promise((resolve, reject) => {\n      const fields = getFieldsByNames(names);\n      Promise.all(fields.map((item) => item.validate())).then((errors) => {\n        errors = errors.filter(Boolean);\n        if (errors.length) {\n          reject(errors);\n        } else {\n          resolve();\n        }\n      });\n    });\n    const validateField = (name2) => {\n      const matched = children.find((item) => item.name === name2);\n      if (matched) {\n        return new Promise((resolve, reject) => {\n          matched.validate().then((error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve();\n            }\n          });\n        });\n      }\n      return Promise.reject();\n    };\n    const validate = (name2) => {\n      if (typeof name2 === \"string\") {\n        return validateField(name2);\n      }\n      return props.validateFirst ? validateSeq(name2) : validateAll(name2);\n    };\n    const resetValidation = (name2) => {\n      if (typeof name2 === \"string\") {\n        name2 = [name2];\n      }\n      const fields = getFieldsByNames(name2);\n      fields.forEach((item) => {\n        item.resetValidation();\n      });\n    };\n    const scrollToField = (name2, options) => {\n      children.some((item) => {\n        if (item.name === name2) {\n          item.$el.scrollIntoView(options);\n          return true;\n        }\n        return false;\n      });\n    };\n    const getValues = () => children.reduce((form, field) => {\n      form[field.name] = field.formValue.value;\n      return form;\n    }, {});\n    const submit = () => {\n      const values = getValues();\n      validate().then(() => emit(\"submit\", values)).catch((errors) => {\n        emit(\"failed\", {\n          values,\n          errors\n        });\n        if (props.scrollToError && errors[0].name) {\n          scrollToField(errors[0].name);\n        }\n      });\n    };\n    const onSubmit = (event) => {\n      preventDefault(event);\n      submit();\n    };\n    linkChildren({\n      props\n    });\n    useExpose({\n      submit,\n      validate,\n      scrollToField,\n      resetValidation\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"form\", {\n        \"class\": bem(),\n        \"onSubmit\": onSubmit\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}