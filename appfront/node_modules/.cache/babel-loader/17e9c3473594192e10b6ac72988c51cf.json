{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withInstall = exports.tupleNum = exports.tuple = void 0; // https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\n\nvar tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\n\nexports.tuple = tuple;\n\nvar tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};\n\nexports.tupleNum = tupleNum;\n\nvar withInstall = function withInstall(comp) {\n  var c = comp;\n\n  c.install = function (app) {\n    app.component(c.displayName || c.name, comp);\n  };\n\n  return comp;\n};\n\nexports.withInstall = withInstall;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/lib/_util/type.js"],"names":["Object","defineProperty","exports","value","withInstall","tupleNum","tuple","_len","arguments","length","args","Array","_key","_len2","_key2","comp","c","install","app","component","displayName","name"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,QAAR,GAAmBH,OAAO,CAACI,KAAR,GAAgB,KAAK,CAA9D,C,CAEA;;AACA,IAAIA,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,IAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,SAAOF,IAAP;AACD,CAND;;AAQAR,OAAO,CAACI,KAAR,GAAgBA,KAAhB;;AAEA,IAAID,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjC,OAAK,IAAIQ,KAAK,GAAGL,SAAS,CAACC,MAAtB,EAA8BC,IAAI,GAAG,IAAIC,KAAJ,CAAUE,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7FJ,IAAAA,IAAI,CAACI,KAAD,CAAJ,GAAcN,SAAS,CAACM,KAAD,CAAvB;AACD;;AAED,SAAOJ,IAAP;AACD,CAND;;AAQAR,OAAO,CAACG,QAAR,GAAmBA,QAAnB;;AAEA,IAAID,WAAW,GAAG,SAASA,WAAT,CAAqBW,IAArB,EAA2B;AAC3C,MAAIC,CAAC,GAAGD,IAAR;;AAEAC,EAAAA,CAAC,CAACC,OAAF,GAAY,UAAUC,GAAV,EAAe;AACzBA,IAAAA,GAAG,CAACC,SAAJ,CAAcH,CAAC,CAACI,WAAF,IAAiBJ,CAAC,CAACK,IAAjC,EAAuCN,IAAvC;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD,CARD;;AAUAb,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withInstall = exports.tupleNum = exports.tuple = void 0;\n\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nvar tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\n\nexports.tuple = tuple;\n\nvar tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};\n\nexports.tupleNum = tupleNum;\n\nvar withInstall = function withInstall(comp) {\n  var c = comp;\n\n  c.install = function (app) {\n    app.component(c.displayName || c.name, comp);\n  };\n\n  return comp;\n};\n\nexports.withInstall = withInstall;"]},"metadata":{},"sourceType":"script"}