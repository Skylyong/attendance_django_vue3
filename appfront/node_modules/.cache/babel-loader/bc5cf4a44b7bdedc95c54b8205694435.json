{"ast":null,"code":"import { defineComponent, h, Teleport, ref, resolveComponent, computed, provide, onUnmounted, reactive, nextTick, watch, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getEventTargetNode, getAbsolutePos } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex, getFuncText, formatText } from '../../tools/utils';\nimport { GlobalEvent, hasEventKey, EVENT_KEYS } from '../../tools/event';\n\nfunction isOptionVisible(option) {\n  return option.visible !== false;\n}\n\nfunction getOptUniqueId() {\n  return XEUtils.uniqueId('opt_');\n}\n\nexport default defineComponent({\n  name: 'VxeSelect',\n  props: {\n    modelValue: null,\n    clearable: Boolean,\n    placeholder: String,\n    loading: Boolean,\n    disabled: Boolean,\n    multiple: Boolean,\n    multiCharOverflow: {\n      type: [Number, String],\n      default: function () {\n        return GlobalConfig.select.multiCharOverflow;\n      }\n    },\n    prefixIcon: String,\n    placement: String,\n    options: Array,\n    optionProps: Object,\n    optionGroups: Array,\n    optionGroupProps: Object,\n    optionConfig: Object,\n    className: [String, Function],\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.select.size || GlobalConfig.size;\n      }\n    },\n    emptyText: String,\n    // 已废弃，被 option-config.keyField 替换\n    optionId: {\n      type: String,\n      default: function () {\n        return GlobalConfig.select.optionId;\n      }\n    },\n    // 已废弃，被 option-config.useKey 替换\n    optionKey: Boolean,\n    transfer: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.select.transfer;\n      }\n    }\n  },\n  emits: ['update:modelValue', 'change', 'clear'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var computeSize = useSize(props);\n    var reactData = reactive({\n      inited: false,\n      staticOptions: [],\n      fullGroupList: [],\n      fullOptionList: [],\n      visibleGroupList: [],\n      visibleOptionList: [],\n      panelIndex: 0,\n      panelStyle: {},\n      panelPlacement: null,\n      currentValue: null,\n      visiblePanel: false,\n      animatVisible: false,\n      isActivated: false\n    });\n    var refElem = ref();\n    var refInput = ref();\n    var refOptionWrapper = ref();\n    var refOptionPanel = ref();\n    var refMaps = {\n      refElem: refElem\n    };\n    var $xeselect = {\n      xID: xID,\n      props: props,\n      context: context,\n      reactData: reactData,\n      getRefMaps: function () {\n        return refMaps;\n      }\n    };\n    var selectMethods = {};\n    var computePropsOpts = computed(function () {\n      return props.optionProps || {};\n    });\n    var computeGroupPropsOpts = computed(function () {\n      return props.optionGroupProps || {};\n    });\n    var computeLabelField = computed(function () {\n      var propsOpts = computePropsOpts.value;\n      return propsOpts.label || 'label';\n    });\n    var computeValueField = computed(function () {\n      var propsOpts = computePropsOpts.value;\n      return propsOpts.value || 'value';\n    });\n    var computeGroupLabelField = computed(function () {\n      var groupPropsOpts = computeGroupPropsOpts.value;\n      return groupPropsOpts.label || 'label';\n    });\n    var computeGroupOptionsField = computed(function () {\n      var groupPropsOpts = computeGroupPropsOpts.value;\n      return groupPropsOpts.options || 'options';\n    });\n    var computeOptionOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.select.optionConfig, props.optionConfig);\n    });\n    var computeIsGroup = computed(function () {\n      return reactData.fullGroupList.some(function (item) {\n        return item.options && item.options.length;\n      });\n    });\n    var computeMultiMaxCharNum = computed(function () {\n      return XEUtils.toNumber(props.multiCharOverflow);\n    });\n\n    var callSlot = function (slotFunc, params) {\n      if (slotFunc) {\n        if (XEUtils.isString(slotFunc)) {\n          slotFunc = slots[slotFunc] || null;\n        }\n\n        if (XEUtils.isFunction(slotFunc)) {\n          return slotFunc(params);\n        }\n      }\n\n      return [];\n    };\n\n    var findOption = function (optionValue) {\n      var fullOptionList = reactData.fullOptionList,\n          fullGroupList = reactData.fullGroupList;\n      var isGroup = computeIsGroup.value;\n      var valueField = computeValueField.value;\n\n      if (isGroup) {\n        for (var gIndex = 0; gIndex < fullGroupList.length; gIndex++) {\n          var group = fullGroupList[gIndex];\n\n          if (group.options) {\n            for (var index = 0; index < group.options.length; index++) {\n              var option = group.options[index];\n\n              if (optionValue === option[valueField]) {\n                return option;\n              }\n            }\n          }\n        }\n      }\n\n      return fullOptionList.find(function (item) {\n        return optionValue === item[valueField];\n      });\n    };\n\n    var getSelectLabel = function (value) {\n      var labelField = computeLabelField.value;\n      var item = findOption(value);\n      return XEUtils.toValueString(item ? item[labelField] : value);\n    };\n\n    var computeSelectLabel = computed(function () {\n      var modelValue = props.modelValue,\n          multiple = props.multiple;\n      var multiMaxCharNum = computeMultiMaxCharNum.value;\n\n      if (modelValue && multiple) {\n        return (XEUtils.isArray(modelValue) ? modelValue : [modelValue]).map(function (val) {\n          var label = getSelectLabel(val);\n\n          if (multiMaxCharNum > 0 && label.length > multiMaxCharNum) {\n            return label.substring(0, multiMaxCharNum) + \"...\";\n          }\n\n          return label;\n        }).join(', ');\n      }\n\n      return getSelectLabel(modelValue);\n    });\n\n    var getOptkey = function () {\n      var optionOpts = computeOptionOpts.value;\n      return optionOpts.keyField || props.optionId || '_X_OPTION_KEY';\n    };\n\n    var getOptid = function (option) {\n      var optid = option[getOptkey()];\n      return optid ? encodeURIComponent(optid) : '';\n    };\n    /**\n     * 刷新选项，当选项被动态显示/隐藏时可能会用到\n     */\n\n\n    var refreshOption = function () {\n      var fullOptionList = reactData.fullOptionList,\n          fullGroupList = reactData.fullGroupList;\n      var isGroup = computeIsGroup.value;\n\n      if (isGroup) {\n        reactData.visibleGroupList = fullGroupList.filter(isOptionVisible);\n      } else {\n        reactData.visibleOptionList = fullOptionList.filter(isOptionVisible);\n      }\n\n      return nextTick();\n    };\n\n    var cacheItemMap = function () {\n      var fullOptionList = reactData.fullOptionList,\n          fullGroupList = reactData.fullGroupList;\n      var groupOptionsField = computeGroupOptionsField.value;\n      var key = getOptkey();\n\n      var handleOptis = function (item) {\n        if (!getOptid(item)) {\n          item[key] = getOptUniqueId();\n        }\n      };\n\n      if (fullGroupList.length) {\n        fullGroupList.forEach(function (group) {\n          handleOptis(group);\n\n          if (group[groupOptionsField]) {\n            group[groupOptionsField].forEach(handleOptis);\n          }\n        });\n      } else if (fullOptionList.length) {\n        fullOptionList.forEach(handleOptis);\n      }\n\n      refreshOption();\n    };\n\n    var setCurrentOption = function (option) {\n      var valueField = computeValueField.value;\n\n      if (option) {\n        reactData.currentValue = option[valueField];\n      }\n    };\n\n    var scrollToOption = function (option, isAlignBottom) {\n      return nextTick().then(function () {\n        if (option) {\n          var optWrapperElem = refOptionWrapper.value;\n          var panelElem = refOptionPanel.value;\n          var optElem = panelElem.querySelector(\"[optid='\" + getOptid(option) + \"']\");\n\n          if (optWrapperElem && optElem) {\n            var wrapperHeight = optWrapperElem.offsetHeight;\n            var offsetPadding = 5;\n\n            if (isAlignBottom) {\n              if (optElem.offsetTop + optElem.offsetHeight - optWrapperElem.scrollTop > wrapperHeight) {\n                optWrapperElem.scrollTop = optElem.offsetTop + optElem.offsetHeight - wrapperHeight;\n              }\n            } else {\n              if (optElem.offsetTop + offsetPadding < optWrapperElem.scrollTop || optElem.offsetTop + offsetPadding > optWrapperElem.scrollTop + optWrapperElem.clientHeight) {\n                optWrapperElem.scrollTop = optElem.offsetTop - offsetPadding;\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var updateZindex = function () {\n      if (reactData.panelIndex < getLastZIndex()) {\n        reactData.panelIndex = nextZIndex();\n      }\n    };\n\n    var updatePlacement = function () {\n      return nextTick().then(function () {\n        var transfer = props.transfer,\n            placement = props.placement;\n        var panelIndex = reactData.panelIndex;\n        var el = refElem.value;\n        var panelElem = refOptionPanel.value;\n\n        if (panelElem && el) {\n          var targetHeight = el.offsetHeight;\n          var targetWidth = el.offsetWidth;\n          var panelHeight = panelElem.offsetHeight;\n          var panelWidth = panelElem.offsetWidth;\n          var marginSize = 5;\n          var panelStyle = {\n            zIndex: panelIndex\n          };\n\n          var _a = getAbsolutePos(el),\n              boundingTop = _a.boundingTop,\n              boundingLeft = _a.boundingLeft,\n              visibleHeight = _a.visibleHeight,\n              visibleWidth = _a.visibleWidth;\n\n          var panelPlacement = 'bottom';\n\n          if (transfer) {\n            var left = boundingLeft;\n            var top_1 = boundingTop + targetHeight;\n\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              top_1 = boundingTop - panelHeight;\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (top_1 + panelHeight + marginSize > visibleHeight) {\n                panelPlacement = 'top';\n                top_1 = boundingTop - panelHeight;\n              } // 如果上面不够放，则向下（优先）\n\n\n              if (top_1 < marginSize) {\n                panelPlacement = 'bottom';\n                top_1 = boundingTop + targetHeight;\n              }\n            } // 如果溢出右边\n\n\n            if (left + panelWidth + marginSize > visibleWidth) {\n              left -= left + panelWidth + marginSize - visibleWidth;\n            } // 如果溢出左边\n\n\n            if (left < marginSize) {\n              left = marginSize;\n            }\n\n            Object.assign(panelStyle, {\n              left: left + \"px\",\n              top: top_1 + \"px\",\n              minWidth: targetWidth + \"px\"\n            });\n          } else {\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              panelStyle.bottom = targetHeight + \"px\";\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                // 如果上面不够放，则向下（优先）\n                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                  panelPlacement = 'top';\n                  panelStyle.bottom = targetHeight + \"px\";\n                }\n              }\n            }\n          }\n\n          reactData.panelStyle = panelStyle;\n          reactData.panelPlacement = panelPlacement;\n          return nextTick();\n        }\n      });\n    };\n\n    var hidePanelTimeout;\n\n    var showOptionPanel = function () {\n      var loading = props.loading,\n          disabled = props.disabled;\n\n      if (!loading && !disabled) {\n        clearTimeout(hidePanelTimeout);\n\n        if (!reactData.inited) {\n          reactData.inited = true;\n        }\n\n        reactData.isActivated = true;\n        reactData.animatVisible = true;\n        setTimeout(function () {\n          var modelValue = props.modelValue,\n              multiple = props.multiple;\n          var currOption = findOption(multiple && modelValue ? modelValue[0] : modelValue);\n          reactData.visiblePanel = true;\n\n          if (currOption) {\n            setCurrentOption(currOption);\n            scrollToOption(currOption);\n          }\n        }, 10);\n        updateZindex();\n        updatePlacement();\n      }\n    };\n\n    var hideOptionPanel = function () {\n      reactData.visiblePanel = false;\n      hidePanelTimeout = window.setTimeout(function () {\n        reactData.animatVisible = false;\n      }, 350);\n    };\n\n    var changeEvent = function (evnt, selectValue) {\n      if (selectValue !== props.modelValue) {\n        emit('update:modelValue', selectValue);\n        selectMethods.dispatchEvent('change', {\n          value: selectValue\n        }, evnt);\n      }\n    };\n\n    var clearValueEvent = function (evnt, selectValue) {\n      changeEvent(evnt, selectValue);\n      selectMethods.dispatchEvent('clear', {\n        value: selectValue\n      }, evnt);\n    };\n\n    var clearEvent = function (params, evnt) {\n      clearValueEvent(evnt, null);\n      hideOptionPanel();\n    };\n\n    var changeOptionEvent = function (evnt, selectValue) {\n      var modelValue = props.modelValue,\n          multiple = props.multiple;\n\n      if (multiple) {\n        var multipleValue = void 0;\n\n        if (modelValue) {\n          if (modelValue.indexOf(selectValue) === -1) {\n            multipleValue = modelValue.concat([selectValue]);\n          } else {\n            multipleValue = modelValue.filter(function (val) {\n              return val !== selectValue;\n            });\n          }\n        } else {\n          multipleValue = [selectValue];\n        }\n\n        changeEvent(evnt, multipleValue);\n      } else {\n        changeEvent(evnt, selectValue);\n        hideOptionPanel();\n      }\n    };\n\n    var handleGlobalMousewheelEvent = function (evnt) {\n      var disabled = props.disabled;\n      var visiblePanel = reactData.visiblePanel;\n\n      if (!disabled) {\n        if (visiblePanel) {\n          var panelElem = refOptionPanel.value;\n\n          if (getEventTargetNode(evnt, panelElem).flag) {\n            updatePlacement();\n          } else {\n            hideOptionPanel();\n          }\n        }\n      }\n    };\n\n    var handleGlobalMousedownEvent = function (evnt) {\n      var disabled = props.disabled;\n      var visiblePanel = reactData.visiblePanel;\n\n      if (!disabled) {\n        var el = refElem.value;\n        var panelElem = refOptionPanel.value;\n        reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n\n        if (visiblePanel && !reactData.isActivated) {\n          hideOptionPanel();\n        }\n      }\n    };\n\n    var findOffsetOption = function (optionValue, isUpArrow) {\n      var visibleOptionList = reactData.visibleOptionList,\n          visibleGroupList = reactData.visibleGroupList;\n      var isGroup = computeIsGroup.value;\n      var valueField = computeValueField.value;\n      var groupOptionsField = computeGroupOptionsField.value;\n      var firstOption;\n      var prevOption;\n      var nextOption;\n      var currOption;\n\n      if (isGroup) {\n        for (var gIndex = 0; gIndex < visibleGroupList.length; gIndex++) {\n          var group = visibleGroupList[gIndex];\n          var groupOptionList = group[groupOptionsField];\n          var isGroupDisabled = group.disabled;\n\n          if (groupOptionList) {\n            for (var index = 0; index < groupOptionList.length; index++) {\n              var option = groupOptionList[index];\n              var isVisible = isOptionVisible(option);\n              var isDisabled = isGroupDisabled || option.disabled;\n\n              if (!firstOption && !isDisabled) {\n                firstOption = option;\n              }\n\n              if (currOption) {\n                if (isVisible && !isDisabled) {\n                  nextOption = option;\n\n                  if (!isUpArrow) {\n                    return {\n                      offsetOption: nextOption\n                    };\n                  }\n                }\n              }\n\n              if (optionValue === option[valueField]) {\n                currOption = option;\n\n                if (isUpArrow) {\n                  return {\n                    offsetOption: prevOption\n                  };\n                }\n              } else {\n                if (isVisible && !isDisabled) {\n                  prevOption = option;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        for (var index = 0; index < visibleOptionList.length; index++) {\n          var option = visibleOptionList[index];\n          var isDisabled = option.disabled;\n\n          if (!firstOption && !isDisabled) {\n            firstOption = option;\n          }\n\n          if (currOption) {\n            if (!isDisabled) {\n              nextOption = option;\n\n              if (!isUpArrow) {\n                return {\n                  offsetOption: nextOption\n                };\n              }\n            }\n          }\n\n          if (optionValue === option[valueField]) {\n            currOption = option;\n\n            if (isUpArrow) {\n              return {\n                offsetOption: prevOption\n              };\n            }\n          } else {\n            if (!isDisabled) {\n              prevOption = option;\n            }\n          }\n        }\n      }\n\n      return {\n        firstOption: firstOption\n      };\n    };\n\n    var handleGlobalKeydownEvent = function (evnt) {\n      var clearable = props.clearable,\n          disabled = props.disabled;\n      var visiblePanel = reactData.visiblePanel,\n          currentValue = reactData.currentValue;\n\n      if (!disabled) {\n        var isTab = hasEventKey(evnt, EVENT_KEYS.TAB);\n        var isEnter = hasEventKey(evnt, EVENT_KEYS.ENTER);\n        var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n        var isUpArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_UP);\n        var isDwArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_DOWN);\n        var isDel = hasEventKey(evnt, EVENT_KEYS.DELETE);\n        var isSpacebar = hasEventKey(evnt, EVENT_KEYS.SPACEBAR);\n\n        if (isTab) {\n          reactData.isActivated = false;\n        }\n\n        if (visiblePanel) {\n          if (isEsc || isTab) {\n            hideOptionPanel();\n          } else if (isEnter) {\n            evnt.preventDefault();\n            evnt.stopPropagation();\n            changeOptionEvent(evnt, currentValue);\n          } else if (isUpArrow || isDwArrow) {\n            evnt.preventDefault();\n\n            var _a = findOffsetOption(currentValue, isUpArrow),\n                firstOption = _a.firstOption,\n                offsetOption = _a.offsetOption;\n\n            if (!offsetOption && !findOption(currentValue)) {\n              offsetOption = firstOption;\n            }\n\n            setCurrentOption(offsetOption);\n            scrollToOption(offsetOption, isDwArrow);\n          } else if (isSpacebar) {\n            evnt.preventDefault();\n          }\n        } else if ((isUpArrow || isDwArrow || isEnter || isSpacebar) && reactData.isActivated) {\n          evnt.preventDefault();\n          showOptionPanel();\n        }\n\n        if (reactData.isActivated) {\n          if (isDel && clearable) {\n            clearValueEvent(evnt, null);\n          }\n        }\n      }\n    };\n\n    var handleGlobalBlurEvent = function () {\n      hideOptionPanel();\n    };\n\n    var focusEvent = function () {\n      if (!props.disabled) {\n        reactData.isActivated = true;\n      }\n    };\n\n    var blurEvent = function () {\n      reactData.isActivated = false;\n    };\n\n    var togglePanelEvent = function (params) {\n      var $event = params.$event;\n      $event.preventDefault();\n\n      if (reactData.visiblePanel) {\n        hideOptionPanel();\n      } else {\n        showOptionPanel();\n      }\n    };\n\n    var renderOption = function (list, group) {\n      var optionKey = props.optionKey,\n          modelValue = props.modelValue,\n          multiple = props.multiple;\n      var currentValue = reactData.currentValue;\n      var optionOpts = computeOptionOpts.value;\n      var labelField = computeLabelField.value;\n      var valueField = computeValueField.value;\n      var isGroup = computeIsGroup.value;\n      var useKey = optionOpts.useKey;\n      return list.map(function (option, cIndex) {\n        var slots = option.slots,\n            className = option.className;\n        var isVisible = !isGroup || isOptionVisible(option);\n        var isDisabled = group && group.disabled || option.disabled;\n        var optionValue = option[valueField];\n        var optid = getOptid(option);\n        var defaultSlot = slots ? slots.default : null;\n        return isVisible ? h('div', {\n          key: useKey || optionKey ? optid : cIndex,\n          class: ['vxe-select-option', className ? XEUtils.isFunction(className) ? className({\n            option: option,\n            $select: $xeselect\n          }) : className : '', {\n            'is--disabled': isDisabled,\n            'is--selected': multiple ? modelValue && modelValue.indexOf(optionValue) > -1 : modelValue === optionValue,\n            'is--hover': currentValue === optionValue\n          }],\n          // attrs\n          optid: optid,\n          // event\n          onMousedown: function (evnt) {\n            var isLeftBtn = evnt.button === 0;\n\n            if (isLeftBtn) {\n              evnt.stopPropagation();\n            }\n          },\n          onClick: function (evnt) {\n            if (!isDisabled) {\n              changeOptionEvent(evnt, optionValue);\n            }\n          },\n          onMouseenter: function () {\n            if (!isDisabled) {\n              setCurrentOption(option);\n            }\n          }\n        }, defaultSlot ? callSlot(defaultSlot, {\n          option: option,\n          $select: $xeselect\n        }) : formatText(getFuncText(option[labelField]))) : null;\n      });\n    };\n\n    var renderOptgroup = function () {\n      var optionKey = props.optionKey;\n      var visibleGroupList = reactData.visibleGroupList;\n      var optionOpts = computeOptionOpts.value;\n      var groupLabelField = computeGroupLabelField.value;\n      var groupOptionsField = computeGroupOptionsField.value;\n      var useKey = optionOpts.useKey;\n      return visibleGroupList.map(function (group, gIndex) {\n        var slots = group.slots,\n            className = group.className;\n        var optid = getOptid(group);\n        var isGroupDisabled = group.disabled;\n        var defaultSlot = slots ? slots.default : null;\n        return h('div', {\n          key: useKey || optionKey ? optid : gIndex,\n          class: ['vxe-optgroup', className ? XEUtils.isFunction(className) ? className({\n            option: group,\n            $select: $xeselect\n          }) : className : '', {\n            'is--disabled': isGroupDisabled\n          }],\n          // attrs\n          optid: optid\n        }, [h('div', {\n          class: 'vxe-optgroup--title'\n        }, defaultSlot ? callSlot(defaultSlot, {\n          option: group,\n          $select: $xeselect\n        }) : getFuncText(group[groupLabelField])), h('div', {\n          class: 'vxe-optgroup--wrapper'\n        }, renderOption(group[groupOptionsField] || [], group))]);\n      });\n    };\n\n    var renderOpts = function () {\n      var visibleGroupList = reactData.visibleGroupList,\n          visibleOptionList = reactData.visibleOptionList;\n      var isGroup = computeIsGroup.value;\n\n      if (isGroup) {\n        if (visibleGroupList.length) {\n          return renderOptgroup();\n        }\n      } else {\n        if (visibleOptionList.length) {\n          return renderOption(visibleOptionList);\n        }\n      }\n\n      return [h('div', {\n        class: 'vxe-select--empty-placeholder'\n      }, props.emptyText || GlobalConfig.i18n('vxe.select.emptyText'))];\n    };\n\n    selectMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $select: $xeselect,\n          $event: evnt\n        }, params));\n      },\n      isPanelVisible: function () {\n        return reactData.visiblePanel;\n      },\n      togglePanel: function () {\n        if (reactData.visiblePanel) {\n          hideOptionPanel();\n        } else {\n          showOptionPanel();\n        }\n\n        return nextTick();\n      },\n      hidePanel: function () {\n        if (reactData.visiblePanel) {\n          hideOptionPanel();\n        }\n\n        return nextTick();\n      },\n      showPanel: function () {\n        if (!reactData.visiblePanel) {\n          showOptionPanel();\n        }\n\n        return nextTick();\n      },\n      refreshOption: refreshOption,\n      focus: function () {\n        var $input = refInput.value;\n        reactData.isActivated = true;\n        $input.blur();\n        return nextTick();\n      },\n      blur: function () {\n        var $input = refInput.value;\n        $input.blur();\n        reactData.isActivated = false;\n        return nextTick();\n      }\n    };\n    Object.assign($xeselect, selectMethods);\n    watch(function () {\n      return reactData.staticOptions;\n    }, function (value) {\n      if (value.some(function (item) {\n        return item.options && item.options.length;\n      })) {\n        reactData.fullOptionList = [];\n        reactData.fullGroupList = value;\n      } else {\n        reactData.fullGroupList = [];\n        reactData.fullOptionList = value || [];\n      }\n\n      cacheItemMap();\n    });\n    watch(function () {\n      return props.options;\n    }, function (value) {\n      reactData.fullGroupList = [];\n      reactData.fullOptionList = value || [];\n      cacheItemMap();\n    });\n    watch(function () {\n      return props.optionGroups;\n    }, function (value) {\n      reactData.fullOptionList = [];\n      reactData.fullGroupList = value || [];\n      cacheItemMap();\n    });\n    onMounted(function () {\n      nextTick(function () {\n        var options = props.options,\n            optionGroups = props.optionGroups;\n\n        if (optionGroups) {\n          reactData.fullGroupList = optionGroups;\n        } else if (options) {\n          reactData.fullOptionList = options;\n        }\n\n        cacheItemMap();\n      });\n      GlobalEvent.on($xeselect, 'mousewheel', handleGlobalMousewheelEvent);\n      GlobalEvent.on($xeselect, 'mousedown', handleGlobalMousedownEvent);\n      GlobalEvent.on($xeselect, 'keydown', handleGlobalKeydownEvent);\n      GlobalEvent.on($xeselect, 'blur', handleGlobalBlurEvent);\n    });\n    onUnmounted(function () {\n      GlobalEvent.off($xeselect, 'mousewheel');\n      GlobalEvent.off($xeselect, 'mousedown');\n      GlobalEvent.off($xeselect, 'keydown');\n      GlobalEvent.off($xeselect, 'blur');\n    });\n\n    var renderVN = function () {\n      var _a, _b;\n\n      var className = props.className,\n          transfer = props.transfer,\n          disabled = props.disabled,\n          loading = props.loading;\n      var inited = reactData.inited,\n          isActivated = reactData.isActivated,\n          visiblePanel = reactData.visiblePanel;\n      var vSize = computeSize.value;\n      var selectLabel = computeSelectLabel.value;\n      var prefixSlot = slots.prefix;\n      return h('div', {\n        ref: refElem,\n        class: ['vxe-select', className ? XEUtils.isFunction(className) ? className({\n          $select: $xeselect\n        }) : className : '', (_a = {}, _a[\"size--\" + vSize] = vSize, _a['is--visivle'] = visiblePanel, _a['is--disabled'] = disabled, _a['is--loading'] = loading, _a['is--active'] = isActivated, _a)]\n      }, [h('div', {\n        class: 'vxe-select-slots',\n        ref: 'hideOption'\n      }, slots.default ? slots.default({}) : []), h(resolveComponent('vxe-input'), {\n        ref: refInput,\n        clearable: props.clearable,\n        placeholder: props.placeholder,\n        readonly: true,\n        disabled: disabled,\n        type: 'text',\n        prefixIcon: props.prefixIcon,\n        suffixIcon: loading ? GlobalConfig.icon.SELECT_LOADED : visiblePanel ? GlobalConfig.icon.SELECT_OPEN : GlobalConfig.icon.SELECT_CLOSE,\n        modelValue: selectLabel,\n        onClear: clearEvent,\n        onClick: togglePanelEvent,\n        onFocus: focusEvent,\n        onBlur: blurEvent,\n        onSuffixClick: togglePanelEvent\n      }, prefixSlot ? {\n        prefix: function () {\n          return prefixSlot({});\n        }\n      } : {}), h(Teleport, {\n        to: 'body',\n        disabled: transfer ? !inited : true\n      }, [h('div', {\n        ref: refOptionPanel,\n        class: ['vxe-table--ignore-clear vxe-select--panel', (_b = {}, _b[\"size--\" + vSize] = vSize, _b['is--transfer'] = transfer, _b['animat--leave'] = !loading && reactData.animatVisible, _b['animat--enter'] = !loading && visiblePanel, _b)],\n        placement: reactData.panelPlacement,\n        style: reactData.panelStyle\n      }, inited ? [h('div', {\n        ref: refOptionWrapper,\n        class: 'vxe-select-option--wrapper'\n      }, renderOpts())] : [])])]);\n    };\n\n    $xeselect.renderVN = renderVN;\n    provide('$xeselect', $xeselect);\n    return $xeselect;\n  },\n  render: function () {\n    return this.renderVN();\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/select/src/select.js"],"names":["defineComponent","h","Teleport","ref","resolveComponent","computed","provide","onUnmounted","reactive","nextTick","watch","onMounted","XEUtils","GlobalConfig","useSize","getEventTargetNode","getAbsolutePos","getLastZIndex","nextZIndex","getFuncText","formatText","GlobalEvent","hasEventKey","EVENT_KEYS","isOptionVisible","option","visible","getOptUniqueId","uniqueId","name","props","modelValue","clearable","Boolean","placeholder","String","loading","disabled","multiple","multiCharOverflow","type","Number","default","select","prefixIcon","placement","options","Array","optionProps","Object","optionGroups","optionGroupProps","optionConfig","className","Function","size","emptyText","optionId","optionKey","transfer","emits","setup","context","slots","emit","xID","computeSize","reactData","inited","staticOptions","fullGroupList","fullOptionList","visibleGroupList","visibleOptionList","panelIndex","panelStyle","panelPlacement","currentValue","visiblePanel","animatVisible","isActivated","refElem","refInput","refOptionWrapper","refOptionPanel","refMaps","$xeselect","getRefMaps","selectMethods","computePropsOpts","computeGroupPropsOpts","computeLabelField","propsOpts","value","label","computeValueField","computeGroupLabelField","groupPropsOpts","computeGroupOptionsField","computeOptionOpts","assign","computeIsGroup","some","item","length","computeMultiMaxCharNum","toNumber","callSlot","slotFunc","params","isString","isFunction","findOption","optionValue","isGroup","valueField","gIndex","group","index","find","getSelectLabel","labelField","toValueString","computeSelectLabel","multiMaxCharNum","isArray","map","val","substring","join","getOptkey","optionOpts","keyField","getOptid","optid","encodeURIComponent","refreshOption","filter","cacheItemMap","groupOptionsField","key","handleOptis","forEach","setCurrentOption","scrollToOption","isAlignBottom","then","optWrapperElem","panelElem","optElem","querySelector","wrapperHeight","offsetHeight","offsetPadding","offsetTop","scrollTop","clientHeight","updateZindex","updatePlacement","el","targetHeight","targetWidth","offsetWidth","panelHeight","panelWidth","marginSize","zIndex","_a","boundingTop","boundingLeft","visibleHeight","visibleWidth","left","top_1","top","minWidth","bottom","hidePanelTimeout","showOptionPanel","clearTimeout","setTimeout","currOption","hideOptionPanel","window","changeEvent","evnt","selectValue","dispatchEvent","clearValueEvent","clearEvent","changeOptionEvent","multipleValue","indexOf","concat","handleGlobalMousewheelEvent","flag","handleGlobalMousedownEvent","findOffsetOption","isUpArrow","firstOption","prevOption","nextOption","groupOptionList","isGroupDisabled","isVisible","isDisabled","offsetOption","handleGlobalKeydownEvent","isTab","TAB","isEnter","ENTER","isEsc","ESCAPE","ARROW_UP","isDwArrow","ARROW_DOWN","isDel","DELETE","isSpacebar","SPACEBAR","preventDefault","stopPropagation","handleGlobalBlurEvent","focusEvent","blurEvent","togglePanelEvent","$event","renderOption","list","useKey","cIndex","defaultSlot","class","$select","onMousedown","isLeftBtn","button","onClick","onMouseenter","renderOptgroup","groupLabelField","renderOpts","i18n","isPanelVisible","togglePanel","hidePanel","showPanel","focus","$input","blur","on","off","renderVN","_b","vSize","selectLabel","prefixSlot","prefix","readonly","suffixIcon","icon","SELECT_LOADED","SELECT_OPEN","SELECT_CLOSE","onClear","onFocus","onBlur","onSuffixClick","to","style","render"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,CAA1B,EAA6BC,QAA7B,EAAuCC,GAAvC,EAA4CC,gBAA5C,EAA8DC,QAA9D,EAAwEC,OAAxE,EAAiFC,WAAjF,EAA8FC,QAA9F,EAAwGC,QAAxG,EAAkHC,KAAlH,EAAyHC,SAAzH,QAA0I,KAA1I;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,iBAAnD;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,WAApC,EAAiDC,UAAjD,QAAmE,mBAAnE;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,QAAqD,mBAArD;;AACA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,SAAOA,MAAM,CAACC,OAAP,KAAmB,KAA1B;AACH;;AACD,SAASC,cAAT,GAA0B;AACtB,SAAOf,OAAO,CAACgB,QAAR,CAAiB,MAAjB,CAAP;AACH;;AACD,eAAe5B,eAAe,CAAC;AAC3B6B,EAAAA,IAAI,EAAE,WADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,IADT;AAEHC,IAAAA,SAAS,EAAEC,OAFR;AAGHC,IAAAA,WAAW,EAAEC,MAHV;AAIHC,IAAAA,OAAO,EAAEH,OAJN;AAKHI,IAAAA,QAAQ,EAAEJ,OALP;AAMHK,IAAAA,QAAQ,EAAEL,OANP;AAOHM,IAAAA,iBAAiB,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASN,MAAT,CAAR;AAA0BO,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAO7B,YAAY,CAAC8B,MAAb,CAAoBJ,iBAA3B;AAA+C;AAAhG,KAPhB;AAQHK,IAAAA,UAAU,EAAET,MART;AASHU,IAAAA,SAAS,EAAEV,MATR;AAUHW,IAAAA,OAAO,EAAEC,KAVN;AAWHC,IAAAA,WAAW,EAAEC,MAXV;AAYHC,IAAAA,YAAY,EAAEH,KAZX;AAaHI,IAAAA,gBAAgB,EAAEF,MAbf;AAcHG,IAAAA,YAAY,EAAEH,MAdX;AAeHI,IAAAA,SAAS,EAAE,CAAClB,MAAD,EAASmB,QAAT,CAfR;AAgBHC,IAAAA,IAAI,EAAE;AAAEf,MAAAA,IAAI,EAAEL,MAAR;AAAgBO,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAO7B,YAAY,CAAC8B,MAAb,CAAoBY,IAApB,IAA4B1C,YAAY,CAAC0C,IAAhD;AAAuD;AAA9F,KAhBH;AAiBHC,IAAAA,SAAS,EAAErB,MAjBR;AAkBH;AACAsB,IAAAA,QAAQ,EAAE;AAAEjB,MAAAA,IAAI,EAAEL,MAAR;AAAgBO,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAO7B,YAAY,CAAC8B,MAAb,CAAoBc,QAA3B;AAAsC;AAA7E,KAnBP;AAoBH;AACAC,IAAAA,SAAS,EAAEzB,OArBR;AAsBH0B,IAAAA,QAAQ,EAAE;AAAEnB,MAAAA,IAAI,EAAEP,OAAR;AAAiBS,MAAAA,OAAO,EAAE,YAAY;AAAE,eAAO7B,YAAY,CAAC8B,MAAb,CAAoBgB,QAA3B;AAAsC;AAA9E;AAtBP,GAFoB;AA0B3BC,EAAAA,KAAK,EAAE,CACH,mBADG,EAEH,QAFG,EAGH,OAHG,CA1BoB;AA+B3BC,EAAAA,KAAK,EAAE,UAAU/B,KAAV,EAAiBgC,OAAjB,EAA0B;AAC7B,QAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,QAA2BC,IAAI,GAAGF,OAAO,CAACE,IAA1C;AACA,QAAIC,GAAG,GAAGrD,OAAO,CAACgB,QAAR,EAAV;AACA,QAAIsC,WAAW,GAAGpD,OAAO,CAACgB,KAAD,CAAzB;AACA,QAAIqC,SAAS,GAAG3D,QAAQ,CAAC;AACrB4D,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,aAAa,EAAE,EAFM;AAGrBC,MAAAA,aAAa,EAAE,EAHM;AAIrBC,MAAAA,cAAc,EAAE,EAJK;AAKrBC,MAAAA,gBAAgB,EAAE,EALG;AAMrBC,MAAAA,iBAAiB,EAAE,EANE;AAOrBC,MAAAA,UAAU,EAAE,CAPS;AAQrBC,MAAAA,UAAU,EAAE,EARS;AASrBC,MAAAA,cAAc,EAAE,IATK;AAUrBC,MAAAA,YAAY,EAAE,IAVO;AAWrBC,MAAAA,YAAY,EAAE,KAXO;AAYrBC,MAAAA,aAAa,EAAE,KAZM;AAarBC,MAAAA,WAAW,EAAE;AAbQ,KAAD,CAAxB;AAeA,QAAIC,OAAO,GAAG9E,GAAG,EAAjB;AACA,QAAI+E,QAAQ,GAAG/E,GAAG,EAAlB;AACA,QAAIgF,gBAAgB,GAAGhF,GAAG,EAA1B;AACA,QAAIiF,cAAc,GAAGjF,GAAG,EAAxB;AACA,QAAIkF,OAAO,GAAG;AACVJ,MAAAA,OAAO,EAAEA;AADC,KAAd;AAGA,QAAIK,SAAS,GAAG;AACZrB,MAAAA,GAAG,EAAEA,GADO;AAEZnC,MAAAA,KAAK,EAAEA,KAFK;AAGZgC,MAAAA,OAAO,EAAEA,OAHG;AAIZK,MAAAA,SAAS,EAAEA,SAJC;AAKZoB,MAAAA,UAAU,EAAE,YAAY;AAAE,eAAOF,OAAP;AAAiB;AAL/B,KAAhB;AAOA,QAAIG,aAAa,GAAG,EAApB;AACA,QAAIC,gBAAgB,GAAGpF,QAAQ,CAAC,YAAY;AACxC,aAAOyB,KAAK,CAACkB,WAAN,IAAqB,EAA5B;AACH,KAF8B,CAA/B;AAGA,QAAI0C,qBAAqB,GAAGrF,QAAQ,CAAC,YAAY;AAC7C,aAAOyB,KAAK,CAACqB,gBAAN,IAA0B,EAAjC;AACH,KAFmC,CAApC;AAGA,QAAIwC,iBAAiB,GAAGtF,QAAQ,CAAC,YAAY;AACzC,UAAIuF,SAAS,GAAGH,gBAAgB,CAACI,KAAjC;AACA,aAAOD,SAAS,CAACE,KAAV,IAAmB,OAA1B;AACH,KAH+B,CAAhC;AAIA,QAAIC,iBAAiB,GAAG1F,QAAQ,CAAC,YAAY;AACzC,UAAIuF,SAAS,GAAGH,gBAAgB,CAACI,KAAjC;AACA,aAAOD,SAAS,CAACC,KAAV,IAAmB,OAA1B;AACH,KAH+B,CAAhC;AAIA,QAAIG,sBAAsB,GAAG3F,QAAQ,CAAC,YAAY;AAC9C,UAAI4F,cAAc,GAAGP,qBAAqB,CAACG,KAA3C;AACA,aAAOI,cAAc,CAACH,KAAf,IAAwB,OAA/B;AACH,KAHoC,CAArC;AAIA,QAAII,wBAAwB,GAAG7F,QAAQ,CAAC,YAAY;AAChD,UAAI4F,cAAc,GAAGP,qBAAqB,CAACG,KAA3C;AACA,aAAOI,cAAc,CAACnD,OAAf,IAA0B,SAAjC;AACH,KAHsC,CAAvC;AAIA,QAAIqD,iBAAiB,GAAG9F,QAAQ,CAAC,YAAY;AACzC,aAAO4C,MAAM,CAACmD,MAAP,CAAc,EAAd,EAAkBvF,YAAY,CAAC8B,MAAb,CAAoBS,YAAtC,EAAoDtB,KAAK,CAACsB,YAA1D,CAAP;AACH,KAF+B,CAAhC;AAGA,QAAIiD,cAAc,GAAGhG,QAAQ,CAAC,YAAY;AACtC,aAAO8D,SAAS,CAACG,aAAV,CAAwBgC,IAAxB,CAA6B,UAAUC,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAACzD,OAAL,IAAgByD,IAAI,CAACzD,OAAL,CAAa0D,MAApC;AAA6C,OAA5F,CAAP;AACH,KAF4B,CAA7B;AAGA,QAAIC,sBAAsB,GAAGpG,QAAQ,CAAC,YAAY;AAC9C,aAAOO,OAAO,CAAC8F,QAAR,CAAiB5E,KAAK,CAACS,iBAAvB,CAAP;AACH,KAFoC,CAArC;;AAGA,QAAIoE,QAAQ,GAAG,UAAUC,QAAV,EAAoBC,MAApB,EAA4B;AACvC,UAAID,QAAJ,EAAc;AACV,YAAIhG,OAAO,CAACkG,QAAR,CAAiBF,QAAjB,CAAJ,EAAgC;AAC5BA,UAAAA,QAAQ,GAAG7C,KAAK,CAAC6C,QAAD,CAAL,IAAmB,IAA9B;AACH;;AACD,YAAIhG,OAAO,CAACmG,UAAR,CAAmBH,QAAnB,CAAJ,EAAkC;AAC9B,iBAAOA,QAAQ,CAACC,MAAD,CAAf;AACH;AACJ;;AACD,aAAO,EAAP;AACH,KAVD;;AAWA,QAAIG,UAAU,GAAG,UAAUC,WAAV,EAAuB;AACpC,UAAI1C,cAAc,GAAGJ,SAAS,CAACI,cAA/B;AAAA,UAA+CD,aAAa,GAAGH,SAAS,CAACG,aAAzE;AACA,UAAI4C,OAAO,GAAGb,cAAc,CAACR,KAA7B;AACA,UAAIsB,UAAU,GAAGpB,iBAAiB,CAACF,KAAnC;;AACA,UAAIqB,OAAJ,EAAa;AACT,aAAK,IAAIE,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG9C,aAAa,CAACkC,MAA5C,EAAoDY,MAAM,EAA1D,EAA8D;AAC1D,cAAIC,KAAK,GAAG/C,aAAa,CAAC8C,MAAD,CAAzB;;AACA,cAAIC,KAAK,CAACvE,OAAV,EAAmB;AACf,iBAAK,IAAIwE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,KAAK,CAACvE,OAAN,CAAc0D,MAA1C,EAAkDc,KAAK,EAAvD,EAA2D;AACvD,kBAAI7F,MAAM,GAAG4F,KAAK,CAACvE,OAAN,CAAcwE,KAAd,CAAb;;AACA,kBAAIL,WAAW,KAAKxF,MAAM,CAAC0F,UAAD,CAA1B,EAAwC;AACpC,uBAAO1F,MAAP;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,aAAO8C,cAAc,CAACgD,IAAf,CAAoB,UAAUhB,IAAV,EAAgB;AAAE,eAAOU,WAAW,KAAKV,IAAI,CAACY,UAAD,CAA3B;AAA0C,OAAhF,CAAP;AACH,KAlBD;;AAmBA,QAAIK,cAAc,GAAG,UAAU3B,KAAV,EAAiB;AAClC,UAAI4B,UAAU,GAAG9B,iBAAiB,CAACE,KAAnC;AACA,UAAIU,IAAI,GAAGS,UAAU,CAACnB,KAAD,CAArB;AACA,aAAOjF,OAAO,CAAC8G,aAAR,CAAsBnB,IAAI,GAAGA,IAAI,CAACkB,UAAD,CAAP,GAAsB5B,KAAhD,CAAP;AACH,KAJD;;AAKA,QAAI8B,kBAAkB,GAAGtH,QAAQ,CAAC,YAAY;AAC1C,UAAI0B,UAAU,GAAGD,KAAK,CAACC,UAAvB;AAAA,UAAmCO,QAAQ,GAAGR,KAAK,CAACQ,QAApD;AACA,UAAIsF,eAAe,GAAGnB,sBAAsB,CAACZ,KAA7C;;AACA,UAAI9D,UAAU,IAAIO,QAAlB,EAA4B;AACxB,eAAO,CAAC1B,OAAO,CAACiH,OAAR,CAAgB9F,UAAhB,IAA8BA,UAA9B,GAA2C,CAACA,UAAD,CAA5C,EAA0D+F,GAA1D,CAA8D,UAAUC,GAAV,EAAe;AAChF,cAAIjC,KAAK,GAAG0B,cAAc,CAACO,GAAD,CAA1B;;AACA,cAAIH,eAAe,GAAG,CAAlB,IAAuB9B,KAAK,CAACU,MAAN,GAAeoB,eAA1C,EAA2D;AACvD,mBAAO9B,KAAK,CAACkC,SAAN,CAAgB,CAAhB,EAAmBJ,eAAnB,IAAsC,KAA7C;AACH;;AACD,iBAAO9B,KAAP;AACH,SANM,EAMJmC,IANI,CAMC,IAND,CAAP;AAOH;;AACD,aAAOT,cAAc,CAACzF,UAAD,CAArB;AACH,KAbgC,CAAjC;;AAcA,QAAImG,SAAS,GAAG,YAAY;AACxB,UAAIC,UAAU,GAAGhC,iBAAiB,CAACN,KAAnC;AACA,aAAOsC,UAAU,CAACC,QAAX,IAAuBtG,KAAK,CAAC2B,QAA7B,IAAyC,eAAhD;AACH,KAHD;;AAIA,QAAI4E,QAAQ,GAAG,UAAU5G,MAAV,EAAkB;AAC7B,UAAI6G,KAAK,GAAG7G,MAAM,CAACyG,SAAS,EAAV,CAAlB;AACA,aAAOI,KAAK,GAAGC,kBAAkB,CAACD,KAAD,CAArB,GAA+B,EAA3C;AACH,KAHD;AAIA;AACR;AACA;;;AACQ,QAAIE,aAAa,GAAG,YAAY;AAC5B,UAAIjE,cAAc,GAAGJ,SAAS,CAACI,cAA/B;AAAA,UAA+CD,aAAa,GAAGH,SAAS,CAACG,aAAzE;AACA,UAAI4C,OAAO,GAAGb,cAAc,CAACR,KAA7B;;AACA,UAAIqB,OAAJ,EAAa;AACT/C,QAAAA,SAAS,CAACK,gBAAV,GAA6BF,aAAa,CAACmE,MAAd,CAAqBjH,eAArB,CAA7B;AACH,OAFD,MAGK;AACD2C,QAAAA,SAAS,CAACM,iBAAV,GAA8BF,cAAc,CAACkE,MAAf,CAAsBjH,eAAtB,CAA9B;AACH;;AACD,aAAOf,QAAQ,EAAf;AACH,KAVD;;AAWA,QAAIiI,YAAY,GAAG,YAAY;AAC3B,UAAInE,cAAc,GAAGJ,SAAS,CAACI,cAA/B;AAAA,UAA+CD,aAAa,GAAGH,SAAS,CAACG,aAAzE;AACA,UAAIqE,iBAAiB,GAAGzC,wBAAwB,CAACL,KAAjD;AACA,UAAI+C,GAAG,GAAGV,SAAS,EAAnB;;AACA,UAAIW,WAAW,GAAG,UAAUtC,IAAV,EAAgB;AAC9B,YAAI,CAAC8B,QAAQ,CAAC9B,IAAD,CAAb,EAAqB;AACjBA,UAAAA,IAAI,CAACqC,GAAD,CAAJ,GAAYjH,cAAc,EAA1B;AACH;AACJ,OAJD;;AAKA,UAAI2C,aAAa,CAACkC,MAAlB,EAA0B;AACtBlC,QAAAA,aAAa,CAACwE,OAAd,CAAsB,UAAUzB,KAAV,EAAiB;AACnCwB,UAAAA,WAAW,CAACxB,KAAD,CAAX;;AACA,cAAIA,KAAK,CAACsB,iBAAD,CAAT,EAA8B;AAC1BtB,YAAAA,KAAK,CAACsB,iBAAD,CAAL,CAAyBG,OAAzB,CAAiCD,WAAjC;AACH;AACJ,SALD;AAMH,OAPD,MAQK,IAAItE,cAAc,CAACiC,MAAnB,EAA2B;AAC5BjC,QAAAA,cAAc,CAACuE,OAAf,CAAuBD,WAAvB;AACH;;AACDL,MAAAA,aAAa;AAChB,KArBD;;AAsBA,QAAIO,gBAAgB,GAAG,UAAUtH,MAAV,EAAkB;AACrC,UAAI0F,UAAU,GAAGpB,iBAAiB,CAACF,KAAnC;;AACA,UAAIpE,MAAJ,EAAY;AACR0C,QAAAA,SAAS,CAACU,YAAV,GAAyBpD,MAAM,CAAC0F,UAAD,CAA/B;AACH;AACJ,KALD;;AAMA,QAAI6B,cAAc,GAAG,UAAUvH,MAAV,EAAkBwH,aAAlB,EAAiC;AAClD,aAAOxI,QAAQ,GAAGyI,IAAX,CAAgB,YAAY;AAC/B,YAAIzH,MAAJ,EAAY;AACR,cAAI0H,cAAc,GAAGhE,gBAAgB,CAACU,KAAtC;AACA,cAAIuD,SAAS,GAAGhE,cAAc,CAACS,KAA/B;AACA,cAAIwD,OAAO,GAAGD,SAAS,CAACE,aAAV,CAAwB,aAAajB,QAAQ,CAAC5G,MAAD,CAArB,GAAgC,IAAxD,CAAd;;AACA,cAAI0H,cAAc,IAAIE,OAAtB,EAA+B;AAC3B,gBAAIE,aAAa,GAAGJ,cAAc,CAACK,YAAnC;AACA,gBAAIC,aAAa,GAAG,CAApB;;AACA,gBAAIR,aAAJ,EAAmB;AACf,kBAAII,OAAO,CAACK,SAAR,GAAoBL,OAAO,CAACG,YAA5B,GAA2CL,cAAc,CAACQ,SAA1D,GAAsEJ,aAA1E,EAAyF;AACrFJ,gBAAAA,cAAc,CAACQ,SAAf,GAA2BN,OAAO,CAACK,SAAR,GAAoBL,OAAO,CAACG,YAA5B,GAA2CD,aAAtE;AACH;AACJ,aAJD,MAKK;AACD,kBAAIF,OAAO,CAACK,SAAR,GAAoBD,aAApB,GAAoCN,cAAc,CAACQ,SAAnD,IAAgEN,OAAO,CAACK,SAAR,GAAoBD,aAApB,GAAoCN,cAAc,CAACQ,SAAf,GAA2BR,cAAc,CAACS,YAAlJ,EAAgK;AAC5JT,gBAAAA,cAAc,CAACQ,SAAf,GAA2BN,OAAO,CAACK,SAAR,GAAoBD,aAA/C;AACH;AACJ;AACJ;AACJ;AACJ,OApBM,CAAP;AAqBH,KAtBD;;AAuBA,QAAII,YAAY,GAAG,YAAY;AAC3B,UAAI1F,SAAS,CAACO,UAAV,GAAuBzD,aAAa,EAAxC,EAA4C;AACxCkD,QAAAA,SAAS,CAACO,UAAV,GAAuBxD,UAAU,EAAjC;AACH;AACJ,KAJD;;AAKA,QAAI4I,eAAe,GAAG,YAAY;AAC9B,aAAOrJ,QAAQ,GAAGyI,IAAX,CAAgB,YAAY;AAC/B,YAAIvF,QAAQ,GAAG7B,KAAK,CAAC6B,QAArB;AAAA,YAA+Bd,SAAS,GAAGf,KAAK,CAACe,SAAjD;AACA,YAAI6B,UAAU,GAAGP,SAAS,CAACO,UAA3B;AACA,YAAIqF,EAAE,GAAG9E,OAAO,CAACY,KAAjB;AACA,YAAIuD,SAAS,GAAGhE,cAAc,CAACS,KAA/B;;AACA,YAAIuD,SAAS,IAAIW,EAAjB,EAAqB;AACjB,cAAIC,YAAY,GAAGD,EAAE,CAACP,YAAtB;AACA,cAAIS,WAAW,GAAGF,EAAE,CAACG,WAArB;AACA,cAAIC,WAAW,GAAGf,SAAS,CAACI,YAA5B;AACA,cAAIY,UAAU,GAAGhB,SAAS,CAACc,WAA3B;AACA,cAAIG,UAAU,GAAG,CAAjB;AACA,cAAI1F,UAAU,GAAG;AACb2F,YAAAA,MAAM,EAAE5F;AADK,WAAjB;;AAGA,cAAI6F,EAAE,GAAGvJ,cAAc,CAAC+I,EAAD,CAAvB;AAAA,cAA6BS,WAAW,GAAGD,EAAE,CAACC,WAA9C;AAAA,cAA2DC,YAAY,GAAGF,EAAE,CAACE,YAA7E;AAAA,cAA2FC,aAAa,GAAGH,EAAE,CAACG,aAA9G;AAAA,cAA6HC,YAAY,GAAGJ,EAAE,CAACI,YAA/I;;AACA,cAAI/F,cAAc,GAAG,QAArB;;AACA,cAAIjB,QAAJ,EAAc;AACV,gBAAIiH,IAAI,GAAGH,YAAX;AACA,gBAAII,KAAK,GAAGL,WAAW,GAAGR,YAA1B;;AACA,gBAAInH,SAAS,KAAK,KAAlB,EAAyB;AACrB+B,cAAAA,cAAc,GAAG,KAAjB;AACAiG,cAAAA,KAAK,GAAGL,WAAW,GAAGL,WAAtB;AACH,aAHD,MAIK,IAAI,CAACtH,SAAL,EAAgB;AACjB;AACA,kBAAIgI,KAAK,GAAGV,WAAR,GAAsBE,UAAtB,GAAmCK,aAAvC,EAAsD;AAClD9F,gBAAAA,cAAc,GAAG,KAAjB;AACAiG,gBAAAA,KAAK,GAAGL,WAAW,GAAGL,WAAtB;AACH,eALgB,CAMjB;;;AACA,kBAAIU,KAAK,GAAGR,UAAZ,EAAwB;AACpBzF,gBAAAA,cAAc,GAAG,QAAjB;AACAiG,gBAAAA,KAAK,GAAGL,WAAW,GAAGR,YAAtB;AACH;AACJ,aAlBS,CAmBV;;;AACA,gBAAIY,IAAI,GAAGR,UAAP,GAAoBC,UAApB,GAAiCM,YAArC,EAAmD;AAC/CC,cAAAA,IAAI,IAAIA,IAAI,GAAGR,UAAP,GAAoBC,UAApB,GAAiCM,YAAzC;AACH,aAtBS,CAuBV;;;AACA,gBAAIC,IAAI,GAAGP,UAAX,EAAuB;AACnBO,cAAAA,IAAI,GAAGP,UAAP;AACH;;AACDpH,YAAAA,MAAM,CAACmD,MAAP,CAAczB,UAAd,EAA0B;AACtBiG,cAAAA,IAAI,EAAEA,IAAI,GAAG,IADS;AAEtBE,cAAAA,GAAG,EAAED,KAAK,GAAG,IAFS;AAGtBE,cAAAA,QAAQ,EAAEd,WAAW,GAAG;AAHF,aAA1B;AAKH,WAhCD,MAiCK;AACD,gBAAIpH,SAAS,KAAK,KAAlB,EAAyB;AACrB+B,cAAAA,cAAc,GAAG,KAAjB;AACAD,cAAAA,UAAU,CAACqG,MAAX,GAAoBhB,YAAY,GAAG,IAAnC;AACH,aAHD,MAIK,IAAI,CAACnH,SAAL,EAAgB;AACjB;AACA,kBAAI2H,WAAW,GAAGR,YAAd,GAA6BG,WAA7B,GAA2CO,aAA/C,EAA8D;AAC1D;AACA,oBAAIF,WAAW,GAAGR,YAAd,GAA6BG,WAA7B,GAA2CE,UAA/C,EAA2D;AACvDzF,kBAAAA,cAAc,GAAG,KAAjB;AACAD,kBAAAA,UAAU,CAACqG,MAAX,GAAoBhB,YAAY,GAAG,IAAnC;AACH;AACJ;AACJ;AACJ;;AACD7F,UAAAA,SAAS,CAACQ,UAAV,GAAuBA,UAAvB;AACAR,UAAAA,SAAS,CAACS,cAAV,GAA2BA,cAA3B;AACA,iBAAOnE,QAAQ,EAAf;AACH;AACJ,OArEM,CAAP;AAsEH,KAvED;;AAwEA,QAAIwK,gBAAJ;;AACA,QAAIC,eAAe,GAAG,YAAY;AAC9B,UAAI9I,OAAO,GAAGN,KAAK,CAACM,OAApB;AAAA,UAA6BC,QAAQ,GAAGP,KAAK,CAACO,QAA9C;;AACA,UAAI,CAACD,OAAD,IAAY,CAACC,QAAjB,EAA2B;AACvB8I,QAAAA,YAAY,CAACF,gBAAD,CAAZ;;AACA,YAAI,CAAC9G,SAAS,CAACC,MAAf,EAAuB;AACnBD,UAAAA,SAAS,CAACC,MAAV,GAAmB,IAAnB;AACH;;AACDD,QAAAA,SAAS,CAACa,WAAV,GAAwB,IAAxB;AACAb,QAAAA,SAAS,CAACY,aAAV,GAA0B,IAA1B;AACAqG,QAAAA,UAAU,CAAC,YAAY;AACnB,cAAIrJ,UAAU,GAAGD,KAAK,CAACC,UAAvB;AAAA,cAAmCO,QAAQ,GAAGR,KAAK,CAACQ,QAApD;AACA,cAAI+I,UAAU,GAAGrE,UAAU,CAAC1E,QAAQ,IAAIP,UAAZ,GAAyBA,UAAU,CAAC,CAAD,CAAnC,GAAyCA,UAA1C,CAA3B;AACAoC,UAAAA,SAAS,CAACW,YAAV,GAAyB,IAAzB;;AACA,cAAIuG,UAAJ,EAAgB;AACZtC,YAAAA,gBAAgB,CAACsC,UAAD,CAAhB;AACArC,YAAAA,cAAc,CAACqC,UAAD,CAAd;AACH;AACJ,SARS,EAQP,EARO,CAAV;AASAxB,QAAAA,YAAY;AACZC,QAAAA,eAAe;AAClB;AACJ,KArBD;;AAsBA,QAAIwB,eAAe,GAAG,YAAY;AAC9BnH,MAAAA,SAAS,CAACW,YAAV,GAAyB,KAAzB;AACAmG,MAAAA,gBAAgB,GAAGM,MAAM,CAACH,UAAP,CAAkB,YAAY;AAC7CjH,QAAAA,SAAS,CAACY,aAAV,GAA0B,KAA1B;AACH,OAFkB,EAEhB,GAFgB,CAAnB;AAGH,KALD;;AAMA,QAAIyG,WAAW,GAAG,UAAUC,IAAV,EAAgBC,WAAhB,EAA6B;AAC3C,UAAIA,WAAW,KAAK5J,KAAK,CAACC,UAA1B,EAAsC;AAClCiC,QAAAA,IAAI,CAAC,mBAAD,EAAsB0H,WAAtB,CAAJ;AACAlG,QAAAA,aAAa,CAACmG,aAAd,CAA4B,QAA5B,EAAsC;AAAE9F,UAAAA,KAAK,EAAE6F;AAAT,SAAtC,EAA8DD,IAA9D;AACH;AACJ,KALD;;AAMA,QAAIG,eAAe,GAAG,UAAUH,IAAV,EAAgBC,WAAhB,EAA6B;AAC/CF,MAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,CAAX;AACAlG,MAAAA,aAAa,CAACmG,aAAd,CAA4B,OAA5B,EAAqC;AAAE9F,QAAAA,KAAK,EAAE6F;AAAT,OAArC,EAA6DD,IAA7D;AACH,KAHD;;AAIA,QAAII,UAAU,GAAG,UAAUhF,MAAV,EAAkB4E,IAAlB,EAAwB;AACrCG,MAAAA,eAAe,CAACH,IAAD,EAAO,IAAP,CAAf;AACAH,MAAAA,eAAe;AAClB,KAHD;;AAIA,QAAIQ,iBAAiB,GAAG,UAAUL,IAAV,EAAgBC,WAAhB,EAA6B;AACjD,UAAI3J,UAAU,GAAGD,KAAK,CAACC,UAAvB;AAAA,UAAmCO,QAAQ,GAAGR,KAAK,CAACQ,QAApD;;AACA,UAAIA,QAAJ,EAAc;AACV,YAAIyJ,aAAa,GAAG,KAAK,CAAzB;;AACA,YAAIhK,UAAJ,EAAgB;AACZ,cAAIA,UAAU,CAACiK,OAAX,CAAmBN,WAAnB,MAAoC,CAAC,CAAzC,EAA4C;AACxCK,YAAAA,aAAa,GAAGhK,UAAU,CAACkK,MAAX,CAAkB,CAACP,WAAD,CAAlB,CAAhB;AACH,WAFD,MAGK;AACDK,YAAAA,aAAa,GAAGhK,UAAU,CAAC0G,MAAX,CAAkB,UAAUV,GAAV,EAAe;AAAE,qBAAOA,GAAG,KAAK2D,WAAf;AAA6B,aAAhE,CAAhB;AACH;AACJ,SAPD,MAQK;AACDK,UAAAA,aAAa,GAAG,CAACL,WAAD,CAAhB;AACH;;AACDF,QAAAA,WAAW,CAACC,IAAD,EAAOM,aAAP,CAAX;AACH,OAdD,MAeK;AACDP,QAAAA,WAAW,CAACC,IAAD,EAAOC,WAAP,CAAX;AACAJ,QAAAA,eAAe;AAClB;AACJ,KArBD;;AAsBA,QAAIY,2BAA2B,GAAG,UAAUT,IAAV,EAAgB;AAC9C,UAAIpJ,QAAQ,GAAGP,KAAK,CAACO,QAArB;AACA,UAAIyC,YAAY,GAAGX,SAAS,CAACW,YAA7B;;AACA,UAAI,CAACzC,QAAL,EAAe;AACX,YAAIyC,YAAJ,EAAkB;AACd,cAAIsE,SAAS,GAAGhE,cAAc,CAACS,KAA/B;;AACA,cAAI9E,kBAAkB,CAAC0K,IAAD,EAAOrC,SAAP,CAAlB,CAAoC+C,IAAxC,EAA8C;AAC1CrC,YAAAA,eAAe;AAClB,WAFD,MAGK;AACDwB,YAAAA,eAAe;AAClB;AACJ;AACJ;AACJ,KAdD;;AAeA,QAAIc,0BAA0B,GAAG,UAAUX,IAAV,EAAgB;AAC7C,UAAIpJ,QAAQ,GAAGP,KAAK,CAACO,QAArB;AACA,UAAIyC,YAAY,GAAGX,SAAS,CAACW,YAA7B;;AACA,UAAI,CAACzC,QAAL,EAAe;AACX,YAAI0H,EAAE,GAAG9E,OAAO,CAACY,KAAjB;AACA,YAAIuD,SAAS,GAAGhE,cAAc,CAACS,KAA/B;AACA1B,QAAAA,SAAS,CAACa,WAAV,GAAwBjE,kBAAkB,CAAC0K,IAAD,EAAO1B,EAAP,CAAlB,CAA6BoC,IAA7B,IAAqCpL,kBAAkB,CAAC0K,IAAD,EAAOrC,SAAP,CAAlB,CAAoC+C,IAAjG;;AACA,YAAIrH,YAAY,IAAI,CAACX,SAAS,CAACa,WAA/B,EAA4C;AACxCsG,UAAAA,eAAe;AAClB;AACJ;AACJ,KAXD;;AAYA,QAAIe,gBAAgB,GAAG,UAAUpF,WAAV,EAAuBqF,SAAvB,EAAkC;AACrD,UAAI7H,iBAAiB,GAAGN,SAAS,CAACM,iBAAlC;AAAA,UAAqDD,gBAAgB,GAAGL,SAAS,CAACK,gBAAlF;AACA,UAAI0C,OAAO,GAAGb,cAAc,CAACR,KAA7B;AACA,UAAIsB,UAAU,GAAGpB,iBAAiB,CAACF,KAAnC;AACA,UAAI8C,iBAAiB,GAAGzC,wBAAwB,CAACL,KAAjD;AACA,UAAI0G,WAAJ;AACA,UAAIC,UAAJ;AACA,UAAIC,UAAJ;AACA,UAAIpB,UAAJ;;AACA,UAAInE,OAAJ,EAAa;AACT,aAAK,IAAIE,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG5C,gBAAgB,CAACgC,MAA/C,EAAuDY,MAAM,EAA7D,EAAiE;AAC7D,cAAIC,KAAK,GAAG7C,gBAAgB,CAAC4C,MAAD,CAA5B;AACA,cAAIsF,eAAe,GAAGrF,KAAK,CAACsB,iBAAD,CAA3B;AACA,cAAIgE,eAAe,GAAGtF,KAAK,CAAChF,QAA5B;;AACA,cAAIqK,eAAJ,EAAqB;AACjB,iBAAK,IAAIpF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGoF,eAAe,CAAClG,MAA5C,EAAoDc,KAAK,EAAzD,EAA6D;AACzD,kBAAI7F,MAAM,GAAGiL,eAAe,CAACpF,KAAD,CAA5B;AACA,kBAAIsF,SAAS,GAAGpL,eAAe,CAACC,MAAD,CAA/B;AACA,kBAAIoL,UAAU,GAAGF,eAAe,IAAIlL,MAAM,CAACY,QAA3C;;AACA,kBAAI,CAACkK,WAAD,IAAgB,CAACM,UAArB,EAAiC;AAC7BN,gBAAAA,WAAW,GAAG9K,MAAd;AACH;;AACD,kBAAI4J,UAAJ,EAAgB;AACZ,oBAAIuB,SAAS,IAAI,CAACC,UAAlB,EAA8B;AAC1BJ,kBAAAA,UAAU,GAAGhL,MAAb;;AACA,sBAAI,CAAC6K,SAAL,EAAgB;AACZ,2BAAO;AAAEQ,sBAAAA,YAAY,EAAEL;AAAhB,qBAAP;AACH;AACJ;AACJ;;AACD,kBAAIxF,WAAW,KAAKxF,MAAM,CAAC0F,UAAD,CAA1B,EAAwC;AACpCkE,gBAAAA,UAAU,GAAG5J,MAAb;;AACA,oBAAI6K,SAAJ,EAAe;AACX,yBAAO;AAAEQ,oBAAAA,YAAY,EAAEN;AAAhB,mBAAP;AACH;AACJ,eALD,MAMK;AACD,oBAAII,SAAS,IAAI,CAACC,UAAlB,EAA8B;AAC1BL,kBAAAA,UAAU,GAAG/K,MAAb;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,OAnCD,MAoCK;AACD,aAAK,IAAI6F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG7C,iBAAiB,CAAC+B,MAA9C,EAAsDc,KAAK,EAA3D,EAA+D;AAC3D,cAAI7F,MAAM,GAAGgD,iBAAiB,CAAC6C,KAAD,CAA9B;AACA,cAAIuF,UAAU,GAAGpL,MAAM,CAACY,QAAxB;;AACA,cAAI,CAACkK,WAAD,IAAgB,CAACM,UAArB,EAAiC;AAC7BN,YAAAA,WAAW,GAAG9K,MAAd;AACH;;AACD,cAAI4J,UAAJ,EAAgB;AACZ,gBAAI,CAACwB,UAAL,EAAiB;AACbJ,cAAAA,UAAU,GAAGhL,MAAb;;AACA,kBAAI,CAAC6K,SAAL,EAAgB;AACZ,uBAAO;AAAEQ,kBAAAA,YAAY,EAAEL;AAAhB,iBAAP;AACH;AACJ;AACJ;;AACD,cAAIxF,WAAW,KAAKxF,MAAM,CAAC0F,UAAD,CAA1B,EAAwC;AACpCkE,YAAAA,UAAU,GAAG5J,MAAb;;AACA,gBAAI6K,SAAJ,EAAe;AACX,qBAAO;AAAEQ,gBAAAA,YAAY,EAAEN;AAAhB,eAAP;AACH;AACJ,WALD,MAMK;AACD,gBAAI,CAACK,UAAL,EAAiB;AACbL,cAAAA,UAAU,GAAG/K,MAAb;AACH;AACJ;AACJ;AACJ;;AACD,aAAO;AAAE8K,QAAAA,WAAW,EAAEA;AAAf,OAAP;AACH,KA1ED;;AA2EA,QAAIQ,wBAAwB,GAAG,UAAUtB,IAAV,EAAgB;AAC3C,UAAIzJ,SAAS,GAAGF,KAAK,CAACE,SAAtB;AAAA,UAAiCK,QAAQ,GAAGP,KAAK,CAACO,QAAlD;AACA,UAAIyC,YAAY,GAAGX,SAAS,CAACW,YAA7B;AAAA,UAA2CD,YAAY,GAAGV,SAAS,CAACU,YAApE;;AACA,UAAI,CAACxC,QAAL,EAAe;AACX,YAAI2K,KAAK,GAAG1L,WAAW,CAACmK,IAAD,EAAOlK,UAAU,CAAC0L,GAAlB,CAAvB;AACA,YAAIC,OAAO,GAAG5L,WAAW,CAACmK,IAAD,EAAOlK,UAAU,CAAC4L,KAAlB,CAAzB;AACA,YAAIC,KAAK,GAAG9L,WAAW,CAACmK,IAAD,EAAOlK,UAAU,CAAC8L,MAAlB,CAAvB;AACA,YAAIf,SAAS,GAAGhL,WAAW,CAACmK,IAAD,EAAOlK,UAAU,CAAC+L,QAAlB,CAA3B;AACA,YAAIC,SAAS,GAAGjM,WAAW,CAACmK,IAAD,EAAOlK,UAAU,CAACiM,UAAlB,CAA3B;AACA,YAAIC,KAAK,GAAGnM,WAAW,CAACmK,IAAD,EAAOlK,UAAU,CAACmM,MAAlB,CAAvB;AACA,YAAIC,UAAU,GAAGrM,WAAW,CAACmK,IAAD,EAAOlK,UAAU,CAACqM,QAAlB,CAA5B;;AACA,YAAIZ,KAAJ,EAAW;AACP7I,UAAAA,SAAS,CAACa,WAAV,GAAwB,KAAxB;AACH;;AACD,YAAIF,YAAJ,EAAkB;AACd,cAAIsI,KAAK,IAAIJ,KAAb,EAAoB;AAChB1B,YAAAA,eAAe;AAClB,WAFD,MAGK,IAAI4B,OAAJ,EAAa;AACdzB,YAAAA,IAAI,CAACoC,cAAL;AACApC,YAAAA,IAAI,CAACqC,eAAL;AACAhC,YAAAA,iBAAiB,CAACL,IAAD,EAAO5G,YAAP,CAAjB;AACH,WAJI,MAKA,IAAIyH,SAAS,IAAIiB,SAAjB,EAA4B;AAC7B9B,YAAAA,IAAI,CAACoC,cAAL;;AACA,gBAAItD,EAAE,GAAG8B,gBAAgB,CAACxH,YAAD,EAAeyH,SAAf,CAAzB;AAAA,gBAAoDC,WAAW,GAAGhC,EAAE,CAACgC,WAArE;AAAA,gBAAkFO,YAAY,GAAGvC,EAAE,CAACuC,YAApG;;AACA,gBAAI,CAACA,YAAD,IAAiB,CAAC9F,UAAU,CAACnC,YAAD,CAAhC,EAAgD;AAC5CiI,cAAAA,YAAY,GAAGP,WAAf;AACH;;AACDxD,YAAAA,gBAAgB,CAAC+D,YAAD,CAAhB;AACA9D,YAAAA,cAAc,CAAC8D,YAAD,EAAeS,SAAf,CAAd;AACH,WARI,MASA,IAAII,UAAJ,EAAgB;AACjBlC,YAAAA,IAAI,CAACoC,cAAL;AACH;AACJ,SArBD,MAsBK,IAAI,CAACvB,SAAS,IAAIiB,SAAb,IAA0BL,OAA1B,IAAqCS,UAAtC,KAAqDxJ,SAAS,CAACa,WAAnE,EAAgF;AACjFyG,UAAAA,IAAI,CAACoC,cAAL;AACA3C,UAAAA,eAAe;AAClB;;AACD,YAAI/G,SAAS,CAACa,WAAd,EAA2B;AACvB,cAAIyI,KAAK,IAAIzL,SAAb,EAAwB;AACpB4J,YAAAA,eAAe,CAACH,IAAD,EAAO,IAAP,CAAf;AACH;AACJ;AACJ;AACJ,KA9CD;;AA+CA,QAAIsC,qBAAqB,GAAG,YAAY;AACpCzC,MAAAA,eAAe;AAClB,KAFD;;AAGA,QAAI0C,UAAU,GAAG,YAAY;AACzB,UAAI,CAAClM,KAAK,CAACO,QAAX,EAAqB;AACjB8B,QAAAA,SAAS,CAACa,WAAV,GAAwB,IAAxB;AACH;AACJ,KAJD;;AAKA,QAAIiJ,SAAS,GAAG,YAAY;AACxB9J,MAAAA,SAAS,CAACa,WAAV,GAAwB,KAAxB;AACH,KAFD;;AAGA,QAAIkJ,gBAAgB,GAAG,UAAUrH,MAAV,EAAkB;AACrC,UAAIsH,MAAM,GAAGtH,MAAM,CAACsH,MAApB;AACAA,MAAAA,MAAM,CAACN,cAAP;;AACA,UAAI1J,SAAS,CAACW,YAAd,EAA4B;AACxBwG,QAAAA,eAAe;AAClB,OAFD,MAGK;AACDJ,QAAAA,eAAe;AAClB;AACJ,KATD;;AAUA,QAAIkD,YAAY,GAAG,UAAUC,IAAV,EAAgBhH,KAAhB,EAAuB;AACtC,UAAI3D,SAAS,GAAG5B,KAAK,CAAC4B,SAAtB;AAAA,UAAiC3B,UAAU,GAAGD,KAAK,CAACC,UAApD;AAAA,UAAgEO,QAAQ,GAAGR,KAAK,CAACQ,QAAjF;AACA,UAAIuC,YAAY,GAAGV,SAAS,CAACU,YAA7B;AACA,UAAIsD,UAAU,GAAGhC,iBAAiB,CAACN,KAAnC;AACA,UAAI4B,UAAU,GAAG9B,iBAAiB,CAACE,KAAnC;AACA,UAAIsB,UAAU,GAAGpB,iBAAiB,CAACF,KAAnC;AACA,UAAIqB,OAAO,GAAGb,cAAc,CAACR,KAA7B;AACA,UAAIyI,MAAM,GAAGnG,UAAU,CAACmG,MAAxB;AACA,aAAOD,IAAI,CAACvG,GAAL,CAAS,UAAUrG,MAAV,EAAkB8M,MAAlB,EAA0B;AACtC,YAAIxK,KAAK,GAAGtC,MAAM,CAACsC,KAAnB;AAAA,YAA0BV,SAAS,GAAG5B,MAAM,CAAC4B,SAA7C;AACA,YAAIuJ,SAAS,GAAG,CAAC1F,OAAD,IAAY1F,eAAe,CAACC,MAAD,CAA3C;AACA,YAAIoL,UAAU,GAAIxF,KAAK,IAAIA,KAAK,CAAChF,QAAhB,IAA6BZ,MAAM,CAACY,QAArD;AACA,YAAI4E,WAAW,GAAGxF,MAAM,CAAC0F,UAAD,CAAxB;AACA,YAAImB,KAAK,GAAGD,QAAQ,CAAC5G,MAAD,CAApB;AACA,YAAI+M,WAAW,GAAGzK,KAAK,GAAGA,KAAK,CAACrB,OAAT,GAAmB,IAA1C;AACA,eAAOkK,SAAS,GAAG3M,CAAC,CAAC,KAAD,EAAQ;AACxB2I,UAAAA,GAAG,EAAE0F,MAAM,IAAI5K,SAAV,GAAsB4E,KAAtB,GAA8BiG,MADX;AAExBE,UAAAA,KAAK,EAAE,CAAC,mBAAD,EAAsBpL,SAAS,GAAIzC,OAAO,CAACmG,UAAR,CAAmB1D,SAAnB,IAAgCA,SAAS,CAAC;AAAE5B,YAAAA,MAAM,EAAEA,MAAV;AAAkBiN,YAAAA,OAAO,EAAEpJ;AAA3B,WAAD,CAAzC,GAAoFjC,SAAxF,GAAqG,EAApI,EAAwI;AACvI,4BAAgBwJ,UADuH;AAEvI,4BAAgBvK,QAAQ,GAAIP,UAAU,IAAIA,UAAU,CAACiK,OAAX,CAAmB/E,WAAnB,IAAkC,CAAC,CAArD,GAA0DlF,UAAU,KAAKkF,WAFsC;AAGvI,yBAAapC,YAAY,KAAKoC;AAHyG,WAAxI,CAFiB;AAOxB;AACAqB,UAAAA,KAAK,EAAEA,KARiB;AASxB;AACAqG,UAAAA,WAAW,EAAE,UAAUlD,IAAV,EAAgB;AACzB,gBAAImD,SAAS,GAAGnD,IAAI,CAACoD,MAAL,KAAgB,CAAhC;;AACA,gBAAID,SAAJ,EAAe;AACXnD,cAAAA,IAAI,CAACqC,eAAL;AACH;AACJ,WAfuB;AAgBxBgB,UAAAA,OAAO,EAAE,UAAUrD,IAAV,EAAgB;AACrB,gBAAI,CAACoB,UAAL,EAAiB;AACbf,cAAAA,iBAAiB,CAACL,IAAD,EAAOxE,WAAP,CAAjB;AACH;AACJ,WApBuB;AAqBxB8H,UAAAA,YAAY,EAAE,YAAY;AACtB,gBAAI,CAAClC,UAAL,EAAiB;AACb9D,cAAAA,gBAAgB,CAACtH,MAAD,CAAhB;AACH;AACJ;AAzBuB,SAAR,EA0BjB+M,WAAW,GAAG7H,QAAQ,CAAC6H,WAAD,EAAc;AAAE/M,UAAAA,MAAM,EAAEA,MAAV;AAAkBiN,UAAAA,OAAO,EAAEpJ;AAA3B,SAAd,CAAX,GAAmElE,UAAU,CAACD,WAAW,CAACM,MAAM,CAACgG,UAAD,CAAP,CAAZ,CA1BvE,CAAJ,GA0BgH,IA1BhI;AA2BH,OAlCM,CAAP;AAmCH,KA3CD;;AA4CA,QAAIuH,cAAc,GAAG,YAAY;AAC7B,UAAItL,SAAS,GAAG5B,KAAK,CAAC4B,SAAtB;AACA,UAAIc,gBAAgB,GAAGL,SAAS,CAACK,gBAAjC;AACA,UAAI2D,UAAU,GAAGhC,iBAAiB,CAACN,KAAnC;AACA,UAAIoJ,eAAe,GAAGjJ,sBAAsB,CAACH,KAA7C;AACA,UAAI8C,iBAAiB,GAAGzC,wBAAwB,CAACL,KAAjD;AACA,UAAIyI,MAAM,GAAGnG,UAAU,CAACmG,MAAxB;AACA,aAAO9J,gBAAgB,CAACsD,GAAjB,CAAqB,UAAUT,KAAV,EAAiBD,MAAjB,EAAyB;AACjD,YAAIrD,KAAK,GAAGsD,KAAK,CAACtD,KAAlB;AAAA,YAAyBV,SAAS,GAAGgE,KAAK,CAAChE,SAA3C;AACA,YAAIiF,KAAK,GAAGD,QAAQ,CAAChB,KAAD,CAApB;AACA,YAAIsF,eAAe,GAAGtF,KAAK,CAAChF,QAA5B;AACA,YAAImM,WAAW,GAAGzK,KAAK,GAAGA,KAAK,CAACrB,OAAT,GAAmB,IAA1C;AACA,eAAOzC,CAAC,CAAC,KAAD,EAAQ;AACZ2I,UAAAA,GAAG,EAAE0F,MAAM,IAAI5K,SAAV,GAAsB4E,KAAtB,GAA8BlB,MADvB;AAEZqH,UAAAA,KAAK,EAAE,CAAC,cAAD,EAAiBpL,SAAS,GAAIzC,OAAO,CAACmG,UAAR,CAAmB1D,SAAnB,IAAgCA,SAAS,CAAC;AAAE5B,YAAAA,MAAM,EAAE4F,KAAV;AAAiBqH,YAAAA,OAAO,EAAEpJ;AAA1B,WAAD,CAAzC,GAAmFjC,SAAvF,GAAoG,EAA9H,EAAkI;AACjI,4BAAgBsJ;AADiH,WAAlI,CAFK;AAKZ;AACArE,UAAAA,KAAK,EAAEA;AANK,SAAR,EAOL,CACCrI,CAAC,CAAC,KAAD,EAAQ;AACLwO,UAAAA,KAAK,EAAE;AADF,SAAR,EAEED,WAAW,GAAG7H,QAAQ,CAAC6H,WAAD,EAAc;AAAE/M,UAAAA,MAAM,EAAE4F,KAAV;AAAiBqH,UAAAA,OAAO,EAAEpJ;AAA1B,SAAd,CAAX,GAAkEnE,WAAW,CAACkG,KAAK,CAAC4H,eAAD,CAAN,CAF1F,CADF,EAIChP,CAAC,CAAC,KAAD,EAAQ;AACLwO,UAAAA,KAAK,EAAE;AADF,SAAR,EAEEL,YAAY,CAAC/G,KAAK,CAACsB,iBAAD,CAAL,IAA4B,EAA7B,EAAiCtB,KAAjC,CAFd,CAJF,CAPK,CAAR;AAeH,OApBM,CAAP;AAqBH,KA5BD;;AA6BA,QAAI6H,UAAU,GAAG,YAAY;AACzB,UAAI1K,gBAAgB,GAAGL,SAAS,CAACK,gBAAjC;AAAA,UAAmDC,iBAAiB,GAAGN,SAAS,CAACM,iBAAjF;AACA,UAAIyC,OAAO,GAAGb,cAAc,CAACR,KAA7B;;AACA,UAAIqB,OAAJ,EAAa;AACT,YAAI1C,gBAAgB,CAACgC,MAArB,EAA6B;AACzB,iBAAOwI,cAAc,EAArB;AACH;AACJ,OAJD,MAKK;AACD,YAAIvK,iBAAiB,CAAC+B,MAAtB,EAA8B;AAC1B,iBAAO4H,YAAY,CAAC3J,iBAAD,CAAnB;AACH;AACJ;;AACD,aAAO,CACHxE,CAAC,CAAC,KAAD,EAAQ;AACLwO,QAAAA,KAAK,EAAE;AADF,OAAR,EAEE3M,KAAK,CAAC0B,SAAN,IAAmB3C,YAAY,CAACsO,IAAb,CAAkB,sBAAlB,CAFrB,CADE,CAAP;AAKH,KAlBD;;AAmBA3J,IAAAA,aAAa,GAAG;AACZmG,MAAAA,aAAa,EAAE,UAAUnJ,IAAV,EAAgBqE,MAAhB,EAAwB4E,IAAxB,EAA8B;AACzCzH,QAAAA,IAAI,CAACxB,IAAD,EAAOS,MAAM,CAACmD,MAAP,CAAc;AAAEsI,UAAAA,OAAO,EAAEpJ,SAAX;AAAsB6I,UAAAA,MAAM,EAAE1C;AAA9B,SAAd,EAAoD5E,MAApD,CAAP,CAAJ;AACH,OAHW;AAIZuI,MAAAA,cAAc,EAAE,YAAY;AACxB,eAAOjL,SAAS,CAACW,YAAjB;AACH,OANW;AAOZuK,MAAAA,WAAW,EAAE,YAAY;AACrB,YAAIlL,SAAS,CAACW,YAAd,EAA4B;AACxBwG,UAAAA,eAAe;AAClB,SAFD,MAGK;AACDJ,UAAAA,eAAe;AAClB;;AACD,eAAOzK,QAAQ,EAAf;AACH,OAfW;AAgBZ6O,MAAAA,SAAS,EAAE,YAAY;AACnB,YAAInL,SAAS,CAACW,YAAd,EAA4B;AACxBwG,UAAAA,eAAe;AAClB;;AACD,eAAO7K,QAAQ,EAAf;AACH,OArBW;AAsBZ8O,MAAAA,SAAS,EAAE,YAAY;AACnB,YAAI,CAACpL,SAAS,CAACW,YAAf,EAA6B;AACzBoG,UAAAA,eAAe;AAClB;;AACD,eAAOzK,QAAQ,EAAf;AACH,OA3BW;AA4BZ+H,MAAAA,aAAa,EAAEA,aA5BH;AA6BZgH,MAAAA,KAAK,EAAE,YAAY;AACf,YAAIC,MAAM,GAAGvK,QAAQ,CAACW,KAAtB;AACA1B,QAAAA,SAAS,CAACa,WAAV,GAAwB,IAAxB;AACAyK,QAAAA,MAAM,CAACC,IAAP;AACA,eAAOjP,QAAQ,EAAf;AACH,OAlCW;AAmCZiP,MAAAA,IAAI,EAAE,YAAY;AACd,YAAID,MAAM,GAAGvK,QAAQ,CAACW,KAAtB;AACA4J,QAAAA,MAAM,CAACC,IAAP;AACAvL,QAAAA,SAAS,CAACa,WAAV,GAAwB,KAAxB;AACA,eAAOvE,QAAQ,EAAf;AACH;AAxCW,KAAhB;AA0CAwC,IAAAA,MAAM,CAACmD,MAAP,CAAcd,SAAd,EAAyBE,aAAzB;AACA9E,IAAAA,KAAK,CAAC,YAAY;AAAE,aAAOyD,SAAS,CAACE,aAAjB;AAAiC,KAAhD,EAAkD,UAAUwB,KAAV,EAAiB;AACpE,UAAIA,KAAK,CAACS,IAAN,CAAW,UAAUC,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAACzD,OAAL,IAAgByD,IAAI,CAACzD,OAAL,CAAa0D,MAApC;AAA6C,OAA1E,CAAJ,EAAiF;AAC7ErC,QAAAA,SAAS,CAACI,cAAV,GAA2B,EAA3B;AACAJ,QAAAA,SAAS,CAACG,aAAV,GAA0BuB,KAA1B;AACH,OAHD,MAIK;AACD1B,QAAAA,SAAS,CAACG,aAAV,GAA0B,EAA1B;AACAH,QAAAA,SAAS,CAACI,cAAV,GAA2BsB,KAAK,IAAI,EAApC;AACH;;AACD6C,MAAAA,YAAY;AACf,KAVI,CAAL;AAWAhI,IAAAA,KAAK,CAAC,YAAY;AAAE,aAAOoB,KAAK,CAACgB,OAAb;AAAuB,KAAtC,EAAwC,UAAU+C,KAAV,EAAiB;AAC1D1B,MAAAA,SAAS,CAACG,aAAV,GAA0B,EAA1B;AACAH,MAAAA,SAAS,CAACI,cAAV,GAA2BsB,KAAK,IAAI,EAApC;AACA6C,MAAAA,YAAY;AACf,KAJI,CAAL;AAKAhI,IAAAA,KAAK,CAAC,YAAY;AAAE,aAAOoB,KAAK,CAACoB,YAAb;AAA4B,KAA3C,EAA6C,UAAU2C,KAAV,EAAiB;AAC/D1B,MAAAA,SAAS,CAACI,cAAV,GAA2B,EAA3B;AACAJ,MAAAA,SAAS,CAACG,aAAV,GAA0BuB,KAAK,IAAI,EAAnC;AACA6C,MAAAA,YAAY;AACf,KAJI,CAAL;AAKA/H,IAAAA,SAAS,CAAC,YAAY;AAClBF,MAAAA,QAAQ,CAAC,YAAY;AACjB,YAAIqC,OAAO,GAAGhB,KAAK,CAACgB,OAApB;AAAA,YAA6BI,YAAY,GAAGpB,KAAK,CAACoB,YAAlD;;AACA,YAAIA,YAAJ,EAAkB;AACdiB,UAAAA,SAAS,CAACG,aAAV,GAA0BpB,YAA1B;AACH,SAFD,MAGK,IAAIJ,OAAJ,EAAa;AACdqB,UAAAA,SAAS,CAACI,cAAV,GAA2BzB,OAA3B;AACH;;AACD4F,QAAAA,YAAY;AACf,OATO,CAAR;AAUArH,MAAAA,WAAW,CAACsO,EAAZ,CAAerK,SAAf,EAA0B,YAA1B,EAAwC4G,2BAAxC;AACA7K,MAAAA,WAAW,CAACsO,EAAZ,CAAerK,SAAf,EAA0B,WAA1B,EAAuC8G,0BAAvC;AACA/K,MAAAA,WAAW,CAACsO,EAAZ,CAAerK,SAAf,EAA0B,SAA1B,EAAqCyH,wBAArC;AACA1L,MAAAA,WAAW,CAACsO,EAAZ,CAAerK,SAAf,EAA0B,MAA1B,EAAkCyI,qBAAlC;AACH,KAfQ,CAAT;AAgBAxN,IAAAA,WAAW,CAAC,YAAY;AACpBc,MAAAA,WAAW,CAACuO,GAAZ,CAAgBtK,SAAhB,EAA2B,YAA3B;AACAjE,MAAAA,WAAW,CAACuO,GAAZ,CAAgBtK,SAAhB,EAA2B,WAA3B;AACAjE,MAAAA,WAAW,CAACuO,GAAZ,CAAgBtK,SAAhB,EAA2B,SAA3B;AACAjE,MAAAA,WAAW,CAACuO,GAAZ,CAAgBtK,SAAhB,EAA2B,MAA3B;AACH,KALU,CAAX;;AAMA,QAAIuK,QAAQ,GAAG,YAAY;AACvB,UAAItF,EAAJ,EAAQuF,EAAR;;AACA,UAAIzM,SAAS,GAAGvB,KAAK,CAACuB,SAAtB;AAAA,UAAiCM,QAAQ,GAAG7B,KAAK,CAAC6B,QAAlD;AAAA,UAA4DtB,QAAQ,GAAGP,KAAK,CAACO,QAA7E;AAAA,UAAuFD,OAAO,GAAGN,KAAK,CAACM,OAAvG;AACA,UAAIgC,MAAM,GAAGD,SAAS,CAACC,MAAvB;AAAA,UAA+BY,WAAW,GAAGb,SAAS,CAACa,WAAvD;AAAA,UAAoEF,YAAY,GAAGX,SAAS,CAACW,YAA7F;AACA,UAAIiL,KAAK,GAAG7L,WAAW,CAAC2B,KAAxB;AACA,UAAImK,WAAW,GAAGrI,kBAAkB,CAAC9B,KAArC;AACA,UAAIoK,UAAU,GAAGlM,KAAK,CAACmM,MAAvB;AACA,aAAOjQ,CAAC,CAAC,KAAD,EAAQ;AACZE,QAAAA,GAAG,EAAE8E,OADO;AAEZwJ,QAAAA,KAAK,EAAE,CAAC,YAAD,EAAepL,SAAS,GAAIzC,OAAO,CAACmG,UAAR,CAAmB1D,SAAnB,IAAgCA,SAAS,CAAC;AAAEqL,UAAAA,OAAO,EAAEpJ;AAAX,SAAD,CAAzC,GAAoEjC,SAAxE,GAAqF,EAA7G,GAAkHkH,EAAE,GAAG,EAAL,EACjHA,EAAE,CAAC,WAAWwF,KAAZ,CAAF,GAAuBA,KAD0F,EAEjHxF,EAAE,CAAC,aAAD,CAAF,GAAoBzF,YAF6F,EAGjHyF,EAAE,CAAC,cAAD,CAAF,GAAqBlI,QAH4F,EAIjHkI,EAAE,CAAC,aAAD,CAAF,GAAoBnI,OAJ6F,EAKjHmI,EAAE,CAAC,YAAD,CAAF,GAAmBvF,WAL8F,EAMjHuF,EAND;AAFK,OAAR,EASL,CACCtK,CAAC,CAAC,KAAD,EAAQ;AACLwO,QAAAA,KAAK,EAAE,kBADF;AAELtO,QAAAA,GAAG,EAAE;AAFA,OAAR,EAGE4D,KAAK,CAACrB,OAAN,GAAgBqB,KAAK,CAACrB,OAAN,CAAc,EAAd,CAAhB,GAAoC,EAHtC,CADF,EAKCzC,CAAC,CAACG,gBAAgB,CAAC,WAAD,CAAjB,EAAgC;AAC7BD,QAAAA,GAAG,EAAE+E,QADwB;AAE7BlD,QAAAA,SAAS,EAAEF,KAAK,CAACE,SAFY;AAG7BE,QAAAA,WAAW,EAAEJ,KAAK,CAACI,WAHU;AAI7BiO,QAAAA,QAAQ,EAAE,IAJmB;AAK7B9N,QAAAA,QAAQ,EAAEA,QALmB;AAM7BG,QAAAA,IAAI,EAAE,MANuB;AAO7BI,QAAAA,UAAU,EAAEd,KAAK,CAACc,UAPW;AAQ7BwN,QAAAA,UAAU,EAAEhO,OAAO,GAAGvB,YAAY,CAACwP,IAAb,CAAkBC,aAArB,GAAsCxL,YAAY,GAAGjE,YAAY,CAACwP,IAAb,CAAkBE,WAArB,GAAmC1P,YAAY,CAACwP,IAAb,CAAkBG,YAR7F;AAS7BzO,QAAAA,UAAU,EAAEiO,WATiB;AAU7BS,QAAAA,OAAO,EAAE5E,UAVoB;AAW7BiD,QAAAA,OAAO,EAAEZ,gBAXoB;AAY7BwC,QAAAA,OAAO,EAAE1C,UAZoB;AAa7B2C,QAAAA,MAAM,EAAE1C,SAbqB;AAc7B2C,QAAAA,aAAa,EAAE1C;AAdc,OAAhC,EAeE+B,UAAU,GAAG;AACZC,QAAAA,MAAM,EAAE,YAAY;AAAE,iBAAOD,UAAU,CAAC,EAAD,CAAjB;AAAwB;AADlC,OAAH,GAET,EAjBH,CALF,EAuBChQ,CAAC,CAACC,QAAD,EAAW;AACR2Q,QAAAA,EAAE,EAAE,MADI;AAERxO,QAAAA,QAAQ,EAAEsB,QAAQ,GAAG,CAACS,MAAJ,GAAa;AAFvB,OAAX,EAGE,CACCnE,CAAC,CAAC,KAAD,EAAQ;AACLE,QAAAA,GAAG,EAAEiF,cADA;AAELqJ,QAAAA,KAAK,EAAE,CAAC,2CAAD,GAA+CqB,EAAE,GAAG,EAAL,EAC9CA,EAAE,CAAC,WAAWC,KAAZ,CAAF,GAAuBA,KADuB,EAE9CD,EAAE,CAAC,cAAD,CAAF,GAAqBnM,QAFyB,EAG9CmM,EAAE,CAAC,eAAD,CAAF,GAAsB,CAAC1N,OAAD,IAAY+B,SAAS,CAACY,aAHE,EAI9C+K,EAAE,CAAC,eAAD,CAAF,GAAsB,CAAC1N,OAAD,IAAY0C,YAJY,EAK9CgL,EALD,EAFF;AAQLjN,QAAAA,SAAS,EAAEsB,SAAS,CAACS,cARhB;AASLkM,QAAAA,KAAK,EAAE3M,SAAS,CAACQ;AATZ,OAAR,EAUEP,MAAM,GAAG,CACRnE,CAAC,CAAC,KAAD,EAAQ;AACLE,QAAAA,GAAG,EAAEgF,gBADA;AAELsJ,QAAAA,KAAK,EAAE;AAFF,OAAR,EAGES,UAAU,EAHZ,CADO,CAAH,GAKL,EAfH,CADF,CAHF,CAvBF,CATK,CAAR;AAsDH,KA7DD;;AA8DA5J,IAAAA,SAAS,CAACuK,QAAV,GAAqBA,QAArB;AACAvP,IAAAA,OAAO,CAAC,WAAD,EAAcgF,SAAd,CAAP;AACA,WAAOA,SAAP;AACH,GArwB0B;AAswB3ByL,EAAAA,MAAM,EAAE,YAAY;AAChB,WAAO,KAAKlB,QAAL,EAAP;AACH;AAxwB0B,CAAD,CAA9B","sourcesContent":["import { defineComponent, h, Teleport, ref, resolveComponent, computed, provide, onUnmounted, reactive, nextTick, watch, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nimport { getEventTargetNode, getAbsolutePos } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex, getFuncText, formatText } from '../../tools/utils';\nimport { GlobalEvent, hasEventKey, EVENT_KEYS } from '../../tools/event';\nfunction isOptionVisible(option) {\n    return option.visible !== false;\n}\nfunction getOptUniqueId() {\n    return XEUtils.uniqueId('opt_');\n}\nexport default defineComponent({\n    name: 'VxeSelect',\n    props: {\n        modelValue: null,\n        clearable: Boolean,\n        placeholder: String,\n        loading: Boolean,\n        disabled: Boolean,\n        multiple: Boolean,\n        multiCharOverflow: { type: [Number, String], default: function () { return GlobalConfig.select.multiCharOverflow; } },\n        prefixIcon: String,\n        placement: String,\n        options: Array,\n        optionProps: Object,\n        optionGroups: Array,\n        optionGroupProps: Object,\n        optionConfig: Object,\n        className: [String, Function],\n        size: { type: String, default: function () { return GlobalConfig.select.size || GlobalConfig.size; } },\n        emptyText: String,\n        // 已废弃，被 option-config.keyField 替换\n        optionId: { type: String, default: function () { return GlobalConfig.select.optionId; } },\n        // 已废弃，被 option-config.useKey 替换\n        optionKey: Boolean,\n        transfer: { type: Boolean, default: function () { return GlobalConfig.select.transfer; } }\n    },\n    emits: [\n        'update:modelValue',\n        'change',\n        'clear'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var computeSize = useSize(props);\n        var reactData = reactive({\n            inited: false,\n            staticOptions: [],\n            fullGroupList: [],\n            fullOptionList: [],\n            visibleGroupList: [],\n            visibleOptionList: [],\n            panelIndex: 0,\n            panelStyle: {},\n            panelPlacement: null,\n            currentValue: null,\n            visiblePanel: false,\n            animatVisible: false,\n            isActivated: false\n        });\n        var refElem = ref();\n        var refInput = ref();\n        var refOptionWrapper = ref();\n        var refOptionPanel = ref();\n        var refMaps = {\n            refElem: refElem\n        };\n        var $xeselect = {\n            xID: xID,\n            props: props,\n            context: context,\n            reactData: reactData,\n            getRefMaps: function () { return refMaps; }\n        };\n        var selectMethods = {};\n        var computePropsOpts = computed(function () {\n            return props.optionProps || {};\n        });\n        var computeGroupPropsOpts = computed(function () {\n            return props.optionGroupProps || {};\n        });\n        var computeLabelField = computed(function () {\n            var propsOpts = computePropsOpts.value;\n            return propsOpts.label || 'label';\n        });\n        var computeValueField = computed(function () {\n            var propsOpts = computePropsOpts.value;\n            return propsOpts.value || 'value';\n        });\n        var computeGroupLabelField = computed(function () {\n            var groupPropsOpts = computeGroupPropsOpts.value;\n            return groupPropsOpts.label || 'label';\n        });\n        var computeGroupOptionsField = computed(function () {\n            var groupPropsOpts = computeGroupPropsOpts.value;\n            return groupPropsOpts.options || 'options';\n        });\n        var computeOptionOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.select.optionConfig, props.optionConfig);\n        });\n        var computeIsGroup = computed(function () {\n            return reactData.fullGroupList.some(function (item) { return item.options && item.options.length; });\n        });\n        var computeMultiMaxCharNum = computed(function () {\n            return XEUtils.toNumber(props.multiCharOverflow);\n        });\n        var callSlot = function (slotFunc, params) {\n            if (slotFunc) {\n                if (XEUtils.isString(slotFunc)) {\n                    slotFunc = slots[slotFunc] || null;\n                }\n                if (XEUtils.isFunction(slotFunc)) {\n                    return slotFunc(params);\n                }\n            }\n            return [];\n        };\n        var findOption = function (optionValue) {\n            var fullOptionList = reactData.fullOptionList, fullGroupList = reactData.fullGroupList;\n            var isGroup = computeIsGroup.value;\n            var valueField = computeValueField.value;\n            if (isGroup) {\n                for (var gIndex = 0; gIndex < fullGroupList.length; gIndex++) {\n                    var group = fullGroupList[gIndex];\n                    if (group.options) {\n                        for (var index = 0; index < group.options.length; index++) {\n                            var option = group.options[index];\n                            if (optionValue === option[valueField]) {\n                                return option;\n                            }\n                        }\n                    }\n                }\n            }\n            return fullOptionList.find(function (item) { return optionValue === item[valueField]; });\n        };\n        var getSelectLabel = function (value) {\n            var labelField = computeLabelField.value;\n            var item = findOption(value);\n            return XEUtils.toValueString(item ? item[labelField] : value);\n        };\n        var computeSelectLabel = computed(function () {\n            var modelValue = props.modelValue, multiple = props.multiple;\n            var multiMaxCharNum = computeMultiMaxCharNum.value;\n            if (modelValue && multiple) {\n                return (XEUtils.isArray(modelValue) ? modelValue : [modelValue]).map(function (val) {\n                    var label = getSelectLabel(val);\n                    if (multiMaxCharNum > 0 && label.length > multiMaxCharNum) {\n                        return label.substring(0, multiMaxCharNum) + \"...\";\n                    }\n                    return label;\n                }).join(', ');\n            }\n            return getSelectLabel(modelValue);\n        });\n        var getOptkey = function () {\n            var optionOpts = computeOptionOpts.value;\n            return optionOpts.keyField || props.optionId || '_X_OPTION_KEY';\n        };\n        var getOptid = function (option) {\n            var optid = option[getOptkey()];\n            return optid ? encodeURIComponent(optid) : '';\n        };\n        /**\n         * 刷新选项，当选项被动态显示/隐藏时可能会用到\n         */\n        var refreshOption = function () {\n            var fullOptionList = reactData.fullOptionList, fullGroupList = reactData.fullGroupList;\n            var isGroup = computeIsGroup.value;\n            if (isGroup) {\n                reactData.visibleGroupList = fullGroupList.filter(isOptionVisible);\n            }\n            else {\n                reactData.visibleOptionList = fullOptionList.filter(isOptionVisible);\n            }\n            return nextTick();\n        };\n        var cacheItemMap = function () {\n            var fullOptionList = reactData.fullOptionList, fullGroupList = reactData.fullGroupList;\n            var groupOptionsField = computeGroupOptionsField.value;\n            var key = getOptkey();\n            var handleOptis = function (item) {\n                if (!getOptid(item)) {\n                    item[key] = getOptUniqueId();\n                }\n            };\n            if (fullGroupList.length) {\n                fullGroupList.forEach(function (group) {\n                    handleOptis(group);\n                    if (group[groupOptionsField]) {\n                        group[groupOptionsField].forEach(handleOptis);\n                    }\n                });\n            }\n            else if (fullOptionList.length) {\n                fullOptionList.forEach(handleOptis);\n            }\n            refreshOption();\n        };\n        var setCurrentOption = function (option) {\n            var valueField = computeValueField.value;\n            if (option) {\n                reactData.currentValue = option[valueField];\n            }\n        };\n        var scrollToOption = function (option, isAlignBottom) {\n            return nextTick().then(function () {\n                if (option) {\n                    var optWrapperElem = refOptionWrapper.value;\n                    var panelElem = refOptionPanel.value;\n                    var optElem = panelElem.querySelector(\"[optid='\" + getOptid(option) + \"']\");\n                    if (optWrapperElem && optElem) {\n                        var wrapperHeight = optWrapperElem.offsetHeight;\n                        var offsetPadding = 5;\n                        if (isAlignBottom) {\n                            if (optElem.offsetTop + optElem.offsetHeight - optWrapperElem.scrollTop > wrapperHeight) {\n                                optWrapperElem.scrollTop = optElem.offsetTop + optElem.offsetHeight - wrapperHeight;\n                            }\n                        }\n                        else {\n                            if (optElem.offsetTop + offsetPadding < optWrapperElem.scrollTop || optElem.offsetTop + offsetPadding > optWrapperElem.scrollTop + optWrapperElem.clientHeight) {\n                                optWrapperElem.scrollTop = optElem.offsetTop - offsetPadding;\n                            }\n                        }\n                    }\n                }\n            });\n        };\n        var updateZindex = function () {\n            if (reactData.panelIndex < getLastZIndex()) {\n                reactData.panelIndex = nextZIndex();\n            }\n        };\n        var updatePlacement = function () {\n            return nextTick().then(function () {\n                var transfer = props.transfer, placement = props.placement;\n                var panelIndex = reactData.panelIndex;\n                var el = refElem.value;\n                var panelElem = refOptionPanel.value;\n                if (panelElem && el) {\n                    var targetHeight = el.offsetHeight;\n                    var targetWidth = el.offsetWidth;\n                    var panelHeight = panelElem.offsetHeight;\n                    var panelWidth = panelElem.offsetWidth;\n                    var marginSize = 5;\n                    var panelStyle = {\n                        zIndex: panelIndex\n                    };\n                    var _a = getAbsolutePos(el), boundingTop = _a.boundingTop, boundingLeft = _a.boundingLeft, visibleHeight = _a.visibleHeight, visibleWidth = _a.visibleWidth;\n                    var panelPlacement = 'bottom';\n                    if (transfer) {\n                        var left = boundingLeft;\n                        var top_1 = boundingTop + targetHeight;\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            top_1 = boundingTop - panelHeight;\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (top_1 + panelHeight + marginSize > visibleHeight) {\n                                panelPlacement = 'top';\n                                top_1 = boundingTop - panelHeight;\n                            }\n                            // 如果上面不够放，则向下（优先）\n                            if (top_1 < marginSize) {\n                                panelPlacement = 'bottom';\n                                top_1 = boundingTop + targetHeight;\n                            }\n                        }\n                        // 如果溢出右边\n                        if (left + panelWidth + marginSize > visibleWidth) {\n                            left -= left + panelWidth + marginSize - visibleWidth;\n                        }\n                        // 如果溢出左边\n                        if (left < marginSize) {\n                            left = marginSize;\n                        }\n                        Object.assign(panelStyle, {\n                            left: left + \"px\",\n                            top: top_1 + \"px\",\n                            minWidth: targetWidth + \"px\"\n                        });\n                    }\n                    else {\n                        if (placement === 'top') {\n                            panelPlacement = 'top';\n                            panelStyle.bottom = targetHeight + \"px\";\n                        }\n                        else if (!placement) {\n                            // 如果下面不够放，则向上\n                            if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                                // 如果上面不够放，则向下（优先）\n                                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                                    panelPlacement = 'top';\n                                    panelStyle.bottom = targetHeight + \"px\";\n                                }\n                            }\n                        }\n                    }\n                    reactData.panelStyle = panelStyle;\n                    reactData.panelPlacement = panelPlacement;\n                    return nextTick();\n                }\n            });\n        };\n        var hidePanelTimeout;\n        var showOptionPanel = function () {\n            var loading = props.loading, disabled = props.disabled;\n            if (!loading && !disabled) {\n                clearTimeout(hidePanelTimeout);\n                if (!reactData.inited) {\n                    reactData.inited = true;\n                }\n                reactData.isActivated = true;\n                reactData.animatVisible = true;\n                setTimeout(function () {\n                    var modelValue = props.modelValue, multiple = props.multiple;\n                    var currOption = findOption(multiple && modelValue ? modelValue[0] : modelValue);\n                    reactData.visiblePanel = true;\n                    if (currOption) {\n                        setCurrentOption(currOption);\n                        scrollToOption(currOption);\n                    }\n                }, 10);\n                updateZindex();\n                updatePlacement();\n            }\n        };\n        var hideOptionPanel = function () {\n            reactData.visiblePanel = false;\n            hidePanelTimeout = window.setTimeout(function () {\n                reactData.animatVisible = false;\n            }, 350);\n        };\n        var changeEvent = function (evnt, selectValue) {\n            if (selectValue !== props.modelValue) {\n                emit('update:modelValue', selectValue);\n                selectMethods.dispatchEvent('change', { value: selectValue }, evnt);\n            }\n        };\n        var clearValueEvent = function (evnt, selectValue) {\n            changeEvent(evnt, selectValue);\n            selectMethods.dispatchEvent('clear', { value: selectValue }, evnt);\n        };\n        var clearEvent = function (params, evnt) {\n            clearValueEvent(evnt, null);\n            hideOptionPanel();\n        };\n        var changeOptionEvent = function (evnt, selectValue) {\n            var modelValue = props.modelValue, multiple = props.multiple;\n            if (multiple) {\n                var multipleValue = void 0;\n                if (modelValue) {\n                    if (modelValue.indexOf(selectValue) === -1) {\n                        multipleValue = modelValue.concat([selectValue]);\n                    }\n                    else {\n                        multipleValue = modelValue.filter(function (val) { return val !== selectValue; });\n                    }\n                }\n                else {\n                    multipleValue = [selectValue];\n                }\n                changeEvent(evnt, multipleValue);\n            }\n            else {\n                changeEvent(evnt, selectValue);\n                hideOptionPanel();\n            }\n        };\n        var handleGlobalMousewheelEvent = function (evnt) {\n            var disabled = props.disabled;\n            var visiblePanel = reactData.visiblePanel;\n            if (!disabled) {\n                if (visiblePanel) {\n                    var panelElem = refOptionPanel.value;\n                    if (getEventTargetNode(evnt, panelElem).flag) {\n                        updatePlacement();\n                    }\n                    else {\n                        hideOptionPanel();\n                    }\n                }\n            }\n        };\n        var handleGlobalMousedownEvent = function (evnt) {\n            var disabled = props.disabled;\n            var visiblePanel = reactData.visiblePanel;\n            if (!disabled) {\n                var el = refElem.value;\n                var panelElem = refOptionPanel.value;\n                reactData.isActivated = getEventTargetNode(evnt, el).flag || getEventTargetNode(evnt, panelElem).flag;\n                if (visiblePanel && !reactData.isActivated) {\n                    hideOptionPanel();\n                }\n            }\n        };\n        var findOffsetOption = function (optionValue, isUpArrow) {\n            var visibleOptionList = reactData.visibleOptionList, visibleGroupList = reactData.visibleGroupList;\n            var isGroup = computeIsGroup.value;\n            var valueField = computeValueField.value;\n            var groupOptionsField = computeGroupOptionsField.value;\n            var firstOption;\n            var prevOption;\n            var nextOption;\n            var currOption;\n            if (isGroup) {\n                for (var gIndex = 0; gIndex < visibleGroupList.length; gIndex++) {\n                    var group = visibleGroupList[gIndex];\n                    var groupOptionList = group[groupOptionsField];\n                    var isGroupDisabled = group.disabled;\n                    if (groupOptionList) {\n                        for (var index = 0; index < groupOptionList.length; index++) {\n                            var option = groupOptionList[index];\n                            var isVisible = isOptionVisible(option);\n                            var isDisabled = isGroupDisabled || option.disabled;\n                            if (!firstOption && !isDisabled) {\n                                firstOption = option;\n                            }\n                            if (currOption) {\n                                if (isVisible && !isDisabled) {\n                                    nextOption = option;\n                                    if (!isUpArrow) {\n                                        return { offsetOption: nextOption };\n                                    }\n                                }\n                            }\n                            if (optionValue === option[valueField]) {\n                                currOption = option;\n                                if (isUpArrow) {\n                                    return { offsetOption: prevOption };\n                                }\n                            }\n                            else {\n                                if (isVisible && !isDisabled) {\n                                    prevOption = option;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                for (var index = 0; index < visibleOptionList.length; index++) {\n                    var option = visibleOptionList[index];\n                    var isDisabled = option.disabled;\n                    if (!firstOption && !isDisabled) {\n                        firstOption = option;\n                    }\n                    if (currOption) {\n                        if (!isDisabled) {\n                            nextOption = option;\n                            if (!isUpArrow) {\n                                return { offsetOption: nextOption };\n                            }\n                        }\n                    }\n                    if (optionValue === option[valueField]) {\n                        currOption = option;\n                        if (isUpArrow) {\n                            return { offsetOption: prevOption };\n                        }\n                    }\n                    else {\n                        if (!isDisabled) {\n                            prevOption = option;\n                        }\n                    }\n                }\n            }\n            return { firstOption: firstOption };\n        };\n        var handleGlobalKeydownEvent = function (evnt) {\n            var clearable = props.clearable, disabled = props.disabled;\n            var visiblePanel = reactData.visiblePanel, currentValue = reactData.currentValue;\n            if (!disabled) {\n                var isTab = hasEventKey(evnt, EVENT_KEYS.TAB);\n                var isEnter = hasEventKey(evnt, EVENT_KEYS.ENTER);\n                var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n                var isUpArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_UP);\n                var isDwArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_DOWN);\n                var isDel = hasEventKey(evnt, EVENT_KEYS.DELETE);\n                var isSpacebar = hasEventKey(evnt, EVENT_KEYS.SPACEBAR);\n                if (isTab) {\n                    reactData.isActivated = false;\n                }\n                if (visiblePanel) {\n                    if (isEsc || isTab) {\n                        hideOptionPanel();\n                    }\n                    else if (isEnter) {\n                        evnt.preventDefault();\n                        evnt.stopPropagation();\n                        changeOptionEvent(evnt, currentValue);\n                    }\n                    else if (isUpArrow || isDwArrow) {\n                        evnt.preventDefault();\n                        var _a = findOffsetOption(currentValue, isUpArrow), firstOption = _a.firstOption, offsetOption = _a.offsetOption;\n                        if (!offsetOption && !findOption(currentValue)) {\n                            offsetOption = firstOption;\n                        }\n                        setCurrentOption(offsetOption);\n                        scrollToOption(offsetOption, isDwArrow);\n                    }\n                    else if (isSpacebar) {\n                        evnt.preventDefault();\n                    }\n                }\n                else if ((isUpArrow || isDwArrow || isEnter || isSpacebar) && reactData.isActivated) {\n                    evnt.preventDefault();\n                    showOptionPanel();\n                }\n                if (reactData.isActivated) {\n                    if (isDel && clearable) {\n                        clearValueEvent(evnt, null);\n                    }\n                }\n            }\n        };\n        var handleGlobalBlurEvent = function () {\n            hideOptionPanel();\n        };\n        var focusEvent = function () {\n            if (!props.disabled) {\n                reactData.isActivated = true;\n            }\n        };\n        var blurEvent = function () {\n            reactData.isActivated = false;\n        };\n        var togglePanelEvent = function (params) {\n            var $event = params.$event;\n            $event.preventDefault();\n            if (reactData.visiblePanel) {\n                hideOptionPanel();\n            }\n            else {\n                showOptionPanel();\n            }\n        };\n        var renderOption = function (list, group) {\n            var optionKey = props.optionKey, modelValue = props.modelValue, multiple = props.multiple;\n            var currentValue = reactData.currentValue;\n            var optionOpts = computeOptionOpts.value;\n            var labelField = computeLabelField.value;\n            var valueField = computeValueField.value;\n            var isGroup = computeIsGroup.value;\n            var useKey = optionOpts.useKey;\n            return list.map(function (option, cIndex) {\n                var slots = option.slots, className = option.className;\n                var isVisible = !isGroup || isOptionVisible(option);\n                var isDisabled = (group && group.disabled) || option.disabled;\n                var optionValue = option[valueField];\n                var optid = getOptid(option);\n                var defaultSlot = slots ? slots.default : null;\n                return isVisible ? h('div', {\n                    key: useKey || optionKey ? optid : cIndex,\n                    class: ['vxe-select-option', className ? (XEUtils.isFunction(className) ? className({ option: option, $select: $xeselect }) : className) : '', {\n                            'is--disabled': isDisabled,\n                            'is--selected': multiple ? (modelValue && modelValue.indexOf(optionValue) > -1) : modelValue === optionValue,\n                            'is--hover': currentValue === optionValue\n                        }],\n                    // attrs\n                    optid: optid,\n                    // event\n                    onMousedown: function (evnt) {\n                        var isLeftBtn = evnt.button === 0;\n                        if (isLeftBtn) {\n                            evnt.stopPropagation();\n                        }\n                    },\n                    onClick: function (evnt) {\n                        if (!isDisabled) {\n                            changeOptionEvent(evnt, optionValue);\n                        }\n                    },\n                    onMouseenter: function () {\n                        if (!isDisabled) {\n                            setCurrentOption(option);\n                        }\n                    }\n                }, defaultSlot ? callSlot(defaultSlot, { option: option, $select: $xeselect }) : formatText(getFuncText(option[labelField]))) : null;\n            });\n        };\n        var renderOptgroup = function () {\n            var optionKey = props.optionKey;\n            var visibleGroupList = reactData.visibleGroupList;\n            var optionOpts = computeOptionOpts.value;\n            var groupLabelField = computeGroupLabelField.value;\n            var groupOptionsField = computeGroupOptionsField.value;\n            var useKey = optionOpts.useKey;\n            return visibleGroupList.map(function (group, gIndex) {\n                var slots = group.slots, className = group.className;\n                var optid = getOptid(group);\n                var isGroupDisabled = group.disabled;\n                var defaultSlot = slots ? slots.default : null;\n                return h('div', {\n                    key: useKey || optionKey ? optid : gIndex,\n                    class: ['vxe-optgroup', className ? (XEUtils.isFunction(className) ? className({ option: group, $select: $xeselect }) : className) : '', {\n                            'is--disabled': isGroupDisabled\n                        }],\n                    // attrs\n                    optid: optid\n                }, [\n                    h('div', {\n                        class: 'vxe-optgroup--title'\n                    }, defaultSlot ? callSlot(defaultSlot, { option: group, $select: $xeselect }) : getFuncText(group[groupLabelField])),\n                    h('div', {\n                        class: 'vxe-optgroup--wrapper'\n                    }, renderOption(group[groupOptionsField] || [], group))\n                ]);\n            });\n        };\n        var renderOpts = function () {\n            var visibleGroupList = reactData.visibleGroupList, visibleOptionList = reactData.visibleOptionList;\n            var isGroup = computeIsGroup.value;\n            if (isGroup) {\n                if (visibleGroupList.length) {\n                    return renderOptgroup();\n                }\n            }\n            else {\n                if (visibleOptionList.length) {\n                    return renderOption(visibleOptionList);\n                }\n            }\n            return [\n                h('div', {\n                    class: 'vxe-select--empty-placeholder'\n                }, props.emptyText || GlobalConfig.i18n('vxe.select.emptyText'))\n            ];\n        };\n        selectMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $select: $xeselect, $event: evnt }, params));\n            },\n            isPanelVisible: function () {\n                return reactData.visiblePanel;\n            },\n            togglePanel: function () {\n                if (reactData.visiblePanel) {\n                    hideOptionPanel();\n                }\n                else {\n                    showOptionPanel();\n                }\n                return nextTick();\n            },\n            hidePanel: function () {\n                if (reactData.visiblePanel) {\n                    hideOptionPanel();\n                }\n                return nextTick();\n            },\n            showPanel: function () {\n                if (!reactData.visiblePanel) {\n                    showOptionPanel();\n                }\n                return nextTick();\n            },\n            refreshOption: refreshOption,\n            focus: function () {\n                var $input = refInput.value;\n                reactData.isActivated = true;\n                $input.blur();\n                return nextTick();\n            },\n            blur: function () {\n                var $input = refInput.value;\n                $input.blur();\n                reactData.isActivated = false;\n                return nextTick();\n            }\n        };\n        Object.assign($xeselect, selectMethods);\n        watch(function () { return reactData.staticOptions; }, function (value) {\n            if (value.some(function (item) { return item.options && item.options.length; })) {\n                reactData.fullOptionList = [];\n                reactData.fullGroupList = value;\n            }\n            else {\n                reactData.fullGroupList = [];\n                reactData.fullOptionList = value || [];\n            }\n            cacheItemMap();\n        });\n        watch(function () { return props.options; }, function (value) {\n            reactData.fullGroupList = [];\n            reactData.fullOptionList = value || [];\n            cacheItemMap();\n        });\n        watch(function () { return props.optionGroups; }, function (value) {\n            reactData.fullOptionList = [];\n            reactData.fullGroupList = value || [];\n            cacheItemMap();\n        });\n        onMounted(function () {\n            nextTick(function () {\n                var options = props.options, optionGroups = props.optionGroups;\n                if (optionGroups) {\n                    reactData.fullGroupList = optionGroups;\n                }\n                else if (options) {\n                    reactData.fullOptionList = options;\n                }\n                cacheItemMap();\n            });\n            GlobalEvent.on($xeselect, 'mousewheel', handleGlobalMousewheelEvent);\n            GlobalEvent.on($xeselect, 'mousedown', handleGlobalMousedownEvent);\n            GlobalEvent.on($xeselect, 'keydown', handleGlobalKeydownEvent);\n            GlobalEvent.on($xeselect, 'blur', handleGlobalBlurEvent);\n        });\n        onUnmounted(function () {\n            GlobalEvent.off($xeselect, 'mousewheel');\n            GlobalEvent.off($xeselect, 'mousedown');\n            GlobalEvent.off($xeselect, 'keydown');\n            GlobalEvent.off($xeselect, 'blur');\n        });\n        var renderVN = function () {\n            var _a, _b;\n            var className = props.className, transfer = props.transfer, disabled = props.disabled, loading = props.loading;\n            var inited = reactData.inited, isActivated = reactData.isActivated, visiblePanel = reactData.visiblePanel;\n            var vSize = computeSize.value;\n            var selectLabel = computeSelectLabel.value;\n            var prefixSlot = slots.prefix;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-select', className ? (XEUtils.isFunction(className) ? className({ $select: $xeselect }) : className) : '', (_a = {},\n                        _a[\"size--\" + vSize] = vSize,\n                        _a['is--visivle'] = visiblePanel,\n                        _a['is--disabled'] = disabled,\n                        _a['is--loading'] = loading,\n                        _a['is--active'] = isActivated,\n                        _a)]\n            }, [\n                h('div', {\n                    class: 'vxe-select-slots',\n                    ref: 'hideOption'\n                }, slots.default ? slots.default({}) : []),\n                h(resolveComponent('vxe-input'), {\n                    ref: refInput,\n                    clearable: props.clearable,\n                    placeholder: props.placeholder,\n                    readonly: true,\n                    disabled: disabled,\n                    type: 'text',\n                    prefixIcon: props.prefixIcon,\n                    suffixIcon: loading ? GlobalConfig.icon.SELECT_LOADED : (visiblePanel ? GlobalConfig.icon.SELECT_OPEN : GlobalConfig.icon.SELECT_CLOSE),\n                    modelValue: selectLabel,\n                    onClear: clearEvent,\n                    onClick: togglePanelEvent,\n                    onFocus: focusEvent,\n                    onBlur: blurEvent,\n                    onSuffixClick: togglePanelEvent\n                }, prefixSlot ? {\n                    prefix: function () { return prefixSlot({}); }\n                } : {}),\n                h(Teleport, {\n                    to: 'body',\n                    disabled: transfer ? !inited : true\n                }, [\n                    h('div', {\n                        ref: refOptionPanel,\n                        class: ['vxe-table--ignore-clear vxe-select--panel', (_b = {},\n                                _b[\"size--\" + vSize] = vSize,\n                                _b['is--transfer'] = transfer,\n                                _b['animat--leave'] = !loading && reactData.animatVisible,\n                                _b['animat--enter'] = !loading && visiblePanel,\n                                _b)],\n                        placement: reactData.panelPlacement,\n                        style: reactData.panelStyle\n                    }, inited ? [\n                        h('div', {\n                            ref: refOptionWrapper,\n                            class: 'vxe-select-option--wrapper'\n                        }, renderOpts())\n                    ] : [])\n                ])\n            ]);\n        };\n        $xeselect.renderVN = renderVN;\n        provide('$xeselect', $xeselect);\n        return $xeselect;\n    },\n    render: function () {\n        return this.renderVN();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}