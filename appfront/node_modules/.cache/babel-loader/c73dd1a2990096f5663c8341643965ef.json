{"ast":null,"code":"import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, provide, computed, nextTick, reactive, onMounted, defineComponent } from \"vue\";\nimport { isDef, extend, addUnit, FORM_KEY, numericProp, unknownProp, resetScroll, formatNumber, preventDefault, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nimport { cutString, runSyncRule, endComposing, mapInputType, startComposing, getRuleMessage, resizeTextarea, getStringLength, runRuleValidator } from \"./utils\";\nimport { cellSharedProps } from \"../cell/Cell\";\nimport { CUSTOM_FIELD_INJECTION_KEY, useParent } from \"@vant/use\";\nimport { useId } from \"../composables/use-id\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Icon } from \"../icon\";\nimport { Cell } from \"../cell\";\nconst [name, bem] = createNamespace(\"field\");\nconst fieldSharedProps = {\n  id: String,\n  name: String,\n  leftIcon: String,\n  rightIcon: String,\n  autofocus: Boolean,\n  clearable: Boolean,\n  maxlength: numericProp,\n  formatter: Function,\n  clearIcon: makeStringProp(\"clear\"),\n  modelValue: makeNumericProp(\"\"),\n  inputAlign: String,\n  placeholder: String,\n  autocomplete: String,\n  errorMessage: String,\n  clearTrigger: makeStringProp(\"focus\"),\n  formatTrigger: makeStringProp(\"onChange\"),\n  error: {\n    type: Boolean,\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  readonly: {\n    type: Boolean,\n    default: null\n  }\n};\nconst fieldProps = extend({}, cellSharedProps, fieldSharedProps, {\n  rows: numericProp,\n  type: makeStringProp(\"text\"),\n  rules: Array,\n  autosize: [Boolean, Object],\n  labelWidth: numericProp,\n  labelClass: unknownProp,\n  labelAlign: String,\n  showWordLimit: Boolean,\n  errorMessageAlign: String,\n  colon: {\n    type: Boolean,\n    default: null\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: fieldProps,\n  emits: [\"blur\", \"focus\", \"clear\", \"keypress\", \"click-input\", \"click-left-icon\", \"click-right-icon\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const id = useId();\n    const state = reactive({\n      focused: false,\n      validateFailed: false,\n      validateMessage: \"\"\n    });\n    const inputRef = ref();\n    const customValue = ref();\n    const {\n      parent: form\n    } = useParent(FORM_KEY);\n\n    const getModelValue = () => {\n      var _a;\n\n      return String((_a = props.modelValue) != null ? _a : \"\");\n    };\n\n    const getProp = key => {\n      if (isDef(props[key])) {\n        return props[key];\n      }\n\n      if (form && isDef(form.props[key])) {\n        return form.props[key];\n      }\n    };\n\n    const showClear = computed(() => {\n      const readonly = getProp(\"readonly\");\n\n      if (props.clearable && !readonly) {\n        const hasValue = getModelValue() !== \"\";\n        const trigger = props.clearTrigger === \"always\" || props.clearTrigger === \"focus\" && state.focused;\n        return hasValue && trigger;\n      }\n\n      return false;\n    });\n    const formValue = computed(() => {\n      if (customValue.value && slots.input) {\n        return customValue.value();\n      }\n\n      return props.modelValue;\n    });\n\n    const runRules = rules => rules.reduce((promise, rule) => promise.then(() => {\n      if (state.validateFailed) {\n        return;\n      }\n\n      let {\n        value\n      } = formValue;\n\n      if (rule.formatter) {\n        value = rule.formatter(value, rule);\n      }\n\n      if (!runSyncRule(value, rule)) {\n        state.validateFailed = true;\n        state.validateMessage = getRuleMessage(value, rule);\n        return;\n      }\n\n      if (rule.validator) {\n        return runRuleValidator(value, rule).then(result => {\n          if (result && typeof result === \"string\") {\n            state.validateFailed = true;\n            state.validateMessage = result;\n          } else if (result === false) {\n            state.validateFailed = true;\n            state.validateMessage = getRuleMessage(value, rule);\n          }\n        });\n      }\n    }), Promise.resolve());\n\n    const resetValidation = () => {\n      if (state.validateFailed) {\n        state.validateFailed = false;\n        state.validateMessage = \"\";\n      }\n    };\n\n    const validate = (rules = props.rules) => new Promise(resolve => {\n      resetValidation();\n\n      if (rules) {\n        runRules(rules).then(() => {\n          if (state.validateFailed) {\n            resolve({\n              name: props.name,\n              message: state.validateMessage\n            });\n          } else {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n\n    const validateWithTrigger = trigger => {\n      if (form && props.rules) {\n        const defaultTrigger = form.props.validateTrigger === trigger;\n        const rules = props.rules.filter(rule => {\n          if (rule.trigger) {\n            return rule.trigger === trigger;\n          }\n\n          return defaultTrigger;\n        });\n\n        if (rules.length) {\n          validate(rules);\n        }\n      }\n    };\n\n    const limitValueLength = value => {\n      const {\n        maxlength\n      } = props;\n\n      if (isDef(maxlength) && getStringLength(value) > maxlength) {\n        const modelValue = getModelValue();\n\n        if (modelValue && getStringLength(modelValue) === +maxlength) {\n          return modelValue;\n        }\n\n        return cutString(value, +maxlength);\n      }\n\n      return value;\n    };\n\n    const updateValue = (value, trigger = \"onChange\") => {\n      value = limitValueLength(value);\n\n      if (props.type === \"number\" || props.type === \"digit\") {\n        const isNumber = props.type === \"number\";\n        value = formatNumber(value, isNumber, isNumber);\n      }\n\n      if (props.formatter && trigger === props.formatTrigger) {\n        value = props.formatter(value);\n      }\n\n      if (inputRef.value && inputRef.value.value !== value) {\n        inputRef.value.value = value;\n      }\n\n      if (value !== props.modelValue) {\n        emit(\"update:modelValue\", value);\n      }\n    };\n\n    const onInput = event => {\n      if (!event.target.composing) {\n        updateValue(event.target.value);\n      }\n    };\n\n    const blur = () => {\n      var _a;\n\n      return (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n\n    const focus = () => {\n      var _a;\n\n      return (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n\n    const adjustTextareaSize = () => {\n      const input = inputRef.value;\n\n      if (props.type === \"textarea\" && props.autosize && input) {\n        resizeTextarea(input, props.autosize);\n      }\n    };\n\n    const onFocus = event => {\n      state.focused = true;\n      emit(\"focus\", event);\n      nextTick(adjustTextareaSize);\n\n      if (getProp(\"readonly\")) {\n        blur();\n      }\n    };\n\n    const onBlur = event => {\n      if (getProp(\"readonly\")) {\n        return;\n      }\n\n      state.focused = false;\n      updateValue(getModelValue(), \"onBlur\");\n      emit(\"blur\", event);\n      validateWithTrigger(\"onBlur\");\n      nextTick(adjustTextareaSize);\n      resetScroll();\n    };\n\n    const onClickInput = event => emit(\"click-input\", event);\n\n    const onClickLeftIcon = event => emit(\"click-left-icon\", event);\n\n    const onClickRightIcon = event => emit(\"click-right-icon\", event);\n\n    const onClear = event => {\n      preventDefault(event);\n      emit(\"update:modelValue\", \"\");\n      emit(\"clear\", event);\n    };\n\n    const showError = computed(() => {\n      if (typeof props.error === \"boolean\") {\n        return props.error;\n      }\n\n      if (form && form.props.showError && state.validateFailed) {\n        return true;\n      }\n    });\n    const labelStyle = computed(() => {\n      const labelWidth = getProp(\"labelWidth\");\n\n      if (labelWidth) {\n        return {\n          width: addUnit(labelWidth)\n        };\n      }\n    });\n\n    const onKeypress = event => {\n      const ENTER_CODE = 13;\n\n      if (event.keyCode === ENTER_CODE) {\n        const submitOnEnter = form && form.props.submitOnEnter;\n\n        if (!submitOnEnter && props.type !== \"textarea\") {\n          preventDefault(event);\n        }\n\n        if (props.type === \"search\") {\n          blur();\n        }\n      }\n\n      emit(\"keypress\", event);\n    };\n\n    const getInputId = () => props.id || `${id}-input`;\n\n    const renderInput = () => {\n      const controlClass = bem(\"control\", [getProp(\"inputAlign\"), {\n        error: showError.value,\n        custom: !!slots.input,\n        \"min-height\": props.type === \"textarea\" && !props.autosize\n      }]);\n\n      if (slots.input) {\n        return _createVNode(\"div\", {\n          \"class\": controlClass,\n          \"onClick\": onClickInput\n        }, [slots.input()]);\n      }\n\n      const inputAttrs = {\n        id: getInputId(),\n        ref: inputRef,\n        name: props.name,\n        rows: props.rows !== void 0 ? +props.rows : void 0,\n        class: controlClass,\n        value: props.modelValue,\n        disabled: getProp(\"disabled\"),\n        readonly: getProp(\"readonly\"),\n        autofocus: props.autofocus,\n        placeholder: props.placeholder,\n        autocomplete: props.autocomplete,\n        \"aria-labelledby\": props.label ? `${id}-label` : void 0,\n        onBlur,\n        onFocus,\n        onInput,\n        onClick: onClickInput,\n        onChange: endComposing,\n        onKeypress,\n        onCompositionend: endComposing,\n        onCompositionstart: startComposing\n      };\n\n      if (props.type === \"textarea\") {\n        return _createVNode(\"textarea\", inputAttrs, null);\n      }\n\n      return _createVNode(\"input\", _mergeProps(mapInputType(props.type), inputAttrs), null);\n    };\n\n    const renderLeftIcon = () => {\n      const leftIconSlot = slots[\"left-icon\"];\n\n      if (props.leftIcon || leftIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"left-icon\"),\n          \"onClick\": onClickLeftIcon\n        }, [leftIconSlot ? leftIconSlot() : _createVNode(Icon, {\n          \"name\": props.leftIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n\n    const renderRightIcon = () => {\n      const rightIconSlot = slots[\"right-icon\"];\n\n      if (props.rightIcon || rightIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"right-icon\"),\n          \"onClick\": onClickRightIcon\n        }, [rightIconSlot ? rightIconSlot() : _createVNode(Icon, {\n          \"name\": props.rightIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n\n    const renderWordLimit = () => {\n      if (props.showWordLimit && props.maxlength) {\n        const count = getStringLength(getModelValue());\n        return _createVNode(\"div\", {\n          \"class\": bem(\"word-limit\")\n        }, [_createVNode(\"span\", {\n          \"class\": bem(\"word-num\")\n        }, [count]), _createTextVNode(\"/\"), props.maxlength]);\n      }\n    };\n\n    const renderMessage = () => {\n      if (form && form.props.showErrorMessage === false) {\n        return;\n      }\n\n      const message = props.errorMessage || state.validateMessage;\n\n      if (message) {\n        const slot = slots[\"error-message\"];\n        const errorMessageAlign = getProp(\"errorMessageAlign\");\n        return _createVNode(\"div\", {\n          \"class\": bem(\"error-message\", errorMessageAlign)\n        }, [slot ? slot({\n          message\n        }) : message]);\n      }\n    };\n\n    const renderLabel = () => {\n      const colon = getProp(\"colon\") ? \":\" : \"\";\n\n      if (slots.label) {\n        return [slots.label(), colon];\n      }\n\n      if (props.label) {\n        return _createVNode(\"label\", {\n          \"id\": `${id}-label`,\n          \"for\": getInputId()\n        }, [props.label + colon]);\n      }\n    };\n\n    const renderFieldBody = () => [_createVNode(\"div\", {\n      \"class\": bem(\"body\")\n    }, [renderInput(), showClear.value && _createVNode(Icon, {\n      \"name\": props.clearIcon,\n      \"class\": bem(\"clear\"),\n      \"onTouchstart\": onClear\n    }, null), renderRightIcon(), slots.button && _createVNode(\"div\", {\n      \"class\": bem(\"button\")\n    }, [slots.button()])]), renderWordLimit(), renderMessage()];\n\n    useExpose({\n      blur,\n      focus,\n      validate,\n      formValue,\n      resetValidation\n    });\n    provide(CUSTOM_FIELD_INJECTION_KEY, {\n      customValue,\n      resetValidation,\n      validateWithTrigger\n    });\n    watch(() => props.modelValue, () => {\n      updateValue(getModelValue());\n      resetValidation();\n      validateWithTrigger(\"onChange\");\n      nextTick(adjustTextareaSize);\n    });\n    onMounted(() => {\n      updateValue(getModelValue(), props.formatTrigger);\n      nextTick(adjustTextareaSize);\n    });\n    return () => {\n      const disabled = getProp(\"disabled\");\n      const labelAlign = getProp(\"labelAlign\");\n      const Label = renderLabel();\n      const LeftIcon = renderLeftIcon();\n      return _createVNode(Cell, {\n        \"size\": props.size,\n        \"icon\": props.leftIcon,\n        \"class\": bem({\n          error: showError.value,\n          disabled,\n          [`label-${labelAlign}`]: labelAlign\n        }),\n        \"center\": props.center,\n        \"border\": props.border,\n        \"isLink\": props.isLink,\n        \"clickable\": props.clickable,\n        \"titleStyle\": labelStyle.value,\n        \"valueClass\": bem(\"value\"),\n        \"titleClass\": [bem(\"label\", [labelAlign, {\n          required: props.required\n        }]), props.labelClass],\n        \"arrowDirection\": props.arrowDirection\n      }, {\n        icon: LeftIcon ? () => LeftIcon : null,\n        title: Label ? () => Label : null,\n        value: renderFieldBody,\n        extra: slots.extra\n      });\n    };\n  }\n\n});\nexport { stdin_default as default, fieldSharedProps };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/field/Field.js"],"names":["createTextVNode","_createTextVNode","mergeProps","_mergeProps","createVNode","_createVNode","ref","watch","provide","computed","nextTick","reactive","onMounted","defineComponent","isDef","extend","addUnit","FORM_KEY","numericProp","unknownProp","resetScroll","formatNumber","preventDefault","makeStringProp","makeNumericProp","createNamespace","cutString","runSyncRule","endComposing","mapInputType","startComposing","getRuleMessage","resizeTextarea","getStringLength","runRuleValidator","cellSharedProps","CUSTOM_FIELD_INJECTION_KEY","useParent","useId","useExpose","Icon","Cell","name","bem","fieldSharedProps","id","String","leftIcon","rightIcon","autofocus","Boolean","clearable","maxlength","formatter","Function","clearIcon","modelValue","inputAlign","placeholder","autocomplete","errorMessage","clearTrigger","formatTrigger","error","type","default","disabled","readonly","fieldProps","rows","rules","Array","autosize","Object","labelWidth","labelClass","labelAlign","showWordLimit","errorMessageAlign","colon","stdin_default","props","emits","setup","emit","slots","state","focused","validateFailed","validateMessage","inputRef","customValue","parent","form","getModelValue","_a","getProp","key","showClear","hasValue","trigger","formValue","value","input","runRules","reduce","promise","rule","then","validator","result","Promise","resolve","resetValidation","validate","message","validateWithTrigger","defaultTrigger","validateTrigger","filter","length","limitValueLength","updateValue","isNumber","onInput","event","target","composing","blur","focus","adjustTextareaSize","onFocus","onBlur","onClickInput","onClickLeftIcon","onClickRightIcon","onClear","showError","labelStyle","width","onKeypress","ENTER_CODE","keyCode","submitOnEnter","getInputId","renderInput","controlClass","custom","inputAttrs","class","label","onClick","onChange","onCompositionend","onCompositionstart","renderLeftIcon","leftIconSlot","iconPrefix","renderRightIcon","rightIconSlot","renderWordLimit","count","renderMessage","showErrorMessage","slot","renderLabel","renderFieldBody","button","Label","LeftIcon","size","center","border","isLink","clickable","required","arrowDirection","icon","title","extra"],"mappings":"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","sourcesContent":["import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, provide, computed, nextTick, reactive, onMounted, defineComponent } from \"vue\";\nimport { isDef, extend, addUnit, FORM_KEY, numericProp, unknownProp, resetScroll, formatNumber, preventDefault, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nimport { cutString, runSyncRule, endComposing, mapInputType, startComposing, getRuleMessage, resizeTextarea, getStringLength, runRuleValidator } from \"./utils\";\nimport { cellSharedProps } from \"../cell/Cell\";\nimport { CUSTOM_FIELD_INJECTION_KEY, useParent } from \"@vant/use\";\nimport { useId } from \"../composables/use-id\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Icon } from \"../icon\";\nimport { Cell } from \"../cell\";\nconst [name, bem] = createNamespace(\"field\");\nconst fieldSharedProps = {\n  id: String,\n  name: String,\n  leftIcon: String,\n  rightIcon: String,\n  autofocus: Boolean,\n  clearable: Boolean,\n  maxlength: numericProp,\n  formatter: Function,\n  clearIcon: makeStringProp(\"clear\"),\n  modelValue: makeNumericProp(\"\"),\n  inputAlign: String,\n  placeholder: String,\n  autocomplete: String,\n  errorMessage: String,\n  clearTrigger: makeStringProp(\"focus\"),\n  formatTrigger: makeStringProp(\"onChange\"),\n  error: {\n    type: Boolean,\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  readonly: {\n    type: Boolean,\n    default: null\n  }\n};\nconst fieldProps = extend({}, cellSharedProps, fieldSharedProps, {\n  rows: numericProp,\n  type: makeStringProp(\"text\"),\n  rules: Array,\n  autosize: [Boolean, Object],\n  labelWidth: numericProp,\n  labelClass: unknownProp,\n  labelAlign: String,\n  showWordLimit: Boolean,\n  errorMessageAlign: String,\n  colon: {\n    type: Boolean,\n    default: null\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: fieldProps,\n  emits: [\"blur\", \"focus\", \"clear\", \"keypress\", \"click-input\", \"click-left-icon\", \"click-right-icon\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const id = useId();\n    const state = reactive({\n      focused: false,\n      validateFailed: false,\n      validateMessage: \"\"\n    });\n    const inputRef = ref();\n    const customValue = ref();\n    const {\n      parent: form\n    } = useParent(FORM_KEY);\n    const getModelValue = () => {\n      var _a;\n      return String((_a = props.modelValue) != null ? _a : \"\");\n    };\n    const getProp = (key) => {\n      if (isDef(props[key])) {\n        return props[key];\n      }\n      if (form && isDef(form.props[key])) {\n        return form.props[key];\n      }\n    };\n    const showClear = computed(() => {\n      const readonly = getProp(\"readonly\");\n      if (props.clearable && !readonly) {\n        const hasValue = getModelValue() !== \"\";\n        const trigger = props.clearTrigger === \"always\" || props.clearTrigger === \"focus\" && state.focused;\n        return hasValue && trigger;\n      }\n      return false;\n    });\n    const formValue = computed(() => {\n      if (customValue.value && slots.input) {\n        return customValue.value();\n      }\n      return props.modelValue;\n    });\n    const runRules = (rules) => rules.reduce((promise, rule) => promise.then(() => {\n      if (state.validateFailed) {\n        return;\n      }\n      let {\n        value\n      } = formValue;\n      if (rule.formatter) {\n        value = rule.formatter(value, rule);\n      }\n      if (!runSyncRule(value, rule)) {\n        state.validateFailed = true;\n        state.validateMessage = getRuleMessage(value, rule);\n        return;\n      }\n      if (rule.validator) {\n        return runRuleValidator(value, rule).then((result) => {\n          if (result && typeof result === \"string\") {\n            state.validateFailed = true;\n            state.validateMessage = result;\n          } else if (result === false) {\n            state.validateFailed = true;\n            state.validateMessage = getRuleMessage(value, rule);\n          }\n        });\n      }\n    }), Promise.resolve());\n    const resetValidation = () => {\n      if (state.validateFailed) {\n        state.validateFailed = false;\n        state.validateMessage = \"\";\n      }\n    };\n    const validate = (rules = props.rules) => new Promise((resolve) => {\n      resetValidation();\n      if (rules) {\n        runRules(rules).then(() => {\n          if (state.validateFailed) {\n            resolve({\n              name: props.name,\n              message: state.validateMessage\n            });\n          } else {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n    const validateWithTrigger = (trigger) => {\n      if (form && props.rules) {\n        const defaultTrigger = form.props.validateTrigger === trigger;\n        const rules = props.rules.filter((rule) => {\n          if (rule.trigger) {\n            return rule.trigger === trigger;\n          }\n          return defaultTrigger;\n        });\n        if (rules.length) {\n          validate(rules);\n        }\n      }\n    };\n    const limitValueLength = (value) => {\n      const {\n        maxlength\n      } = props;\n      if (isDef(maxlength) && getStringLength(value) > maxlength) {\n        const modelValue = getModelValue();\n        if (modelValue && getStringLength(modelValue) === +maxlength) {\n          return modelValue;\n        }\n        return cutString(value, +maxlength);\n      }\n      return value;\n    };\n    const updateValue = (value, trigger = \"onChange\") => {\n      value = limitValueLength(value);\n      if (props.type === \"number\" || props.type === \"digit\") {\n        const isNumber = props.type === \"number\";\n        value = formatNumber(value, isNumber, isNumber);\n      }\n      if (props.formatter && trigger === props.formatTrigger) {\n        value = props.formatter(value);\n      }\n      if (inputRef.value && inputRef.value.value !== value) {\n        inputRef.value.value = value;\n      }\n      if (value !== props.modelValue) {\n        emit(\"update:modelValue\", value);\n      }\n    };\n    const onInput = (event) => {\n      if (!event.target.composing) {\n        updateValue(event.target.value);\n      }\n    };\n    const blur = () => {\n      var _a;\n      return (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n    const focus = () => {\n      var _a;\n      return (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    const adjustTextareaSize = () => {\n      const input = inputRef.value;\n      if (props.type === \"textarea\" && props.autosize && input) {\n        resizeTextarea(input, props.autosize);\n      }\n    };\n    const onFocus = (event) => {\n      state.focused = true;\n      emit(\"focus\", event);\n      nextTick(adjustTextareaSize);\n      if (getProp(\"readonly\")) {\n        blur();\n      }\n    };\n    const onBlur = (event) => {\n      if (getProp(\"readonly\")) {\n        return;\n      }\n      state.focused = false;\n      updateValue(getModelValue(), \"onBlur\");\n      emit(\"blur\", event);\n      validateWithTrigger(\"onBlur\");\n      nextTick(adjustTextareaSize);\n      resetScroll();\n    };\n    const onClickInput = (event) => emit(\"click-input\", event);\n    const onClickLeftIcon = (event) => emit(\"click-left-icon\", event);\n    const onClickRightIcon = (event) => emit(\"click-right-icon\", event);\n    const onClear = (event) => {\n      preventDefault(event);\n      emit(\"update:modelValue\", \"\");\n      emit(\"clear\", event);\n    };\n    const showError = computed(() => {\n      if (typeof props.error === \"boolean\") {\n        return props.error;\n      }\n      if (form && form.props.showError && state.validateFailed) {\n        return true;\n      }\n    });\n    const labelStyle = computed(() => {\n      const labelWidth = getProp(\"labelWidth\");\n      if (labelWidth) {\n        return {\n          width: addUnit(labelWidth)\n        };\n      }\n    });\n    const onKeypress = (event) => {\n      const ENTER_CODE = 13;\n      if (event.keyCode === ENTER_CODE) {\n        const submitOnEnter = form && form.props.submitOnEnter;\n        if (!submitOnEnter && props.type !== \"textarea\") {\n          preventDefault(event);\n        }\n        if (props.type === \"search\") {\n          blur();\n        }\n      }\n      emit(\"keypress\", event);\n    };\n    const getInputId = () => props.id || `${id}-input`;\n    const renderInput = () => {\n      const controlClass = bem(\"control\", [getProp(\"inputAlign\"), {\n        error: showError.value,\n        custom: !!slots.input,\n        \"min-height\": props.type === \"textarea\" && !props.autosize\n      }]);\n      if (slots.input) {\n        return _createVNode(\"div\", {\n          \"class\": controlClass,\n          \"onClick\": onClickInput\n        }, [slots.input()]);\n      }\n      const inputAttrs = {\n        id: getInputId(),\n        ref: inputRef,\n        name: props.name,\n        rows: props.rows !== void 0 ? +props.rows : void 0,\n        class: controlClass,\n        value: props.modelValue,\n        disabled: getProp(\"disabled\"),\n        readonly: getProp(\"readonly\"),\n        autofocus: props.autofocus,\n        placeholder: props.placeholder,\n        autocomplete: props.autocomplete,\n        \"aria-labelledby\": props.label ? `${id}-label` : void 0,\n        onBlur,\n        onFocus,\n        onInput,\n        onClick: onClickInput,\n        onChange: endComposing,\n        onKeypress,\n        onCompositionend: endComposing,\n        onCompositionstart: startComposing\n      };\n      if (props.type === \"textarea\") {\n        return _createVNode(\"textarea\", inputAttrs, null);\n      }\n      return _createVNode(\"input\", _mergeProps(mapInputType(props.type), inputAttrs), null);\n    };\n    const renderLeftIcon = () => {\n      const leftIconSlot = slots[\"left-icon\"];\n      if (props.leftIcon || leftIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"left-icon\"),\n          \"onClick\": onClickLeftIcon\n        }, [leftIconSlot ? leftIconSlot() : _createVNode(Icon, {\n          \"name\": props.leftIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n    const renderRightIcon = () => {\n      const rightIconSlot = slots[\"right-icon\"];\n      if (props.rightIcon || rightIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"right-icon\"),\n          \"onClick\": onClickRightIcon\n        }, [rightIconSlot ? rightIconSlot() : _createVNode(Icon, {\n          \"name\": props.rightIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n    const renderWordLimit = () => {\n      if (props.showWordLimit && props.maxlength) {\n        const count = getStringLength(getModelValue());\n        return _createVNode(\"div\", {\n          \"class\": bem(\"word-limit\")\n        }, [_createVNode(\"span\", {\n          \"class\": bem(\"word-num\")\n        }, [count]), _createTextVNode(\"/\"), props.maxlength]);\n      }\n    };\n    const renderMessage = () => {\n      if (form && form.props.showErrorMessage === false) {\n        return;\n      }\n      const message = props.errorMessage || state.validateMessage;\n      if (message) {\n        const slot = slots[\"error-message\"];\n        const errorMessageAlign = getProp(\"errorMessageAlign\");\n        return _createVNode(\"div\", {\n          \"class\": bem(\"error-message\", errorMessageAlign)\n        }, [slot ? slot({\n          message\n        }) : message]);\n      }\n    };\n    const renderLabel = () => {\n      const colon = getProp(\"colon\") ? \":\" : \"\";\n      if (slots.label) {\n        return [slots.label(), colon];\n      }\n      if (props.label) {\n        return _createVNode(\"label\", {\n          \"id\": `${id}-label`,\n          \"for\": getInputId()\n        }, [props.label + colon]);\n      }\n    };\n    const renderFieldBody = () => [_createVNode(\"div\", {\n      \"class\": bem(\"body\")\n    }, [renderInput(), showClear.value && _createVNode(Icon, {\n      \"name\": props.clearIcon,\n      \"class\": bem(\"clear\"),\n      \"onTouchstart\": onClear\n    }, null), renderRightIcon(), slots.button && _createVNode(\"div\", {\n      \"class\": bem(\"button\")\n    }, [slots.button()])]), renderWordLimit(), renderMessage()];\n    useExpose({\n      blur,\n      focus,\n      validate,\n      formValue,\n      resetValidation\n    });\n    provide(CUSTOM_FIELD_INJECTION_KEY, {\n      customValue,\n      resetValidation,\n      validateWithTrigger\n    });\n    watch(() => props.modelValue, () => {\n      updateValue(getModelValue());\n      resetValidation();\n      validateWithTrigger(\"onChange\");\n      nextTick(adjustTextareaSize);\n    });\n    onMounted(() => {\n      updateValue(getModelValue(), props.formatTrigger);\n      nextTick(adjustTextareaSize);\n    });\n    return () => {\n      const disabled = getProp(\"disabled\");\n      const labelAlign = getProp(\"labelAlign\");\n      const Label = renderLabel();\n      const LeftIcon = renderLeftIcon();\n      return _createVNode(Cell, {\n        \"size\": props.size,\n        \"icon\": props.leftIcon,\n        \"class\": bem({\n          error: showError.value,\n          disabled,\n          [`label-${labelAlign}`]: labelAlign\n        }),\n        \"center\": props.center,\n        \"border\": props.border,\n        \"isLink\": props.isLink,\n        \"clickable\": props.clickable,\n        \"titleStyle\": labelStyle.value,\n        \"valueClass\": bem(\"value\"),\n        \"titleClass\": [bem(\"label\", [labelAlign, {\n          required: props.required\n        }]), props.labelClass],\n        \"arrowDirection\": props.arrowDirection\n      }, {\n        icon: LeftIcon ? () => LeftIcon : null,\n        title: Label ? () => Label : null,\n        value: renderFieldBody,\n        extra: slots.extra\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  fieldSharedProps\n};\n"]},"metadata":{},"sourceType":"module"}