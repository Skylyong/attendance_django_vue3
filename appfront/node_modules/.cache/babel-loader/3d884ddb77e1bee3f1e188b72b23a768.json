{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component\";\nimport VanDialog from \"./Dialog\";\nlet instance;\n\nfunction initInstance() {\n  const Wrapper = {\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanDialog, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n\n  };\n  ({\n    instance\n  } = mountComponent(Wrapper));\n}\n\nfunction Dialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    if (!instance) {\n      initInstance();\n    }\n\n    instance.open(extend({}, Dialog.currentOptions, options, {\n      callback: action => {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\n\nDialog.defaultOptions = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nDialog.currentOptions = extend({}, Dialog.defaultOptions);\nDialog.alert = Dialog;\n\nDialog.confirm = options => Dialog(extend({\n  showCancelButton: true\n}, options));\n\nDialog.close = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\n\nDialog.setDefaultOptions = options => {\n  extend(Dialog.currentOptions, options);\n};\n\nDialog.resetDefaultOptions = () => {\n  Dialog.currentOptions = extend({}, Dialog.defaultOptions);\n};\n\nDialog.Component = withInstall(VanDialog);\n\nDialog.install = app => {\n  app.use(Dialog.Component);\n  app.config.globalProperties.$dialog = Dialog;\n};\n\nexport { Dialog };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/dialog/function-call.js"],"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","inBrowser","withInstall","mountComponent","usePopupState","VanDialog","instance","initInstance","Wrapper","setup","state","toggle","Dialog","options","Promise","resolve","reject","open","currentOptions","callback","action","defaultOptions","title","width","theme","message","overlay","teleport","className","allowHtml","lockScroll","transition","beforeClose","overlayClass","overlayStyle","messageAlign","cancelButtonText","cancelButtonColor","confirmButtonText","confirmButtonColor","showConfirmButton","showCancelButton","closeOnPopstate","closeOnClickOverlay","alert","confirm","close","setDefaultOptions","resetDefaultOptions","Component","install","app","use","config","globalProperties","$dialog"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component\";\nimport VanDialog from \"./Dialog\";\nlet instance;\nfunction initInstance() {\n  const Wrapper = {\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      return () => _createVNode(VanDialog, _mergeProps(state, {\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  };\n  ({\n    instance\n  } = mountComponent(Wrapper));\n}\nfunction Dialog(options) {\n  if (!inBrowser) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve, reject) => {\n    if (!instance) {\n      initInstance();\n    }\n    instance.open(extend({}, Dialog.currentOptions, options, {\n      callback: (action) => {\n        (action === \"confirm\" ? resolve : reject)(action);\n      }\n    }));\n  });\n}\nDialog.defaultOptions = {\n  title: \"\",\n  width: \"\",\n  theme: null,\n  message: \"\",\n  overlay: true,\n  callback: null,\n  teleport: \"body\",\n  className: \"\",\n  allowHtml: false,\n  lockScroll: true,\n  transition: void 0,\n  beforeClose: null,\n  overlayClass: \"\",\n  overlayStyle: void 0,\n  messageAlign: \"\",\n  cancelButtonText: \"\",\n  cancelButtonColor: null,\n  confirmButtonText: \"\",\n  confirmButtonColor: null,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false\n};\nDialog.currentOptions = extend({}, Dialog.defaultOptions);\nDialog.alert = Dialog;\nDialog.confirm = (options) => Dialog(extend({\n  showCancelButton: true\n}, options));\nDialog.close = () => {\n  if (instance) {\n    instance.toggle(false);\n  }\n};\nDialog.setDefaultOptions = (options) => {\n  extend(Dialog.currentOptions, options);\n};\nDialog.resetDefaultOptions = () => {\n  Dialog.currentOptions = extend({}, Dialog.defaultOptions);\n};\nDialog.Component = withInstall(VanDialog);\nDialog.install = (app) => {\n  app.use(Dialog.Component);\n  app.config.globalProperties.$dialog = Dialog;\n};\nexport {\n  Dialog\n};\n"]},"metadata":{},"sourceType":"module"}