{"ast":null,"code":"var helperNumberAdd = require('./helperNumberAdd');\n\nvar isFunction = require('./isFunction');\n\nvar each = require('./each');\n\nvar get = require('./get');\n/**\r\n  * 求和函数，将数值相加\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Function/String} iterate 方法或属性\r\n  * @param {Object} context 上下文\r\n  * @return {Number}\r\n  */\n\n\nfunction sum(array, iterate, context) {\n  var result = 0;\n  each(array, iterate ? isFunction(iterate) ? function () {\n    result = helperNumberAdd(result, iterate.apply(context, arguments));\n  } : function (val) {\n    result = helperNumberAdd(result, get(val, iterate));\n  } : function (val) {\n    result = helperNumberAdd(result, val);\n  });\n  return result;\n}\n\nmodule.exports = sum;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/sum.js"],"names":["helperNumberAdd","require","isFunction","each","get","sum","array","iterate","context","result","apply","arguments","val","module","exports"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA7B;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,OAAD,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,GAAT,CAAcC,KAAd,EAAqBC,OAArB,EAA8BC,OAA9B,EAAuC;AACrC,MAAIC,MAAM,GAAG,CAAb;AACAN,EAAAA,IAAI,CAACG,KAAD,EAAQC,OAAO,GAAGL,UAAU,CAACK,OAAD,CAAV,GAAsB,YAAY;AACtDE,IAAAA,MAAM,GAAGT,eAAe,CAACS,MAAD,EAASF,OAAO,CAACG,KAAR,CAAcF,OAAd,EAAuBG,SAAvB,CAAT,CAAxB;AACD,GAFqB,GAElB,UAAUC,GAAV,EAAe;AACjBH,IAAAA,MAAM,GAAGT,eAAe,CAACS,MAAD,EAASL,GAAG,CAACQ,GAAD,EAAML,OAAN,CAAZ,CAAxB;AACD,GAJkB,GAIf,UAAUK,GAAV,EAAe;AACjBH,IAAAA,MAAM,GAAGT,eAAe,CAACS,MAAD,EAASG,GAAT,CAAxB;AACD,GANG,CAAJ;AAOA,SAAOH,MAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBT,GAAjB","sourcesContent":["var helperNumberAdd = require('./helperNumberAdd')\r\n\r\nvar isFunction = require('./isFunction')\r\nvar each = require('./each')\r\nvar get = require('./get')\r\n\r\n/**\r\n  * 求和函数，将数值相加\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Function/String} iterate 方法或属性\r\n  * @param {Object} context 上下文\r\n  * @return {Number}\r\n  */\r\nfunction sum (array, iterate, context) {\r\n  var result = 0\r\n  each(array, iterate ? isFunction(iterate) ? function () {\r\n    result = helperNumberAdd(result, iterate.apply(context, arguments))\r\n  } : function (val) {\r\n    result = helperNumberAdd(result, get(val, iterate))\r\n  } : function (val) {\r\n    result = helperNumberAdd(result, val)\r\n  })\r\n  return result\r\n}\r\n\r\nmodule.exports = sum\r\n"]},"metadata":{},"sourceType":"script"}