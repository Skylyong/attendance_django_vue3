{"ast":null,"code":"import interopDefault from './interopDefault';\nimport moment from 'moment';\nimport warning from './warning';\nimport isNil from 'lodash-es/isNil';\nexport var TimeType = {\n  validator: function validator(value) {\n    return typeof value === 'string' || isNil(value) || moment.isMoment(value);\n  }\n};\nexport var TimesType = {\n  validator: function validator(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0 || value.findIndex(function (val) {\n        return typeof val !== 'string';\n      }) === -1 || value.findIndex(function (val) {\n        return !isNil(val) && !moment.isMoment(val);\n      }) === -1;\n    }\n\n    return false;\n  }\n};\nexport var TimeOrTimesType = {\n  validator: function validator(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0 || value.findIndex(function (val) {\n        return typeof val !== 'string';\n      }) === -1 || value.findIndex(function (val) {\n        return !isNil(val) && !moment.isMoment(val);\n      }) === -1;\n    } else {\n      return typeof value === 'string' || isNil(value) || moment.isMoment(value);\n    }\n  }\n};\nexport function checkValidate(componentName, value, propName, valueFormat) {\n  var values = Array.isArray(value) ? value : [value];\n  values.forEach(function (val) {\n    if (!val) return;\n    valueFormat && warning(interopDefault(moment)(val, valueFormat).isValid(), componentName, \"When set `valueFormat`, `\".concat(propName, \"` should provides invalidate string time. \"));\n    !valueFormat && warning(interopDefault(moment).isMoment(val) && val.isValid(), componentName, \"`\".concat(propName, \"` provides invalidate moment time. If you want to set empty value, use `null` instead.\"));\n  });\n}\nexport var stringToMoment = function stringToMoment(value, valueFormat) {\n  if (Array.isArray(value)) {\n    return value.map(function (val) {\n      return typeof val === 'string' && val ? interopDefault(moment)(val, valueFormat) : val || null;\n    });\n  } else {\n    return typeof value === 'string' && value ? interopDefault(moment)(value, valueFormat) : value || null;\n  }\n};\nexport var momentToString = function momentToString(value, valueFormat) {\n  if (Array.isArray(value)) {\n    return value.map(function (val) {\n      return interopDefault(moment).isMoment(val) ? val.format(valueFormat) : val;\n    });\n  } else {\n    return interopDefault(moment).isMoment(value) ? value.format(valueFormat) : value;\n  }\n};","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/_util/moment-util.js"],"names":["interopDefault","moment","warning","isNil","TimeType","validator","value","isMoment","TimesType","Array","isArray","length","findIndex","val","TimeOrTimesType","checkValidate","componentName","propName","valueFormat","values","forEach","isValid","concat","stringToMoment","map","momentToString","format"],"mappings":"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","sourcesContent":["import interopDefault from './interopDefault';\nimport moment from 'moment';\nimport warning from './warning';\nimport isNil from 'lodash-es/isNil';\nexport var TimeType = {\n  validator: function validator(value) {\n    return typeof value === 'string' || isNil(value) || moment.isMoment(value);\n  }\n};\nexport var TimesType = {\n  validator: function validator(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0 || value.findIndex(function (val) {\n        return typeof val !== 'string';\n      }) === -1 || value.findIndex(function (val) {\n        return !isNil(val) && !moment.isMoment(val);\n      }) === -1;\n    }\n\n    return false;\n  }\n};\nexport var TimeOrTimesType = {\n  validator: function validator(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0 || value.findIndex(function (val) {\n        return typeof val !== 'string';\n      }) === -1 || value.findIndex(function (val) {\n        return !isNil(val) && !moment.isMoment(val);\n      }) === -1;\n    } else {\n      return typeof value === 'string' || isNil(value) || moment.isMoment(value);\n    }\n  }\n};\nexport function checkValidate(componentName, value, propName, valueFormat) {\n  var values = Array.isArray(value) ? value : [value];\n  values.forEach(function (val) {\n    if (!val) return;\n    valueFormat && warning(interopDefault(moment)(val, valueFormat).isValid(), componentName, \"When set `valueFormat`, `\".concat(propName, \"` should provides invalidate string time. \"));\n    !valueFormat && warning(interopDefault(moment).isMoment(val) && val.isValid(), componentName, \"`\".concat(propName, \"` provides invalidate moment time. If you want to set empty value, use `null` instead.\"));\n  });\n}\nexport var stringToMoment = function stringToMoment(value, valueFormat) {\n  if (Array.isArray(value)) {\n    return value.map(function (val) {\n      return typeof val === 'string' && val ? interopDefault(moment)(val, valueFormat) : val || null;\n    });\n  } else {\n    return typeof value === 'string' && value ? interopDefault(moment)(value, valueFormat) : value || null;\n  }\n};\nexport var momentToString = function momentToString(value, valueFormat) {\n  if (Array.isArray(value)) {\n    return value.map(function (val) {\n      return interopDefault(moment).isMoment(val) ? val.format(valueFormat) : val;\n    });\n  } else {\n    return interopDefault(moment).isMoment(value) ? value.format(valueFormat) : value;\n  }\n};"]},"metadata":{},"sourceType":"module"}