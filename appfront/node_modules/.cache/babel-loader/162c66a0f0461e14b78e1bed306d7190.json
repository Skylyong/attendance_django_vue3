{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createTextVNode as _createTextVNode, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n/**\n * Since search box is in different position with different mode.\n * - Single: in the popup box\n * - multiple: in the selector\n * Move the code as a SearchInput for easy management.\n */\n\nimport BaseInput from '../../_util/BaseInput';\nimport { inject, ref, onMounted, computed, watch } from 'vue';\nimport PropTypes from '../../_util/vue-types';\nimport { createRef } from './util';\nvar SearchInput = {\n  name: 'SearchInput',\n  inheritAttrs: false,\n  props: {\n    open: PropTypes.looseBool,\n    searchValue: PropTypes.string,\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.looseBool,\n    renderPlaceholder: PropTypes.func,\n    needAlign: PropTypes.looseBool,\n    ariaId: PropTypes.string,\n    isMultiple: PropTypes.looseBool.def(true),\n    showSearch: PropTypes.looseBool\n  },\n  emits: ['mirrorSearchValueChange'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var measureRef = ref();\n    var inputWidth = ref(0);\n    var mirrorSearchValue = ref(props.searchValue);\n    watch(computed(function () {\n      return props.searchValue;\n    }), function () {\n      mirrorSearchValue.value = props.searchValue;\n    });\n    watch(mirrorSearchValue, function () {\n      emit('mirrorSearchValueChange', mirrorSearchValue.value);\n    }, {\n      immediate: true\n    }); // We measure width and set to the input immediately\n\n    onMounted(function () {\n      if (props.isMultiple) {\n        watch(mirrorSearchValue, function () {\n          inputWidth.value = measureRef.value.scrollWidth;\n        }, {\n          flush: 'post',\n          immediate: true\n        });\n      }\n    });\n    return {\n      measureRef: measureRef,\n      inputWidth: inputWidth,\n      vcTreeSelect: inject('vcTreeSelect', {}),\n      mirrorSearchValue: mirrorSearchValue\n    };\n  },\n  created: function created() {\n    this.inputRef = createRef();\n    this.prevProps = _extends({}, this.$props);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      var open = _this.$props.open;\n\n      if (open) {\n        _this.focus(true);\n      }\n    });\n  },\n  updated: function updated() {\n    var _this2 = this;\n\n    var open = this.$props.open;\n    var prevProps = this.prevProps;\n    this.$nextTick(function () {\n      if (open && prevProps.open !== open) {\n        _this2.focus();\n      }\n\n      _this2.prevProps = _extends({}, _this2.$props);\n    });\n  },\n  methods: {\n    /**\n     * Need additional timeout for focus cause parent dom is not ready when didMount trigger\n     */\n    focus: function focus(isDidMount) {\n      var _this3 = this;\n\n      if (this.inputRef.current) {\n        if (isDidMount) {\n          setTimeout(function () {\n            _this3.inputRef.current.focus();\n          }, 0);\n        } else {\n          // set it into else, Avoid scrolling when focus\n          this.inputRef.current.focus();\n        }\n      }\n    },\n    blur: function blur() {\n      if (this.inputRef.current) {\n        this.inputRef.current.blur();\n      }\n    },\n    handleInputChange: function handleInputChange(e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          composing = _e$target.composing;\n      var _this$searchValue = this.searchValue,\n          searchValue = _this$searchValue === void 0 ? '' : _this$searchValue;\n\n      if (e.isComposing || composing || searchValue === value) {\n        this.mirrorSearchValue = value;\n        return;\n      }\n\n      this.vcTreeSelect.onSearchInputChange(e);\n    }\n  },\n  render: function render() {\n    var _this$$props = this.$props,\n        searchValue = _this$$props.searchValue,\n        prefixCls = _this$$props.prefixCls,\n        disabled = _this$$props.disabled,\n        renderPlaceholder = _this$$props.renderPlaceholder,\n        open = _this$$props.open,\n        ariaId = _this$$props.ariaId,\n        isMultiple = _this$$props.isMultiple,\n        showSearch = _this$$props.showSearch;\n    var onSearchInputKeyDown = this.vcTreeSelect.onSearchInputKeyDown,\n        handleInputChange = this.handleInputChange,\n        mirrorSearchValue = this.mirrorSearchValue,\n        inputWidth = this.inputWidth;\n    return _createVNode(_Fragment, null, [_createVNode(\"span\", {\n      \"class\": \"\".concat(prefixCls, \"-selection-search\"),\n      \"style\": isMultiple ? {\n        width: inputWidth + 'px'\n      } : {}\n    }, [_createVNode(BaseInput, {\n      \"type\": \"text\",\n      \"ref\": this.inputRef,\n      \"onChange\": handleInputChange,\n      \"onKeydown\": onSearchInputKeyDown,\n      \"value\": searchValue,\n      \"disabled\": disabled,\n      \"readonly\": !showSearch,\n      \"class\": \"\".concat(prefixCls, \"-selection-search-input\"),\n      \"aria-label\": \"filter select\",\n      \"aria-autocomplete\": \"list\",\n      \"aria-controls\": open ? ariaId : undefined,\n      \"aria-multiline\": \"false\"\n    }, null), isMultiple ? _createVNode(\"span\", {\n      \"ref\": \"measureRef\",\n      \"class\": \"\".concat(prefixCls, \"-selection-search-mirror\"),\n      \"aria-hidden\": true\n    }, [mirrorSearchValue, _createTextVNode(\"\\xA0\")]) : null]), renderPlaceholder && !mirrorSearchValue ? renderPlaceholder() : null]);\n  }\n};\nexport default SearchInput;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/vc-tree-select/src/SearchInput.js"],"names":["_extends","createTextVNode","_createTextVNode","createVNode","_createVNode","Fragment","_Fragment","BaseInput","inject","ref","onMounted","computed","watch","PropTypes","createRef","SearchInput","name","inheritAttrs","props","open","looseBool","searchValue","string","prefixCls","disabled","renderPlaceholder","func","needAlign","ariaId","isMultiple","def","showSearch","emits","setup","_ref","emit","measureRef","inputWidth","mirrorSearchValue","value","immediate","scrollWidth","flush","vcTreeSelect","created","inputRef","prevProps","$props","mounted","_this","$nextTick","focus","updated","_this2","methods","isDidMount","_this3","current","setTimeout","blur","handleInputChange","e","_e$target","target","composing","_this$searchValue","isComposing","onSearchInputChange","render","_this$$props","onSearchInputKeyDown","concat","width","undefined"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createTextVNode as _createTextVNode, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n\n/**\n * Since search box is in different position with different mode.\n * - Single: in the popup box\n * - multiple: in the selector\n * Move the code as a SearchInput for easy management.\n */\nimport BaseInput from '../../_util/BaseInput';\nimport { inject, ref, onMounted, computed, watch } from 'vue';\nimport PropTypes from '../../_util/vue-types';\nimport { createRef } from './util';\nvar SearchInput = {\n  name: 'SearchInput',\n  inheritAttrs: false,\n  props: {\n    open: PropTypes.looseBool,\n    searchValue: PropTypes.string,\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.looseBool,\n    renderPlaceholder: PropTypes.func,\n    needAlign: PropTypes.looseBool,\n    ariaId: PropTypes.string,\n    isMultiple: PropTypes.looseBool.def(true),\n    showSearch: PropTypes.looseBool\n  },\n  emits: ['mirrorSearchValueChange'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var measureRef = ref();\n    var inputWidth = ref(0);\n    var mirrorSearchValue = ref(props.searchValue);\n    watch(computed(function () {\n      return props.searchValue;\n    }), function () {\n      mirrorSearchValue.value = props.searchValue;\n    });\n    watch(mirrorSearchValue, function () {\n      emit('mirrorSearchValueChange', mirrorSearchValue.value);\n    }, {\n      immediate: true\n    }); // We measure width and set to the input immediately\n\n    onMounted(function () {\n      if (props.isMultiple) {\n        watch(mirrorSearchValue, function () {\n          inputWidth.value = measureRef.value.scrollWidth;\n        }, {\n          flush: 'post',\n          immediate: true\n        });\n      }\n    });\n    return {\n      measureRef: measureRef,\n      inputWidth: inputWidth,\n      vcTreeSelect: inject('vcTreeSelect', {}),\n      mirrorSearchValue: mirrorSearchValue\n    };\n  },\n  created: function created() {\n    this.inputRef = createRef();\n    this.prevProps = _extends({}, this.$props);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      var open = _this.$props.open;\n\n      if (open) {\n        _this.focus(true);\n      }\n    });\n  },\n  updated: function updated() {\n    var _this2 = this;\n\n    var open = this.$props.open;\n    var prevProps = this.prevProps;\n    this.$nextTick(function () {\n      if (open && prevProps.open !== open) {\n        _this2.focus();\n      }\n\n      _this2.prevProps = _extends({}, _this2.$props);\n    });\n  },\n  methods: {\n    /**\n     * Need additional timeout for focus cause parent dom is not ready when didMount trigger\n     */\n    focus: function focus(isDidMount) {\n      var _this3 = this;\n\n      if (this.inputRef.current) {\n        if (isDidMount) {\n          setTimeout(function () {\n            _this3.inputRef.current.focus();\n          }, 0);\n        } else {\n          // set it into else, Avoid scrolling when focus\n          this.inputRef.current.focus();\n        }\n      }\n    },\n    blur: function blur() {\n      if (this.inputRef.current) {\n        this.inputRef.current.blur();\n      }\n    },\n    handleInputChange: function handleInputChange(e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          composing = _e$target.composing;\n      var _this$searchValue = this.searchValue,\n          searchValue = _this$searchValue === void 0 ? '' : _this$searchValue;\n\n      if (e.isComposing || composing || searchValue === value) {\n        this.mirrorSearchValue = value;\n        return;\n      }\n\n      this.vcTreeSelect.onSearchInputChange(e);\n    }\n  },\n  render: function render() {\n    var _this$$props = this.$props,\n        searchValue = _this$$props.searchValue,\n        prefixCls = _this$$props.prefixCls,\n        disabled = _this$$props.disabled,\n        renderPlaceholder = _this$$props.renderPlaceholder,\n        open = _this$$props.open,\n        ariaId = _this$$props.ariaId,\n        isMultiple = _this$$props.isMultiple,\n        showSearch = _this$$props.showSearch;\n    var onSearchInputKeyDown = this.vcTreeSelect.onSearchInputKeyDown,\n        handleInputChange = this.handleInputChange,\n        mirrorSearchValue = this.mirrorSearchValue,\n        inputWidth = this.inputWidth;\n    return _createVNode(_Fragment, null, [_createVNode(\"span\", {\n      \"class\": \"\".concat(prefixCls, \"-selection-search\"),\n      \"style\": isMultiple ? {\n        width: inputWidth + 'px'\n      } : {}\n    }, [_createVNode(BaseInput, {\n      \"type\": \"text\",\n      \"ref\": this.inputRef,\n      \"onChange\": handleInputChange,\n      \"onKeydown\": onSearchInputKeyDown,\n      \"value\": searchValue,\n      \"disabled\": disabled,\n      \"readonly\": !showSearch,\n      \"class\": \"\".concat(prefixCls, \"-selection-search-input\"),\n      \"aria-label\": \"filter select\",\n      \"aria-autocomplete\": \"list\",\n      \"aria-controls\": open ? ariaId : undefined,\n      \"aria-multiline\": \"false\"\n    }, null), isMultiple ? _createVNode(\"span\", {\n      \"ref\": \"measureRef\",\n      \"class\": \"\".concat(prefixCls, \"-selection-search-mirror\"),\n      \"aria-hidden\": true\n    }, [mirrorSearchValue, _createTextVNode(\"\\xA0\")]) : null]), renderPlaceholder && !mirrorSearchValue ? renderPlaceholder() : null]);\n  }\n};\nexport default SearchInput;"]},"metadata":{},"sourceType":"module"}