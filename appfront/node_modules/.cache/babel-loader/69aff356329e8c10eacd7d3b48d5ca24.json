{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport { defineComponent, getCurrentInstance, h, createCommentVNode, resolveComponent, reactive, ref, provide, inject, nextTick, onActivated, onDeactivated, onBeforeUnmount, onUnmounted, watch, computed, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { browse, isPx, isScale, hasClass, addClass, removeClass, getEventTargetNode, getPaddingTopBottomSize, setScrollTop, setScrollLeft, isNodeElement } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex, hasChildrenList, getFuncText, isEnableConf, formatText, eqEmptyValue } from '../../tools/utils';\nimport { warnLog, errLog, getLog } from '../../tools/log';\nimport { createResizeEvent } from '../../tools/resize';\nimport { GlobalEvent, hasEventKey, EVENT_KEYS } from '../../tools/event';\nimport { useSize } from '../../hooks/size';\nimport { VXETable } from '../../v-x-e-table';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport Cell from './cell';\nimport TableBodyComponent from './body';\nimport tableProps from './props';\nimport tableEmits from './emits';\nimport { getRowUniqueId, clearTableAllStatus, getRowkey, getRowid, rowToVisible, colToVisible, getCellValue, setCellValue, handleFieldOrColumn, toTreePathSeq, restoreScrollLocation, restoreScrollListener } from './util';\nvar isWebkit = browse['-webkit'] && !browse.edge;\nvar resizableStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_WIDTH';\nvar visibleStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_VISIBLE';\nexport default defineComponent({\n  name: 'VxeTable',\n  props: tableProps,\n  emits: tableEmits,\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var hasUseTooltip = VXETable.tooltip;\n    var xID = XEUtils.uniqueId();\n    var computeSize = useSize(props);\n    var instance = getCurrentInstance();\n    var reactData = reactive({\n      // 低性能的静态列\n      staticColumns: [],\n      // 渲染的列分组\n      tableGroupColumn: [],\n      // 可视区渲染的列\n      tableColumn: [],\n      // 渲染中的数据\n      tableData: [],\n      // 是否启用了横向 X 可视渲染方式加载\n      scrollXLoad: false,\n      // 是否启用了纵向 Y 可视渲染方式加载\n      scrollYLoad: false,\n      // 是否存在纵向滚动条\n      overflowY: true,\n      // 是否存在横向滚动条\n      overflowX: false,\n      // 纵向滚动条的宽度\n      scrollbarWidth: 0,\n      // 横向滚动条的高度\n      scrollbarHeight: 0,\n      // 行高\n      rowHeight: 0,\n      // 表格父容器的高度\n      parentHeight: 0,\n      // 是否使用分组表头\n      isGroup: false,\n      isAllOverflow: false,\n      // 复选框属性，是否全选\n      isAllSelected: false,\n      // 复选框属性，有选中且非全选状态\n      isIndeterminate: false,\n      // 复选框属性，已选中的行\n      selection: [],\n      // 当前行\n      currentRow: null,\n      // 单选框属性，选中列\n      currentColumn: null,\n      // 单选框属性，选中行\n      selectRow: null,\n      // 表尾合计数据\n      footerTableData: [],\n      // 展开列信息\n      expandColumn: null,\n      // 树节点列信息\n      treeNodeColumn: null,\n      hasFixedColumn: false,\n      // 已展开的行\n      rowExpandeds: [],\n      // 懒加载中的展开行的列表\n      expandLazyLoadeds: [],\n      // 已展开树节点\n      treeExpandeds: [],\n      // 懒加载中的树节点的列表\n      treeLazyLoadeds: [],\n      // 树节点不确定状态的列表\n      treeIndeterminates: [],\n      // 合并单元格的对象集\n      mergeList: [],\n      // 合并表尾数据的对象集\n      mergeFooterList: [],\n      // 初始化标识\n      initStore: {\n        filter: false,\n        import: false,\n        export: false\n      },\n      // 当前选中的筛选列\n      filterStore: {\n        isAllSelected: false,\n        isIndeterminate: false,\n        style: null,\n        options: [],\n        column: null,\n        multiple: false,\n        visible: false,\n        maxHeight: null\n      },\n      // 存放列相关的信息\n      columnStore: {\n        leftList: [],\n        centerList: [],\n        rightList: [],\n        resizeList: [],\n        pxList: [],\n        pxMinList: [],\n        scaleList: [],\n        scaleMinList: [],\n        autoList: []\n      },\n      // 存放快捷菜单的信息\n      ctxMenuStore: {\n        selected: null,\n        visible: false,\n        showChild: false,\n        selectChild: null,\n        list: [],\n        style: null\n      },\n      // 存放可编辑相关信息\n      editStore: {\n        indexs: {\n          columns: []\n        },\n        titles: {\n          columns: []\n        },\n        // 选中源\n        selected: {\n          row: null,\n          column: null\n        },\n        // 已复制源\n        copyed: {\n          cut: false,\n          rows: [],\n          columns: []\n        },\n        // 激活\n        actived: {\n          row: null,\n          column: null\n        },\n        insertList: [],\n        removeList: []\n      },\n      // 存放 tooltip 相关信息\n      tooltipStore: {\n        row: null,\n        column: null,\n        content: null,\n        visible: false,\n        currOpts: null\n      },\n      // 存放数据校验相关信息\n      validStore: {\n        visible: false,\n        row: null,\n        column: null,\n        content: '',\n        rule: null,\n        isArrow: false\n      },\n      // 导入相关信息\n      importStore: {\n        inited: false,\n        file: null,\n        type: '',\n        modeList: [],\n        typeList: [],\n        filename: '',\n        visible: false\n      },\n      importParams: {\n        mode: '',\n        types: null,\n        message: true\n      },\n      // 导出相关信息\n      exportStore: {\n        inited: false,\n        name: '',\n        modeList: [],\n        typeList: [],\n        columns: [],\n        isPrint: false,\n        hasFooter: false,\n        hasMerge: false,\n        hasTree: false,\n        hasColgroup: false,\n        visible: false\n      },\n      exportParams: {\n        filename: '',\n        sheetName: '',\n        mode: '',\n        type: '',\n        isColgroup: false,\n        isMerge: false,\n        isAllExpand: false,\n        useStyle: false,\n        original: false,\n        message: true,\n        isHeader: false,\n        isFooter: false\n      }\n    });\n    var internalData = {\n      tZindex: 0,\n      elemStore: {},\n      // 存放横向 X 虚拟滚动相关的信息\n      scrollXStore: {\n        offsetSize: 0,\n        visibleSize: 0,\n        startIndex: 0,\n        endIndex: 0\n      },\n      // 存放纵向 Y 虚拟滚动相关信息\n      scrollYStore: {\n        rowHeight: 0,\n        offsetSize: 0,\n        visibleSize: 0,\n        startIndex: 0,\n        endIndex: 0\n      },\n      // 表格宽度\n      tableWidth: 0,\n      // 表格高度\n      tableHeight: 0,\n      // 表头高度\n      headerHeight: 0,\n      // 表尾高度\n      footerHeight: 0,\n      customHeight: 0,\n      customMaxHeight: 0,\n      // 当前 hover 行\n      hoverRow: null,\n      // 最后滚动位置\n      lastScrollLeft: 0,\n      lastScrollTop: 0,\n      lastScrollTime: 0,\n      // 单选框属性，已选中保留的行\n      radioReserveRow: null,\n      // 复选框属性，已选中保留的行\n      checkboxReserveRowMap: {},\n      // 行数据，已展开保留的行\n      rowExpandedReserveRowMap: {},\n      // 树结构数据，已展开保留的行\n      treeExpandedReserveRowMap: {},\n      // 列表完整数据、条件处理后\n      tableFullData: [],\n      afterFullData: [],\n      // 树结构完整数据、条件处理后\n      tableFullTreeData: [],\n      afterTreeFullData: [],\n      tableSynchData: [],\n      tableSourceData: [],\n      // 收集的列配置（带分组）\n      collectColumn: [],\n      // 完整所有列（不带分组）\n      tableFullColumn: [],\n      // 渲染所有列\n      visibleColumn: [],\n      // 总的缓存数据集\n      fullAllDataRowIdData: {},\n      // 渲染中缓存数据\n      fullDataRowIdData: {},\n      fullColumnIdData: {},\n      fullColumnFieldData: {},\n      inited: false,\n      tooltipTimeout: null,\n      initStatus: false,\n      isActivated: false\n    };\n    var tableMethods = {};\n    var tablePrivateMethods = {};\n    var refElem = ref();\n    var refTooltip = ref();\n    var refCommTooltip = ref();\n    var refValidTooltip = ref();\n    var refTableFilter = ref();\n    var refTableMenu = ref();\n    var refTableHeader = ref();\n    var refTableBody = ref();\n    var refTableFooter = ref();\n    var refTableLeftHeader = ref();\n    var refTableLeftBody = ref();\n    var refTableLeftFooter = ref();\n    var refTableRightHeader = ref();\n    var refTableRightBody = ref();\n    var refTableRightFooter = ref();\n    var refLeftContainer = ref();\n    var refRightContainer = ref();\n    var refCellResizeBar = ref();\n    var refEmptyPlaceholder = ref();\n    var $xegrid = inject('$xegrid', null);\n    var $xetoolbar;\n    var computeValidOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.validConfig, props.validConfig);\n    });\n    var computeSXOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.scrollX, props.scrollX);\n    });\n    var computeSYOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.scrollY, props.scrollY);\n    });\n    var computeRowHeightMaps = computed(function () {\n      return {\n        default: 48,\n        medium: 44,\n        small: 40,\n        mini: 36\n      };\n    });\n    var computeColumnOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.columnConfig, props.columnConfig);\n    });\n    var computeRowOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.rowConfig, props.rowConfig);\n    });\n    var computeResizableOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.resizableConfig, props.resizableConfig);\n    });\n    var computeSeqOpts = computed(function () {\n      return Object.assign({\n        startIndex: 0\n      }, GlobalConfig.table.seqConfig, props.seqConfig);\n    });\n    var computeRadioOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.radioConfig, props.radioConfig);\n    });\n    var computeCheckboxOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.checkboxConfig, props.checkboxConfig);\n    });\n    var computeTooltipOpts = ref();\n    computeTooltipOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.tooltip, GlobalConfig.table.tooltipConfig, props.tooltipConfig);\n    });\n    var computeTipConfig = computed(function () {\n      var tooltipStore = reactData.tooltipStore;\n      var tooltipOpts = computeTooltipOpts.value;\n      return __assign(__assign({}, tooltipOpts), tooltipStore.currOpts);\n    });\n    var computeValidTipOpts = computed(function () {\n      var tooltipOpts = computeTooltipOpts.value;\n      return Object.assign({\n        isArrow: false\n      }, tooltipOpts);\n    });\n    var computeEditOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.editConfig, props.editConfig);\n    });\n    var computeSortOpts = computed(function () {\n      return Object.assign({\n        orders: ['asc', 'desc', null]\n      }, GlobalConfig.table.sortConfig, props.sortConfig);\n    });\n    var computeFilterOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.filterConfig, props.filterConfig);\n    });\n    var computeMouseOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.mouseConfig, props.mouseConfig);\n    });\n    var computeAreaOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.areaConfig, props.areaConfig);\n    });\n    var computeKeyboardOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.keyboardConfig, props.keyboardConfig);\n    });\n    var computeClipOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.clipConfig, props.clipConfig);\n    });\n    var computeFNROpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.fnrConfig, props.fnrConfig);\n    });\n    var computeMenuOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.menuConfig, props.menuConfig);\n    });\n    var computeHeaderMenu = computed(function () {\n      var menuOpts = computeMenuOpts.value;\n      var headerOpts = menuOpts.header;\n      return headerOpts && headerOpts.options ? headerOpts.options : [];\n    });\n    var computeBodyMenu = computed(function () {\n      var menuOpts = computeMenuOpts.value;\n      var bodyOpts = menuOpts.body;\n      return bodyOpts && bodyOpts.options ? bodyOpts.options : [];\n    });\n    var computeFooterMenu = computed(function () {\n      var menuOpts = computeMenuOpts.value;\n      var footerOpts = menuOpts.footer;\n      return footerOpts && footerOpts.options ? footerOpts.options : [];\n    });\n    var computeIsMenu = computed(function () {\n      var menuOpts = computeMenuOpts.value;\n      var headerMenu = computeHeaderMenu.value;\n      var bodyMenu = computeBodyMenu.value;\n      var footerMenu = computeFooterMenu.value;\n      return !!(props.menuConfig && isEnableConf(menuOpts) && (headerMenu.length || bodyMenu.length || footerMenu.length));\n    });\n    var computeMenuList = computed(function () {\n      var ctxMenuStore = reactData.ctxMenuStore;\n      var rest = [];\n      ctxMenuStore.list.forEach(function (list) {\n        list.forEach(function (item) {\n          rest.push(item);\n        });\n      });\n      return rest;\n    });\n    var computeExportOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.exportConfig, props.exportConfig);\n    });\n    var computeImportOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.importConfig, props.importConfig);\n    });\n    var computePrintOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.printConfig, props.printConfig);\n    });\n    var computeExpandOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.expandConfig, props.expandConfig);\n    });\n    var computeTreeOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.treeConfig, props.treeConfig);\n    });\n    var computeEmptyOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.emptyRender, props.emptyRender);\n    });\n    var computeCellOffsetWidth = computed(function () {\n      return props.border ? Math.max(2, Math.ceil(reactData.scrollbarWidth / reactData.tableColumn.length)) : 1;\n    });\n    var computeCustomOpts = computed(function () {\n      return Object.assign({}, GlobalConfig.table.customConfig, props.customConfig);\n    });\n    var computeTableBorder = computed(function () {\n      var border = props.border;\n\n      if (border === true) {\n        return 'full';\n      }\n\n      if (border) {\n        return border;\n      }\n\n      return 'default';\n    });\n    var computeIsAllCheckboxDisabled = computed(function () {\n      var treeConfig = props.treeConfig;\n      var tableData = reactData.tableData;\n      var tableFullData = internalData.tableFullData;\n      var checkboxOpts = computeCheckboxOpts.value;\n      var strict = checkboxOpts.strict,\n          checkMethod = checkboxOpts.checkMethod;\n\n      if (strict) {\n        if (tableData.length || tableFullData.length) {\n          if (checkMethod) {\n            if (treeConfig) {// 暂时不支持树形结构\n            } // 如果所有行都被禁用\n\n\n            return tableFullData.every(function (row) {\n              return !checkMethod({\n                row: row\n              });\n            });\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    });\n    var refMaps = {\n      refElem: refElem,\n      refTooltip: refTooltip,\n      refValidTooltip: refValidTooltip,\n      refTableFilter: refTableFilter,\n      refTableMenu: refTableMenu,\n      refTableHeader: refTableHeader,\n      refTableBody: refTableBody,\n      refTableFooter: refTableFooter,\n      refTableLeftHeader: refTableLeftHeader,\n      refTableLeftBody: refTableLeftBody,\n      refTableLeftFooter: refTableLeftFooter,\n      refTableRightHeader: refTableRightHeader,\n      refTableRightBody: refTableRightBody,\n      refTableRightFooter: refTableRightFooter,\n      refLeftContainer: refLeftContainer,\n      refRightContainer: refRightContainer,\n      refCellResizeBar: refCellResizeBar\n    };\n    var computeMaps = {\n      computeSize: computeSize,\n      computeValidOpts: computeValidOpts,\n      computeSXOpts: computeSXOpts,\n      computeSYOpts: computeSYOpts,\n      computeColumnOpts: computeColumnOpts,\n      computeRowOpts: computeRowOpts,\n      computeResizableOpts: computeResizableOpts,\n      computeSeqOpts: computeSeqOpts,\n      computeRadioOpts: computeRadioOpts,\n      computeCheckboxOpts: computeCheckboxOpts,\n      computeTooltipOpts: computeTooltipOpts,\n      computeEditOpts: computeEditOpts,\n      computeSortOpts: computeSortOpts,\n      computeFilterOpts: computeFilterOpts,\n      computeMouseOpts: computeMouseOpts,\n      computeAreaOpts: computeAreaOpts,\n      computeKeyboardOpts: computeKeyboardOpts,\n      computeClipOpts: computeClipOpts,\n      computeFNROpts: computeFNROpts,\n      computeHeaderMenu: computeHeaderMenu,\n      computeBodyMenu: computeBodyMenu,\n      computeFooterMenu: computeFooterMenu,\n      computeIsMenu: computeIsMenu,\n      computeMenuOpts: computeMenuOpts,\n      computeExportOpts: computeExportOpts,\n      computeImportOpts: computeImportOpts,\n      computePrintOpts: computePrintOpts,\n      computeExpandOpts: computeExpandOpts,\n      computeTreeOpts: computeTreeOpts,\n      computeEmptyOpts: computeEmptyOpts,\n      computeCustomOpts: computeCustomOpts,\n      computeIsAllCheckboxDisabled: computeIsAllCheckboxDisabled\n    };\n    var $xetable = {\n      xID: xID,\n      props: props,\n      context: context,\n      instance: instance,\n      reactData: reactData,\n      internalData: internalData,\n      getRefMaps: function () {\n        return refMaps;\n      },\n      getComputeMaps: function () {\n        return computeMaps;\n      },\n      xegrid: $xegrid\n    };\n\n    var eqCellValue = function (row1, row2, field) {\n      var val1 = XEUtils.get(row1, field);\n      var val2 = XEUtils.get(row2, field);\n\n      if (eqEmptyValue(val1) && eqEmptyValue(val2)) {\n        return true;\n      }\n\n      if (XEUtils.isString(val1) || XEUtils.isNumber(val1)) {\n        return '' + val1 === '' + val2;\n      }\n\n      return XEUtils.isEqual(val1, val2);\n    };\n\n    var getNextSortOrder = function (column) {\n      var sortOpts = computeSortOpts.value;\n      var orders = sortOpts.orders;\n      var currOrder = column.order || null;\n      var oIndex = orders.indexOf(currOrder) + 1;\n      return orders[oIndex < orders.length ? oIndex : 0];\n    };\n\n    var getCustomStorageMap = function (key) {\n      var version = GlobalConfig.version;\n      var rest = XEUtils.toStringJSON(localStorage.getItem(key) || '');\n      return rest && rest._v === version ? rest : {\n        _v: version\n      };\n    };\n\n    var getRecoverRow = function (list) {\n      var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n      return list.filter(function (row) {\n        var rowid = getRowid($xetable, row);\n        return !!fullAllDataRowIdData[rowid];\n      });\n    };\n\n    var handleReserveRow = function (reserveRowMap) {\n      var fullDataRowIdData = internalData.fullDataRowIdData;\n      var reserveList = [];\n      XEUtils.each(reserveRowMap, function (item, rowid) {\n        if (fullDataRowIdData[rowid] && $xetable.findRowIndexOf(reserveList, fullDataRowIdData[rowid].row) === -1) {\n          reserveList.push(fullDataRowIdData[rowid].row);\n        }\n      });\n      return reserveList;\n    };\n\n    var computeVirtualX = function () {\n      var visibleColumn = internalData.visibleColumn;\n      var tableBody = refTableBody.value;\n      var tableBodyElem = tableBody ? tableBody.$el : null;\n\n      if (tableBodyElem) {\n        var scrollLeft = tableBodyElem.scrollLeft,\n            clientWidth = tableBodyElem.clientWidth;\n        var endWidth = scrollLeft + clientWidth;\n        var toVisibleIndex = -1;\n        var cWidth = 0;\n        var visibleSize = 0;\n\n        for (var colIndex = 0, colLen = visibleColumn.length; colIndex < colLen; colIndex++) {\n          cWidth += visibleColumn[colIndex].renderWidth;\n\n          if (toVisibleIndex === -1 && scrollLeft < cWidth) {\n            toVisibleIndex = colIndex;\n          }\n\n          if (toVisibleIndex >= 0) {\n            visibleSize++;\n\n            if (cWidth > endWidth) {\n              break;\n            }\n          }\n        }\n\n        return {\n          toVisibleIndex: Math.max(0, toVisibleIndex),\n          visibleSize: Math.max(8, visibleSize)\n        };\n      }\n\n      return {\n        toVisibleIndex: 0,\n        visibleSize: 8\n      };\n    };\n\n    var computeVirtualY = function () {\n      var tableHeader = refTableHeader.value;\n      var tableBody = refTableBody.value;\n      var tableBodyElem = tableBody ? tableBody.$el : null;\n      var vSize = computeSize.value;\n      var rowHeightMaps = computeRowHeightMaps.value;\n\n      if (tableBodyElem) {\n        var tableHeaderElem = tableHeader ? tableHeader.$el : null;\n        var rowHeight = 0;\n        var firstTrElem = void 0;\n        firstTrElem = tableBodyElem.querySelector('tr');\n\n        if (!firstTrElem && tableHeaderElem) {\n          firstTrElem = tableHeaderElem.querySelector('tr');\n        }\n\n        if (firstTrElem) {\n          rowHeight = firstTrElem.clientHeight;\n        }\n\n        if (!rowHeight) {\n          rowHeight = rowHeightMaps[vSize || 'default'];\n        }\n\n        var visibleSize = Math.max(8, Math.ceil(tableBodyElem.clientHeight / rowHeight) + 2);\n        return {\n          rowHeight: rowHeight,\n          visibleSize: visibleSize\n        };\n      }\n\n      return {\n        rowHeight: 0,\n        visibleSize: 8\n      };\n    };\n\n    var calculateMergerOffserIndex = function (list, offsetItem, type) {\n      for (var mcIndex = 0, len = list.length; mcIndex < len; mcIndex++) {\n        var mergeItem = list[mcIndex];\n        var startIndex = offsetItem.startIndex,\n            endIndex = offsetItem.endIndex;\n        var mergeStartIndex = mergeItem[type];\n        var mergeSpanNumber = mergeItem[type + 'span'];\n        var mergeEndIndex = mergeStartIndex + mergeSpanNumber;\n\n        if (mergeStartIndex < startIndex && startIndex < mergeEndIndex) {\n          offsetItem.startIndex = mergeStartIndex;\n        }\n\n        if (mergeStartIndex < endIndex && endIndex < mergeEndIndex) {\n          offsetItem.endIndex = mergeEndIndex;\n        }\n\n        if (offsetItem.startIndex !== startIndex || offsetItem.endIndex !== endIndex) {\n          mcIndex = -1;\n        }\n      }\n    };\n\n    var setMerges = function (merges, mList, rowList) {\n      if (merges) {\n        var treeConfig = props.treeConfig;\n        var visibleColumn_1 = internalData.visibleColumn;\n\n        if (treeConfig) {\n          errLog('vxe.error.noTree', ['merge-footer-items']);\n          return;\n        }\n\n        if (!XEUtils.isArray(merges)) {\n          merges = [merges];\n        }\n\n        merges.forEach(function (item) {\n          var row = item.row,\n              col = item.col,\n              rowspan = item.rowspan,\n              colspan = item.colspan;\n\n          if (rowList && XEUtils.isNumber(row)) {\n            row = rowList[row];\n          }\n\n          if (XEUtils.isNumber(col)) {\n            col = visibleColumn_1[col];\n          }\n\n          if ((rowList ? row : XEUtils.isNumber(row)) && col && (rowspan || colspan)) {\n            rowspan = XEUtils.toNumber(rowspan) || 1;\n            colspan = XEUtils.toNumber(colspan) || 1;\n\n            if (rowspan > 1 || colspan > 1) {\n              var mcIndex = XEUtils.findIndexOf(mList, function (item) {\n                return (item._row === row || getRowid($xetable, item._row) === getRowid($xetable, row)) && (item._col.id === col || item._col.id === col.id);\n              });\n              var mergeItem = mList[mcIndex];\n\n              if (mergeItem) {\n                mergeItem.rowspan = rowspan;\n                mergeItem.colspan = colspan;\n                mergeItem._rowspan = rowspan;\n                mergeItem._colspan = colspan;\n              } else {\n                var mergeRowIndex = rowList ? $xetable.findRowIndexOf(rowList, row) : row;\n                var mergeColIndex = tableMethods.getVTColumnIndex(col);\n                mList.push({\n                  row: mergeRowIndex,\n                  col: mergeColIndex,\n                  rowspan: rowspan,\n                  colspan: colspan,\n                  _row: row,\n                  _col: col,\n                  _rowspan: rowspan,\n                  _colspan: colspan\n                });\n              }\n            }\n          }\n        });\n      }\n    };\n\n    var removeMerges = function (merges, mList, rowList) {\n      var rest = [];\n\n      if (merges) {\n        var treeConfig = props.treeConfig;\n        var visibleColumn_2 = internalData.visibleColumn;\n\n        if (treeConfig) {\n          throw new Error(getLog('vxe.error.noTree', ['merge-cells']));\n        }\n\n        if (!XEUtils.isArray(merges)) {\n          merges = [merges];\n        }\n\n        merges.forEach(function (item) {\n          var row = item.row,\n              col = item.col;\n\n          if (rowList && XEUtils.isNumber(row)) {\n            row = rowList[row];\n          }\n\n          if (XEUtils.isNumber(col)) {\n            col = visibleColumn_2[col];\n          }\n\n          var mcIndex = XEUtils.findIndexOf(mList, function (item) {\n            return (item._row === row || getRowid($xetable, item._row) === getRowid($xetable, row)) && (item._col.id === col || item._col.id === col.id);\n          });\n\n          if (mcIndex > -1) {\n            var rItems = mList.splice(mcIndex, 1);\n            rest.push(rItems[0]);\n          }\n        });\n      }\n\n      return rest;\n    };\n\n    var clearAllSort = function () {\n      var tableFullColumn = internalData.tableFullColumn;\n      tableFullColumn.forEach(function (column) {\n        column.order = null;\n      });\n    };\n\n    var calcHeight = function (key) {\n      var parentHeight = reactData.parentHeight;\n      var val = props[key];\n      var num = 0;\n\n      if (val) {\n        if (val === 'auto') {\n          num = parentHeight;\n        } else {\n          var excludeHeight = $xetable.getExcludeHeight();\n\n          if (isScale(val)) {\n            num = Math.floor((XEUtils.toInteger(val) || 1) / 100 * parentHeight);\n          } else {\n            num = XEUtils.toNumber(val);\n          }\n\n          num = Math.max(40, num - excludeHeight);\n        }\n      }\n\n      return num;\n    };\n    /**\n     * 还原自定义列操作状态\n     */\n\n\n    var restoreCustomStorage = function () {\n      var id = props.id,\n          customConfig = props.customConfig;\n      var collectColumn = internalData.collectColumn;\n      var customOpts = computeCustomOpts.value;\n      var storage = customOpts.storage;\n      var isResizable = storage === true || storage && storage.resizable;\n      var isVisible = storage === true || storage && storage.visible;\n\n      if (customConfig && (isResizable || isVisible)) {\n        var customMap_1 = {};\n\n        if (!id) {\n          errLog('vxe.error.reqProp', ['id']);\n          return;\n        }\n\n        if (isResizable) {\n          var columnWidthStorage = getCustomStorageMap(resizableStorageKey)[id];\n\n          if (columnWidthStorage) {\n            XEUtils.each(columnWidthStorage, function (resizeWidth, field) {\n              customMap_1[field] = {\n                field: field,\n                resizeWidth: resizeWidth\n              };\n            });\n          }\n        }\n\n        if (isVisible) {\n          var columnVisibleStorage = getCustomStorageMap(visibleStorageKey)[id];\n\n          if (columnVisibleStorage) {\n            var colVisibles = columnVisibleStorage.split('|');\n            var colHides = colVisibles[0] ? colVisibles[0].split(',') : [];\n            var colShows = colVisibles[1] ? colVisibles[1].split(',') : [];\n            colHides.forEach(function (field) {\n              if (customMap_1[field]) {\n                customMap_1[field].visible = false;\n              } else {\n                customMap_1[field] = {\n                  field: field,\n                  visible: false\n                };\n              }\n            });\n            colShows.forEach(function (field) {\n              if (customMap_1[field]) {\n                customMap_1[field].visible = true;\n              } else {\n                customMap_1[field] = {\n                  field: field,\n                  visible: true\n                };\n              }\n            });\n          }\n        }\n\n        var keyMap_1 = {};\n        XEUtils.eachTree(collectColumn, function (column) {\n          var colKey = column.getKey();\n\n          if (colKey) {\n            keyMap_1[colKey] = column;\n          }\n        });\n        XEUtils.each(customMap_1, function (_a, field) {\n          var visible = _a.visible,\n              resizeWidth = _a.resizeWidth;\n          var column = keyMap_1[field];\n\n          if (column) {\n            if (XEUtils.isNumber(resizeWidth)) {\n              column.resizeWidth = resizeWidth;\n            }\n\n            if (XEUtils.isBoolean(visible)) {\n              column.visible = visible;\n            }\n          }\n        });\n      }\n    };\n    /**\n     * 更新数据列的 Map\n     * 牺牲数据组装的耗时，用来换取使用过程中的流畅\n     */\n\n\n    var cacheColumnMap = function () {\n      var tableFullColumn = internalData.tableFullColumn,\n          collectColumn = internalData.collectColumn;\n      var fullColumnIdData = internalData.fullColumnIdData = {};\n      var fullColumnFieldData = internalData.fullColumnFieldData = {};\n      var mouseOpts = computeMouseOpts.value;\n      var isGroup = collectColumn.some(hasChildrenList);\n      var isAllOverflow = !!props.showOverflow;\n      var expandColumn;\n      var treeNodeColumn;\n      var checkboxColumn;\n      var radioColumn;\n      var hasFixed;\n\n      var handleFunc = function (column, index, items, path, parent) {\n        var colid = column.id,\n            property = column.property,\n            fixed = column.fixed,\n            type = column.type,\n            treeNode = column.treeNode;\n        var rest = {\n          column: column,\n          colid: colid,\n          index: index,\n          items: items,\n          parent: parent\n        };\n\n        if (property) {\n          if (process.env.NODE_ENV === 'development') {\n            if (fullColumnFieldData[property]) {\n              warnLog('vxe.error.colRepet', ['field', property]);\n            }\n          }\n\n          fullColumnFieldData[property] = rest;\n        }\n\n        if (!hasFixed && fixed) {\n          hasFixed = fixed;\n        }\n\n        if (treeNode) {\n          if (process.env.NODE_ENV === 'development') {\n            if (treeNodeColumn) {\n              warnLog('vxe.error.colRepet', ['tree-node', treeNode]);\n            }\n          }\n\n          if (!treeNodeColumn) {\n            treeNodeColumn = column;\n          }\n        } else if (type === 'expand') {\n          if (process.env.NODE_ENV === 'development') {\n            if (expandColumn) {\n              warnLog('vxe.error.colRepet', ['type', type]);\n            }\n          }\n\n          if (!expandColumn) {\n            expandColumn = column;\n          }\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          if (type === 'checkbox') {\n            if (checkboxColumn) {\n              warnLog('vxe.error.colRepet', ['type', type]);\n            }\n\n            if (!checkboxColumn) {\n              checkboxColumn = column;\n            }\n          } else if (type === 'radio') {\n            if (radioColumn) {\n              warnLog('vxe.error.colRepet', ['type', type]);\n            }\n\n            if (!radioColumn) {\n              radioColumn = column;\n            }\n          }\n        }\n\n        if (isAllOverflow && column.showOverflow === false) {\n          isAllOverflow = false;\n        }\n\n        if (fullColumnIdData[colid]) {\n          errLog('vxe.error.colRepet', ['colId', colid]);\n        }\n\n        fullColumnIdData[colid] = rest;\n      };\n\n      if (isGroup) {\n        XEUtils.eachTree(collectColumn, function (column, index, items, path, parent, nodes) {\n          column.level = nodes.length;\n          handleFunc(column, index, items, path, parent);\n        });\n      } else {\n        tableFullColumn.forEach(handleFunc);\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        if (expandColumn && mouseOpts.area) {\n          errLog('vxe.error.errConflicts', ['mouse-config.area', 'column.type=expand']);\n        }\n      }\n\n      reactData.isGroup = isGroup;\n      reactData.treeNodeColumn = treeNodeColumn;\n      reactData.expandColumn = expandColumn;\n      reactData.isAllOverflow = isAllOverflow;\n    };\n\n    var updateHeight = function () {\n      internalData.customHeight = calcHeight('height');\n      internalData.customMaxHeight = calcHeight('maxHeight');\n    };\n    /**\n     * 列宽算法\n     * 支持 px、%、固定 混合分配\n     * 支持动态列表调整分配\n     * 支持自动分配偏移量\n     * @param {Element} headerElem\n     * @param {Element} bodyElem\n     * @param {Element} footerElem\n     * @param {Number} bodyWidth\n     */\n\n\n    var autoCellWidth = function (headerElem, bodyElem, footerElem) {\n      var tableWidth = 0;\n      var minCellWidth = 40; // 列宽最少限制 40px\n\n      var bodyWidth = bodyElem.clientWidth - 1;\n      var remainWidth = bodyWidth;\n      var meanWidth = remainWidth / 100;\n      var fit = props.fit;\n      var columnStore = reactData.columnStore;\n      var resizeList = columnStore.resizeList,\n          pxMinList = columnStore.pxMinList,\n          pxList = columnStore.pxList,\n          scaleList = columnStore.scaleList,\n          scaleMinList = columnStore.scaleMinList,\n          autoList = columnStore.autoList; // 最小宽\n\n      pxMinList.forEach(function (column) {\n        var minWidth = parseInt(column.minWidth);\n        tableWidth += minWidth;\n        column.renderWidth = minWidth;\n      }); // 最小百分比\n\n      scaleMinList.forEach(function (column) {\n        var scaleWidth = Math.floor(parseInt(column.minWidth) * meanWidth);\n        tableWidth += scaleWidth;\n        column.renderWidth = scaleWidth;\n      }); // 固定百分比\n\n      scaleList.forEach(function (column) {\n        var scaleWidth = Math.floor(parseInt(column.width) * meanWidth);\n        tableWidth += scaleWidth;\n        column.renderWidth = scaleWidth;\n      }); // 固定宽\n\n      pxList.forEach(function (column) {\n        var width = parseInt(column.width);\n        tableWidth += width;\n        column.renderWidth = width;\n      }); // 调整了列宽\n\n      resizeList.forEach(function (column) {\n        var width = parseInt(column.resizeWidth);\n        tableWidth += width;\n        column.renderWidth = width;\n      });\n      remainWidth -= tableWidth;\n      meanWidth = remainWidth > 0 ? Math.floor(remainWidth / (scaleMinList.length + pxMinList.length + autoList.length)) : 0;\n\n      if (fit) {\n        if (remainWidth > 0) {\n          scaleMinList.concat(pxMinList).forEach(function (column) {\n            tableWidth += meanWidth;\n            column.renderWidth += meanWidth;\n          });\n        }\n      } else {\n        meanWidth = minCellWidth;\n      } // 自适应\n\n\n      autoList.forEach(function (column) {\n        var width = Math.max(meanWidth, minCellWidth);\n        column.renderWidth = width;\n        tableWidth += width;\n      });\n\n      if (fit) {\n        /**\n         * 偏移量算法\n         * 如果所有列足够放的情况下，从最后动态列开始分配\n         */\n        var dynamicList = scaleList.concat(scaleMinList).concat(pxMinList).concat(autoList);\n        var dynamicSize = dynamicList.length - 1;\n\n        if (dynamicSize > 0) {\n          var odiffer = bodyWidth - tableWidth;\n\n          if (odiffer > 0) {\n            while (odiffer > 0 && dynamicSize >= 0) {\n              odiffer--;\n              dynamicList[dynamicSize--].renderWidth++;\n            }\n\n            tableWidth = bodyWidth;\n          }\n        }\n      }\n\n      var tableHeight = bodyElem.offsetHeight;\n      var overflowY = bodyElem.scrollHeight > bodyElem.clientHeight;\n      var scrollbarWidth = 0;\n\n      if (overflowY) {\n        scrollbarWidth = Math.max(bodyElem.offsetWidth - bodyElem.clientWidth, 0);\n      }\n\n      reactData.scrollbarWidth = scrollbarWidth;\n      reactData.overflowY = overflowY;\n      internalData.tableWidth = tableWidth;\n      internalData.tableHeight = tableHeight;\n      var headerHeight = 0;\n\n      if (headerElem) {\n        headerHeight = headerElem.clientHeight;\n        nextTick(function () {\n          // 检测是否同步滚动\n          if (headerElem && bodyElem && headerElem.scrollLeft !== bodyElem.scrollLeft) {\n            headerElem.scrollLeft = bodyElem.scrollLeft;\n          }\n        });\n      }\n\n      internalData.headerHeight = headerHeight;\n      var overflowX = false;\n      var footerHeight = 0;\n      var scrollbarHeight = 0;\n\n      if (footerElem) {\n        footerHeight = footerElem.offsetHeight;\n        overflowX = tableWidth > footerElem.clientWidth;\n\n        if (overflowX) {\n          scrollbarHeight = Math.max(footerHeight - footerElem.clientHeight, 0);\n        }\n      } else {\n        overflowX = tableWidth > bodyWidth;\n\n        if (overflowX) {\n          scrollbarHeight = Math.max(tableHeight - bodyElem.clientHeight, 0);\n        }\n      }\n\n      internalData.footerHeight = footerHeight;\n      reactData.overflowX = overflowX;\n      reactData.scrollbarHeight = scrollbarHeight;\n      updateHeight();\n      reactData.parentHeight = Math.max(internalData.headerHeight + footerHeight + 20, tablePrivateMethods.getParentHeight());\n\n      if (overflowX) {\n        tablePrivateMethods.checkScrolling();\n      }\n    };\n\n    var getOrderField = function (column) {\n      var sortBy = column.sortBy,\n          sortType = column.sortType;\n      return function (row) {\n        var cellValue;\n\n        if (sortBy) {\n          cellValue = XEUtils.isFunction(sortBy) ? sortBy({\n            row: row,\n            column: column\n          }) : XEUtils.get(row, sortBy);\n        } else {\n          cellValue = tablePrivateMethods.getCellLabel(row, column);\n        }\n\n        if (!sortType || sortType === 'auto') {\n          return isNaN(cellValue) ? cellValue : XEUtils.toNumber(cellValue);\n        } else if (sortType === 'number') {\n          return XEUtils.toNumber(cellValue);\n        } else if (sortType === 'string') {\n          return XEUtils.toValueString(cellValue);\n        }\n\n        return cellValue;\n      };\n    };\n    /**\n     * 预编译\n     * 对渲染中的数据提前解析序号及索引。牺牲提前编译耗时换取渲染中额外损耗，使运行时更加流畅\n     */\n\n\n    var updateAfterDataIndex = function () {\n      var treeConfig = props.treeConfig;\n      var afterFullData = internalData.afterFullData,\n          fullDataRowIdData = internalData.fullDataRowIdData,\n          fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n      var afterTreeFullData = internalData.afterTreeFullData;\n      var treeOpts = computeTreeOpts.value;\n\n      if (treeConfig) {\n        XEUtils.eachTree(afterTreeFullData, function (row, index, items, path) {\n          var rowid = getRowid($xetable, row);\n          var allrest = fullAllDataRowIdData[rowid];\n          var seq = path.map(function (num, i) {\n            return i % 2 === 0 ? Number(num) + 1 : '.';\n          }).join('');\n\n          if (allrest) {\n            allrest.seq = seq;\n            allrest._index = index;\n          } else {\n            var rest = {\n              row: row,\n              rowid: rowid,\n              seq: seq,\n              index: -1,\n              $index: -1,\n              _index: index,\n              items: [],\n              parent: null,\n              level: 0\n            };\n            fullAllDataRowIdData[rowid] = rest;\n            fullDataRowIdData[rowid] = rest;\n          }\n        }, {\n          children: treeOpts.transform ? treeOpts.mapChildren : treeOpts.children\n        });\n      } else {\n        afterFullData.forEach(function (row, index) {\n          var rowid = getRowid($xetable, row);\n          var allrest = fullAllDataRowIdData[rowid];\n          var seq = index + 1;\n\n          if (allrest) {\n            allrest.seq = seq;\n            allrest._index = index;\n          } else {\n            var rest = {\n              row: row,\n              rowid: rowid,\n              seq: seq,\n              index: -1,\n              $index: -1,\n              _index: index,\n              items: [],\n              parent: null,\n              level: 0\n            };\n            fullAllDataRowIdData[rowid] = rest;\n            fullDataRowIdData[rowid] = rest;\n          }\n        });\n      }\n    };\n    /**\n     * 如果为虚拟树，将树结构拍平\n     * @returns\n     */\n\n\n    var handleVirtualTreeToList = function () {\n      var treeConfig = props.treeConfig;\n      var treeExpandeds = reactData.treeExpandeds;\n      var treeOpts = computeTreeOpts.value;\n\n      if (treeConfig && treeOpts.transform) {\n        var fullData_1 = [];\n        var expandMaps_1 = new Map();\n        XEUtils.eachTree(internalData.afterTreeFullData, function (row, index, items, path, parent) {\n          if (!parent || expandMaps_1.has(parent) && $xetable.findRowIndexOf(treeExpandeds, parent) > -1) {\n            expandMaps_1.set(row, 1);\n            fullData_1.push(row);\n          }\n        }, {\n          children: treeOpts.mapChildren\n        });\n        internalData.afterFullData = fullData_1;\n        updateScrollYStatus(fullData_1);\n        return fullData_1;\n      }\n\n      return internalData.afterFullData;\n    };\n    /**\n     * 获取处理后全量的表格数据\n     * 如果存在筛选条件，继续处理\n     */\n\n\n    var updateAfterFullData = function () {\n      var treeConfig = props.treeConfig;\n      var tableFullColumn = internalData.tableFullColumn,\n          tableFullData = internalData.tableFullData,\n          tableFullTreeData = internalData.tableFullTreeData;\n      var filterOpts = computeFilterOpts.value;\n      var sortOpts = computeSortOpts.value;\n      var treeOpts = computeTreeOpts.value;\n      var transform = treeOpts.transform;\n      var allRemoteFilter = filterOpts.remote,\n          allFilterMethod = filterOpts.filterMethod;\n      var allRemoteSort = sortOpts.remote,\n          allSortMethod = sortOpts.sortMethod,\n          sortMultiple = sortOpts.multiple,\n          chronological = sortOpts.chronological;\n      var tableData = [];\n      var tableTree = []; // 处理列\n\n      if (!allRemoteFilter || !allRemoteSort) {\n        var filterColumns_1 = [];\n        var orderColumns_1 = [];\n        tableFullColumn.forEach(function (column) {\n          var property = column.property,\n              sortable = column.sortable,\n              order = column.order,\n              filters = column.filters;\n\n          if (!allRemoteFilter && filters && filters.length) {\n            var valueList_1 = [];\n            var itemList_1 = [];\n            filters.forEach(function (item) {\n              if (item.checked) {\n                itemList_1.push(item);\n                valueList_1.push(item.value);\n              }\n            });\n\n            if (itemList_1.length) {\n              filterColumns_1.push({\n                column: column,\n                valueList: valueList_1,\n                itemList: itemList_1\n              });\n            }\n          }\n\n          if (!allRemoteSort && sortable && order) {\n            orderColumns_1.push({\n              column: column,\n              field: property,\n              property: property,\n              order: order,\n              sortTime: column.sortTime\n            });\n          }\n        });\n\n        if (sortMultiple && chronological && orderColumns_1.length > 1) {\n          orderColumns_1 = XEUtils.orderBy(orderColumns_1, 'sortTime');\n        } // 处理筛选\n        // 支持单列、多列、组合筛选\n\n\n        if (!allRemoteFilter && filterColumns_1.length) {\n          var handleFilter = function (row) {\n            return filterColumns_1.every(function (_a) {\n              var column = _a.column,\n                  valueList = _a.valueList,\n                  itemList = _a.itemList;\n              var filterMethod = column.filterMethod,\n                  filterRender = column.filterRender;\n              var compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null;\n              var compFilterMethod = compConf ? compConf.filterMethod : null;\n              var defaultFilterMethod = compConf ? compConf.defaultFilterMethod : null;\n              var cellValue = getCellValue(row, column);\n\n              if (filterMethod) {\n                return itemList.some(function (item) {\n                  return filterMethod({\n                    value: item.value,\n                    option: item,\n                    cellValue: cellValue,\n                    row: row,\n                    column: column,\n                    $table: $xetable\n                  });\n                });\n              } else if (compFilterMethod) {\n                return itemList.some(function (item) {\n                  return compFilterMethod({\n                    value: item.value,\n                    option: item,\n                    cellValue: cellValue,\n                    row: row,\n                    column: column,\n                    $table: $xetable\n                  });\n                });\n              } else if (allFilterMethod) {\n                return allFilterMethod({\n                  options: itemList,\n                  values: valueList,\n                  cellValue: cellValue,\n                  row: row,\n                  column: column\n                });\n              } else if (defaultFilterMethod) {\n                return itemList.some(function (item) {\n                  return defaultFilterMethod({\n                    value: item.value,\n                    option: item,\n                    cellValue: cellValue,\n                    row: row,\n                    column: column,\n                    $table: $xetable\n                  });\n                });\n              }\n\n              return valueList.indexOf(XEUtils.get(row, column.property)) > -1;\n            });\n          };\n\n          if (treeConfig && transform) {\n            // 筛选虚拟树\n            tableTree = XEUtils.searchTree(tableFullTreeData, handleFilter, __assign(__assign({}, treeOpts), {\n              original: true\n            }));\n            tableData = tableTree;\n          } else {\n            tableData = treeConfig ? tableFullTreeData.filter(handleFilter) : tableFullData.filter(handleFilter);\n            tableTree = tableData;\n          }\n        } else {\n          if (treeConfig && transform) {\n            // 还原虚拟树\n            tableTree = XEUtils.searchTree(tableFullTreeData, function () {\n              return true;\n            }, __assign(__assign({}, treeOpts), {\n              original: true\n            }));\n            tableData = tableTree;\n          } else {\n            tableData = treeConfig ? tableFullTreeData.slice(0) : tableFullData.slice(0);\n            tableTree = tableData;\n          }\n        } // 处理排序（不能用于树形结构）\n        // 支持单列、多列、组合排序\n\n\n        if (!allRemoteSort && orderColumns_1.length) {\n          if (treeConfig && transform) {\n            // 虚拟树和列表一样，只能排序根级节点\n            if (allSortMethod) {\n              var sortRests = allSortMethod({\n                data: tableTree,\n                sortList: orderColumns_1,\n                $table: $xetable\n              });\n              tableTree = XEUtils.isArray(sortRests) ? sortRests : tableTree;\n            } else {\n              tableTree = XEUtils.orderBy(tableTree, orderColumns_1.map(function (_a) {\n                var column = _a.column,\n                    order = _a.order;\n                return [getOrderField(column), order];\n              }));\n            }\n\n            tableData = tableTree;\n          } else {\n            if (allSortMethod) {\n              var sortRests = allSortMethod({\n                data: tableData,\n                sortList: orderColumns_1,\n                $table: $xetable\n              });\n              tableData = XEUtils.isArray(sortRests) ? sortRests : tableData;\n            } else {\n              tableData = XEUtils.orderBy(tableData, orderColumns_1.map(function (_a) {\n                var column = _a.column,\n                    order = _a.order;\n                return [getOrderField(column), order];\n              }));\n            }\n\n            tableTree = tableData;\n          }\n        }\n      } else {\n        if (treeConfig && transform) {\n          // 还原虚拟树\n          tableTree = XEUtils.searchTree(tableFullTreeData, function () {\n            return true;\n          }, __assign(__assign({}, treeOpts), {\n            original: true\n          }));\n          tableData = tableTree;\n        } else {\n          tableData = treeConfig ? tableFullTreeData.slice(0) : tableFullData.slice(0);\n          tableTree = tableData;\n        }\n      }\n\n      internalData.afterFullData = tableData;\n      internalData.afterTreeFullData = tableTree;\n      updateAfterDataIndex();\n    };\n\n    var updateStyle = function () {\n      var border = props.border,\n          showFooter = props.showFooter,\n          allColumnOverflow = props.showOverflow,\n          allColumnHeaderOverflow = props.showHeaderOverflow,\n          allColumnFooterOverflow = props.showFooterOverflow,\n          mouseConfig = props.mouseConfig,\n          spanMethod = props.spanMethod,\n          footerSpanMethod = props.footerSpanMethod,\n          keyboardConfig = props.keyboardConfig;\n      var isGroup = reactData.isGroup,\n          currentRow = reactData.currentRow,\n          tableColumn = reactData.tableColumn,\n          scrollXLoad = reactData.scrollXLoad,\n          scrollYLoad = reactData.scrollYLoad,\n          scrollbarWidth = reactData.scrollbarWidth,\n          scrollbarHeight = reactData.scrollbarHeight,\n          columnStore = reactData.columnStore,\n          editStore = reactData.editStore,\n          mergeList = reactData.mergeList,\n          mergeFooterList = reactData.mergeFooterList,\n          isAllOverflow = reactData.isAllOverflow;\n      var visibleColumn = internalData.visibleColumn,\n          fullColumnIdData = internalData.fullColumnIdData,\n          tableHeight = internalData.tableHeight,\n          tableWidth = internalData.tableWidth,\n          headerHeight = internalData.headerHeight,\n          footerHeight = internalData.footerHeight,\n          elemStore = internalData.elemStore,\n          customHeight = internalData.customHeight,\n          customMaxHeight = internalData.customMaxHeight;\n      var containerList = ['main', 'left', 'right'];\n      var emptyPlaceholderElem = refEmptyPlaceholder.value;\n      var cellOffsetWidth = computeCellOffsetWidth.value;\n      var mouseOpts = computeMouseOpts.value;\n      var keyboardOpts = computeKeyboardOpts.value;\n      var bodyWrapperElem = elemStore['main-body-wrapper'];\n\n      if (emptyPlaceholderElem) {\n        emptyPlaceholderElem.style.top = headerHeight + \"px\";\n        emptyPlaceholderElem.style.height = bodyWrapperElem ? bodyWrapperElem.offsetHeight - scrollbarHeight + \"px\" : '';\n      }\n\n      if (customHeight > 0) {\n        if (showFooter) {\n          customHeight += scrollbarHeight;\n        }\n      }\n\n      containerList.forEach(function (name, index) {\n        var fixedType = index > 0 ? name : '';\n        var layoutList = ['header', 'body', 'footer'];\n        var isFixedLeft = fixedType === 'left';\n        var fixedColumn = [];\n        var fixedWrapperElem;\n\n        if (fixedType) {\n          fixedColumn = isFixedLeft ? columnStore.leftList : columnStore.rightList;\n          fixedWrapperElem = isFixedLeft ? refLeftContainer.value : refRightContainer.value;\n        }\n\n        layoutList.forEach(function (layout) {\n          var wrapperElem = elemStore[name + \"-\" + layout + \"-wrapper\"];\n          var tableElem = elemStore[name + \"-\" + layout + \"-table\"];\n\n          if (layout === 'header') {\n            // 表头体样式处理\n            // 横向滚动渲染\n            var tWidth = tableWidth; // 如果是使用优化模式\n\n            var isOptimize = false;\n\n            if (!isGroup) {\n              if (fixedType) {\n                if (scrollXLoad || allColumnHeaderOverflow) {\n                  isOptimize = true;\n                }\n              }\n            }\n\n            if (isOptimize) {\n              tableColumn = fixedColumn;\n            }\n\n            tWidth = tableColumn.reduce(function (previous, column) {\n              return previous + column.renderWidth;\n            }, 0);\n\n            if (tableElem) {\n              tableElem.style.width = tWidth ? tWidth + scrollbarWidth + \"px\" : ''; // 修复 IE 中高度无法自适应问题\n\n              if (browse.msie) {\n                XEUtils.arrayEach(tableElem.querySelectorAll('.vxe-resizable'), function (resizeElem) {\n                  resizeElem.style.height = resizeElem.parentNode.offsetHeight + \"px\";\n                });\n              }\n            }\n\n            var repairElem = elemStore[name + \"-\" + layout + \"-repair\"];\n\n            if (repairElem) {\n              repairElem.style.width = tableWidth + \"px\";\n            }\n\n            var listElem = elemStore[name + \"-\" + layout + \"-list\"];\n\n            if (isGroup && listElem) {\n              XEUtils.arrayEach(listElem.querySelectorAll('.col--group'), function (thElem) {\n                var colNode = tableMethods.getColumnNode(thElem);\n\n                if (colNode) {\n                  var column_1 = colNode.item;\n                  var showHeaderOverflow = column_1.showHeaderOverflow;\n                  var cellOverflow = XEUtils.isBoolean(showHeaderOverflow) ? showHeaderOverflow : allColumnHeaderOverflow;\n                  var showEllipsis = cellOverflow === 'ellipsis';\n                  var showTitle = cellOverflow === 'title';\n                  var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';\n                  var hasEllipsis = showTitle || showTooltip || showEllipsis;\n                  var childWidth_1 = 0;\n                  var countChild_1 = 0;\n\n                  if (hasEllipsis) {\n                    XEUtils.eachTree(column_1.children, function (item) {\n                      if (!item.children || !column_1.children.length) {\n                        countChild_1++;\n                      }\n\n                      childWidth_1 += item.renderWidth;\n                    }, {\n                      children: 'children'\n                    });\n                  }\n\n                  thElem.style.width = hasEllipsis ? childWidth_1 - countChild_1 - (border ? 2 : 0) + \"px\" : '';\n                }\n              });\n            }\n          } else if (layout === 'body') {\n            var emptyBlockElem = elemStore[name + \"-\" + layout + \"-emptyBlock\"];\n\n            if (isNodeElement(wrapperElem)) {\n              if (customMaxHeight) {\n                wrapperElem.style.maxHeight = (fixedType ? customMaxHeight - headerHeight - (showFooter ? 0 : scrollbarHeight) : customMaxHeight - headerHeight) + \"px\";\n              } else {\n                if (customHeight > 0) {\n                  wrapperElem.style.height = (fixedType ? (customHeight > 0 ? customHeight - headerHeight - footerHeight : tableHeight) - (showFooter ? 0 : scrollbarHeight) : customHeight - headerHeight - footerHeight) + \"px\";\n                } else {\n                  wrapperElem.style.height = '';\n                }\n              }\n            } // 如果是固定列\n\n\n            if (fixedWrapperElem) {\n              if (isNodeElement(wrapperElem)) {\n                wrapperElem.style.top = headerHeight + \"px\";\n              }\n\n              fixedWrapperElem.style.height = (customHeight > 0 ? customHeight - headerHeight - footerHeight : tableHeight) + headerHeight + footerHeight - scrollbarHeight * (showFooter ? 2 : 1) + \"px\";\n              fixedWrapperElem.style.width = fixedColumn.reduce(function (previous, column) {\n                return previous + column.renderWidth;\n              }, isFixedLeft ? 0 : scrollbarWidth) + \"px\";\n            }\n\n            var tWidth = tableWidth; // 如果是使用优化模式\n\n            if (fixedType) {\n              if (scrollYLoad || (allColumnOverflow ? isAllOverflow : allColumnOverflow)) {\n                if (!mergeList.length && !spanMethod && !(keyboardConfig && keyboardOpts.isMerge)) {\n                  tableColumn = fixedColumn;\n                } else {\n                  tableColumn = visibleColumn;\n                }\n              } else {\n                tableColumn = visibleColumn;\n              }\n            }\n\n            tWidth = tableColumn.reduce(function (previous, column) {\n              return previous + column.renderWidth;\n            }, 0);\n\n            if (tableElem) {\n              tableElem.style.width = tWidth ? tWidth + \"px\" : ''; // 兼容性处理\n\n              tableElem.style.paddingRight = scrollbarWidth && fixedType && (browse['-moz'] || browse.safari) ? scrollbarWidth + \"px\" : '';\n            }\n\n            if (emptyBlockElem) {\n              emptyBlockElem.style.width = tWidth ? tWidth + \"px\" : '';\n            }\n          } else if (layout === 'footer') {\n            var tWidth = tableWidth; // 如果是使用优化模式\n\n            if (fixedType) {\n              if (scrollXLoad || allColumnFooterOverflow) {\n                if (!mergeFooterList.length || !footerSpanMethod) {\n                  tableColumn = fixedColumn;\n                } else {\n                  tableColumn = visibleColumn;\n                }\n              } else {\n                tableColumn = visibleColumn;\n              }\n            }\n\n            tWidth = tableColumn.reduce(function (previous, column) {\n              return previous + column.renderWidth;\n            }, 0);\n\n            if (isNodeElement(wrapperElem)) {\n              // 如果是固定列\n              if (fixedWrapperElem) {\n                wrapperElem.style.top = (customHeight > 0 ? customHeight - footerHeight : tableHeight + headerHeight) + \"px\";\n              }\n\n              wrapperElem.style.marginTop = -Math.max(1, scrollbarHeight) + \"px\";\n            }\n\n            if (tableElem) {\n              tableElem.style.width = tWidth ? tWidth + scrollbarWidth + \"px\" : '';\n            }\n          }\n\n          var colgroupElem = elemStore[name + \"-\" + layout + \"-colgroup\"];\n\n          if (colgroupElem) {\n            XEUtils.arrayEach(colgroupElem.children, function (colElem) {\n              var colid = colElem.getAttribute('name');\n\n              if (colid === 'col_gutter') {\n                colElem.style.width = scrollbarWidth + \"px\";\n              }\n\n              if (fullColumnIdData[colid]) {\n                var column_2 = fullColumnIdData[colid].column;\n                var showHeaderOverflow = column_2.showHeaderOverflow,\n                    showFooterOverflow = column_2.showFooterOverflow,\n                    showOverflow = column_2.showOverflow;\n                var cellOverflow = void 0;\n                colElem.style.width = column_2.renderWidth + \"px\";\n\n                if (layout === 'header') {\n                  cellOverflow = XEUtils.isUndefined(showHeaderOverflow) || XEUtils.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;\n                } else if (layout === 'footer') {\n                  cellOverflow = XEUtils.isUndefined(showFooterOverflow) || XEUtils.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow;\n                } else {\n                  cellOverflow = XEUtils.isUndefined(showOverflow) || XEUtils.isNull(showOverflow) ? allColumnOverflow : showOverflow;\n                }\n\n                var showEllipsis = cellOverflow === 'ellipsis';\n                var showTitle = cellOverflow === 'title';\n                var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';\n                var hasEllipsis_1 = showTitle || showTooltip || showEllipsis;\n                var listElem = elemStore[name + \"-\" + layout + \"-list\"]; // 纵向虚拟滚动不支持动态行高\n\n                if (scrollYLoad && !hasEllipsis_1) {\n                  hasEllipsis_1 = true;\n                }\n\n                if (listElem) {\n                  XEUtils.arrayEach(listElem.querySelectorAll(\".\" + column_2.id), function (elem) {\n                    var colspan = parseInt(elem.getAttribute('colspan') || 1);\n                    var cellElem = elem.querySelector('.vxe-cell');\n                    var colWidth = column_2.renderWidth;\n\n                    if (cellElem) {\n                      if (colspan > 1) {\n                        var columnIndex = tableMethods.getColumnIndex(column_2);\n\n                        for (var index_1 = 1; index_1 < colspan; index_1++) {\n                          var nextColumn = tableMethods.getColumns(columnIndex + index_1);\n\n                          if (nextColumn) {\n                            colWidth += nextColumn.renderWidth;\n                          }\n                        }\n                      }\n\n                      cellElem.style.width = hasEllipsis_1 ? colWidth - cellOffsetWidth * colspan + \"px\" : '';\n                    }\n                  });\n                }\n              }\n            });\n          }\n        });\n      });\n\n      if (currentRow) {\n        tableMethods.setCurrentRow(currentRow);\n      }\n\n      if (mouseConfig && mouseOpts.selected && editStore.selected.row && editStore.selected.column) {\n        $xetable.addCellSelectedClass();\n      }\n\n      return nextTick();\n    };\n\n    var checkValidate = function (type) {\n      if ($xetable.triggerValidate) {\n        return $xetable.triggerValidate(type);\n      }\n\n      return nextTick();\n    };\n    /**\n     * 当单元格发生改变时\n     * 如果存在规则，则校验\n     */\n\n\n    var handleChangeCell = function (evnt, params) {\n      checkValidate('blur').catch(function (e) {\n        return e;\n      }).then(function () {\n        $xetable.handleActived(params, evnt).then(function () {\n          return checkValidate('change');\n        }).catch(function (e) {\n          return e;\n        });\n      });\n    };\n\n    var handleDefaultSort = function () {\n      var sortConfig = props.sortConfig;\n\n      if (sortConfig) {\n        var sortOpts = computeSortOpts.value;\n        var defaultSort = sortOpts.defaultSort;\n\n        if (defaultSort) {\n          if (!XEUtils.isArray(defaultSort)) {\n            defaultSort = [defaultSort];\n          }\n\n          if (defaultSort.length) {\n            (sortConfig.multiple ? defaultSort : defaultSort.slice(0, 1)).forEach(function (item, index) {\n              var field = item.field,\n                  order = item.order;\n\n              if (field && order) {\n                var column = tableMethods.getColumnByField(field);\n\n                if (column && column.sortable) {\n                  column.order = order;\n                  column.sortTime = Date.now() + index;\n                }\n              }\n            });\n\n            if (!sortOpts.remote) {\n              tablePrivateMethods.handleTableData(true).then(updateStyle);\n            }\n          }\n        }\n      }\n    };\n    /**\n     * 处理默认勾选\n     */\n\n\n    var handleDefaultSelectionChecked = function () {\n      var checkboxConfig = props.checkboxConfig;\n\n      if (checkboxConfig) {\n        var fullDataRowIdData_1 = internalData.fullDataRowIdData;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var checkAll = checkboxOpts.checkAll,\n            checkRowKeys = checkboxOpts.checkRowKeys;\n\n        if (checkAll) {\n          tableMethods.setAllCheckboxRow(true);\n        } else if (checkRowKeys) {\n          var defSelection_1 = [];\n          checkRowKeys.forEach(function (rowid) {\n            if (fullDataRowIdData_1[rowid]) {\n              defSelection_1.push(fullDataRowIdData_1[rowid].row);\n            }\n          });\n          tableMethods.setCheckboxRow(defSelection_1, true);\n        }\n      }\n    };\n    /**\n     * 处理单选框默认勾选\n     */\n\n\n    var handleDefaultRadioChecked = function () {\n      var _a;\n\n      var radioConfig = props.radioConfig;\n\n      if (radioConfig) {\n        var fullDataRowIdData = internalData.fullDataRowIdData;\n        var radioOpts = computeRadioOpts.value;\n        var rowid = radioOpts.checkRowKey,\n            reserve = radioOpts.reserve;\n\n        if (rowid) {\n          if (fullDataRowIdData[rowid]) {\n            tableMethods.setRadioRow(fullDataRowIdData[rowid].row);\n          }\n\n          if (reserve) {\n            var rowkey = getRowkey($xetable);\n            internalData.radioReserveRow = (_a = {}, _a[rowkey] = rowid, _a);\n          }\n        }\n      }\n    };\n    /**\n     * 处理默认展开行\n     */\n\n\n    var handleDefaultRowExpand = function () {\n      var expandConfig = props.expandConfig;\n\n      if (expandConfig) {\n        var fullDataRowIdData_2 = internalData.fullDataRowIdData;\n        var expandOpts = computeExpandOpts.value;\n        var expandAll = expandOpts.expandAll,\n            expandRowKeys = expandOpts.expandRowKeys;\n\n        if (expandAll) {\n          tableMethods.setAllRowExpand(true);\n        } else if (expandRowKeys) {\n          var defExpandeds_1 = [];\n          expandRowKeys.forEach(function (rowid) {\n            if (fullDataRowIdData_2[rowid]) {\n              defExpandeds_1.push(fullDataRowIdData_2[rowid].row);\n            }\n          });\n          tableMethods.setRowExpand(defExpandeds_1, true);\n        }\n      }\n    };\n\n    var handleRadioReserveRow = function (row) {\n      var radioOpts = computeRadioOpts.value;\n\n      if (radioOpts.reserve) {\n        internalData.radioReserveRow = row;\n      }\n    };\n\n    var handleCheckboxReserveRow = function (row, checked) {\n      var checkboxReserveRowMap = internalData.checkboxReserveRowMap;\n      var checkboxOpts = computeCheckboxOpts.value;\n\n      if (checkboxOpts.reserve) {\n        var rowid = getRowid($xetable, row);\n\n        if (checked) {\n          checkboxReserveRowMap[rowid] = row;\n        } else if (checkboxReserveRowMap[rowid]) {\n          delete checkboxReserveRowMap[rowid];\n        }\n      }\n    }; // 还原展开、选中等相关状态\n\n\n    var handleReserveStatus = function () {\n      var treeConfig = props.treeConfig;\n      var expandColumn = reactData.expandColumn,\n          currentRow = reactData.currentRow,\n          selectRow = reactData.selectRow,\n          selection = reactData.selection,\n          rowExpandeds = reactData.rowExpandeds,\n          treeExpandeds = reactData.treeExpandeds;\n      var fullDataRowIdData = internalData.fullDataRowIdData,\n          fullAllDataRowIdData = internalData.fullAllDataRowIdData,\n          radioReserveRow = internalData.radioReserveRow;\n      var expandOpts = computeExpandOpts.value;\n      var treeOpts = computeTreeOpts.value;\n      var radioOpts = computeRadioOpts.value;\n      var checkboxOpts = computeCheckboxOpts.value; // 单选框\n\n      if (selectRow && !fullAllDataRowIdData[getRowid($xetable, selectRow)]) {\n        reactData.selectRow = null; // 刷新单选行状态\n      } // 还原保留选中状态\n\n\n      if (radioOpts.reserve && radioReserveRow) {\n        var rowid = getRowid($xetable, radioReserveRow);\n\n        if (fullDataRowIdData[rowid]) {\n          tableMethods.setRadioRow(fullDataRowIdData[rowid].row);\n        }\n      } // 复选框\n\n\n      reactData.selection = getRecoverRow(selection); // 刷新多选行状态\n      // 还原保留选中状态\n\n      if (checkboxOpts.reserve) {\n        tableMethods.setCheckboxRow(handleReserveRow(internalData.checkboxReserveRowMap), true);\n      }\n\n      if (currentRow && !fullAllDataRowIdData[getRowid($xetable, currentRow)]) {\n        reactData.currentRow = null; // 刷新当前行状态\n      } // 行展开\n\n\n      reactData.rowExpandeds = expandColumn ? getRecoverRow(rowExpandeds) : []; // 刷新行展开状态\n      // 还原保留状态\n\n      if (expandColumn && expandOpts.reserve) {\n        tableMethods.setRowExpand(handleReserveRow(internalData.rowExpandedReserveRowMap), true);\n      } // 树展开\n\n\n      reactData.treeExpandeds = treeConfig ? getRecoverRow(treeExpandeds) : []; // 刷新树展开状态\n\n      if (treeConfig && treeOpts.reserve) {\n        tableMethods.setTreeExpand(handleReserveRow(internalData.treeExpandedReserveRowMap), true);\n      }\n    };\n    /**\n     * 处理默认展开树节点\n     */\n\n\n    var handleDefaultTreeExpand = function () {\n      var treeConfig = props.treeConfig;\n\n      if (treeConfig) {\n        var tableFullData_1 = internalData.tableFullData;\n        var treeOpts_1 = computeTreeOpts.value;\n        var expandAll = treeOpts_1.expandAll,\n            expandRowKeys = treeOpts_1.expandRowKeys;\n\n        if (expandAll) {\n          tableMethods.setAllTreeExpand(true);\n        } else if (expandRowKeys) {\n          var defExpandeds_2 = [];\n          var rowkey_1 = getRowkey($xetable);\n          expandRowKeys.forEach(function (rowid) {\n            var matchObj = XEUtils.findTree(tableFullData_1, function (item) {\n              return rowid === XEUtils.get(item, rowkey_1);\n            }, treeOpts_1);\n\n            if (matchObj) {\n              defExpandeds_2.push(matchObj.item);\n            }\n          });\n          tableMethods.setTreeExpand(defExpandeds_2, true);\n        }\n      }\n    };\n\n    var handleAsyncTreeExpandChilds = function (row) {\n      var treeExpandeds = reactData.treeExpandeds,\n          treeLazyLoadeds = reactData.treeLazyLoadeds;\n      var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n      var treeOpts = computeTreeOpts.value;\n      var checkboxOpts = computeCheckboxOpts.value;\n      var transform = treeOpts.transform,\n          loadMethod = treeOpts.loadMethod;\n      var checkStrictly = checkboxOpts.checkStrictly;\n      var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n      return new Promise(function (resolve) {\n        if (loadMethod) {\n          treeLazyLoadeds.push(row);\n          loadMethod({\n            $table: $xetable,\n            row: row\n          }).catch(function () {\n            return [];\n          }).then(function (childRecords) {\n            rest.treeLoaded = true;\n            XEUtils.remove(treeLazyLoadeds, function (item) {\n              return $xetable.eqRow(item, row);\n            });\n\n            if (!XEUtils.isArray(childRecords)) {\n              childRecords = [];\n            }\n\n            if (childRecords) {\n              tableMethods.loadTreeChildren(row, childRecords).then(function (childRows) {\n                if (childRows.length && $xetable.findRowIndexOf(treeExpandeds, row) === -1) {\n                  treeExpandeds.push(row);\n                } // 如果当前节点已选中，则展开后子节点也被选中\n\n\n                if (!checkStrictly && tableMethods.isCheckedByCheckboxRow(row)) {\n                  tableMethods.setCheckboxRow(childRows, true);\n                }\n\n                nextTick().then(function () {\n                  if (transform) {\n                    return tablePrivateMethods.handleTableData();\n                  }\n                }).then(function () {\n                  return tableMethods.recalculate();\n                }).then(function () {\n                  return resolve();\n                });\n              });\n            } else {\n              nextTick().then(function () {\n                return tableMethods.recalculate();\n              }).then(function () {\n                return resolve();\n              });\n            }\n          });\n        } else {\n          resolve();\n        }\n      });\n    };\n\n    var handleTreeExpandReserve = function (row, expanded) {\n      var treeExpandedReserveRowMap = internalData.treeExpandedReserveRowMap;\n      var treeOpts = computeTreeOpts.value;\n\n      if (treeOpts.reserve) {\n        var rowid = getRowid($xetable, row);\n\n        if (expanded) {\n          treeExpandedReserveRowMap[rowid] = row;\n        } else if (treeExpandedReserveRowMap[rowid]) {\n          delete treeExpandedReserveRowMap[rowid];\n        }\n      }\n    };\n\n    var handleAsyncRowExpand = function (row) {\n      var rowExpandeds = reactData.rowExpandeds,\n          expandLazyLoadeds = reactData.expandLazyLoadeds;\n      var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n      var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n      return new Promise(function (resolve) {\n        var expandOpts = computeExpandOpts.value;\n        var loadMethod = expandOpts.loadMethod;\n\n        if (loadMethod) {\n          expandLazyLoadeds.push(row);\n          loadMethod({\n            $table: $xetable,\n            row: row,\n            rowIndex: tableMethods.getRowIndex(row),\n            $rowIndex: tableMethods.getVMRowIndex(row)\n          }).catch(function (e) {\n            return e;\n          }).then(function () {\n            rest.expandLoaded = true;\n            XEUtils.remove(expandLazyLoadeds, function (item) {\n              return $xetable.eqRow(item, row);\n            });\n            rowExpandeds.push(row);\n            resolve(nextTick().then(function () {\n              return tableMethods.recalculate();\n            }));\n          });\n        } else {\n          resolve();\n        }\n      });\n    };\n\n    var handleRowExpandReserve = function (row, expanded) {\n      var rowExpandedReserveRowMap = internalData.rowExpandedReserveRowMap;\n      var expandOpts = computeExpandOpts.value;\n\n      if (expandOpts.reserve) {\n        var rowid = getRowid($xetable, row);\n\n        if (expanded) {\n          rowExpandedReserveRowMap[rowid] = row;\n        } else if (rowExpandedReserveRowMap[rowid]) {\n          delete rowExpandedReserveRowMap[rowid];\n        }\n      }\n    };\n\n    var handleDefaultMergeCells = function () {\n      var mergeCells = props.mergeCells;\n\n      if (mergeCells) {\n        tableMethods.setMergeCells(mergeCells);\n      }\n    };\n\n    var handleDefaultMergeFooterItems = function () {\n      var mergeFooterItems = props.mergeFooterItems;\n\n      if (mergeFooterItems) {\n        tableMethods.setMergeFooterItems(mergeFooterItems);\n      }\n    }; // 计算可视渲染相关数据\n\n\n    var computeScrollLoad = function () {\n      return nextTick().then(function () {\n        var scrollXLoad = reactData.scrollXLoad,\n            scrollYLoad = reactData.scrollYLoad;\n        var scrollXStore = internalData.scrollXStore,\n            scrollYStore = internalData.scrollYStore;\n        var sYOpts = computeSYOpts.value;\n        var sXOpts = computeSXOpts.value; // 计算 X 逻辑\n\n        if (scrollXLoad) {\n          var visibleXSize = computeVirtualX().visibleSize;\n          var offsetXSize = sXOpts.oSize ? XEUtils.toNumber(sXOpts.oSize) : browse.msie ? 10 : browse.edge ? 5 : 0;\n          scrollXStore.offsetSize = offsetXSize;\n          scrollXStore.visibleSize = visibleXSize;\n          scrollXStore.endIndex = Math.max(scrollXStore.startIndex + scrollXStore.visibleSize + offsetXSize, scrollXStore.endIndex);\n          tablePrivateMethods.updateScrollXData();\n        } else {\n          tablePrivateMethods.updateScrollXSpace();\n        } // 计算 Y 逻辑\n\n\n        var _a = computeVirtualY(),\n            rowHeight = _a.rowHeight,\n            visibleYSize = _a.visibleSize;\n\n        scrollYStore.rowHeight = rowHeight;\n\n        if (scrollYLoad) {\n          var offsetYSize = sYOpts.oSize ? XEUtils.toNumber(sYOpts.oSize) : browse.msie ? 20 : browse.edge ? 10 : 0;\n          scrollYStore.offsetSize = offsetYSize;\n          scrollYStore.visibleSize = visibleYSize;\n          scrollYStore.endIndex = Math.max(scrollYStore.startIndex + visibleYSize + offsetYSize, scrollYStore.endIndex);\n          tablePrivateMethods.updateScrollYData();\n        } else {\n          tablePrivateMethods.updateScrollYSpace();\n        }\n\n        reactData.rowHeight = rowHeight;\n        nextTick(updateStyle);\n      });\n    };\n    /**\n     * 加载表格数据\n     * @param {Array} datas 数据\n     */\n\n\n    var loadTableData = function (datas) {\n      var keepSource = props.keepSource,\n          treeConfig = props.treeConfig;\n      var editStore = reactData.editStore,\n          oldScrollYLoad = reactData.scrollYLoad;\n      var scrollYStore = internalData.scrollYStore,\n          scrollXStore = internalData.scrollXStore,\n          lastScrollLeft = internalData.lastScrollLeft,\n          lastScrollTop = internalData.lastScrollTop;\n      var treeOpts = computeTreeOpts.value;\n      var transform = treeOpts.transform;\n      var treeData = [];\n      var fullData = datas ? datas.slice(0) : [];\n\n      if (treeConfig) {\n        if (transform) {\n          // 树结构自动转换\n          if (process.env.NODE_ENV === 'development') {\n            if (!treeOpts.rowField) {\n              errLog('vxe.error.reqProp', ['tree-config.rowField']);\n            }\n\n            if (!treeOpts.parentField) {\n              errLog('vxe.error.reqProp', ['tree-config.parentField']);\n            }\n\n            if (!treeOpts.children) {\n              errLog('vxe.error.reqProp', ['tree-config.children']);\n            }\n\n            if (!treeOpts.mapChildren) {\n              errLog('vxe.error.reqProp', ['tree-config.mapChildren']);\n            }\n\n            if (treeOpts.children === treeOpts.mapChildren) {\n              errLog('vxe.error.errConflicts', ['tree-config.children', 'tree-config.mapChildren']);\n            }\n\n            fullData.forEach(function (row) {\n              if (row[treeOpts.children] && row[treeOpts.children].length) {\n                warnLog('vxe.error.errConflicts', ['tree-config.transform', \"row.\" + treeOpts.children]);\n              }\n            });\n          }\n\n          treeData = XEUtils.toArrayTree(fullData, {\n            key: treeOpts.rowField,\n            parentKey: treeOpts.parentField,\n            children: treeOpts.children,\n            mapChildren: treeOpts.mapChildren\n          });\n          fullData = treeData.slice(0);\n        } else {\n          treeData = fullData.slice(0);\n        }\n      }\n\n      scrollYStore.startIndex = 0;\n      scrollYStore.endIndex = 1;\n      scrollXStore.startIndex = 0;\n      scrollXStore.endIndex = 1;\n      editStore.insertList = [];\n      editStore.removeList = [];\n      var sYLoad = updateScrollYStatus(fullData);\n      reactData.scrollYLoad = sYLoad; // 全量数据\n\n      internalData.tableFullData = fullData;\n      internalData.tableFullTreeData = treeData; // 缓存数据\n\n      tablePrivateMethods.cacheRowMap(true); // 原始数据\n\n      internalData.tableSynchData = datas; // 克隆原数据，用于显示编辑状态，与编辑值做对比\n\n      if (keepSource) {\n        internalData.tableSourceData = XEUtils.clone(fullData, true);\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        if (sYLoad) {\n          if (!(props.height || props.maxHeight)) {\n            errLog('vxe.error.reqProp', ['table.height | table.max-height | table.scroll-y={enabled: false}']);\n          }\n\n          if (!props.showOverflow) {\n            warnLog('vxe.error.reqProp', ['table.show-overflow']);\n          }\n\n          if (props.spanMethod) {\n            warnLog('vxe.error.scrollErrProp', ['table.span-method']);\n          }\n        }\n      }\n\n      if ($xetable.clearCellAreas && props.mouseConfig) {\n        $xetable.clearCellAreas();\n        $xetable.clearCopyCellArea();\n      }\n\n      tableMethods.clearMergeCells();\n      tableMethods.clearMergeFooterItems();\n      tablePrivateMethods.handleTableData(true);\n      tableMethods.updateFooter();\n      return nextTick().then(function () {\n        updateHeight();\n        updateStyle();\n      }).then(function () {\n        computeScrollLoad();\n      }).then(function () {\n        // 是否启用了虚拟滚动\n        if (sYLoad) {\n          scrollYStore.endIndex = scrollYStore.visibleSize;\n        }\n\n        handleReserveStatus();\n        tablePrivateMethods.checkSelectionStatus();\n        return new Promise(function (resolve) {\n          nextTick().then(function () {\n            return tableMethods.recalculate();\n          }).then(function () {\n            // 是否变更虚拟滚动\n            if (oldScrollYLoad === sYLoad) {\n              restoreScrollLocation($xetable, lastScrollLeft, lastScrollTop).then(resolve);\n            } else {\n              setTimeout(function () {\n                return restoreScrollLocation($xetable, lastScrollLeft, lastScrollTop).then(resolve);\n              });\n            }\n          });\n        });\n      });\n    };\n    /**\n     * 处理数据加载默认行为\n     * 默认执行一次，除非被重置\n     */\n\n\n    var handleLoadDefaults = function () {\n      handleDefaultSelectionChecked();\n      handleDefaultRadioChecked();\n      handleDefaultRowExpand();\n      handleDefaultTreeExpand();\n      handleDefaultMergeCells();\n      handleDefaultMergeFooterItems();\n      nextTick(function () {\n        return setTimeout(function () {\n          return tableMethods.recalculate();\n        });\n      });\n    };\n    /**\n     * 处理初始化的默认行为\n     * 只会执行一次\n     */\n\n\n    var handleInitDefaults = function () {\n      handleDefaultSort();\n    };\n\n    var handleTableColumn = function () {\n      var scrollXLoad = reactData.scrollXLoad;\n      var visibleColumn = internalData.visibleColumn,\n          scrollXStore = internalData.scrollXStore,\n          fullColumnIdData = internalData.fullColumnIdData;\n      var tableColumn = scrollXLoad ? visibleColumn.slice(scrollXStore.startIndex, scrollXStore.endIndex) : visibleColumn.slice(0);\n      tableColumn.forEach(function (column, $index) {\n        var colid = column.id;\n        var rest = fullColumnIdData[colid];\n\n        if (rest) {\n          rest.$index = $index;\n        }\n      });\n      reactData.tableColumn = tableColumn;\n    };\n\n    var loadScrollXData = function () {\n      var mergeList = reactData.mergeList,\n          mergeFooterList = reactData.mergeFooterList;\n      var scrollXStore = internalData.scrollXStore;\n      var startIndex = scrollXStore.startIndex,\n          endIndex = scrollXStore.endIndex,\n          offsetSize = scrollXStore.offsetSize;\n\n      var _a = computeVirtualX(),\n          toVisibleIndex = _a.toVisibleIndex,\n          visibleSize = _a.visibleSize;\n\n      var offsetItem = {\n        startIndex: Math.max(0, toVisibleIndex - 1 - offsetSize),\n        endIndex: toVisibleIndex + visibleSize + offsetSize\n      };\n      calculateMergerOffserIndex(mergeList.concat(mergeFooterList), offsetItem, 'col');\n      var offsetStartIndex = offsetItem.startIndex,\n          offsetEndIndex = offsetItem.endIndex;\n\n      if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {\n        if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {\n          scrollXStore.startIndex = offsetStartIndex;\n          scrollXStore.endIndex = offsetEndIndex;\n          tablePrivateMethods.updateScrollXData();\n        }\n      }\n\n      tableMethods.closeTooltip();\n    }; // 获取所有的列，排除分组\n\n\n    var getColumnList = function (columns) {\n      var result = [];\n      columns.forEach(function (column) {\n        result.push.apply(result, column.children && column.children.length ? getColumnList(column.children) : [column]);\n      });\n      return result;\n    };\n\n    var parseColumns = function () {\n      var leftList = [];\n      var centerList = [];\n      var rightList = [];\n      var isGroup = reactData.isGroup,\n          columnStore = reactData.columnStore;\n      var sXOpts = computeSXOpts.value;\n      var collectColumn = internalData.collectColumn,\n          tableFullColumn = internalData.tableFullColumn,\n          scrollXStore = internalData.scrollXStore,\n          fullColumnIdData = internalData.fullColumnIdData; // 如果是分组表头，如果子列全部被隐藏，则根列也隐藏\n\n      if (isGroup) {\n        var leftGroupList_1 = [];\n        var centerGroupList_1 = [];\n        var rightGroupList_1 = [];\n        XEUtils.eachTree(collectColumn, function (column, index, items, path, parent) {\n          var isColGroup = hasChildrenList(column); // 如果是分组，必须按组设置固定列，不允许给子列设置固定\n\n          if (parent && parent.fixed) {\n            column.fixed = parent.fixed;\n          }\n\n          if (parent && column.fixed !== parent.fixed) {\n            errLog('vxe.error.groupFixed');\n          }\n\n          if (isColGroup) {\n            column.visible = !!XEUtils.findTree(column.children, function (subColumn) {\n              return hasChildrenList(subColumn) ? false : subColumn.visible;\n            });\n          } else if (column.visible) {\n            if (column.fixed === 'left') {\n              leftList.push(column);\n            } else if (column.fixed === 'right') {\n              rightList.push(column);\n            } else {\n              centerList.push(column);\n            }\n          }\n        });\n        collectColumn.forEach(function (column) {\n          if (column.visible) {\n            if (column.fixed === 'left') {\n              leftGroupList_1.push(column);\n            } else if (column.fixed === 'right') {\n              rightGroupList_1.push(column);\n            } else {\n              centerGroupList_1.push(column);\n            }\n          }\n        });\n        reactData.tableGroupColumn = leftGroupList_1.concat(centerGroupList_1).concat(rightGroupList_1);\n      } else {\n        // 重新分配列\n        tableFullColumn.forEach(function (column) {\n          if (column.visible) {\n            if (column.fixed === 'left') {\n              leftList.push(column);\n            } else if (column.fixed === 'right') {\n              rightList.push(column);\n            } else {\n              centerList.push(column);\n            }\n          }\n        });\n      }\n\n      var visibleColumn = leftList.concat(centerList).concat(rightList);\n      var scrollXLoad = !!sXOpts.enabled && sXOpts.gt > -1 && sXOpts.gt < tableFullColumn.length;\n      reactData.hasFixedColumn = leftList.length > 0 || rightList.length > 0;\n      Object.assign(columnStore, {\n        leftList: leftList,\n        centerList: centerList,\n        rightList: rightList\n      });\n\n      if (scrollXLoad && isGroup) {\n        scrollXLoad = false;\n\n        if (process.env.NODE_ENV === 'development') {\n          warnLog('vxe.error.scrollXNotGroup');\n        }\n      }\n\n      if (scrollXLoad) {\n        if (process.env.NODE_ENV === 'development') {\n          if (props.showHeader && !props.showHeaderOverflow) {\n            warnLog('vxe.error.reqProp', ['show-header-overflow']);\n          }\n\n          if (props.showFooter && !props.showFooterOverflow) {\n            warnLog('vxe.error.reqProp', ['show-footer-overflow']);\n          }\n\n          if (props.spanMethod) {\n            warnLog('vxe.error.scrollErrProp', ['span-method']);\n          }\n\n          if (props.footerSpanMethod) {\n            warnLog('vxe.error.scrollErrProp', ['footer-span-method']);\n          }\n        }\n\n        var visibleSize = computeVirtualX().visibleSize;\n        scrollXStore.startIndex = 0;\n        scrollXStore.endIndex = visibleSize;\n        scrollXStore.visibleSize = visibleSize;\n      } // 如果列被显示/隐藏，则清除合并状态\n      // 如果列被设置为固定，则清除合并状态\n\n\n      if (visibleColumn.length !== internalData.visibleColumn.length || !internalData.visibleColumn.every(function (column, index) {\n        return column === visibleColumn[index];\n      })) {\n        tableMethods.clearMergeCells();\n        tableMethods.clearMergeFooterItems();\n      }\n\n      reactData.scrollXLoad = scrollXLoad;\n      visibleColumn.forEach(function (column, index) {\n        var colid = column.id;\n        var rest = fullColumnIdData[colid];\n\n        if (rest) {\n          rest._index = index;\n        }\n      });\n      internalData.visibleColumn = visibleColumn;\n      handleTableColumn();\n      return tableMethods.updateFooter().then(function () {\n        return tableMethods.recalculate();\n      }).then(function () {\n        tablePrivateMethods.updateCellAreas();\n        return tableMethods.recalculate();\n      });\n    };\n\n    var handleColumn = function (collectColumn) {\n      internalData.collectColumn = collectColumn;\n      var tableFullColumn = getColumnList(collectColumn);\n      internalData.tableFullColumn = tableFullColumn;\n      cacheColumnMap();\n      restoreCustomStorage();\n      parseColumns().then(function () {\n        if (reactData.scrollXLoad) {\n          loadScrollXData();\n        }\n      });\n      tableMethods.clearMergeCells();\n      tableMethods.clearMergeFooterItems();\n      tablePrivateMethods.handleTableData(true);\n\n      if (process.env.NODE_ENV === 'development') {\n        if ((reactData.scrollXLoad || reactData.scrollYLoad) && reactData.expandColumn) {\n          warnLog('vxe.error.scrollErrProp', ['column.type=expand']);\n        }\n      }\n\n      return nextTick().then(function () {\n        if ($xetoolbar) {\n          $xetoolbar.syncUpdate({\n            collectColumn: collectColumn,\n            $table: $xetable\n          });\n        }\n\n        return tableMethods.recalculate();\n      });\n    };\n\n    var updateScrollYStatus = function (fullData) {\n      var treeConfig = props.treeConfig;\n      var sYOpts = computeSYOpts.value;\n      var treeOpts = computeTreeOpts.value;\n      var transform = treeOpts.transform;\n      var scrollYLoad = (transform || !treeConfig) && !!sYOpts.enabled && sYOpts.gt > -1 && sYOpts.gt < fullData.length;\n      reactData.scrollYLoad = scrollYLoad;\n      return scrollYLoad;\n    };\n    /**\n     * 展开与收起树节点\n     * @param rows\n     * @param expanded\n     * @returns\n     */\n\n\n    var handleBaseTreeExpand = function (rows, expanded) {\n      var treeExpandeds = reactData.treeExpandeds,\n          treeLazyLoadeds = reactData.treeLazyLoadeds,\n          treeNodeColumn = reactData.treeNodeColumn;\n      var fullAllDataRowIdData = internalData.fullAllDataRowIdData,\n          tableFullData = internalData.tableFullData;\n      var treeOpts = computeTreeOpts.value;\n      var reserve = treeOpts.reserve,\n          lazy = treeOpts.lazy,\n          hasChild = treeOpts.hasChild,\n          children = treeOpts.children,\n          accordion = treeOpts.accordion,\n          toggleMethod = treeOpts.toggleMethod;\n      var result = [];\n      var columnIndex = tableMethods.getColumnIndex(treeNodeColumn);\n      var $columnIndex = tableMethods.getVMColumnIndex(treeNodeColumn);\n      var validRows = toggleMethod ? rows.filter(function (row) {\n        return toggleMethod({\n          $table: $xetable,\n          expanded: expanded,\n          column: treeNodeColumn,\n          columnIndex: columnIndex,\n          $columnIndex: $columnIndex,\n          row: row\n        });\n      }) : rows;\n\n      if (accordion) {\n        validRows = validRows.length ? [validRows[validRows.length - 1]] : []; // 同一级只能展开一个\n\n        var matchObj_1 = XEUtils.findTree(tableFullData, function (item) {\n          return item === validRows[0];\n        }, treeOpts);\n\n        if (matchObj_1) {\n          XEUtils.remove(treeExpandeds, function (item) {\n            return matchObj_1.items.indexOf(item) > -1;\n          });\n        }\n      }\n\n      if (expanded) {\n        validRows.forEach(function (row) {\n          if ($xetable.findRowIndexOf(treeExpandeds, row) === -1) {\n            var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n            var isLoad = lazy && row[hasChild] && !rest.treeLoaded && $xetable.findRowIndexOf(treeLazyLoadeds, row) === -1; // 是否使用懒加载\n\n            if (isLoad) {\n              result.push(handleAsyncTreeExpandChilds(row));\n            } else {\n              if (row[children] && row[children].length) {\n                treeExpandeds.push(row);\n              }\n            }\n          }\n        });\n      } else {\n        XEUtils.remove(treeExpandeds, function (row) {\n          return $xetable.findRowIndexOf(validRows, row) > -1;\n        });\n      }\n\n      if (reserve) {\n        validRows.forEach(function (row) {\n          return handleTreeExpandReserve(row, expanded);\n        });\n      }\n\n      return Promise.all(result).then(function () {\n        return tableMethods.recalculate();\n      });\n    };\n    /**\n     * 虚拟树的展开与收起\n     * @param rows\n     * @param expanded\n     * @returns\n     */\n\n\n    var handleVirtualTreeExpand = function (rows, expanded) {\n      return handleBaseTreeExpand(rows, expanded).then(function () {\n        handleVirtualTreeToList();\n        return tablePrivateMethods.handleTableData();\n      }).then(function () {\n        return tableMethods.recalculate();\n      });\n    };\n    /**\n     * 纵向 Y 可视渲染处理\n     */\n\n\n    var loadScrollYData = function (evnt) {\n      var mergeList = reactData.mergeList;\n      var scrollYStore = internalData.scrollYStore;\n      var startIndex = scrollYStore.startIndex,\n          endIndex = scrollYStore.endIndex,\n          visibleSize = scrollYStore.visibleSize,\n          offsetSize = scrollYStore.offsetSize,\n          rowHeight = scrollYStore.rowHeight;\n      var scrollBodyElem = evnt.currentTarget || evnt.target;\n      var scrollTop = scrollBodyElem.scrollTop;\n      var toVisibleIndex = Math.floor(scrollTop / rowHeight);\n      var offsetItem = {\n        startIndex: Math.max(0, toVisibleIndex - 1 - offsetSize),\n        endIndex: toVisibleIndex + visibleSize + offsetSize\n      };\n      calculateMergerOffserIndex(mergeList, offsetItem, 'row');\n      var offsetStartIndex = offsetItem.startIndex,\n          offsetEndIndex = offsetItem.endIndex;\n\n      if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {\n        if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {\n          scrollYStore.startIndex = offsetStartIndex;\n          scrollYStore.endIndex = offsetEndIndex;\n          tablePrivateMethods.updateScrollYData();\n        }\n      }\n    };\n\n    var createGetRowCacheProp = function (prop) {\n      return function (row) {\n        var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n\n        if (row) {\n          var rowid = getRowid($xetable, row);\n          var rest = fullAllDataRowIdData[rowid];\n\n          if (rest) {\n            return rest[prop];\n          }\n        }\n\n        return -1;\n      };\n    };\n\n    var createGetColumnCacheProp = function (prop) {\n      return function (column) {\n        var fullColumnIdData = internalData.fullColumnIdData;\n\n        if (column) {\n          var rest = fullColumnIdData[column.id];\n\n          if (rest) {\n            return rest[prop];\n          }\n        }\n\n        return -1;\n      };\n    };\n\n    var debounceScrollY = XEUtils.debounce(function (evnt) {\n      loadScrollYData(evnt);\n    }, 20, {\n      leading: false,\n      trailing: true\n    });\n    var keyCtxTimeout;\n    tableMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $table: $xetable,\n          $event: evnt\n        }, params));\n      },\n\n      /**\n       * 重置表格的一切数据状态\n       */\n      clearAll: function () {\n        return clearTableAllStatus($xetable);\n      },\n\n      /**\n       * 同步 data 数据（即将废弃）\n       * 如果用了该方法，那么组件将不再记录增删改的状态，只能自行实现对应逻辑\n       * 对于某些特殊的场景，比如深层树节点元素发生变动时可能会用到\n       */\n      syncData: function () {\n        return nextTick().then(function () {\n          reactData.tableData = [];\n          emit('update:data', internalData.tableFullData);\n          return nextTick();\n        });\n      },\n\n      /**\n       * 手动处理数据，用于手动排序与筛选\n       * 对于手动更改了排序、筛选...等条件后需要重新处理数据时可能会用到\n       */\n      updateData: function () {\n        var scrollXLoad = reactData.scrollXLoad,\n            scrollYLoad = reactData.scrollYLoad;\n        return tablePrivateMethods.handleTableData(true).then(function () {\n          tableMethods.updateFooter();\n\n          if (scrollXLoad || scrollYLoad) {\n            if (scrollXLoad) {\n              tablePrivateMethods.updateScrollXSpace();\n            }\n\n            if (scrollYLoad) {\n              tablePrivateMethods.updateScrollYSpace();\n            }\n\n            return tableMethods.refreshScroll();\n          }\n        }).then(function () {\n          tablePrivateMethods.updateCellAreas();\n          return tableMethods.recalculate(true);\n        }).then(function () {\n          // 存在滚动行为未结束情况\n          setTimeout(function () {\n            return $xetable.recalculate();\n          }, 50);\n        });\n      },\n\n      /**\n       * 重新加载数据，不会清空表格状态\n       * @param {Array} datas 数据\n       */\n      loadData: function (datas) {\n        var inited = internalData.inited,\n            initStatus = internalData.initStatus;\n        return loadTableData(datas).then(function () {\n          internalData.inited = true;\n          internalData.initStatus = true;\n\n          if (!initStatus) {\n            handleLoadDefaults();\n          }\n\n          if (!inited) {\n            handleInitDefaults();\n          }\n\n          return tableMethods.recalculate();\n        });\n      },\n\n      /**\n       * 重新加载数据，会清空表格状态\n       * @param {Array} datas 数据\n       */\n      reloadData: function (datas) {\n        var inited = internalData.inited;\n        return tableMethods.clearAll().then(function () {\n          internalData.inited = true;\n          internalData.initStatus = true;\n          return loadTableData(datas);\n        }).then(function () {\n          handleLoadDefaults();\n\n          if (!inited) {\n            handleInitDefaults();\n          }\n\n          return tableMethods.recalculate();\n        });\n      },\n\n      /**\n       * 局部加载行数据并恢复到初始状态\n       * 对于行数据需要局部更改的场景中可能会用到\n       * @param {Row} row 行对象\n       * @param {Object} record 新数据\n       * @param {String} field 字段名\n       */\n      reloadRow: function (row, record, field) {\n        var keepSource = props.keepSource;\n        var tableData = reactData.tableData;\n        var tableSourceData = internalData.tableSourceData;\n\n        if (keepSource) {\n          var rowIndex = tableMethods.getRowIndex(row);\n          var oRow = tableSourceData[rowIndex];\n\n          if (oRow && row) {\n            if (field) {\n              var newValue = XEUtils.get(record || row, field);\n              XEUtils.set(row, field, newValue);\n              XEUtils.set(oRow, field, newValue);\n            } else {\n              var newRecord = XEUtils.clone(__assign({}, record), true);\n              XEUtils.destructuring(oRow, Object.assign(row, newRecord));\n            }\n          }\n\n          reactData.tableData = tableData.slice(0);\n        } else {\n          if (process.env.NODE_ENV === 'development') {\n            warnLog('vxe.error.reqProp', ['keep-source']);\n          }\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 用于树结构，给行数据加载子节点\n       */\n      loadTreeChildren: function (row, childRecords) {\n        var keepSource = props.keepSource;\n        var tableSourceData = internalData.tableSourceData,\n            fullDataRowIdData = internalData.fullDataRowIdData,\n            fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n        var treeOpts = computeTreeOpts.value;\n        var transform = treeOpts.transform,\n            children = treeOpts.children,\n            mapChildren = treeOpts.mapChildren;\n        var parentRest = fullAllDataRowIdData[getRowid($xetable, row)];\n        var parentLevel = parentRest ? parentRest.level : 0;\n        return tableMethods.createData(childRecords).then(function (rows) {\n          if (keepSource) {\n            var rowid_1 = getRowid($xetable, row);\n            var matchObj = XEUtils.findTree(tableSourceData, function (item) {\n              return rowid_1 === getRowid($xetable, item);\n            }, treeOpts);\n\n            if (matchObj) {\n              matchObj.item[children] = XEUtils.clone(rows, true);\n            }\n          }\n\n          XEUtils.eachTree(rows, function (childRow, index, items, path, parent, nodes) {\n            var rowid = getRowid($xetable, childRow);\n            var rest = {\n              row: childRow,\n              rowid: rowid,\n              seq: -1,\n              index: index,\n              _index: -1,\n              $index: -1,\n              items: items,\n              parent: parent,\n              level: parentLevel + nodes.length\n            };\n            fullDataRowIdData[rowid] = rest;\n            fullAllDataRowIdData[rowid] = rest;\n          }, treeOpts);\n          row[children] = rows;\n\n          if (transform) {\n            row[mapChildren] = rows;\n          }\n\n          updateAfterDataIndex();\n          return rows;\n        });\n      },\n\n      /**\n       * 加载列配置\n       * 对于表格列需要重载、局部递增场景下可能会用到\n       * @param {ColumnInfo} columns 列配置\n       */\n      loadColumn: function (columns) {\n        var collectColumn = XEUtils.mapTree(columns, function (column) {\n          return reactive(Cell.createColumn($xetable, column));\n        });\n        return handleColumn(collectColumn);\n      },\n\n      /**\n       * 加载列配置并恢复到初始状态\n       * 对于表格列需要重载、局部递增场景下可能会用到\n       * @param {ColumnInfo} columns 列配置\n       */\n      reloadColumn: function (columns) {\n        return tableMethods.clearAll().then(function () {\n          return tableMethods.loadColumn(columns);\n        });\n      },\n\n      /**\n       * 根据 tr 元素获取对应的 row 信息\n       * @param {Element} tr 元素\n       */\n      getRowNode: function (tr) {\n        if (tr) {\n          var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n          var rowid = tr.getAttribute('rowid');\n\n          if (rowid) {\n            var rest = fullAllDataRowIdData[rowid];\n\n            if (rest) {\n              return {\n                rowid: rest.rowid,\n                item: rest.row,\n                index: rest.index,\n                items: rest.items,\n                parent: rest.parent\n              };\n            }\n          }\n        }\n\n        return null;\n      },\n\n      /**\n       * 根据 th/td 元素获取对应的 column 信息\n       * @param {Element} cell 元素\n       */\n      getColumnNode: function (cell) {\n        if (cell) {\n          var fullColumnIdData = internalData.fullColumnIdData;\n          var colid = cell.getAttribute('colid');\n\n          if (colid) {\n            var rest = fullColumnIdData[colid];\n\n            if (rest) {\n              return {\n                colid: rest.colid,\n                item: rest.column,\n                index: rest.index,\n                items: rest.items,\n                parent: rest.parent\n              };\n            }\n          }\n        }\n\n        return null;\n      },\n\n      /**\n       * 根据 row 获取序号\n       * @param {Row} row 行对象\n       */\n      getRowSeq: createGetRowCacheProp('seq'),\n\n      /**\n       * 根据 row 获取相对于 data 中的索引\n       * @param {Row} row 行对象\n       */\n      getRowIndex: createGetRowCacheProp('index'),\n\n      /**\n       * 根据 row 获取相对于当前数据中的索引\n       * @param {Row} row 行对象\n       */\n      getVTRowIndex: createGetRowCacheProp('_index'),\n\n      /**\n       * 根据 row 获取渲染中的虚拟索引\n       * @param {Row} row 行对象\n       */\n      getVMRowIndex: createGetRowCacheProp('$index'),\n\n      /**\n       * 根据 column 获取相对于 columns 中的索引\n       * @param {ColumnInfo} column 列配置\n       */\n      getColumnIndex: createGetColumnCacheProp('index'),\n\n      /**\n       * 根据 column 获取相对于当前表格列中的索引\n       * @param {ColumnInfo} column 列配置\n       */\n      getVTColumnIndex: createGetColumnCacheProp('_index'),\n\n      /**\n       * 根据 column 获取渲染中的虚拟索引\n       * @param {ColumnInfo} column 列配置\n       */\n      getVMColumnIndex: createGetColumnCacheProp('$index'),\n\n      /**\n       * 创建 data 对象\n       * 对于某些特殊场景可能会用到，会自动对数据的字段名进行检测，如果不存在就自动定义\n       * @param {Array} records 新数据\n       */\n      createData: function (records) {\n        var treeConfig = props.treeConfig;\n        var treeOpts = computeTreeOpts.value;\n\n        var handleRrecord = function (record) {\n          return reactive(tablePrivateMethods.defineField(Object.assign({}, record)));\n        };\n\n        var rows = treeConfig ? XEUtils.mapTree(records, handleRrecord, treeOpts) : records.map(handleRrecord);\n        return nextTick().then(function () {\n          return rows;\n        });\n      },\n\n      /**\n       * 创建 Row|Rows 对象\n       * 对于某些特殊场景需要对数据进行手动插入时可能会用到\n       * @param {Array/Object} records 新数据\n       */\n      createRow: function (records) {\n        var isArr = XEUtils.isArray(records);\n\n        if (!isArr) {\n          records = [records];\n        }\n\n        return nextTick().then(function () {\n          return tableMethods.createData(records).then(function (rows) {\n            return isArr ? rows : rows[0];\n          });\n        });\n      },\n\n      /**\n       * 还原数据\n       * 如果不传任何参数，则还原整个表格\n       * 如果传 row 则还原一行\n       * 如果传 rows 则还原多行\n       * 如果还额外传了 field 则还原指定的单元格数据\n       */\n      revertData: function (rows, field) {\n        var keepSource = props.keepSource;\n        var tableSourceData = internalData.tableSourceData,\n            tableFullData = internalData.tableFullData;\n\n        if (!keepSource) {\n          if (process.env.NODE_ENV === 'development') {\n            warnLog('vxe.error.reqProp', ['keep-source']);\n          }\n\n          return nextTick();\n        }\n\n        var targetRows = rows;\n\n        if (rows) {\n          if (!XEUtils.isArray(rows)) {\n            targetRows = [rows];\n          }\n        } else {\n          targetRows = XEUtils.toArray($xetable.getUpdateRecords());\n        }\n\n        if (targetRows.length) {\n          targetRows.forEach(function (row) {\n            if (!tableMethods.isInsertByRow(row)) {\n              var rowIndex = $xetable.findRowIndexOf(tableFullData, row);\n              var oRow = tableSourceData[rowIndex];\n\n              if (oRow && row) {\n                if (field) {\n                  XEUtils.set(row, field, XEUtils.clone(XEUtils.get(oRow, field), true));\n                } else {\n                  XEUtils.destructuring(row, XEUtils.clone(oRow, true));\n                }\n              }\n            }\n          });\n        }\n\n        if (rows) {\n          return nextTick();\n        }\n\n        return tableMethods.reloadData(tableSourceData);\n      },\n\n      /**\n       * 清空单元格内容\n       * 如果不创参数，则清空整个表格内容\n       * 如果传 row 则清空一行内容\n       * 如果传 rows 则清空多行内容\n       * 如果还额外传了 field 则清空指定单元格内容\n       * @param {Array/Row} rows 行数据\n       * @param {String} field 字段名\n       */\n      clearData: function (rows, field) {\n        var tableFullData = internalData.tableFullData,\n            visibleColumn = internalData.visibleColumn;\n\n        if (!arguments.length) {\n          rows = tableFullData;\n        } else if (rows && !XEUtils.isArray(rows)) {\n          rows = [rows];\n        }\n\n        if (field) {\n          rows.forEach(function (row) {\n            return XEUtils.set(row, field, null);\n          });\n        } else {\n          rows.forEach(function (row) {\n            visibleColumn.forEach(function (column) {\n              if (column.property) {\n                setCellValue(row, column, null);\n              }\n            });\n          });\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 检查是否为临时行数据\n       * @param {Row} row 行对象\n       */\n      isInsertByRow: function (row) {\n        var editStore = reactData.editStore;\n        return $xetable.findRowIndexOf(editStore.insertList, row) > -1;\n      },\n\n      /**\n       * 删除所有新增的临时数据\n       * @returns\n       */\n      removeInsertRow: function () {\n        var editStore = reactData.editStore;\n        return $xetable.remove(editStore.insertList);\n      },\n\n      /**\n       * 检查行或列数据是否发生改变\n       * @param {Row} row 行对象\n       * @param {String} field 字段名\n       */\n      isUpdateByRow: function (row, field) {\n        var _a, _b;\n\n        var keepSource = props.keepSource,\n            treeConfig = props.treeConfig;\n        var visibleColumn = internalData.visibleColumn,\n            tableSourceData = internalData.tableSourceData,\n            fullDataRowIdData = internalData.fullDataRowIdData;\n        var treeOpts = computeTreeOpts.value;\n\n        if (keepSource) {\n          var oRow = void 0,\n              property = void 0;\n          var rowid_2 = getRowid($xetable, row); // 新增的数据不需要检测\n\n          if (!fullDataRowIdData[rowid_2]) {\n            return false;\n          }\n\n          if (treeConfig) {\n            var children = treeOpts.children;\n            var matchObj = XEUtils.findTree(tableSourceData, function (item) {\n              return rowid_2 === getRowid($xetable, item);\n            }, treeOpts);\n            row = Object.assign({}, row, (_a = {}, _a[children] = null, _a));\n\n            if (matchObj) {\n              oRow = Object.assign({}, matchObj.item, (_b = {}, _b[children] = null, _b));\n            }\n          } else {\n            var oRowIndex = fullDataRowIdData[rowid_2].index;\n            oRow = tableSourceData[oRowIndex];\n          }\n\n          if (oRow) {\n            if (arguments.length > 1) {\n              return !eqCellValue(oRow, row, field);\n            }\n\n            for (var index = 0, len = visibleColumn.length; index < len; index++) {\n              property = visibleColumn[index].property;\n\n              if (property && !eqCellValue(oRow, row, property)) {\n                return true;\n              }\n            }\n          }\n        }\n\n        return false;\n      },\n\n      /**\n       * 获取表格的可视列，也可以指定索引获取列\n       * @param {Number} columnIndex 索引\n       */\n      getColumns: function (columnIndex) {\n        var columns = internalData.visibleColumn;\n        return XEUtils.isUndefined(columnIndex) ? columns.slice(0) : columns[columnIndex];\n      },\n\n      /**\n       * 根据列的唯一主键获取列\n       * @param {String} colid 列主键\n       */\n      getColumnById: function (colid) {\n        var fullColumnIdData = internalData.fullColumnIdData;\n        return fullColumnIdData[colid] ? fullColumnIdData[colid].column : null;\n      },\n\n      /**\n       * 根据列的字段名获取列\n       * @param {String} field 字段名\n       */\n      getColumnByField: function (field) {\n        var fullColumnFieldData = internalData.fullColumnFieldData;\n        return fullColumnFieldData[field] ? fullColumnFieldData[field].column : null;\n      },\n\n      /**\n       * 获取当前表格的列\n       * 收集到的全量列、全量表头列、处理条件之后的全量表头列、当前渲染中的表头列\n       */\n      getTableColumn: function () {\n        return {\n          collectColumn: internalData.collectColumn.slice(0),\n          fullColumn: internalData.tableFullColumn.slice(0),\n          visibleColumn: internalData.visibleColumn.slice(0),\n          tableColumn: reactData.tableColumn.slice(0)\n        };\n      },\n\n      /**\n       * 获取数据，和 data 的行为一致，也可以指定索引获取数据\n       */\n      getData: function (rowIndex) {\n        var tableSynchData = props.data || internalData.tableSynchData;\n        return XEUtils.isUndefined(rowIndex) ? tableSynchData.slice(0) : tableSynchData[rowIndex];\n      },\n\n      /**\n       * 用于多选行，获取已选中的数据\n       */\n      getCheckboxRecords: function (isFull) {\n        var treeConfig = props.treeConfig;\n        var tableFullData = internalData.tableFullData,\n            afterFullData = internalData.afterFullData,\n            afterTreeFullData = internalData.afterTreeFullData,\n            tableFullTreeData = internalData.tableFullTreeData;\n        var treeOpts = computeTreeOpts.value;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var transform = treeOpts.transform,\n            children = treeOpts.children,\n            mapChildren = treeOpts.mapChildren;\n        var property = checkboxOpts.checkField;\n        var rowList = [];\n        var currTableData = isFull ? transform ? tableFullTreeData : tableFullData : transform ? afterTreeFullData : afterFullData;\n\n        if (property) {\n          if (treeConfig) {\n            rowList = XEUtils.filterTree(currTableData, function (row) {\n              return XEUtils.get(row, property);\n            }, {\n              children: transform ? mapChildren : children\n            });\n          } else {\n            rowList = currTableData.filter(function (row) {\n              return XEUtils.get(row, property);\n            });\n          }\n        } else {\n          var selection_1 = reactData.selection;\n\n          if (treeConfig) {\n            rowList = XEUtils.filterTree(currTableData, function (row) {\n              return $xetable.findRowIndexOf(selection_1, row) > -1;\n            }, {\n              children: transform ? mapChildren : children\n            });\n          } else {\n            rowList = currTableData.filter(function (row) {\n              return $xetable.findRowIndexOf(selection_1, row) > -1;\n            });\n          }\n        }\n\n        return rowList;\n      },\n\n      /**\n       * 只对 tree-config 有效，获取行的父级\n       */\n      getParentRow: function (rowOrRowid) {\n        var treeConfig = props.treeConfig;\n        var fullDataRowIdData = internalData.fullDataRowIdData;\n\n        if (rowOrRowid && treeConfig) {\n          var rowid = void 0;\n\n          if (XEUtils.isString(rowOrRowid)) {\n            rowid = rowOrRowid;\n          } else {\n            rowid = getRowid($xetable, rowOrRowid);\n          }\n\n          if (rowid) {\n            return fullDataRowIdData[rowid] ? fullDataRowIdData[rowid].parent : null;\n          }\n        }\n\n        return null;\n      },\n\n      /**\n       * 根据行的唯一主键获取行\n       * @param {String/Number} rowid 行主键\n       */\n      getRowById: function (rowid) {\n        var fullDataRowIdData = internalData.fullDataRowIdData;\n        return fullDataRowIdData[rowid] ? fullDataRowIdData[rowid].row : null;\n      },\n\n      /**\n       * 根据行获取行的唯一主键\n       * @param {Row} row 行对象\n       */\n      getRowid: function (row) {\n        return getRowid($xetable, row);\n      },\n\n      /**\n       * 获取处理后的表格数据\n       * 如果存在筛选条件，继续处理\n       * 如果存在排序，继续处理\n       */\n      getTableData: function () {\n        var tableData = reactData.tableData,\n            footerTableData = reactData.footerTableData;\n        var tableFullData = internalData.tableFullData,\n            afterFullData = internalData.afterFullData;\n        return {\n          fullData: tableFullData.slice(0),\n          visibleData: afterFullData.slice(0),\n          tableData: tableData.slice(0),\n          footerData: footerTableData.slice(0)\n        };\n      },\n\n      /**\n       * 隐藏指定列\n       */\n      hideColumn: function (fieldOrColumn) {\n        var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n        if (column) {\n          column.visible = false;\n        }\n\n        return tablePrivateMethods.handleCustom();\n      },\n\n      /**\n       * 显示指定列\n       */\n      showColumn: function (fieldOrColumn) {\n        var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n        if (column) {\n          column.visible = true;\n        }\n\n        return tablePrivateMethods.handleCustom();\n      },\n\n      /**\n       * 手动重置列的显示隐藏、列宽拖动的状态；\n       * 如果为 true 则重置所有状态\n       * 如果已关联工具栏，则会同步更新\n       */\n      resetColumn: function (options) {\n        var tableFullColumn = internalData.tableFullColumn;\n        var customOpts = computeCustomOpts.value;\n        var checkMethod = customOpts.checkMethod;\n        var opts = Object.assign({\n          visible: true,\n          resizable: options === true\n        }, options);\n        tableFullColumn.forEach(function (column) {\n          if (opts.resizable) {\n            column.resizeWidth = 0;\n          }\n\n          if (!checkMethod || checkMethod({\n            column: column\n          })) {\n            column.visible = column.defaultVisible;\n          }\n        });\n\n        if (opts.resizable) {\n          tablePrivateMethods.saveCustomResizable(true);\n        }\n\n        return tablePrivateMethods.handleCustom();\n      },\n\n      /**\n       * 刷新列信息\n       * 将固定的列左边、右边分别靠边\n       */\n      refreshColumn: function () {\n        return parseColumns().then(function () {\n          return tableMethods.refreshScroll();\n        }).then(function () {\n          return tableMethods.recalculate();\n        });\n      },\n\n      /**\n       * 刷新滚动操作，手动同步滚动相关位置（对于某些特殊的操作，比如滚动条错位、固定列不同步）\n       */\n      refreshScroll: function () {\n        var lastScrollLeft = internalData.lastScrollLeft,\n            lastScrollTop = internalData.lastScrollTop;\n        var tableBody = refTableBody.value;\n        var tableFooter = refTableFooter.value;\n        var leftBody = refTableLeftBody.value;\n        var rightBody = refTableRightBody.value;\n        var tableBodyElem = tableBody ? tableBody.$el : null;\n        var leftBodyElem = leftBody ? leftBody.$el : null;\n        var rightBodyElem = rightBody ? rightBody.$el : null;\n        var tableFooterElem = tableFooter ? tableFooter.$el : null;\n        return new Promise(function (resolve) {\n          // 还原滚动条位置\n          if (lastScrollLeft || lastScrollTop) {\n            return restoreScrollLocation($xetable, lastScrollLeft, lastScrollTop).then(resolve).then(function () {\n              // 存在滚动行为未结束情况\n              setTimeout(resolve, 30);\n            });\n          } // 重置\n\n\n          setScrollTop(tableBodyElem, lastScrollTop);\n          setScrollTop(leftBodyElem, lastScrollTop);\n          setScrollTop(rightBodyElem, lastScrollTop);\n          setScrollLeft(tableFooterElem, lastScrollLeft); // 存在滚动行为未结束情况\n\n          setTimeout(resolve, 30);\n        });\n      },\n\n      /**\n       * 计算单元格列宽，动态分配可用剩余空间\n       * 支持 width=? width=?px width=?% min-width=? min-width=?px min-width=?%\n       */\n      recalculate: function (refull) {\n        var tableHeader = refTableHeader.value;\n        var tableBody = refTableBody.value;\n        var tableFooter = refTableFooter.value;\n        var bodyElem = tableBody ? tableBody.$el : null;\n        var headerElem = tableHeader ? tableHeader.$el : null;\n        var footerElem = tableFooter ? tableFooter.$el : null;\n\n        if (bodyElem) {\n          autoCellWidth(headerElem, bodyElem, footerElem);\n\n          if (refull === true) {\n            // 初始化时需要在列计算之后再执行优化运算，达到最优显示效果\n            return computeScrollLoad().then(function () {\n              autoCellWidth(headerElem, bodyElem, footerElem);\n              return computeScrollLoad();\n            });\n          }\n        }\n\n        return computeScrollLoad();\n      },\n      openTooltip: function (target, content) {\n        var $commTip = refCommTooltip.value;\n\n        if ($commTip) {\n          return $commTip.open(target, content);\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 关闭 tooltip\n       */\n      closeTooltip: function () {\n        var tooltipStore = reactData.tooltipStore;\n        var $tooltip = refTooltip.value;\n        var $commTip = refCommTooltip.value;\n\n        if (tooltipStore.visible) {\n          Object.assign(tooltipStore, {\n            row: null,\n            column: null,\n            content: null,\n            visible: false\n          });\n\n          if ($tooltip) {\n            $tooltip.close();\n          }\n        }\n\n        if ($commTip) {\n          $commTip.close();\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 判断列头复选框是否被选中\n       */\n      isAllCheckboxChecked: function () {\n        return reactData.isAllSelected;\n      },\n\n      /**\n       * 判断列头复选框是否被半选\n       */\n      isAllCheckboxIndeterminate: function () {\n        return !reactData.isAllSelected && reactData.isIndeterminate;\n      },\n\n      /**\n       * 获取复选框半选状态的行数据\n       */\n      getCheckboxIndeterminateRecords: function (isFull) {\n        var treeConfig = props.treeConfig;\n        var afterFullData = internalData.afterFullData;\n        var treeIndeterminates = reactData.treeIndeterminates;\n\n        if (treeConfig) {\n          return isFull ? treeIndeterminates.slice(0) : treeIndeterminates.filter(function (row) {\n            return $xetable.findRowIndexOf(afterFullData, row) > -1;\n          });\n        }\n\n        return [];\n      },\n\n      /**\n       * 用于多选行，设置行为选中状态，第二个参数为选中与否\n       * @param {Array/Row} rows 行数据\n       * @param {Boolean} value 是否选中\n       */\n      setCheckboxRow: function (rows, value) {\n        if (rows && !XEUtils.isArray(rows)) {\n          rows = [rows];\n        }\n\n        rows.forEach(function (row) {\n          return tablePrivateMethods.handleSelectRow({\n            row: row\n          }, !!value);\n        });\n        return nextTick();\n      },\n      isCheckedByCheckboxRow: function (row) {\n        var selection = reactData.selection;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var property = checkboxOpts.checkField;\n\n        if (property) {\n          return XEUtils.get(row, property);\n        }\n\n        return $xetable.findRowIndexOf(selection, row) > -1;\n      },\n      isIndeterminateByCheckboxRow: function (row) {\n        var treeIndeterminates = reactData.treeIndeterminates;\n        return $xetable.findRowIndexOf(treeIndeterminates, row) > -1 && !tableMethods.isCheckedByCheckboxRow(row);\n      },\n\n      /**\n       * 多选，切换某一行的选中状态\n       */\n      toggleCheckboxRow: function (row) {\n        tablePrivateMethods.handleToggleCheckRowEvent(null, {\n          row: row\n        });\n        return nextTick();\n      },\n\n      /**\n       * 用于多选行，设置所有行的选中状态\n       * @param {Boolean} value 是否选中\n       */\n      setAllCheckboxRow: function (value) {\n        var treeConfig = props.treeConfig;\n        var selection = reactData.selection;\n        var afterFullData = internalData.afterFullData,\n            checkboxReserveRowMap = internalData.checkboxReserveRowMap;\n        var treeOpts = computeTreeOpts.value;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var property = checkboxOpts.checkField,\n            reserve = checkboxOpts.reserve,\n            checkStrictly = checkboxOpts.checkStrictly,\n            checkMethod = checkboxOpts.checkMethod;\n        var selectRows = [];\n        var beforeSelection = treeConfig ? [] : selection.filter(function (row) {\n          return $xetable.findRowIndexOf(afterFullData, row) === -1;\n        });\n\n        if (checkStrictly) {\n          reactData.isAllSelected = value;\n        } else {\n          /**\n           * 绑定属性方式（高性能，有污染）\n           * 必须在行数据存在对应的属性，否则将不响应\n           */\n          if (property) {\n            var checkValFn = function (row) {\n              if (!checkMethod || checkMethod({\n                row: row\n              })) {\n                if (value) {\n                  selectRows.push(row);\n                }\n\n                XEUtils.set(row, property, value);\n              }\n            }; // 如果存在选中方法\n            // 如果方法成立，则更新值，否则忽略该数据\n\n\n            if (treeConfig) {\n              XEUtils.eachTree(afterFullData, checkValFn, treeOpts);\n            } else {\n              afterFullData.forEach(checkValFn);\n            }\n          } else {\n            /**\n             * 默认方式（低性能，无污染）\n             * 无需任何属性，直接绑定\n             */\n            if (treeConfig) {\n              if (value) {\n                /**\n                 * 如果是树勾选\n                 * 如果方法成立，则添加到临时集合中\n                 */\n                XEUtils.eachTree(afterFullData, function (row) {\n                  if (!checkMethod || checkMethod({\n                    row: row\n                  })) {\n                    selectRows.push(row);\n                  }\n                }, treeOpts);\n              } else {\n                /**\n                 * 如果是树取消\n                 * 如果方法成立，则不添加到临时集合中\n                 */\n                if (checkMethod) {\n                  XEUtils.eachTree(afterFullData, function (row) {\n                    if (checkMethod({\n                      row: row\n                    }) ? 0 : $xetable.findRowIndexOf(selection, row) > -1) {\n                      selectRows.push(row);\n                    }\n                  }, treeOpts);\n                }\n              }\n            } else {\n              if (value) {\n                /**\n                 * 如果是行勾选\n                 * 如果存在选中方法且成立或者本身已勾选，则添加到临时集合中\n                 * 如果不存在选中方法，则添加所有数据到临时集合中\n                 */\n                if (checkMethod) {\n                  selectRows = afterFullData.filter(function (row) {\n                    return $xetable.findRowIndexOf(selection, row) > -1 || checkMethod({\n                      row: row\n                    });\n                  });\n                } else {\n                  selectRows = afterFullData.slice(0);\n                }\n              } else {\n                /**\n                 * 如果是行取消\n                 * 如果方法成立，则不添加到临时集合中；如果方法不成立则判断当前是否已勾选，如果已被勾选则添加到新集合中\n                 * 如果不存在选中方法，无需处理，临时集合默认为空\n                 */\n                if (checkMethod) {\n                  selectRows = afterFullData.filter(function (row) {\n                    return checkMethod({\n                      row: row\n                    }) ? 0 : $xetable.findRowIndexOf(selection, row) > -1;\n                  });\n                }\n              }\n            }\n          }\n\n          if (reserve) {\n            if (value) {\n              selectRows.forEach(function (row) {\n                checkboxReserveRowMap[getRowid($xetable, row)] = row;\n              });\n            } else {\n              afterFullData.forEach(function (row) {\n                return handleCheckboxReserveRow(row, false);\n              });\n            }\n          }\n\n          reactData.selection = property ? [] : beforeSelection.concat(selectRows);\n        }\n\n        reactData.treeIndeterminates = [];\n        tablePrivateMethods.checkSelectionStatus();\n        return nextTick();\n      },\n\n      /**\n       * 获取单选框保留选中的行\n       */\n      getRadioReserveRecord: function (isFull) {\n        var treeConfig = props.treeConfig;\n        var fullDataRowIdData = internalData.fullDataRowIdData,\n            radioReserveRow = internalData.radioReserveRow,\n            afterFullData = internalData.afterFullData;\n        var radioOpts = computeRadioOpts.value;\n        var treeOpts = computeTreeOpts.value;\n\n        if (radioOpts.reserve && radioReserveRow) {\n          var rowid_3 = getRowid($xetable, radioReserveRow);\n\n          if (isFull) {\n            if (!fullDataRowIdData[rowid_3]) {\n              return radioReserveRow;\n            }\n          } else {\n            var rowkey_2 = getRowkey($xetable);\n\n            if (treeConfig) {\n              var matchObj = XEUtils.findTree(afterFullData, function (row) {\n                return rowid_3 === XEUtils.get(row, rowkey_2);\n              }, treeOpts);\n\n              if (matchObj) {\n                return radioReserveRow;\n              }\n            } else {\n              if (!afterFullData.some(function (row) {\n                return rowid_3 === XEUtils.get(row, rowkey_2);\n              })) {\n                return radioReserveRow;\n              }\n            }\n          }\n        }\n\n        return null;\n      },\n      clearRadioReserve: function () {\n        internalData.radioReserveRow = null;\n        return nextTick();\n      },\n\n      /**\n       * 获取复选框保留选中的行\n       */\n      getCheckboxReserveRecords: function (isFull) {\n        var treeConfig = props.treeConfig;\n        var afterFullData = internalData.afterFullData,\n            fullDataRowIdData = internalData.fullDataRowIdData,\n            checkboxReserveRowMap = internalData.checkboxReserveRowMap;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var treeOpts = computeTreeOpts.value;\n        var reserveSelection = [];\n\n        if (checkboxOpts.reserve) {\n          var afterFullIdMaps_1 = {};\n\n          if (treeConfig) {\n            XEUtils.eachTree(afterFullData, function (row) {\n              afterFullIdMaps_1[getRowid($xetable, row)] = 1;\n            }, treeOpts);\n          } else {\n            afterFullData.forEach(function (row) {\n              afterFullIdMaps_1[getRowid($xetable, row)] = 1;\n            });\n          }\n\n          XEUtils.each(checkboxReserveRowMap, function (oldRow, oldRowid) {\n            if (oldRow) {\n              if (isFull) {\n                if (!fullDataRowIdData[oldRowid]) {\n                  reserveSelection.push(oldRow);\n                }\n              } else {\n                if (!afterFullIdMaps_1[oldRowid]) {\n                  reserveSelection.push(oldRow);\n                }\n              }\n            }\n          });\n        }\n\n        return reserveSelection;\n      },\n      clearCheckboxReserve: function () {\n        internalData.checkboxReserveRowMap = {};\n        return nextTick();\n      },\n\n      /**\n       * 多选，切换所有行的选中状态\n       */\n      toggleAllCheckboxRow: function () {\n        tablePrivateMethods.triggerCheckAllEvent(null, !reactData.isAllSelected);\n        return nextTick();\n      },\n\n      /**\n       * 用于多选行，手动清空用户的选择\n       * 清空行为不管是否被禁用还是保留记录，都将彻底清空选中状态\n       */\n      clearCheckboxRow: function () {\n        var treeConfig = props.treeConfig;\n        var tableFullData = internalData.tableFullData;\n        var treeOpts = computeTreeOpts.value;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var property = checkboxOpts.checkField,\n            reserve = checkboxOpts.reserve;\n\n        if (property) {\n          if (treeConfig) {\n            XEUtils.eachTree(tableFullData, function (item) {\n              return XEUtils.set(item, property, false);\n            }, treeOpts);\n          } else {\n            tableFullData.forEach(function (item) {\n              return XEUtils.set(item, property, false);\n            });\n          }\n        }\n\n        if (reserve) {\n          tableFullData.forEach(function (row) {\n            return handleCheckboxReserveRow(row, false);\n          });\n        }\n\n        reactData.isAllSelected = false;\n        reactData.isIndeterminate = false;\n        reactData.selection = [];\n        reactData.treeIndeterminates = [];\n        return nextTick();\n      },\n\n      /**\n       * 用于当前行，设置某一行为高亮状态\n       * @param {Row} row 行对象\n       */\n      setCurrentRow: function (row) {\n        var rowOpts = computeRowOpts.value;\n        var el = refElem.value;\n        tableMethods.clearCurrentRow();\n        tableMethods.clearCurrentColumn();\n        reactData.currentRow = row;\n\n        if (rowOpts.isCurrent || props.highlightCurrentRow) {\n          if (el) {\n            XEUtils.arrayEach(el.querySelectorAll(\"[rowid=\\\"\" + getRowid($xetable, row) + \"\\\"]\"), function (elem) {\n              return addClass(elem, 'row--current');\n            });\n          }\n        }\n\n        return nextTick();\n      },\n      isCheckedByRadioRow: function (row) {\n        return $xetable.eqRow(reactData.selectRow, row);\n      },\n\n      /**\n       * 用于单选行，设置某一行为选中状态\n       * @param {Row} row 行对象\n       */\n      setRadioRow: function (row) {\n        var radioOpts = computeRadioOpts.value;\n        var checkMethod = radioOpts.checkMethod;\n\n        if (row && (!checkMethod || checkMethod({\n          row: row\n        }))) {\n          reactData.selectRow = row;\n          handleRadioReserveRow(row);\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 用于当前行，手动清空当前高亮的状态\n       */\n      clearCurrentRow: function () {\n        var el = refElem.value;\n        reactData.currentRow = null;\n        internalData.hoverRow = null;\n\n        if (el) {\n          XEUtils.arrayEach(el.querySelectorAll('.row--current'), function (elem) {\n            return removeClass(elem, 'row--current');\n          });\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 用于单选行，手动清空用户的选择\n       */\n      clearRadioRow: function () {\n        reactData.selectRow = null;\n        return nextTick();\n      },\n\n      /**\n       * 用于当前行，获取当前行的数据\n       */\n      getCurrentRecord: function () {\n        var rowOpts = computeRowOpts.value;\n        return rowOpts.isCurrent || props.highlightCurrentRow ? reactData.currentRow : null;\n      },\n\n      /**\n       * 用于单选行，获取当已选中的数据\n       */\n      getRadioRecord: function (isFull) {\n        var treeConfig = props.treeConfig;\n        var fullDataRowIdData = internalData.fullDataRowIdData,\n            afterFullData = internalData.afterFullData;\n        var selectRow = reactData.selectRow;\n        var treeOpts = computeTreeOpts.value;\n\n        if (selectRow) {\n          var rowid_4 = getRowid($xetable, selectRow);\n\n          if (isFull) {\n            if (!fullDataRowIdData[rowid_4]) {\n              return selectRow;\n            }\n          } else {\n            if (treeConfig) {\n              var rowkey_3 = getRowkey($xetable);\n              var matchObj = XEUtils.findTree(afterFullData, function (row) {\n                return rowid_4 === XEUtils.get(row, rowkey_3);\n              }, treeOpts);\n\n              if (matchObj) {\n                return selectRow;\n              }\n            } else {\n              if ($xetable.findRowIndexOf(afterFullData, selectRow) > -1) {\n                return selectRow;\n              }\n            }\n          }\n        }\n\n        return null;\n      },\n      getCurrentColumn: function () {\n        var columnOpts = computeColumnOpts.value;\n        return columnOpts.isCurrent || props.highlightCurrentColumn ? reactData.currentColumn : null;\n      },\n\n      /**\n       * 用于当前列，设置某列行为高亮状态\n       */\n      setCurrentColumn: function (fieldOrColumn) {\n        var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n        if (column) {\n          tableMethods.clearCurrentRow();\n          tableMethods.clearCurrentColumn();\n          reactData.currentColumn = column;\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 用于当前列，手动清空当前高亮的状态\n       */\n      clearCurrentColumn: function () {\n        reactData.currentColumn = null;\n        return nextTick();\n      },\n      sort: function (sortConfs, sortOrder) {\n        var sortOpts = computeSortOpts.value;\n        var multiple = sortOpts.multiple,\n            remote = sortOpts.remote,\n            orders = sortOpts.orders;\n\n        if (sortConfs) {\n          if (XEUtils.isString(sortConfs)) {\n            sortConfs = [{\n              field: sortConfs,\n              order: sortOrder\n            }];\n          }\n        }\n\n        if (!XEUtils.isArray(sortConfs)) {\n          sortConfs = [sortConfs];\n        }\n\n        if (sortConfs.length) {\n          if (!multiple) {\n            clearAllSort();\n          }\n\n          (multiple ? sortConfs : [sortConfs[0]]).forEach(function (confs, index) {\n            var field = confs.field,\n                order = confs.order;\n            var column = field;\n\n            if (XEUtils.isString(field)) {\n              column = tableMethods.getColumnByField(field);\n            }\n\n            if (column && column.sortable) {\n              if (orders.indexOf(order) === -1) {\n                order = getNextSortOrder(column);\n              }\n\n              if (column.order !== order) {\n                column.order = order;\n              }\n\n              column.sortTime = Date.now() + index;\n            }\n          }); // 如果是服务端排序，则跳过本地排序处理\n\n          if (!remote) {\n            tablePrivateMethods.handleTableData(true);\n          }\n\n          return nextTick().then(updateStyle);\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 清空指定列的排序条件\n       * 如果为空则清空所有列的排序条件\n       * @param {String} fieldOrColumn 列或字段名\n       */\n      clearSort: function (fieldOrColumn) {\n        var sortOpts = computeSortOpts.value;\n\n        if (fieldOrColumn) {\n          var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n          if (column) {\n            column.order = null;\n          }\n        } else {\n          clearAllSort();\n        }\n\n        if (!sortOpts.remote) {\n          tablePrivateMethods.handleTableData(true);\n        }\n\n        return nextTick().then(updateStyle);\n      },\n      isSort: function (fieldOrColumn) {\n        if (fieldOrColumn) {\n          var column = handleFieldOrColumn($xetable, fieldOrColumn);\n          return column ? column.sortable && !!column.order : false;\n        }\n\n        return tableMethods.getSortColumns().length > 0;\n      },\n      getSortColumns: function () {\n        var sortOpts = computeSortOpts.value;\n        var multiple = sortOpts.multiple,\n            chronological = sortOpts.chronological;\n        var sortList = [];\n        var tableFullColumn = internalData.tableFullColumn;\n        tableFullColumn.forEach(function (column) {\n          var property = column.property,\n              order = column.order;\n\n          if (column.sortable && order) {\n            sortList.push({\n              column: column,\n              field: property,\n              property: property,\n              order: order,\n              sortTime: column.sortTime\n            });\n          }\n        });\n\n        if (multiple && chronological && sortList.length > 1) {\n          return XEUtils.orderBy(sortList, 'sortTime');\n        }\n\n        return sortList;\n      },\n\n      /**\n       * 关闭筛选\n       * @param {Event} evnt 事件\n       */\n      closeFilter: function () {\n        var filterStore = reactData.filterStore;\n        var column = filterStore.column,\n            visible = filterStore.visible;\n        Object.assign(filterStore, {\n          isAllSelected: false,\n          isIndeterminate: false,\n          options: [],\n          visible: false\n        });\n\n        if (visible) {\n          $xetable.dispatchEvent('filter-visible', {\n            column: column,\n            property: column.property,\n            filterList: $xetable.getCheckedFilters(),\n            visible: false\n          }, null);\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 判断指定列是否为筛选状态，如果为空则判断所有列\n       * @param {String} fieldOrColumn 字段名\n       */\n      isFilter: function (fieldOrColumn) {\n        var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n        if (column) {\n          return column.filters && column.filters.some(function (option) {\n            return option.checked;\n          });\n        }\n\n        return $xetable.getCheckedFilters().length > 0;\n      },\n\n      /**\n       * 判断展开行是否懒加载完成\n       * @param {Row} row 行对象\n       */\n      isRowExpandLoaded: function (row) {\n        var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n        var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n        return rest && !!rest.expandLoaded;\n      },\n      clearRowExpandLoaded: function (row) {\n        var expandLazyLoadeds = reactData.expandLazyLoadeds;\n        var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n        var expandOpts = computeExpandOpts.value;\n        var lazy = expandOpts.lazy;\n        var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n\n        if (lazy && rest) {\n          rest.expandLoaded = false;\n          XEUtils.remove(expandLazyLoadeds, function (item) {\n            return $xetable.eqRow(item, row);\n          });\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 重新懒加载展开行，并展开内容\n       * @param {Row} row 行对象\n       */\n      reloadRowExpand: function (row) {\n        var expandLazyLoadeds = reactData.expandLazyLoadeds;\n        var expandOpts = computeExpandOpts.value;\n        var lazy = expandOpts.lazy;\n\n        if (lazy && $xetable.findRowIndexOf(expandLazyLoadeds, row) === -1) {\n          tableMethods.clearRowExpandLoaded(row).then(function () {\n            return handleAsyncRowExpand(row);\n          });\n        }\n\n        return nextTick();\n      },\n      reloadExpandContent: function (row) {\n        if (process.env.NODE_ENV === 'development') {\n          warnLog('vxe.error.delFunc', ['reloadExpandContent', 'reloadRowExpand']);\n        } // 即将废弃\n\n\n        return tableMethods.reloadRowExpand(row);\n      },\n\n      /**\n       * 切换展开行\n       */\n      toggleRowExpand: function (row) {\n        return tableMethods.setRowExpand(row, !tableMethods.isExpandByRow(row));\n      },\n\n      /**\n       * 设置所有行的展开与否\n       * @param {Boolean} expanded 是否展开\n       */\n      setAllRowExpand: function (expanded) {\n        var expandOpts = computeExpandOpts.value;\n        return tableMethods.setRowExpand(expandOpts.lazy ? reactData.tableData : internalData.tableFullData, expanded);\n      },\n\n      /**\n       * 设置展开行，二个参数设置这一行展开与否\n       * 支持单行\n       * 支持多行\n       * @param {Array/Row} rows 行数据\n       * @param {Boolean} expanded 是否展开\n       */\n      setRowExpand: function (rows, expanded) {\n        var rowExpandeds = reactData.rowExpandeds,\n            expandLazyLoadeds = reactData.expandLazyLoadeds,\n            column = reactData.expandColumn;\n        var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n        var expandOpts = computeExpandOpts.value;\n        var reserve = expandOpts.reserve,\n            lazy = expandOpts.lazy,\n            accordion = expandOpts.accordion,\n            toggleMethod = expandOpts.toggleMethod;\n        var lazyRests = [];\n        var columnIndex = tableMethods.getColumnIndex(column);\n        var $columnIndex = tableMethods.getVMColumnIndex(column);\n\n        if (rows) {\n          if (!XEUtils.isArray(rows)) {\n            rows = [rows];\n          }\n\n          if (accordion) {\n            // 只能同时展开一个\n            rowExpandeds = [];\n            rows = rows.slice(rows.length - 1, rows.length);\n          }\n\n          var validRows_1 = toggleMethod ? rows.filter(function (row) {\n            return toggleMethod({\n              $table: $xetable,\n              expanded: expanded,\n              column: column,\n              columnIndex: columnIndex,\n              $columnIndex: $columnIndex,\n              row: row,\n              rowIndex: tableMethods.getRowIndex(row),\n              $rowIndex: tableMethods.getVMRowIndex(row)\n            });\n          }) : rows;\n\n          if (expanded) {\n            validRows_1.forEach(function (row) {\n              if ($xetable.findRowIndexOf(rowExpandeds, row) === -1) {\n                var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n                var isLoad = lazy && !rest.expandLoaded && $xetable.findRowIndexOf(expandLazyLoadeds, row) === -1;\n\n                if (isLoad) {\n                  lazyRests.push(handleAsyncRowExpand(row));\n                } else {\n                  rowExpandeds.push(row);\n                }\n              }\n            });\n          } else {\n            XEUtils.remove(rowExpandeds, function (row) {\n              return $xetable.findRowIndexOf(validRows_1, row) > -1;\n            });\n          }\n\n          if (reserve) {\n            validRows_1.forEach(function (row) {\n              return handleRowExpandReserve(row, expanded);\n            });\n          }\n        }\n\n        reactData.rowExpandeds = rowExpandeds;\n        return Promise.all(lazyRests).then(function () {\n          return tableMethods.recalculate();\n        });\n      },\n\n      /**\n       * 判断行是否为展开状态\n       * @param {Row} row 行对象\n       */\n      isExpandByRow: function (row) {\n        var rowExpandeds = reactData.rowExpandeds;\n        return $xetable.findRowIndexOf(rowExpandeds, row) > -1;\n      },\n\n      /**\n       * 手动清空展开行状态，数据会恢复成未展开的状态\n       */\n      clearRowExpand: function () {\n        var rowExpandeds = reactData.rowExpandeds;\n        var tableFullData = internalData.tableFullData;\n        var expandOpts = computeExpandOpts.value;\n        var reserve = expandOpts.reserve;\n        var isExists = rowExpandeds.length;\n        reactData.rowExpandeds = [];\n\n        if (reserve) {\n          tableFullData.forEach(function (row) {\n            return handleRowExpandReserve(row, false);\n          });\n        }\n\n        return nextTick().then(function () {\n          if (isExists) {\n            tableMethods.recalculate();\n          }\n        });\n      },\n      clearRowExpandReserve: function () {\n        internalData.rowExpandedReserveRowMap = {};\n        return nextTick();\n      },\n      getRowExpandRecords: function () {\n        return reactData.rowExpandeds.slice(0);\n      },\n      getTreeExpandRecords: function () {\n        return reactData.treeExpandeds.slice(0);\n      },\n\n      /**\n       * 判断树节点是否懒加载完成\n       * @param {Row} row 行对象\n       */\n      isTreeExpandLoaded: function (row) {\n        var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n        var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n        return rest && !!rest.treeLoaded;\n      },\n      clearTreeExpandLoaded: function (row) {\n        var treeExpandeds = reactData.treeExpandeds;\n        var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n        var treeOpts = computeTreeOpts.value;\n        var transform = treeOpts.transform,\n            lazy = treeOpts.lazy;\n        var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n\n        if (lazy && rest) {\n          rest.treeLoaded = false;\n          XEUtils.remove(treeExpandeds, function (item) {\n            return $xetable.eqRow(item, row);\n          });\n        }\n\n        if (transform) {\n          handleVirtualTreeToList();\n          return tablePrivateMethods.handleTableData();\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 重新懒加载树节点，并展开该节点\n       * @param {Row} row 行对象\n       */\n      reloadTreeExpand: function (row) {\n        var treeLazyLoadeds = reactData.treeLazyLoadeds;\n        var treeOpts = computeTreeOpts.value;\n        var transform = treeOpts.transform,\n            lazy = treeOpts.lazy,\n            hasChild = treeOpts.hasChild;\n\n        if (lazy && row[hasChild] && $xetable.findRowIndexOf(treeLazyLoadeds, row) === -1) {\n          tableMethods.clearTreeExpandLoaded(row).then(function () {\n            return handleAsyncTreeExpandChilds(row);\n          }).then(function () {\n            if (transform) {\n              handleVirtualTreeToList();\n              return tablePrivateMethods.handleTableData();\n            }\n          }).then(function () {\n            return tableMethods.recalculate();\n          });\n        }\n\n        return nextTick();\n      },\n      reloadTreeChilds: function (row) {\n        if (process.env.NODE_ENV === 'development') {\n          warnLog('vxe.error.delFunc', ['reloadTreeChilds', 'reloadTreeExpand']);\n        } // 即将废弃\n\n\n        return tableMethods.reloadTreeExpand(row);\n      },\n\n      /**\n       * 切换/展开树节点\n       */\n      toggleTreeExpand: function (row) {\n        return tableMethods.setTreeExpand(row, !tableMethods.isTreeExpandByRow(row));\n      },\n\n      /**\n       * 设置所有树节点的展开与否\n       * @param {Boolean} expanded 是否展开\n       */\n      setAllTreeExpand: function (expanded) {\n        var tableFullData = internalData.tableFullData;\n        var treeOpts = computeTreeOpts.value;\n        var transform = treeOpts.transform,\n            lazy = treeOpts.lazy,\n            children = treeOpts.children;\n        var expandeds = [];\n        XEUtils.eachTree(tableFullData, function (row) {\n          var rowChildren = row[children];\n\n          if (lazy || rowChildren && rowChildren.length) {\n            expandeds.push(row);\n          }\n        }, treeOpts);\n        return tableMethods.setTreeExpand(expandeds, expanded).then(function () {\n          if (transform) {\n            handleVirtualTreeToList();\n            return tableMethods.recalculate();\n          }\n        });\n      },\n\n      /**\n       * 设置展开树形节点，二个参数设置这一行展开与否\n       * 支持单行\n       * 支持多行\n       * @param {Array/Row} rows 行数据\n       * @param {Boolean} expanded 是否展开\n       */\n      setTreeExpand: function (rows, expanded) {\n        var treeOpts = computeTreeOpts.value;\n        var transform = treeOpts.transform;\n\n        if (rows) {\n          if (!XEUtils.isArray(rows)) {\n            rows = [rows];\n          }\n\n          if (rows.length) {\n            // 如果为虚拟树\n            if (transform) {\n              return handleVirtualTreeExpand(rows, expanded);\n            } else {\n              return handleBaseTreeExpand(rows, expanded);\n            }\n          }\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 判断行是否为树形节点展开状态\n       * @param {Row} row 行对象\n       */\n      isTreeExpandByRow: function (row) {\n        var treeExpandeds = reactData.treeExpandeds;\n        return $xetable.findRowIndexOf(treeExpandeds, row) > -1;\n      },\n\n      /**\n       * 手动清空树形节点的展开状态，数据会恢复成未展开的状态\n       */\n      clearTreeExpand: function () {\n        var treeExpandeds = reactData.treeExpandeds;\n        var tableFullTreeData = internalData.tableFullTreeData;\n        var treeOpts = computeTreeOpts.value;\n        var transform = treeOpts.transform,\n            reserve = treeOpts.reserve;\n        var isExists = treeExpandeds.length;\n        reactData.treeExpandeds = [];\n\n        if (reserve) {\n          XEUtils.eachTree(tableFullTreeData, function (row) {\n            return handleTreeExpandReserve(row, false);\n          }, treeOpts);\n        }\n\n        return tablePrivateMethods.handleTableData().then(function () {\n          if (transform) {\n            handleVirtualTreeToList();\n            return tablePrivateMethods.handleTableData();\n          }\n        }).then(function () {\n          if (isExists) {\n            return tableMethods.recalculate();\n          }\n        });\n      },\n      clearTreeExpandReserve: function () {\n        internalData.treeExpandedReserveRowMap = {};\n        return nextTick();\n      },\n\n      /**\n       * 获取表格的滚动状态\n       */\n      getScroll: function () {\n        var scrollXLoad = reactData.scrollXLoad,\n            scrollYLoad = reactData.scrollYLoad;\n        var tableBody = refTableBody.value;\n        var bodyElem = tableBody.$el;\n        return {\n          virtualX: scrollXLoad,\n          virtualY: scrollYLoad,\n          scrollTop: bodyElem.scrollTop,\n          scrollLeft: bodyElem.scrollLeft\n        };\n      },\n\n      /**\n       * 如果有滚动条，则滚动到对应的位置\n       * @param {Number} scrollLeft 左距离\n       * @param {Number} scrollTop 上距离\n       */\n      scrollTo: function (scrollLeft, scrollTop) {\n        var tableBody = refTableBody.value;\n        var tableFooter = refTableFooter.value;\n        var rightBody = refTableRightBody.value;\n        var tableBodyElem = tableBody ? tableBody.$el : null;\n        var rightBodyElem = rightBody ? rightBody.$el : null;\n        var tableFooterElem = tableFooter ? tableFooter.$el : null;\n\n        if (XEUtils.isNumber(scrollLeft)) {\n          setScrollLeft(tableFooterElem || tableBodyElem, scrollLeft);\n        }\n\n        if (XEUtils.isNumber(scrollTop)) {\n          setScrollTop(rightBodyElem || tableBodyElem, scrollTop);\n        }\n\n        if (reactData.scrollXLoad || reactData.scrollYLoad) {\n          return new Promise(function (resolve) {\n            return setTimeout(function () {\n              return resolve(nextTick());\n            }, 50);\n          });\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 如果有滚动条，则滚动到对应的行\n       * @param {Row} row 行对象\n       * @param {ColumnInfo} fieldOrColumn 列配置\n       */\n      scrollToRow: function (row, fieldOrColumn) {\n        var rest = [];\n\n        if (row) {\n          if (props.treeConfig) {\n            rest.push(tablePrivateMethods.scrollToTreeRow(row));\n          } else {\n            rest.push(rowToVisible($xetable, row));\n          }\n        }\n\n        if (fieldOrColumn) {\n          rest.push(tableMethods.scrollToColumn(fieldOrColumn));\n        }\n\n        return Promise.all(rest);\n      },\n\n      /**\n       * 如果有滚动条，则滚动到对应的列\n       */\n      scrollToColumn: function (fieldOrColumn) {\n        var fullColumnIdData = internalData.fullColumnIdData;\n        var column = handleFieldOrColumn($xetable, fieldOrColumn);\n\n        if (column && fullColumnIdData[column.id]) {\n          return colToVisible($xetable, column);\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 手动清除滚动相关信息，还原到初始状态\n       */\n      clearScroll: function () {\n        var scrollXStore = internalData.scrollXStore,\n            scrollYStore = internalData.scrollYStore;\n        var tableBody = refTableBody.value;\n        var tableFooter = refTableFooter.value;\n        var rightBody = refTableRightBody.value;\n        var tableBodyElem = tableBody ? tableBody.$el : null;\n        var rightBodyElem = rightBody ? rightBody.$el : null;\n        var tableFooterElem = tableFooter ? tableFooter.$el : null;\n\n        if (rightBodyElem) {\n          restoreScrollListener(rightBodyElem);\n          rightBodyElem.scrollTop = 0;\n        }\n\n        if (tableFooterElem) {\n          tableFooterElem.scrollLeft = 0;\n        }\n\n        if (tableBodyElem) {\n          restoreScrollListener(tableBodyElem);\n          tableBodyElem.scrollTop = 0;\n          tableBodyElem.scrollLeft = 0;\n        }\n\n        scrollXStore.startIndex = 0;\n        scrollYStore.startIndex = 0;\n        return nextTick();\n      },\n\n      /**\n       * 更新表尾合计\n       */\n      updateFooter: function () {\n        var showFooter = props.showFooter,\n            footerMethod = props.footerMethod;\n        var visibleColumn = internalData.visibleColumn,\n            afterFullData = internalData.afterFullData;\n\n        if (showFooter && footerMethod) {\n          reactData.footerTableData = visibleColumn.length ? footerMethod({\n            columns: visibleColumn,\n            data: afterFullData,\n            $table: $xetable,\n            $grid: $xegrid\n          }) : [];\n        }\n\n        return nextTick();\n      },\n\n      /**\n       * 更新列状态\n       * 如果组件值 v-model 发生 change 时，调用改函数用于更新某一列编辑状态\n       * 如果单元格配置了校验规则，则会进行校验\n       */\n      updateStatus: function (scope, cellValue) {\n        var customVal = !XEUtils.isUndefined(cellValue);\n        return nextTick().then(function () {\n          var editRules = props.editRules;\n          var validStore = reactData.validStore;\n          var tableBody = refTableBody.value;\n\n          if (scope && tableBody && editRules) {\n            var row_1 = scope.row,\n                column_3 = scope.column;\n            var type = 'change';\n\n            if ($xetable.hasCellRules) {\n              if ($xetable.hasCellRules(type, row_1, column_3)) {\n                var cell_1 = tablePrivateMethods.getCell(row_1, column_3);\n\n                if (cell_1) {\n                  return $xetable.validCellRules(type, row_1, column_3, cellValue).then(function () {\n                    if (customVal && validStore.visible) {\n                      setCellValue(row_1, column_3, cellValue);\n                    }\n\n                    $xetable.clearValidate();\n                  }).catch(function (_a) {\n                    var rule = _a.rule;\n\n                    if (customVal) {\n                      setCellValue(row_1, column_3, cellValue);\n                    }\n\n                    $xetable.showValidTooltip({\n                      rule: rule,\n                      row: row_1,\n                      column: column_3,\n                      cell: cell_1\n                    });\n                  });\n                }\n              }\n            }\n          }\n        });\n      },\n\n      /**\n       * 设置合并单元格\n       * @param {TableMergeConfig[]} merges { row: Row|number, column: ColumnInfo|number, rowspan: number, colspan: number }\n       */\n      setMergeCells: function (merges) {\n        if (props.spanMethod) {\n          errLog('vxe.error.errConflicts', ['merge-cells', 'span-method']);\n        }\n\n        setMerges(merges, reactData.mergeList, internalData.afterFullData);\n        return nextTick().then(function () {\n          return tablePrivateMethods.updateCellAreas();\n        });\n      },\n\n      /**\n       * 移除单元格合并\n       * @param {TableMergeConfig[]} merges 多个或数组 [{row:Row|number, col:ColumnInfo|number}]\n       */\n      removeMergeCells: function (merges) {\n        if (props.spanMethod) {\n          errLog('vxe.error.errConflicts', ['merge-cells', 'span-method']);\n        }\n\n        var rest = removeMerges(merges, reactData.mergeList, internalData.afterFullData);\n        return nextTick().then(function () {\n          tablePrivateMethods.updateCellAreas();\n          return rest;\n        });\n      },\n\n      /**\n       * 获取所有被合并的单元格\n       */\n      getMergeCells: function () {\n        return reactData.mergeList.slice(0);\n      },\n\n      /**\n       * 清除所有单元格合并\n       */\n      clearMergeCells: function () {\n        reactData.mergeList = [];\n        return nextTick();\n      },\n      setMergeFooterItems: function (merges) {\n        if (props.footerSpanMethod) {\n          errLog('vxe.error.errConflicts', ['merge-footer-items', 'footer-span-method']);\n        }\n\n        setMerges(merges, reactData.mergeFooterList);\n        return nextTick().then(function () {\n          return tablePrivateMethods.updateCellAreas();\n        });\n      },\n      removeMergeFooterItems: function (merges) {\n        if (props.footerSpanMethod) {\n          errLog('vxe.error.errConflicts', ['merge-footer-items', 'footer-span-method']);\n        }\n\n        var rest = removeMerges(merges, reactData.mergeFooterList);\n        return nextTick().then(function () {\n          tablePrivateMethods.updateCellAreas();\n          return rest;\n        });\n      },\n\n      /**\n       * 获取所有被合并的表尾\n       */\n      getMergeFooterItems: function () {\n        return reactData.mergeFooterList.slice(0);\n      },\n\n      /**\n       * 清除所有表尾合并\n       */\n      clearMergeFooterItems: function () {\n        reactData.mergeFooterList = [];\n        return nextTick();\n      },\n      focus: function () {\n        internalData.isActivated = true;\n        return nextTick();\n      },\n      blur: function () {\n        internalData.isActivated = false;\n        return nextTick();\n      },\n\n      /**\n       * 连接工具栏\n       * @param $toolbar\n       */\n      connect: function ($toolbar) {\n        if ($toolbar) {\n          $xetoolbar = $toolbar;\n          $xetoolbar.syncUpdate({\n            collectColumn: internalData.collectColumn,\n            $table: $xetable\n          });\n        } else {\n          errLog('vxe.error.barUnableLink');\n        }\n\n        return nextTick();\n      }\n    };\n    /**\n     * 全局按下事件处理\n     */\n\n    var handleGlobalMousedownEvent = function (evnt) {\n      var editStore = reactData.editStore,\n          ctxMenuStore = reactData.ctxMenuStore,\n          filterStore = reactData.filterStore;\n      var mouseConfig = props.mouseConfig;\n      var el = refElem.value;\n      var editOpts = computeEditOpts.value;\n      var actived = editStore.actived;\n      var $validTooltip = refValidTooltip.value;\n      var tableFilter = refTableFilter.value;\n      var tableMenu = refTableMenu.value;\n\n      if (tableFilter) {\n        if (getEventTargetNode(evnt, el, 'vxe-cell--filter').flag) {// 如果点击了筛选按钮\n        } else if (getEventTargetNode(evnt, tableFilter.$el).flag) {// 如果点击筛选容器\n        } else {\n          if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-clear').flag) {\n            tablePrivateMethods.preventEvent(evnt, 'event.clearFilter', filterStore.args, tableMethods.closeFilter);\n          }\n        }\n      } // 如果已激活了编辑状态\n\n\n      if (actived.row) {\n        if (!(editOpts.autoClear === false)) {\n          // 如果是激活状态，点击了单元格之外\n          var cell = actived.args.cell;\n\n          if (!cell || !getEventTargetNode(evnt, cell).flag) {\n            if ($validTooltip && getEventTargetNode(evnt, $validTooltip.$el).flag) {// 如果是激活状态，且点击了校验提示框\n            } else if (!internalData._lastCallTime || internalData._lastCallTime + 50 < Date.now()) {\n              // 如果是激活状态，点击了单元格之外\n              if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-clear').flag) {\n                // 如果手动调用了激活单元格，避免触发源被移除后导致重复关闭\n                tablePrivateMethods.preventEvent(evnt, 'event.clearActived', actived.args, function () {\n                  var isClear;\n\n                  if (editOpts.mode === 'row') {\n                    var rowTargetNode = getEventTargetNode(evnt, el, 'vxe-body--row');\n                    var rowNodeRest = rowTargetNode.flag ? tableMethods.getRowNode(rowTargetNode.targetElem) : null; // row 方式，如果点击了不同行\n\n                    isClear = rowNodeRest ? !$xetable.eqRow(rowNodeRest.item, actived.args.row) : false;\n                  } else {\n                    // cell 方式，如果是非编辑列\n                    isClear = !getEventTargetNode(evnt, el, 'col--edit').flag;\n                  } // 如果点击表头行，则清除激活状态\n\n\n                  if (!isClear) {\n                    isClear = getEventTargetNode(evnt, el, 'vxe-header--row').flag;\n                  } // 如果点击表尾行，则清除激活状态\n\n\n                  if (!isClear) {\n                    isClear = getEventTargetNode(evnt, el, 'vxe-footer--row').flag;\n                  } // 如果固定了高度且点击了行之外的空白处，则清除激活状态\n\n\n                  if (!isClear && props.height && !reactData.overflowY) {\n                    var bodyWrapperElem = evnt.target;\n\n                    if (hasClass(bodyWrapperElem, 'vxe-table--body-wrapper')) {\n                      isClear = evnt.offsetY < bodyWrapperElem.clientHeight;\n                    }\n                  }\n\n                  if (isClear || // 如果点击了当前表格之外\n                  !getEventTargetNode(evnt, el).flag) {\n                    setTimeout(function () {\n                      return $xetable.clearActived(evnt);\n                    });\n                  }\n                });\n              }\n            }\n          }\n        }\n      } else if (mouseConfig) {\n        if (!getEventTargetNode(evnt, el).flag && !($xegrid && getEventTargetNode(evnt, $xegrid.getRefMaps().refElem.value).flag) && !(tableMenu && getEventTargetNode(evnt, tableMenu.getRefMaps().refElem.value).flag) && !($xetoolbar && getEventTargetNode(evnt, $xetoolbar.getRefMaps().refElem.value).flag)) {\n          $xetable.clearSelected();\n\n          if ($xetable.clearCellAreas) {\n            if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-areas-clear').flag) {\n              tablePrivateMethods.preventEvent(evnt, 'event.clearAreas', {}, function () {\n                $xetable.clearCellAreas();\n                $xetable.clearCopyCellArea();\n              });\n            }\n          }\n        }\n      } // 如果配置了快捷菜单且，点击了其他地方则关闭\n\n\n      if ($xetable.closeMenu) {\n        if (ctxMenuStore.visible && tableMenu && !getEventTargetNode(evnt, tableMenu.getRefMaps().refElem.value).flag) {\n          $xetable.closeMenu();\n        }\n      } // 最后激活的表格\n\n\n      internalData.isActivated = getEventTargetNode(evnt, $xegrid ? $xegrid.getRefMaps().refElem.value : el).flag;\n    };\n    /**\n     * 窗口失焦事件处理\n     */\n\n\n    var handleGlobalBlurEvent = function () {\n      tableMethods.closeFilter();\n\n      if ($xetable.closeMenu) {\n        $xetable.closeMenu();\n      }\n    };\n    /**\n     * 全局滚动事件\n     */\n\n\n    var handleGlobalMousewheelEvent = function () {\n      tableMethods.closeTooltip();\n\n      if ($xetable.closeMenu) {\n        $xetable.closeMenu();\n      }\n    };\n    /**\n     * 表格键盘事件\n     */\n\n\n    var keydownEvent = function (evnt) {\n      var mouseConfig = props.mouseConfig,\n          keyboardConfig = props.keyboardConfig;\n      var filterStore = reactData.filterStore,\n          ctxMenuStore = reactData.ctxMenuStore,\n          editStore = reactData.editStore;\n      var mouseOpts = computeMouseOpts.value;\n      var keyboardOpts = computeKeyboardOpts.value;\n      var actived = editStore.actived;\n      var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n\n      if (isEsc) {\n        tablePrivateMethods.preventEvent(evnt, 'event.keydown', null, function () {\n          tableMethods.dispatchEvent('keydown-start', {}, evnt);\n\n          if (keyboardConfig && mouseConfig && mouseOpts.area && $xetable.handleKeyboardEvent) {\n            $xetable.handleKeyboardEvent(evnt);\n          } else if (actived.row || filterStore.visible || ctxMenuStore.visible) {\n            evnt.stopPropagation(); // 如果按下了 Esc 键，关闭快捷菜单、筛选\n\n            if ($xetable.closeMenu) {\n              $xetable.closeMenu();\n            }\n\n            tableMethods.closeFilter();\n\n            if (keyboardConfig && keyboardOpts.isEsc) {\n              // 如果是激活编辑状态，则取消编辑\n              if (actived.row) {\n                var params_1 = actived.args;\n                $xetable.clearActived(evnt); // 如果配置了选中功能，则为选中状态\n\n                if (mouseOpts.selected) {\n                  nextTick(function () {\n                    return $xetable.handleSelected(params_1, evnt);\n                  });\n                }\n              }\n            }\n          }\n\n          tableMethods.dispatchEvent('keydown', {}, evnt);\n          tableMethods.dispatchEvent('keydown-end', {}, evnt);\n        });\n      }\n    };\n    /**\n     * 全局键盘事件\n     */\n\n\n    var handleGlobalKeydownEvent = function (evnt) {\n      // 该行为只对当前激活的表格有效\n      if (internalData.isActivated) {\n        tablePrivateMethods.preventEvent(evnt, 'event.keydown', null, function () {\n          var mouseConfig = props.mouseConfig,\n              keyboardConfig = props.keyboardConfig,\n              treeConfig = props.treeConfig,\n              editConfig = props.editConfig,\n              highlightCurrentRow = props.highlightCurrentRow;\n          var ctxMenuStore = reactData.ctxMenuStore,\n              editStore = reactData.editStore,\n              currentRow = reactData.currentRow;\n          var isMenu = computeIsMenu.value;\n          var bodyMenu = computeBodyMenu.value;\n          var keyboardOpts = computeKeyboardOpts.value;\n          var mouseOpts = computeMouseOpts.value;\n          var editOpts = computeEditOpts.value;\n          var treeOpts = computeTreeOpts.value;\n          var menuList = computeMenuList.value;\n          var rowOpts = computeRowOpts.value;\n          var selected = editStore.selected,\n              actived = editStore.actived;\n          var keyCode = evnt.keyCode;\n          var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n          var isBack = hasEventKey(evnt, EVENT_KEYS.BACKSPACE);\n          var isTab = hasEventKey(evnt, EVENT_KEYS.TAB);\n          var isEnter = hasEventKey(evnt, EVENT_KEYS.ENTER);\n          var isSpacebar = hasEventKey(evnt, EVENT_KEYS.SPACEBAR);\n          var isLeftArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_LEFT);\n          var isUpArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_UP);\n          var isRightArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_RIGHT);\n          var isDwArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_DOWN);\n          var isDel = hasEventKey(evnt, EVENT_KEYS.DELETE);\n          var isF2 = hasEventKey(evnt, EVENT_KEYS.F2);\n          var isContextMenu = hasEventKey(evnt, EVENT_KEYS.CONTEXT_MENU);\n          var hasMetaKey = evnt.metaKey;\n          var hasCtrlKey = evnt.ctrlKey;\n          var hasShiftKey = evnt.shiftKey;\n          var isAltKey = evnt.altKey;\n          var operArrow = isLeftArrow || isUpArrow || isRightArrow || isDwArrow;\n          var operCtxMenu = isMenu && ctxMenuStore.visible && (isEnter || isSpacebar || operArrow);\n          var isEditStatus = isEnableConf(editConfig) && actived.column && actived.row;\n          var params;\n\n          if (operCtxMenu) {\n            // 如果配置了右键菜单; 支持方向键操作、回车\n            evnt.preventDefault();\n\n            if (ctxMenuStore.showChild && hasChildrenList(ctxMenuStore.selected)) {\n              $xetable.moveCtxMenu(evnt, ctxMenuStore, 'selectChild', isLeftArrow, false, ctxMenuStore.selected.children);\n            } else {\n              $xetable.moveCtxMenu(evnt, ctxMenuStore, 'selected', isRightArrow, true, menuList);\n            }\n          } else if (keyboardConfig && mouseConfig && mouseOpts.area && $xetable.handleKeyboardEvent) {\n            $xetable.handleKeyboardEvent(evnt);\n          } else if (isEsc) {\n            // 如果按下了 Esc 键，关闭快捷菜单、筛选\n            if ($xetable.closeMenu) {\n              $xetable.closeMenu();\n            }\n\n            tableMethods.closeFilter();\n\n            if (keyboardConfig && keyboardOpts.isEsc) {\n              // 如果是激活编辑状态，则取消编辑\n              if (actived.row) {\n                var params_2 = actived.args;\n                $xetable.clearActived(evnt); // 如果配置了选中功能，则为选中状态\n\n                if (mouseOpts.selected) {\n                  nextTick(function () {\n                    return $xetable.handleSelected(params_2, evnt);\n                  });\n                }\n              }\n            }\n          } else if (isSpacebar && keyboardConfig && keyboardOpts.isChecked && selected.row && selected.column && (selected.column.type === 'checkbox' || selected.column.type === 'radio')) {\n            // 空格键支持选中复选框\n            evnt.preventDefault();\n\n            if (selected.column.type === 'checkbox') {\n              tablePrivateMethods.handleToggleCheckRowEvent(evnt, selected.args);\n            } else {\n              tablePrivateMethods.triggerRadioRowEvent(evnt, selected.args);\n            }\n          } else if (isF2 && isEnableConf(editConfig)) {\n            if (!isEditStatus) {\n              // 如果按下了 F2 键\n              if (selected.row && selected.column) {\n                evnt.preventDefault();\n                $xetable.handleActived(selected.args, evnt);\n              }\n            }\n          } else if (isContextMenu) {\n            // 如果按下上下文键\n            internalData._keyCtx = selected.row && selected.column && bodyMenu.length;\n            clearTimeout(keyCtxTimeout);\n            keyCtxTimeout = setTimeout(function () {\n              internalData._keyCtx = false;\n            }, 1000);\n          } else if (isEnter && !isAltKey && keyboardConfig && keyboardOpts.isEnter && (selected.row || actived.row || treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow)) {\n            // 退出选中\n            if (hasCtrlKey) {\n              // 如果是激活编辑状态，则取消编辑\n              if (actived.row) {\n                params = actived.args;\n                $xetable.clearActived(evnt); // 如果配置了选中功能，则为选中状态\n\n                if (mouseOpts.selected) {\n                  nextTick(function () {\n                    return $xetable.handleSelected(params, evnt);\n                  });\n                }\n              }\n            } else {\n              // 如果是激活状态，退则出到上一行/下一行\n              if (selected.row || actived.row) {\n                var targetArgs = selected.row ? selected.args : actived.args;\n\n                if (hasShiftKey) {\n                  if (keyboardOpts.enterToTab) {\n                    $xetable.moveTabSelected(targetArgs, hasShiftKey, evnt);\n                  } else {\n                    $xetable.moveSelected(targetArgs, isLeftArrow, true, isRightArrow, false, evnt);\n                  }\n                } else {\n                  if (keyboardOpts.enterToTab) {\n                    $xetable.moveTabSelected(targetArgs, hasShiftKey, evnt);\n                  } else {\n                    $xetable.moveSelected(targetArgs, isLeftArrow, false, isRightArrow, true, evnt);\n                  }\n                }\n              } else if (treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow) {\n                // 如果是树形表格当前行回车移动到子节点\n                var childrens = currentRow[treeOpts.children];\n\n                if (childrens && childrens.length) {\n                  evnt.preventDefault();\n                  var targetRow_1 = childrens[0];\n                  params = {\n                    $table: $xetable,\n                    row: targetRow_1,\n                    rowIndex: tableMethods.getRowIndex(targetRow_1),\n                    $rowIndex: tableMethods.getVMRowIndex(targetRow_1)\n                  };\n                  tableMethods.setTreeExpand(currentRow, true).then(function () {\n                    return tableMethods.scrollToRow(targetRow_1);\n                  }).then(function () {\n                    return tablePrivateMethods.triggerCurrentRowEvent(evnt, params);\n                  });\n                }\n              }\n            }\n          } else if (operArrow && keyboardConfig && keyboardOpts.isArrow) {\n            if (!isEditStatus) {\n              // 如果按下了方向键\n              if (selected.row && selected.column) {\n                $xetable.moveSelected(selected.args, isLeftArrow, isUpArrow, isRightArrow, isDwArrow, evnt);\n              } else if ((isUpArrow || isDwArrow) && (rowOpts.isCurrent || highlightCurrentRow)) {\n                // 当前行按键上下移动\n                $xetable.moveCurrentRow(isUpArrow, isDwArrow, evnt);\n              }\n            }\n          } else if (isTab && keyboardConfig && keyboardOpts.isTab) {\n            // 如果按下了 Tab 键切换\n            if (selected.row || selected.column) {\n              $xetable.moveTabSelected(selected.args, hasShiftKey, evnt);\n            } else if (actived.row || actived.column) {\n              $xetable.moveTabSelected(actived.args, hasShiftKey, evnt);\n            }\n          } else if (keyboardConfig && isEnableConf(editConfig) && (isDel || (treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow ? isBack && keyboardOpts.isArrow : isBack))) {\n            if (!isEditStatus) {\n              var delMethod = keyboardOpts.delMethod,\n                  backMethod = keyboardOpts.backMethod; // 如果是删除键\n\n              if (keyboardOpts.isDel && (selected.row || selected.column)) {\n                if (delMethod) {\n                  delMethod({\n                    row: selected.row,\n                    rowIndex: tableMethods.getRowIndex(selected.row),\n                    column: selected.column,\n                    columnIndex: tableMethods.getColumnIndex(selected.column),\n                    $table: $xetable\n                  });\n                } else {\n                  setCellValue(selected.row, selected.column, null);\n                }\n\n                if (isBack) {\n                  if (backMethod) {\n                    backMethod({\n                      row: selected.row,\n                      rowIndex: tableMethods.getRowIndex(selected.row),\n                      column: selected.column,\n                      columnIndex: tableMethods.getColumnIndex(selected.column),\n                      $table: $xetable\n                    });\n                  } else {\n                    $xetable.handleActived(selected.args, evnt);\n                  }\n                } else if (isDel) {\n                  // 如果按下 del 键，更新表尾数据\n                  tableMethods.updateFooter();\n                }\n              } else if (isBack && keyboardOpts.isArrow && treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow) {\n                // 如果树形表格回退键关闭当前行返回父节点\n                var parentRow_1 = XEUtils.findTree(internalData.afterFullData, function (item) {\n                  return item === currentRow;\n                }, treeOpts).parent;\n\n                if (parentRow_1) {\n                  evnt.preventDefault();\n                  params = {\n                    $table: $xetable,\n                    row: parentRow_1,\n                    rowIndex: tableMethods.getRowIndex(parentRow_1),\n                    $rowIndex: tableMethods.getVMRowIndex(parentRow_1)\n                  };\n                  tableMethods.setTreeExpand(parentRow_1, false).then(function () {\n                    return tableMethods.scrollToRow(parentRow_1);\n                  }).then(function () {\n                    return tablePrivateMethods.triggerCurrentRowEvent(evnt, params);\n                  });\n                }\n              }\n            }\n          } else if (keyboardConfig && isEnableConf(editConfig) && keyboardOpts.isEdit && !hasCtrlKey && !hasMetaKey && (isSpacebar || keyCode >= 48 && keyCode <= 57 || keyCode >= 65 && keyCode <= 90 || keyCode >= 96 && keyCode <= 111 || keyCode >= 186 && keyCode <= 192 || keyCode >= 219 && keyCode <= 222)) {\n            var editMethod = keyboardOpts.editMethod; // 启用编辑后，空格键功能将失效\n            // if (isSpacebar) {\n            //   evnt.preventDefault()\n            // }\n            // 如果是按下非功能键之外允许直接编辑\n\n            if (selected.column && selected.row && isEnableConf(selected.column.editRender)) {\n              if (!editOpts.activeMethod || editOpts.activeMethod(__assign(__assign({}, selected.args), {\n                $table: $xetable\n              }))) {\n                if (editMethod) {\n                  editMethod({\n                    row: selected.row,\n                    rowIndex: tableMethods.getRowIndex(selected.row),\n                    column: selected.column,\n                    columnIndex: tableMethods.getColumnIndex(selected.column),\n                    $table: $xetable,\n                    $grid: $xegrid\n                  });\n                } else {\n                  setCellValue(selected.row, selected.column, null);\n                  $xetable.handleActived(selected.args, evnt);\n                }\n              }\n            }\n          }\n\n          tableMethods.dispatchEvent('keydown', {}, evnt);\n        });\n      }\n    };\n\n    var handleGlobalPasteEvent = function (evnt) {\n      var keyboardConfig = props.keyboardConfig,\n          mouseConfig = props.mouseConfig;\n      var editStore = reactData.editStore,\n          filterStore = reactData.filterStore;\n      var isActivated = internalData.isActivated;\n      var mouseOpts = computeMouseOpts.value;\n      var keyboardOpts = computeKeyboardOpts.value;\n      var actived = editStore.actived;\n\n      if (isActivated && !filterStore.visible) {\n        if (!(actived.row || actived.column)) {\n          if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handlePasteCellAreaEvent) {\n            $xetable.handlePasteCellAreaEvent(evnt);\n          }\n        }\n\n        tableMethods.dispatchEvent('paste', {}, evnt);\n      }\n    };\n\n    var handleGlobalCopyEvent = function (evnt) {\n      var keyboardConfig = props.keyboardConfig,\n          mouseConfig = props.mouseConfig;\n      var editStore = reactData.editStore,\n          filterStore = reactData.filterStore;\n      var isActivated = internalData.isActivated;\n      var mouseOpts = computeMouseOpts.value;\n      var keyboardOpts = computeKeyboardOpts.value;\n      var actived = editStore.actived;\n\n      if (isActivated && !filterStore.visible) {\n        if (!(actived.row || actived.column)) {\n          if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handleCopyCellAreaEvent) {\n            $xetable.handleCopyCellAreaEvent(evnt);\n          }\n        }\n\n        tableMethods.dispatchEvent('copy', {}, evnt);\n      }\n    };\n\n    var handleGlobalCutEvent = function (evnt) {\n      var keyboardConfig = props.keyboardConfig,\n          mouseConfig = props.mouseConfig;\n      var editStore = reactData.editStore,\n          filterStore = reactData.filterStore;\n      var isActivated = internalData.isActivated;\n      var mouseOpts = computeMouseOpts.value;\n      var keyboardOpts = computeKeyboardOpts.value;\n      var actived = editStore.actived;\n\n      if (isActivated && !filterStore.visible) {\n        if (!(actived.row || actived.column)) {\n          if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handleCutCellAreaEvent) {\n            $xetable.handleCutCellAreaEvent(evnt);\n          }\n        }\n\n        tableMethods.dispatchEvent('cut', {}, evnt);\n      }\n    };\n\n    var handleGlobalResizeEvent = function () {\n      if ($xetable.closeMenu) {\n        $xetable.closeMenu();\n      }\n\n      tablePrivateMethods.updateCellAreas();\n      tableMethods.recalculate(true);\n    };\n\n    var handleTargetEnterEvent = function (isClear) {\n      var $tooltip = refTooltip.value;\n      clearTimeout(internalData.tooltipTimeout);\n\n      if (isClear) {\n        tableMethods.closeTooltip();\n      } else {\n        if ($tooltip) {\n          $tooltip.setActived(true);\n        }\n      }\n    };\n    /**\n     * 处理显示 tooltip\n     * @param {Event} evnt 事件\n     * @param {ColumnInfo} column 列配置\n     * @param {Row} row 行对象\n     */\n\n\n    var handleTooltip = function (evnt, cell, overflowElem, tipElem, params) {\n      params.cell = cell;\n      var tooltipStore = reactData.tooltipStore;\n      var tooltipOpts = computeTooltipOpts.value;\n      var column = params.column,\n          row = params.row;\n      var showAll = tooltipOpts.showAll,\n          contentMethod = tooltipOpts.contentMethod;\n      var customContent = contentMethod ? contentMethod(params) : null;\n      var useCustom = contentMethod && !XEUtils.eqNull(customContent);\n      var content = useCustom ? customContent : (column.type === 'html' ? overflowElem.innerText : overflowElem.textContent).trim();\n      var isCellOverflow = overflowElem.scrollWidth > overflowElem.clientWidth;\n\n      if (content && (showAll || useCustom || isCellOverflow)) {\n        Object.assign(tooltipStore, {\n          row: row,\n          column: column,\n          visible: true,\n          currOpts: null\n        });\n        nextTick(function () {\n          var $tooltip = refTooltip.value;\n\n          if ($tooltip) {\n            $tooltip.open(isCellOverflow ? overflowElem : tipElem || overflowElem, formatText(content));\n          }\n        });\n      }\n\n      return nextTick();\n    };\n    /**\n     * 内部方法\n     */\n\n\n    tablePrivateMethods = {\n      getSetupOptions: function () {\n        return GlobalConfig;\n      },\n      updateAfterDataIndex: updateAfterDataIndex,\n      callSlot: function (slotFunc, params) {\n        if (slotFunc) {\n          if ($xegrid) {\n            return $xegrid.callSlot(slotFunc, params);\n          }\n\n          if (XEUtils.isFunction(slotFunc)) {\n            return slotFunc(params);\n          }\n        }\n\n        return [];\n      },\n\n      /**\n       * 获取父容器元素\n       */\n      getParentElem: function () {\n        var el = refElem.value;\n\n        if ($xegrid) {\n          var gridEl = $xegrid.getRefMaps().refElem.value;\n          return gridEl ? gridEl.parentNode : null;\n        }\n\n        return el ? el.parentNode : null;\n      },\n\n      /**\n       * 获取父容器的高度\n       */\n      getParentHeight: function () {\n        var height = props.height;\n        var el = refElem.value;\n\n        if (el) {\n          var parentElem = el.parentNode;\n          var parentPaddingSize = height === 'auto' ? getPaddingTopBottomSize(parentElem) : 0;\n          return Math.floor($xegrid ? $xegrid.getParentHeight() : XEUtils.toNumber(getComputedStyle(parentElem).height) - parentPaddingSize);\n        }\n\n        return 0;\n      },\n\n      /**\n       * 获取需要排除的高度\n       * 但渲染表格高度时，需要排除工具栏或分页等相关组件的高度\n       * 如果存在表尾合计滚动条，则需要排除滚动条高度\n       */\n      getExcludeHeight: function () {\n        return $xegrid ? $xegrid.getExcludeHeight() : 0;\n      },\n\n      /**\n       * 定义行数据中的列属性，如果不存在则定义\n       * @param {Row} record 行数据\n       */\n      defineField: function (record) {\n        var treeConfig = props.treeConfig;\n        var expandOpts = computeExpandOpts.value;\n        var treeOpts = computeTreeOpts.value;\n        var radioOpts = computeRadioOpts.value;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var rowkey = getRowkey($xetable);\n        internalData.tableFullColumn.forEach(function (column) {\n          var property = column.property,\n              editRender = column.editRender;\n\n          if (property && !XEUtils.has(record, property)) {\n            var cellValue = null;\n\n            if (editRender) {\n              var defaultValue = editRender.defaultValue;\n\n              if (XEUtils.isFunction(defaultValue)) {\n                cellValue = defaultValue({\n                  column: column\n                });\n              } else if (!XEUtils.isUndefined(defaultValue)) {\n                cellValue = defaultValue;\n              }\n            }\n\n            XEUtils.set(record, property, cellValue);\n          }\n        });\n        var otherFields = [radioOpts.labelField, checkboxOpts.checkField, checkboxOpts.labelField, expandOpts.labelField];\n        otherFields.forEach(function (key) {\n          if (key && eqEmptyValue(XEUtils.get(record, key))) {\n            XEUtils.set(record, key, null);\n          }\n        });\n\n        if (treeConfig && treeOpts.lazy && XEUtils.isUndefined(record[treeOpts.children])) {\n          record[treeOpts.children] = null;\n        } // 必须有行数据的唯一主键，可以自行设置；也可以默认生成一个随机数\n\n\n        if (eqEmptyValue(XEUtils.get(record, rowkey))) {\n          XEUtils.set(record, rowkey, getRowUniqueId());\n        }\n\n        return record;\n      },\n      handleTableData: function (force) {\n        var scrollYLoad = reactData.scrollYLoad;\n        var scrollYStore = internalData.scrollYStore,\n            fullDataRowIdData = internalData.fullDataRowIdData;\n        var fullList = internalData.afterFullData; // 是否进行数据处理\n\n        if (force) {\n          // 更新数据，处理筛选和排序\n          updateAfterFullData(); // 如果为虚拟树，将树结构拍平\n\n          fullList = handleVirtualTreeToList();\n        }\n\n        var tableData = scrollYLoad ? fullList.slice(scrollYStore.startIndex, scrollYStore.endIndex) : fullList.slice(0);\n        tableData.forEach(function (row, $index) {\n          var rowid = getRowid($xetable, row);\n          var rest = fullDataRowIdData[rowid];\n\n          if (rest) {\n            rest.$index = $index;\n          }\n        });\n        reactData.tableData = tableData;\n        return nextTick();\n      },\n\n      /**\n       * 更新数据行的 Map\n       * 牺牲数据组装的耗时，用来换取使用过程中的流畅\n       */\n      cacheRowMap: function (isSource) {\n        var treeConfig = props.treeConfig;\n        var treeOpts = computeTreeOpts.value;\n        var fullDataRowIdData = internalData.fullDataRowIdData,\n            fullAllDataRowIdData = internalData.fullAllDataRowIdData,\n            tableFullData = internalData.tableFullData,\n            tableFullTreeData = internalData.tableFullTreeData;\n        var rowkey = getRowkey($xetable);\n        var isLazy = treeConfig && treeOpts.lazy;\n\n        var handleCache = function (row, index, items, path, parent, nodes) {\n          var rowid = getRowid($xetable, row);\n          var seq = treeConfig && path ? toTreePathSeq(path) : index + 1;\n          var level = nodes ? nodes.length - 1 : 0;\n\n          if (eqEmptyValue(rowid)) {\n            rowid = getRowUniqueId();\n            XEUtils.set(row, rowkey, rowid);\n          }\n\n          if (isLazy && row[treeOpts.hasChild] && XEUtils.isUndefined(row[treeOpts.children])) {\n            row[treeOpts.children] = null;\n          }\n\n          var rest = {\n            row: row,\n            rowid: rowid,\n            seq: seq,\n            index: treeConfig && parent ? -1 : index,\n            _index: -1,\n            $index: -1,\n            items: items,\n            parent: parent,\n            level: level\n          };\n\n          if (isSource) {\n            fullDataRowIdData[rowid] = rest;\n          }\n\n          fullAllDataRowIdData[rowid] = rest;\n        };\n\n        if (isSource) {\n          fullDataRowIdData = internalData.fullDataRowIdData = {};\n        }\n\n        fullAllDataRowIdData = internalData.fullAllDataRowIdData = {};\n\n        if (treeConfig) {\n          XEUtils.eachTree(tableFullTreeData, handleCache, treeOpts);\n        } else {\n          tableFullData.forEach(handleCache);\n        }\n      },\n\n      /**\n       * 指定列宽的列进行拆分\n       */\n      analyColumnWidth: function () {\n        var tableFullColumn = internalData.tableFullColumn;\n        var columnOpts = computeColumnOpts.value;\n        var defaultWidth = columnOpts.width,\n            defaultMinWidth = columnOpts.minWidth;\n        var resizeList = [];\n        var pxList = [];\n        var pxMinList = [];\n        var scaleList = [];\n        var scaleMinList = [];\n        var autoList = [];\n        tableFullColumn.forEach(function (column) {\n          if (defaultWidth && !column.width) {\n            column.width = defaultWidth;\n          }\n\n          if (defaultMinWidth && !column.minWidth) {\n            column.minWidth = defaultMinWidth;\n          }\n\n          if (column.visible) {\n            if (column.resizeWidth) {\n              resizeList.push(column);\n            } else if (isPx(column.width)) {\n              pxList.push(column);\n            } else if (isScale(column.width)) {\n              scaleList.push(column);\n            } else if (isPx(column.minWidth)) {\n              pxMinList.push(column);\n            } else if (isScale(column.minWidth)) {\n              scaleMinList.push(column);\n            } else {\n              autoList.push(column);\n            }\n          }\n        });\n        Object.assign(reactData.columnStore, {\n          resizeList: resizeList,\n          pxList: pxList,\n          pxMinList: pxMinList,\n          scaleList: scaleList,\n          scaleMinList: scaleMinList,\n          autoList: autoList\n        });\n      },\n      saveCustomResizable: function (isReset) {\n        var id = props.id,\n            customConfig = props.customConfig;\n        var customOpts = computeCustomOpts.value;\n        var collectColumn = internalData.collectColumn;\n        var storage = customOpts.storage;\n        var isResizable = storage === true || storage && storage.resizable;\n\n        if (customConfig && isResizable) {\n          var columnWidthStorageMap = getCustomStorageMap(resizableStorageKey);\n          var columnWidthStorage_1;\n\n          if (!id) {\n            errLog('vxe.error.reqProp', ['id']);\n            return;\n          }\n\n          if (!isReset) {\n            columnWidthStorage_1 = XEUtils.isPlainObject(columnWidthStorageMap[id]) ? columnWidthStorageMap[id] : {};\n            XEUtils.eachTree(collectColumn, function (column) {\n              if (column.resizeWidth) {\n                var colKey = column.getKey();\n\n                if (colKey) {\n                  columnWidthStorage_1[colKey] = column.renderWidth;\n                }\n              }\n            });\n          }\n\n          columnWidthStorageMap[id] = XEUtils.isEmpty(columnWidthStorage_1) ? undefined : columnWidthStorage_1;\n          localStorage.setItem(resizableStorageKey, XEUtils.toJSONString(columnWidthStorageMap));\n        }\n      },\n      saveCustomVisible: function () {\n        var id = props.id,\n            customConfig = props.customConfig;\n        var collectColumn = internalData.collectColumn;\n        var customOpts = computeCustomOpts.value;\n        var checkMethod = customOpts.checkMethod,\n            storage = customOpts.storage;\n        var isVisible = storage === true || storage && storage.visible;\n\n        if (customConfig && isVisible) {\n          var columnVisibleStorageMap = getCustomStorageMap(visibleStorageKey);\n          var colHides_1 = [];\n          var colShows_1 = [];\n\n          if (!id) {\n            errLog('vxe.error.reqProp', ['id']);\n            return;\n          }\n\n          XEUtils.eachTree(collectColumn, function (column) {\n            if (!checkMethod || checkMethod({\n              column: column\n            })) {\n              if (!column.visible && column.defaultVisible) {\n                var colKey = column.getKey();\n\n                if (colKey) {\n                  colHides_1.push(colKey);\n                }\n              } else if (column.visible && !column.defaultVisible) {\n                var colKey = column.getKey();\n\n                if (colKey) {\n                  colShows_1.push(colKey);\n                }\n              }\n            }\n          });\n          columnVisibleStorageMap[id] = [colHides_1.join(',')].concat(colShows_1.length ? [colShows_1.join(',')] : []).join('|') || undefined;\n          localStorage.setItem(visibleStorageKey, XEUtils.toJSONString(columnVisibleStorageMap));\n        }\n      },\n      handleCustom: function () {\n        tablePrivateMethods.saveCustomVisible();\n        tablePrivateMethods.analyColumnWidth();\n        return tableMethods.refreshColumn();\n      },\n      preventEvent: function (evnt, type, args, next, end) {\n        var evntList = VXETable.interceptor.get(type);\n        var rest;\n\n        if (!evntList.some(function (func) {\n          return func(Object.assign({\n            $grid: $xegrid,\n            $table: $xetable,\n            $event: evnt\n          }, args)) === false;\n        })) {\n          if (next) {\n            rest = next();\n          }\n        }\n\n        if (end) {\n          end();\n        }\n\n        return rest;\n      },\n      checkSelectionStatus: function () {\n        var treeConfig = props.treeConfig;\n        var selection = reactData.selection,\n            treeIndeterminates = reactData.treeIndeterminates;\n        var afterFullData = internalData.afterFullData;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var checkField = checkboxOpts.checkField,\n            halfField = checkboxOpts.halfField,\n            checkStrictly = checkboxOpts.checkStrictly,\n            checkMethod = checkboxOpts.checkMethod;\n\n        if (!checkStrictly) {\n          var disableRows_1 = [];\n          var checkRows_1 = [];\n          var isAllResolve = false;\n          var isAllSelected = false;\n          var isIndeterminate = false;\n\n          if (checkField) {\n            isAllResolve = afterFullData.every(checkMethod ? function (row) {\n              if (!checkMethod({\n                row: row\n              })) {\n                disableRows_1.push(row);\n                return true;\n              }\n\n              if (XEUtils.get(row, checkField)) {\n                checkRows_1.push(row);\n                return true;\n              }\n\n              return false;\n            } : function (row) {\n              return XEUtils.get(row, checkField);\n            });\n            isAllSelected = isAllResolve && afterFullData.length !== disableRows_1.length;\n\n            if (treeConfig) {\n              if (halfField) {\n                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {\n                  return XEUtils.get(row, checkField) || XEUtils.get(row, halfField) || $xetable.findRowIndexOf(treeIndeterminates, row) > -1;\n                });\n              } else {\n                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {\n                  return XEUtils.get(row, checkField) || $xetable.findRowIndexOf(treeIndeterminates, row) > -1;\n                });\n              }\n            } else {\n              if (halfField) {\n                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {\n                  return XEUtils.get(row, checkField) || XEUtils.get(row, halfField);\n                });\n              } else {\n                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {\n                  return XEUtils.get(row, checkField);\n                });\n              }\n            }\n          } else {\n            isAllResolve = afterFullData.every(checkMethod ? function (row) {\n              if (!checkMethod({\n                row: row\n              })) {\n                disableRows_1.push(row);\n                return true;\n              }\n\n              if ($xetable.findRowIndexOf(selection, row) > -1) {\n                checkRows_1.push(row);\n                return true;\n              }\n\n              return false;\n            } : function (row) {\n              return $xetable.findRowIndexOf(selection, row) > -1;\n            });\n            isAllSelected = isAllResolve && afterFullData.length !== disableRows_1.length;\n\n            if (treeConfig) {\n              isIndeterminate = !isAllSelected && afterFullData.some(function (row) {\n                return $xetable.findRowIndexOf(treeIndeterminates, row) > -1 || $xetable.findRowIndexOf(selection, row) > -1;\n              });\n            } else {\n              isIndeterminate = !isAllSelected && afterFullData.some(function (row) {\n                return $xetable.findRowIndexOf(selection, row) > -1;\n              });\n            }\n          }\n\n          reactData.isAllSelected = isAllSelected;\n          reactData.isIndeterminate = isIndeterminate;\n        }\n      },\n\n      /**\n       * 多选，行选中事件\n       * value 选中true 不选false 半选-1\n       */\n      handleSelectRow: function (_a, value) {\n        var row = _a.row;\n        var treeConfig = props.treeConfig;\n        var selection = reactData.selection,\n            treeIndeterminates = reactData.treeIndeterminates;\n        var afterFullData = internalData.afterFullData;\n        var treeOpts = computeTreeOpts.value;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var property = checkboxOpts.checkField,\n            checkStrictly = checkboxOpts.checkStrictly,\n            checkMethod = checkboxOpts.checkMethod;\n\n        if (property) {\n          if (treeConfig && !checkStrictly) {\n            if (value === -1) {\n              if ($xetable.findRowIndexOf(treeIndeterminates, row) === -1) {\n                treeIndeterminates.push(row);\n              }\n\n              XEUtils.set(row, property, false);\n            } else {\n              // 更新子节点状态\n              XEUtils.eachTree([row], function (item) {\n                if ($xetable.eqRow(item, row) || !checkMethod || checkMethod({\n                  row: item\n                })) {\n                  XEUtils.set(item, property, value);\n                  XEUtils.remove(treeIndeterminates, function (half) {\n                    return half === item;\n                  });\n                  handleCheckboxReserveRow(row, value);\n                }\n              }, treeOpts);\n            } // 如果存在父节点，更新父节点状态\n\n\n            var matchObj = XEUtils.findTree(afterFullData, function (item) {\n              return $xetable.eqRow(item, row);\n            }, treeOpts);\n\n            if (matchObj && matchObj.parent) {\n              var parentStatus = void 0;\n              var vItems_1 = checkMethod ? matchObj.items.filter(function (item) {\n                return checkMethod({\n                  row: item\n                });\n              }) : matchObj.items;\n              var indeterminatesItem = XEUtils.find(matchObj.items, function (item) {\n                return $xetable.findRowIndexOf(treeIndeterminates, item) > -1;\n              });\n\n              if (indeterminatesItem) {\n                parentStatus = -1;\n              } else {\n                var selectItems = matchObj.items.filter(function (item) {\n                  return XEUtils.get(item, property);\n                });\n                parentStatus = selectItems.filter(function (item) {\n                  return $xetable.findRowIndexOf(vItems_1, item) > -1;\n                }).length === vItems_1.length ? true : selectItems.length || value === -1 ? -1 : false;\n              }\n\n              return tablePrivateMethods.handleSelectRow({\n                row: matchObj.parent\n              }, parentStatus);\n            }\n          } else {\n            if (!checkMethod || checkMethod({\n              row: row\n            })) {\n              XEUtils.set(row, property, value);\n              handleCheckboxReserveRow(row, value);\n            }\n          }\n        } else {\n          if (treeConfig && !checkStrictly) {\n            if (value === -1) {\n              if ($xetable.findRowIndexOf(treeIndeterminates, row) === -1) {\n                treeIndeterminates.push(row);\n              }\n\n              XEUtils.remove(selection, function (item) {\n                return $xetable.eqRow(item, row);\n              });\n            } else {\n              // 更新子节点状态\n              XEUtils.eachTree([row], function (item) {\n                if ($xetable.eqRow(item, row) || !checkMethod || checkMethod({\n                  row: item\n                })) {\n                  if (value) {\n                    selection.push(item);\n                  } else {\n                    XEUtils.remove(selection, function (select) {\n                      return select === item;\n                    });\n                  }\n\n                  XEUtils.remove(treeIndeterminates, function (half) {\n                    return half === item;\n                  });\n                  handleCheckboxReserveRow(row, value);\n                }\n              }, treeOpts);\n            } // 如果存在父节点，更新父节点状态\n\n\n            var matchObj = XEUtils.findTree(afterFullData, function (item) {\n              return $xetable.eqRow(item, row);\n            }, treeOpts);\n\n            if (matchObj && matchObj.parent) {\n              var parentStatus = void 0;\n              var vItems_2 = checkMethod ? matchObj.items.filter(function (item) {\n                return checkMethod({\n                  row: item\n                });\n              }) : matchObj.items;\n              var indeterminatesItem = XEUtils.find(matchObj.items, function (item) {\n                return $xetable.findRowIndexOf(treeIndeterminates, item) > -1;\n              });\n\n              if (indeterminatesItem) {\n                parentStatus = -1;\n              } else {\n                var selectItems = matchObj.items.filter(function (item) {\n                  return $xetable.findRowIndexOf(selection, item) > -1;\n                });\n                parentStatus = selectItems.filter(function (item) {\n                  return $xetable.findRowIndexOf(vItems_2, item) > -1;\n                }).length === vItems_2.length ? true : selectItems.length || value === -1 ? -1 : false;\n              }\n\n              return tablePrivateMethods.handleSelectRow({\n                row: matchObj.parent\n              }, parentStatus);\n            }\n          } else {\n            if (!checkMethod || checkMethod({\n              row: row\n            })) {\n              if (value) {\n                if ($xetable.findRowIndexOf(selection, row) === -1) {\n                  selection.push(row);\n                }\n              } else {\n                XEUtils.remove(selection, function (item) {\n                  return $xetable.eqRow(item, row);\n                });\n              }\n\n              handleCheckboxReserveRow(row, value);\n            }\n          }\n        }\n\n        tablePrivateMethods.checkSelectionStatus();\n      },\n      triggerHeaderHelpEvent: function (evnt, params) {\n        var column = params.column;\n        var titlePrefix = column.titlePrefix || column.titleHelp;\n\n        if (titlePrefix.content || titlePrefix.message) {\n          var tooltipStore = reactData.tooltipStore;\n          var content_1 = getFuncText(titlePrefix.content || titlePrefix.message);\n          handleTargetEnterEvent(true);\n          tooltipStore.visible = true;\n          tooltipStore.currOpts = __assign(__assign({}, titlePrefix), {\n            content: null\n          });\n          nextTick(function () {\n            var $tooltip = refTooltip.value;\n\n            if ($tooltip) {\n              $tooltip.open(evnt.currentTarget, content_1);\n            }\n          });\n        }\n      },\n\n      /**\n       * 触发表头 tooltip 事件\n       */\n      triggerHeaderTooltipEvent: function (evnt, params) {\n        var tooltipStore = reactData.tooltipStore;\n        var column = params.column;\n        var titleElem = evnt.currentTarget;\n        handleTargetEnterEvent(true);\n\n        if (tooltipStore.column !== column || !tooltipStore.visible) {\n          handleTooltip(evnt, titleElem, titleElem, null, params);\n        }\n      },\n\n      /**\n       * 触发单元格 tooltip 事件\n       */\n      triggerBodyTooltipEvent: function (evnt, params) {\n        var editConfig = props.editConfig;\n        var editStore = reactData.editStore;\n        var tooltipStore = reactData.tooltipStore;\n        var editOpts = computeEditOpts.value;\n        var actived = editStore.actived;\n        var row = params.row,\n            column = params.column;\n        var cell = evnt.currentTarget;\n        handleTargetEnterEvent(tooltipStore.column !== column || tooltipStore.row !== row);\n\n        if (isEnableConf(editConfig)) {\n          if (editOpts.mode === 'row' && actived.row === row || actived.row === row && actived.column === column) {\n            return;\n          }\n        }\n\n        if (tooltipStore.column !== column || tooltipStore.row !== row || !tooltipStore.visible) {\n          var overflowElem = void 0;\n          var tipElem = void 0;\n\n          if (column.treeNode) {\n            overflowElem = cell.querySelector('.vxe-tree-cell');\n\n            if (column.type === 'html') {\n              tipElem = cell.querySelector('.vxe-cell--html');\n            }\n          } else {\n            tipElem = cell.querySelector(column.type === 'html' ? '.vxe-cell--html' : '.vxe-cell--label');\n          }\n\n          handleTooltip(evnt, cell, overflowElem || cell.children[0], tipElem, params);\n        }\n      },\n\n      /**\n       * 触发表尾 tooltip 事件\n       */\n      triggerFooterTooltipEvent: function (evnt, params) {\n        var column = params.column;\n        var tooltipStore = reactData.tooltipStore;\n        var cell = evnt.currentTarget;\n        handleTargetEnterEvent(tooltipStore.column !== column || tooltipStore.row);\n\n        if (tooltipStore.column !== column || !tooltipStore.visible) {\n          handleTooltip(evnt, cell, cell.querySelector('.vxe-cell--item') || cell.children[0], null, params);\n        }\n      },\n      handleTargetLeaveEvent: function () {\n        var tooltipOpts = computeTooltipOpts.value;\n        var $tooltip = refTooltip.value;\n\n        if ($tooltip) {\n          $tooltip.setActived(false);\n        }\n\n        if (tooltipOpts.enterable) {\n          internalData.tooltipTimeout = setTimeout(function () {\n            $tooltip = refTooltip.value;\n\n            if ($tooltip && !$tooltip.isActived()) {\n              tableMethods.closeTooltip();\n            }\n          }, tooltipOpts.leaveDelay);\n        } else {\n          tableMethods.closeTooltip();\n        }\n      },\n      triggerHeaderCellClickEvent: function (evnt, params) {\n        var _lastResizeTime = internalData._lastResizeTime;\n        var sortOpts = computeSortOpts.value;\n        var columnOpts = computeColumnOpts.value;\n        var column = params.column;\n        var cell = evnt.currentTarget;\n\n        var triggerResizable = _lastResizeTime && _lastResizeTime > Date.now() - 300;\n\n        var triggerSort = getEventTargetNode(evnt, cell, 'vxe-cell--sort').flag;\n        var triggerFilter = getEventTargetNode(evnt, cell, 'vxe-cell--filter').flag;\n\n        if (sortOpts.trigger === 'cell' && !(triggerResizable || triggerSort || triggerFilter)) {\n          tablePrivateMethods.triggerSortEvent(evnt, column, getNextSortOrder(column));\n        }\n\n        tableMethods.dispatchEvent('header-cell-click', Object.assign({\n          triggerResizable: triggerResizable,\n          triggerSort: triggerSort,\n          triggerFilter: triggerFilter,\n          cell: cell\n        }, params), evnt);\n\n        if (columnOpts.isCurrent || props.highlightCurrentColumn) {\n          tableMethods.setCurrentColumn(column);\n        }\n      },\n      triggerHeaderCellDblclickEvent: function (evnt, params) {\n        tableMethods.dispatchEvent('header-cell-dblclick', Object.assign({\n          cell: evnt.currentTarget\n        }, params), evnt);\n      },\n\n      /**\n       * 列点击事件\n       * 如果是单击模式，则激活为编辑状态\n       * 如果是双击模式，则单击后选中状态\n       */\n      triggerCellClickEvent: function (evnt, params) {\n        var highlightCurrentRow = props.highlightCurrentRow,\n            editConfig = props.editConfig;\n        var editStore = reactData.editStore;\n        var expandOpts = computeExpandOpts.value;\n        var editOpts = computeEditOpts.value;\n        var treeOpts = computeTreeOpts.value;\n        var radioOpts = computeRadioOpts.value;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var rowOpts = computeRowOpts.value;\n        var actived = editStore.actived;\n        var row = params.row,\n            column = params.column;\n        var type = column.type,\n            treeNode = column.treeNode;\n        var isRadioType = type === 'radio';\n        var isCheckboxType = type === 'checkbox';\n        var isExpandType = type === 'expand';\n        var cell = evnt.currentTarget;\n        var triggerRadio = isRadioType && getEventTargetNode(evnt, cell, 'vxe-cell--radio').flag;\n        var triggerCheckbox = isCheckboxType && getEventTargetNode(evnt, cell, 'vxe-cell--checkbox').flag;\n        var triggerTreeNode = treeNode && getEventTargetNode(evnt, cell, 'vxe-tree--btn-wrapper').flag;\n        var triggerExpandNode = isExpandType && getEventTargetNode(evnt, cell, 'vxe-table--expanded').flag;\n        params = Object.assign({\n          cell: cell,\n          triggerRadio: triggerRadio,\n          triggerCheckbox: triggerCheckbox,\n          triggerTreeNode: triggerTreeNode,\n          triggerExpandNode: triggerExpandNode\n        }, params);\n\n        if (!triggerCheckbox && !triggerRadio) {\n          // 如果是展开行\n          if (!triggerExpandNode && (expandOpts.trigger === 'row' || isExpandType && expandOpts.trigger === 'cell')) {\n            tablePrivateMethods.triggerRowExpandEvent(evnt, params);\n          } // 如果是树形表格\n\n\n          if (treeOpts.trigger === 'row' || treeNode && treeOpts.trigger === 'cell') {\n            tablePrivateMethods.triggerTreeExpandEvent(evnt, params);\n          }\n        } // 如果点击了树节点\n\n\n        if (!triggerTreeNode) {\n          if (!triggerExpandNode) {\n            // 如果是高亮行\n            if (rowOpts.isCurrent || highlightCurrentRow) {\n              if (!triggerCheckbox && !triggerRadio) {\n                tablePrivateMethods.triggerCurrentRowEvent(evnt, params);\n              }\n            } // 如果是单选框\n\n\n            if (!triggerRadio && (radioOpts.trigger === 'row' || isRadioType && radioOpts.trigger === 'cell')) {\n              tablePrivateMethods.triggerRadioRowEvent(evnt, params);\n            } // 如果是复选框\n\n\n            if (!triggerCheckbox && (checkboxOpts.trigger === 'row' || isCheckboxType && checkboxOpts.trigger === 'cell')) {\n              tablePrivateMethods.handleToggleCheckRowEvent(evnt, params);\n            }\n          } // 如果设置了单元格选中功能，则不会使用点击事件去处理（只能支持双击模式）\n\n\n          if (isEnableConf(editConfig)) {\n            if (editOpts.trigger === 'manual') {\n              if (actived.args && actived.row === row && column !== actived.column) {\n                handleChangeCell(evnt, params);\n              }\n            } else if (!actived.args || row !== actived.row || column !== actived.column) {\n              if (editOpts.trigger === 'click') {\n                handleChangeCell(evnt, params);\n              } else if (editOpts.trigger === 'dblclick') {\n                if (editOpts.mode === 'row' && actived.row === row) {\n                  handleChangeCell(evnt, params);\n                }\n              }\n            }\n          }\n        }\n\n        tableMethods.dispatchEvent('cell-click', params, evnt);\n      },\n\n      /**\n       * 列双击点击事件\n       * 如果是双击模式，则激活为编辑状态\n       */\n      triggerCellDblclickEvent: function (evnt, params) {\n        var editConfig = props.editConfig;\n        var editStore = reactData.editStore;\n        var editOpts = computeEditOpts.value;\n        var actived = editStore.actived;\n        var cell = evnt.currentTarget;\n        params = Object.assign({\n          cell: cell\n        }, params);\n\n        if (isEnableConf(editConfig) && editOpts.trigger === 'dblclick') {\n          if (!actived.args || evnt.currentTarget !== actived.args.cell) {\n            if (editOpts.mode === 'row') {\n              checkValidate('blur').catch(function (e) {\n                return e;\n              }).then(function () {\n                $xetable.handleActived(params, evnt).then(function () {\n                  return checkValidate('change');\n                }).catch(function (e) {\n                  return e;\n                });\n              });\n            } else if (editOpts.mode === 'cell') {\n              $xetable.handleActived(params, evnt).then(function () {\n                return checkValidate('change');\n              }).catch(function (e) {\n                return e;\n              });\n            }\n          }\n        }\n\n        tableMethods.dispatchEvent('cell-dblclick', params, evnt);\n      },\n      handleToggleCheckRowEvent: function (evnt, params) {\n        var selection = reactData.selection;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var property = checkboxOpts.checkField;\n        var row = params.row;\n        var value = property ? !XEUtils.get(row, property) : $xetable.findRowIndexOf(selection, row) === -1;\n\n        if (evnt) {\n          tablePrivateMethods.triggerCheckRowEvent(evnt, params, value);\n        } else {\n          tablePrivateMethods.handleSelectRow(params, value);\n        }\n      },\n      triggerCheckRowEvent: function (evnt, params, value) {\n        var checkboxOpts = computeCheckboxOpts.value;\n        var checkMethod = checkboxOpts.checkMethod;\n\n        if (!checkMethod || checkMethod({\n          row: params.row\n        })) {\n          tablePrivateMethods.handleSelectRow(params, value);\n          tableMethods.dispatchEvent('checkbox-change', Object.assign({\n            records: tableMethods.getCheckboxRecords(),\n            reserves: tableMethods.getCheckboxReserveRecords(),\n            indeterminates: tableMethods.getCheckboxIndeterminateRecords(),\n            checked: value\n          }, params), evnt);\n        }\n      },\n\n      /**\n       * 多选，选中所有事件\n       */\n      triggerCheckAllEvent: function (evnt, value) {\n        tableMethods.setAllCheckboxRow(value);\n\n        if (evnt) {\n          tableMethods.dispatchEvent('checkbox-all', {\n            records: tableMethods.getCheckboxRecords(),\n            reserves: tableMethods.getCheckboxReserveRecords(),\n            indeterminates: tableMethods.getCheckboxIndeterminateRecords(),\n            checked: value\n          }, evnt);\n        }\n      },\n\n      /**\n       * 单选，行选中事件\n       */\n      triggerRadioRowEvent: function (evnt, params) {\n        var oldValue = reactData.selectRow;\n        var row = params.row;\n        var radioOpts = computeRadioOpts.value;\n        var newValue = row;\n        var isChange = oldValue !== newValue;\n\n        if (isChange) {\n          tableMethods.setRadioRow(newValue);\n        } else if (!radioOpts.strict) {\n          isChange = oldValue === newValue;\n\n          if (isChange) {\n            newValue = null;\n            tableMethods.clearRadioRow();\n          }\n        }\n\n        if (isChange) {\n          tableMethods.dispatchEvent('radio-change', __assign({\n            oldValue: oldValue,\n            newValue: newValue\n          }, params), evnt);\n        }\n      },\n      triggerCurrentRowEvent: function (evnt, params) {\n        var oldValue = reactData.currentRow;\n        var newValue = params.row;\n        var isChange = oldValue !== newValue;\n        tableMethods.setCurrentRow(newValue);\n\n        if (isChange) {\n          tableMethods.dispatchEvent('current-change', __assign({\n            oldValue: oldValue,\n            newValue: newValue\n          }, params), evnt);\n        }\n      },\n\n      /**\n       * 展开行事件\n       */\n      triggerRowExpandEvent: function (evnt, params) {\n        var expandLazyLoadeds = reactData.expandLazyLoadeds,\n            column = reactData.expandColumn;\n        var expandOpts = computeExpandOpts.value;\n        var row = params.row;\n        var lazy = expandOpts.lazy;\n\n        if (!lazy || $xetable.findRowIndexOf(expandLazyLoadeds, row) === -1) {\n          var expanded = !tableMethods.isExpandByRow(row);\n          var columnIndex = tableMethods.getColumnIndex(column);\n          var $columnIndex = tableMethods.getVMColumnIndex(column);\n          tableMethods.setRowExpand(row, expanded);\n          tableMethods.dispatchEvent('toggle-row-expand', {\n            expanded: expanded,\n            column: column,\n            columnIndex: columnIndex,\n            $columnIndex: $columnIndex,\n            row: row,\n            rowIndex: tableMethods.getRowIndex(row),\n            $rowIndex: tableMethods.getVMRowIndex(row)\n          }, evnt);\n        }\n      },\n\n      /**\n       * 展开树节点事件\n       */\n      triggerTreeExpandEvent: function (evnt, params) {\n        var treeLazyLoadeds = reactData.treeLazyLoadeds;\n        var treeOpts = computeTreeOpts.value;\n        var row = params.row,\n            column = params.column;\n        var lazy = treeOpts.lazy;\n\n        if (!lazy || $xetable.findRowIndexOf(treeLazyLoadeds, row) === -1) {\n          var expanded = !tableMethods.isTreeExpandByRow(row);\n          var columnIndex = tableMethods.getColumnIndex(column);\n          var $columnIndex = tableMethods.getVMColumnIndex(column);\n          tableMethods.setTreeExpand(row, expanded);\n          tableMethods.dispatchEvent('toggle-tree-expand', {\n            expanded: expanded,\n            column: column,\n            columnIndex: columnIndex,\n            $columnIndex: $columnIndex,\n            row: row\n          }, evnt);\n        }\n      },\n\n      /**\n       * 点击排序事件\n       */\n      triggerSortEvent: function (evnt, column, order) {\n        var sortOpts = computeSortOpts.value;\n        var property = column.property;\n\n        if (column.sortable) {\n          if (!order || column.order === order) {\n            tableMethods.clearSort(sortOpts.multiple ? column : null);\n          } else {\n            tableMethods.sort({\n              field: property,\n              order: order\n            });\n          }\n\n          var params = {\n            column: column,\n            property: property,\n            order: column.order,\n            sortList: tableMethods.getSortColumns()\n          };\n          tableMethods.dispatchEvent('sort-change', params, evnt);\n        }\n      },\n\n      /**\n       * 横向 X 可视渲染事件处理\n       */\n      triggerScrollXEvent: function () {\n        loadScrollXData();\n      },\n\n      /**\n       * 纵向 Y 可视渲染事件处理\n       */\n      triggerScrollYEvent: function (evnt) {\n        var scrollYStore = internalData.scrollYStore;\n        var adaptive = scrollYStore.adaptive,\n            offsetSize = scrollYStore.offsetSize,\n            visibleSize = scrollYStore.visibleSize; // webkit 浏览器使用最佳的渲染方式，且最高渲染量不能大于 40 条\n\n        if (isWebkit && adaptive && offsetSize * 2 + visibleSize <= 40) {\n          loadScrollYData(evnt);\n        } else {\n          debounceScrollY(evnt);\n        }\n      },\n\n      /**\n       * 对于树形结构中，可以直接滚动到指定深层节点中\n       * 对于某些特定的场景可能会用到，比如定位到某一节点\n       * @param {Row} row 行对象\n       */\n      scrollToTreeRow: function (row) {\n        var treeConfig = props.treeConfig;\n        var tableFullData = internalData.tableFullData;\n        var rests = [];\n\n        if (treeConfig) {\n          var treeOpts = computeTreeOpts.value;\n          var matchObj = XEUtils.findTree(tableFullData, function (item) {\n            return $xetable.eqRow(item, row);\n          }, treeOpts);\n\n          if (matchObj) {\n            var nodes_1 = matchObj.nodes;\n            nodes_1.forEach(function (row, index) {\n              if (index < nodes_1.length - 1 && !tableMethods.isTreeExpandByRow(row)) {\n                rests.push(tableMethods.setTreeExpand(row, true));\n              }\n            });\n          }\n        }\n\n        return Promise.all(rests).then(function () {\n          return rowToVisible($xetable, row);\n        });\n      },\n      // 更新横向 X 可视渲染上下剩余空间大小\n      updateScrollXSpace: function () {\n        var scrollXLoad = reactData.scrollXLoad,\n            scrollbarWidth = reactData.scrollbarWidth;\n        var visibleColumn = internalData.visibleColumn,\n            scrollXStore = internalData.scrollXStore,\n            elemStore = internalData.elemStore,\n            tableWidth = internalData.tableWidth;\n        var tableHeader = refTableHeader.value;\n        var tableBody = refTableBody.value;\n        var tableFooter = refTableFooter.value;\n        var tableBodyElem = tableBody ? tableBody.$el : null;\n\n        if (tableBodyElem) {\n          var tableHeaderElem = tableHeader ? tableHeader.$el : null;\n          var tableFooterElem = tableFooter ? tableFooter.$el : null;\n          var headerElem = tableHeaderElem ? tableHeaderElem.querySelector('.vxe-table--header') : null;\n          var bodyElem = tableBodyElem.querySelector('.vxe-table--body');\n          var footerElem = tableFooterElem ? tableFooterElem.querySelector('.vxe-table--footer') : null;\n          var leftSpaceWidth = visibleColumn.slice(0, scrollXStore.startIndex).reduce(function (previous, column) {\n            return previous + column.renderWidth;\n          }, 0);\n          var marginLeft = '';\n\n          if (scrollXLoad) {\n            marginLeft = leftSpaceWidth + \"px\";\n          }\n\n          if (headerElem) {\n            headerElem.style.marginLeft = marginLeft;\n          }\n\n          bodyElem.style.marginLeft = marginLeft;\n\n          if (footerElem) {\n            footerElem.style.marginLeft = marginLeft;\n          }\n\n          var containerList = ['main'];\n          containerList.forEach(function (name) {\n            var layoutList = ['header', 'body', 'footer'];\n            layoutList.forEach(function (layout) {\n              var xSpaceElem = elemStore[name + \"-\" + layout + \"-xSpace\"];\n\n              if (xSpaceElem) {\n                xSpaceElem.style.width = scrollXLoad ? tableWidth + (layout === 'header' ? scrollbarWidth : 0) + \"px\" : '';\n              }\n            });\n          });\n          nextTick(updateStyle);\n        }\n      },\n      // 更新纵向 Y 可视渲染上下剩余空间大小\n      updateScrollYSpace: function () {\n        var scrollYLoad = reactData.scrollYLoad;\n        var scrollYStore = internalData.scrollYStore,\n            elemStore = internalData.elemStore,\n            afterFullData = internalData.afterFullData;\n        var startIndex = scrollYStore.startIndex,\n            rowHeight = scrollYStore.rowHeight;\n        var bodyHeight = afterFullData.length * rowHeight;\n        var topSpaceHeight = Math.max(0, startIndex * rowHeight);\n        var containerList = ['main', 'left', 'right'];\n        var marginTop = '';\n        var ySpaceHeight = '';\n\n        if (scrollYLoad) {\n          marginTop = topSpaceHeight + \"px\";\n          ySpaceHeight = bodyHeight + \"px\";\n        }\n\n        containerList.forEach(function (name) {\n          var layoutList = ['header', 'body', 'footer'];\n          var tableElem = elemStore[name + \"-body-table\"];\n\n          if (tableElem) {\n            tableElem.style.marginTop = marginTop;\n          }\n\n          layoutList.forEach(function (layout) {\n            var ySpaceElem = elemStore[name + \"-\" + layout + \"-ySpace\"];\n\n            if (ySpaceElem) {\n              ySpaceElem.style.height = ySpaceHeight;\n            }\n          });\n        });\n        nextTick(updateStyle);\n      },\n      updateScrollXData: function () {\n        reactData.tableColumn = [];\n        nextTick(function () {\n          handleTableColumn();\n          tablePrivateMethods.updateScrollXSpace();\n        });\n      },\n      updateScrollYData: function () {\n        reactData.tableData = [];\n        nextTick(function () {\n          tablePrivateMethods.handleTableData();\n          tablePrivateMethods.updateScrollYSpace();\n        });\n      },\n\n      /**\n       * 处理固定列的显示状态\n       */\n      checkScrolling: function () {\n        var leftContainerElem = refLeftContainer.value;\n        var rightContainerElem = refRightContainer.value;\n        var tableBody = refTableBody.value;\n        var bodyElem = tableBody ? tableBody.$el : null;\n\n        if (bodyElem) {\n          if (leftContainerElem) {\n            if (bodyElem.scrollLeft > 0) {\n              addClass(leftContainerElem, 'scrolling--middle');\n            } else {\n              removeClass(leftContainerElem, 'scrolling--middle');\n            }\n          }\n\n          if (rightContainerElem) {\n            if (bodyElem.clientWidth < bodyElem.scrollWidth - Math.ceil(bodyElem.scrollLeft)) {\n              addClass(rightContainerElem, 'scrolling--middle');\n            } else {\n              removeClass(rightContainerElem, 'scrolling--middle');\n            }\n          }\n        }\n      },\n      updateZindex: function () {\n        if (props.zIndex) {\n          internalData.tZindex = props.zIndex;\n        } else if (internalData.tZindex < getLastZIndex()) {\n          internalData.tZindex = nextZIndex();\n        }\n      },\n      updateCellAreas: function () {\n        var mouseConfig = props.mouseConfig;\n        var mouseOpts = computeMouseOpts.value;\n\n        if (mouseConfig && mouseOpts.area && $xetable.handleUpdateCellAreas) {\n          $xetable.handleUpdateCellAreas();\n        }\n      },\n\n      /**\n       * 行 hover 事件\n       */\n      triggerHoverEvent: function (evnt, _a) {\n        var row = _a.row;\n        tablePrivateMethods.setHoverRow(row);\n      },\n      setHoverRow: function (row) {\n        var rowid = getRowid($xetable, row);\n        var el = refElem.value;\n        tablePrivateMethods.clearHoverRow();\n\n        if (el) {\n          XEUtils.arrayEach(el.querySelectorAll(\"[rowid=\\\"\" + rowid + \"\\\"]\"), function (elem) {\n            return addClass(elem, 'row--hover');\n          });\n        }\n\n        internalData.hoverRow = row;\n      },\n      clearHoverRow: function () {\n        var el = refElem.value;\n\n        if (el) {\n          XEUtils.arrayEach(el.querySelectorAll('.vxe-body--row.row--hover'), function (elem) {\n            return removeClass(elem, 'row--hover');\n          });\n        }\n\n        internalData.hoverRow = null;\n      },\n      getCell: function (row, column) {\n        var rowid = getRowid($xetable, row);\n        var tableBody = refTableBody.value;\n        var leftBody = refTableLeftBody.value;\n        var rightBody = refTableRightBody.value;\n        var bodyElem;\n\n        if (column.fixed) {\n          if (column.fixed === 'left') {\n            if (leftBody) {\n              bodyElem = leftBody.$el;\n            }\n          } else {\n            if (rightBody) {\n              bodyElem = rightBody.$el;\n            }\n          }\n        }\n\n        if (!bodyElem) {\n          bodyElem = tableBody.$el;\n        }\n\n        if (bodyElem) {\n          return bodyElem.querySelector(\".vxe-body--row[rowid=\\\"\" + rowid + \"\\\"] .\" + column.id);\n        }\n\n        return null;\n      },\n      getCellLabel: function (row, column) {\n        var formatter = column.formatter;\n        var cellValue = getCellValue(row, column);\n        var cellLabel = cellValue;\n\n        if (formatter) {\n          var formatData = void 0;\n          var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n          var rowid = getRowid($xetable, row);\n          var colid = column.id;\n          var rest = fullAllDataRowIdData[rowid];\n\n          if (rest) {\n            formatData = rest.formatData;\n\n            if (!formatData) {\n              formatData = fullAllDataRowIdData[rowid].formatData = {};\n            }\n\n            if (rest && formatData[colid]) {\n              if (formatData[colid].value === cellValue) {\n                return formatData[colid].label;\n              }\n            }\n          }\n\n          var formatParams = {\n            cellValue: cellValue,\n            row: row,\n            rowIndex: tableMethods.getRowIndex(row),\n            column: column,\n            columnIndex: tableMethods.getColumnIndex(column)\n          };\n\n          if (XEUtils.isString(formatter)) {\n            var globalFunc = VXETable.formats.get(formatter);\n            cellLabel = globalFunc ? globalFunc(formatParams) : '';\n          } else if (XEUtils.isArray(formatter)) {\n            var globalFunc = VXETable.formats.get(formatter[0]);\n            cellLabel = globalFunc ? globalFunc.apply(void 0, __spreadArray([formatParams], formatter.slice(1))) : '';\n          } else {\n            cellLabel = formatter(formatParams);\n          }\n\n          if (formatData) {\n            formatData[colid] = {\n              value: cellValue,\n              label: cellLabel\n            };\n          }\n        }\n\n        return cellLabel;\n      },\n      findRowIndexOf: function (list, row) {\n        return row ? XEUtils.findIndexOf(list, function (item) {\n          return $xetable.eqRow(item, row);\n        }) : -1;\n      },\n      eqRow: function (row1, row2) {\n        if (row1 && row2) {\n          if (row1 === row2) {\n            return true;\n          }\n\n          return getRowid($xetable, row1) === getRowid($xetable, row2);\n        }\n\n        return false;\n      }\n    }; // 检测对应模块是否安装\n\n    if (process.env.NODE_ENV === 'development') {\n      'openExport,openPrint,exportData,openImport,importData,saveFile,readFile,importByFile,print'.split(',').forEach(function (name) {\n        $xetable[name] = function () {\n          errLog('vxe.error.reqModule', ['Export']);\n        };\n      });\n      'clearValidate,fullValidate,validate'.split(',').forEach(function (name) {\n        $xetable[name] = function () {\n          errLog('vxe.error.reqModule', ['Validator']);\n        };\n      });\n    }\n\n    Object.assign($xetable, tableMethods, tablePrivateMethods);\n    /**\n     * 渲染浮固定列\n     * 分别渲染左边固定列和右边固定列\n     * 如果宽度足够情况下，则不需要渲染固定列\n     * @param {String} fixedType 固定列类型\n     */\n\n    var renderFixed = function (fixedType) {\n      var showHeader = props.showHeader,\n          showFooter = props.showFooter;\n      var tableData = reactData.tableData,\n          tableColumn = reactData.tableColumn,\n          tableGroupColumn = reactData.tableGroupColumn,\n          columnStore = reactData.columnStore,\n          footerTableData = reactData.footerTableData;\n      var isFixedLeft = fixedType === 'left';\n      var fixedColumn = isFixedLeft ? columnStore.leftList : columnStore.rightList;\n      return h('div', {\n        ref: isFixedLeft ? refLeftContainer : refRightContainer,\n        class: \"vxe-table--fixed-\" + fixedType + \"-wrapper\"\n      }, [showHeader ? h(resolveComponent('vxe-table-header'), {\n        ref: isFixedLeft ? refTableLeftHeader : refTableRightHeader,\n        fixedType: fixedType,\n        tableData: tableData,\n        tableColumn: tableColumn,\n        tableGroupColumn: tableGroupColumn,\n        fixedColumn: fixedColumn\n      }) : createCommentVNode(), h(TableBodyComponent, {\n        ref: isFixedLeft ? refTableLeftBody : refTableRightBody,\n        fixedType: fixedType,\n        tableData: tableData,\n        tableColumn: tableColumn,\n        fixedColumn: fixedColumn\n      }), showFooter ? h(resolveComponent('vxe-table-footer'), {\n        ref: isFixedLeft ? refTableLeftFooter : refTableRightFooter,\n        footerTableData: footerTableData,\n        tableColumn: tableColumn,\n        fixedColumn: fixedColumn,\n        fixedType: fixedType\n      }) : createCommentVNode()]);\n    };\n\n    var renderEmptyContenet = function () {\n      var emptyOpts = computeEmptyOpts.value;\n      var params = {\n        $table: $xetable\n      };\n\n      if (slots.empty) {\n        return slots.empty(params);\n      } else {\n        var compConf = emptyOpts.name ? VXETable.renderer.get(emptyOpts.name) : null;\n        var renderEmpty = compConf ? compConf.renderEmpty : null;\n\n        if (renderEmpty) {\n          return renderEmpty(emptyOpts, params);\n        }\n      }\n\n      return getFuncText(props.emptyText) || GlobalConfig.i18n('vxe.table.emptyText');\n    };\n\n    function handleUupdateResize() {\n      var el = refElem.value;\n\n      if (el && el.clientWidth && el.clientHeight) {\n        tableMethods.recalculate();\n      }\n    }\n\n    watch(function () {\n      return props.data;\n    }, function (value) {\n      var inited = internalData.inited,\n          initStatus = internalData.initStatus;\n      loadTableData(value || []).then(function () {\n        var scrollXLoad = reactData.scrollXLoad,\n            scrollYLoad = reactData.scrollYLoad,\n            expandColumn = reactData.expandColumn;\n        internalData.inited = true;\n        internalData.initStatus = true;\n\n        if (!initStatus) {\n          handleLoadDefaults();\n        }\n\n        if (!inited) {\n          handleInitDefaults();\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          if ((scrollXLoad || scrollYLoad) && expandColumn) {\n            warnLog('vxe.error.scrollErrProp', ['column.type=expand']);\n          }\n        }\n\n        tableMethods.recalculate();\n      });\n    });\n    watch(function () {\n      return reactData.staticColumns;\n    }, function (value) {\n      handleColumn(value);\n    });\n    watch(function () {\n      return reactData.tableColumn;\n    }, function () {\n      tablePrivateMethods.analyColumnWidth();\n    });\n    watch(function () {\n      return props.showHeader;\n    }, function () {\n      nextTick(function () {\n        tableMethods.recalculate(true).then(function () {\n          return tableMethods.refreshScroll();\n        });\n      });\n    });\n    watch(function () {\n      return props.showFooter;\n    }, function () {\n      nextTick(function () {\n        tableMethods.recalculate(true).then(function () {\n          return tableMethods.refreshScroll();\n        });\n      });\n    });\n    watch(function () {\n      return props.height;\n    }, function () {\n      nextTick(function () {\n        return tableMethods.recalculate(true);\n      });\n    });\n    watch(function () {\n      return props.maxHeight;\n    }, function () {\n      nextTick(function () {\n        return tableMethods.recalculate(true);\n      });\n    });\n    watch(function () {\n      return props.syncResize;\n    }, function (value) {\n      if (value) {\n        handleUupdateResize();\n        nextTick(function () {\n          handleUupdateResize();\n          setTimeout(function () {\n            return handleUupdateResize();\n          });\n        });\n      }\n    });\n    watch(function () {\n      return props.mergeCells;\n    }, function (value) {\n      tableMethods.clearMergeCells();\n      nextTick(function () {\n        if (value) {\n          tableMethods.setMergeCells(value);\n        }\n      });\n    });\n    watch(function () {\n      return props.mergeFooterItems;\n    }, function (value) {\n      tableMethods.clearMergeFooterItems();\n      nextTick(function () {\n        if (value) {\n          tableMethods.setMergeFooterItems(value);\n        }\n      });\n    });\n    VXETable.hooks.forEach(function (options) {\n      var setupTable = options.setupTable;\n\n      if (setupTable) {\n        var hookRest = setupTable($xetable);\n\n        if (hookRest && XEUtils.isObject(hookRest)) {\n          Object.assign($xetable, hookRest);\n        }\n      }\n    });\n    tablePrivateMethods.preventEvent(null, 'created', {\n      $table: $xetable\n    });\n    var resizeObserver;\n    onActivated(function () {\n      tableMethods.recalculate().then(function () {\n        return tableMethods.refreshScroll();\n      });\n      tablePrivateMethods.preventEvent(null, 'activated', {\n        $table: $xetable\n      });\n    });\n    onDeactivated(function () {\n      internalData.isActivated = false;\n      tablePrivateMethods.preventEvent(null, 'deactivated', {\n        $table: $xetable\n      });\n    });\n    onMounted(function () {\n      nextTick(function () {\n        var data = props.data,\n            treeConfig = props.treeConfig,\n            showOverflow = props.showOverflow;\n        var scrollXStore = internalData.scrollXStore,\n            scrollYStore = internalData.scrollYStore;\n        var sYOpts = computeSYOpts.value;\n        var editOpts = computeEditOpts.value;\n        var treeOpts = computeTreeOpts.value;\n        var radioOpts = computeRadioOpts.value;\n        var checkboxOpts = computeCheckboxOpts.value;\n        var expandOpts = computeExpandOpts.value;\n        var rowOpts = computeRowOpts.value;\n\n        if (process.env.NODE_ENV === 'development') {\n          // if (props.rowId) {\n          //   warnLog('vxe.error.delProp', ['row-id', 'row-config.keyField'])\n          // }\n          // if (props.rowKey) {\n          //   warnLog('vxe.error.delProp', ['row-id', 'row-config.useKey'])\n          // }\n          // if (props.columnKey) {\n          //   warnLog('vxe.error.delProp', ['row-id', 'column-config.useKey'])\n          // }\n          if (!(props.rowId || rowOpts.keyField) && (checkboxOpts.reserve || checkboxOpts.checkRowKeys || radioOpts.reserve || radioOpts.checkRowKey || expandOpts.expandRowKeys || treeOpts.expandRowKeys)) {\n            warnLog('vxe.error.reqProp', ['row-config.keyField']);\n          }\n\n          if (props.editConfig && (editOpts.showStatus || editOpts.showUpdateStatus || editOpts.showInsertStatus) && !props.keepSource) {\n            warnLog('vxe.error.reqProp', ['keep-source']);\n          }\n\n          if (treeConfig && treeOpts.line && (!(props.rowKey || rowOpts.useKey) || !showOverflow)) {\n            warnLog('vxe.error.reqProp', ['row-config.useKey | show-overflow']);\n          }\n\n          if (treeConfig && props.stripe) {\n            warnLog('vxe.error.noTree', ['stripe']);\n          }\n\n          if (props.showFooter && !props.footerMethod) {\n            warnLog('vxe.error.reqProp', ['footer-method']);\n          } // if (props.highlightCurrentRow) {\n          //   warnLog('vxe.error.delProp', ['highlight-current-row', 'row-config.isCurrent'])\n          // }\n          // if (props.highlightHoverRow) {\n          //   warnLog('vxe.error.delProp', ['highlight-hover-row', 'row-config.isHover'])\n          // }\n          // if (props.highlightCurrentColumn) {\n          //   warnLog('vxe.error.delProp', ['highlight-current-column', 'column-config.isCurrent'])\n          // }\n          // if (props.highlightHoverColumn) {\n          //   warnLog('vxe.error.delProp', ['highlight-hover-column', 'column-config.isHover'])\n          // }\n          // 检查导入导出类型，如果自定义导入导出方法，则不校验类型\n\n\n          var exportConfig = props.exportConfig,\n              importConfig = props.importConfig;\n          var exportOpts = computeExportOpts.value;\n          var importOpts = computeImportOpts.value;\n\n          if (importConfig && importOpts.types && !importOpts.importMethod && !XEUtils.includeArrays(VXETable.config.importTypes, importOpts.types)) {\n            warnLog('vxe.error.errProp', [\"export-config.types=\" + importOpts.types.join(','), importOpts.types.filter(function (type) {\n              return XEUtils.includes(VXETable.config.importTypes, type);\n            }).join(',') || VXETable.config.importTypes.join(',')]);\n          }\n\n          if (exportConfig && exportOpts.types && !exportOpts.exportMethod && !XEUtils.includeArrays(VXETable.config.exportTypes, exportOpts.types)) {\n            warnLog('vxe.error.errProp', [\"export-config.types=\" + exportOpts.types.join(','), exportOpts.types.filter(function (type) {\n              return XEUtils.includes(VXETable.config.exportTypes, type);\n            }).join(',') || VXETable.config.exportTypes.join(',')]);\n          }\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          var customOpts = computeCustomOpts.value;\n          var mouseOpts = computeMouseOpts.value;\n          var rowOpts_1 = computeRowOpts.value;\n\n          if (!props.id && props.customConfig && (customOpts.storage === true || customOpts.storage && customOpts.storage.resizable || customOpts.storage && customOpts.storage.visible)) {\n            errLog('vxe.error.reqProp', ['id']);\n          }\n\n          if (props.treeConfig && checkboxOpts.range) {\n            errLog('vxe.error.noTree', ['checkbox-config.range']);\n          }\n\n          if (rowOpts_1.height && !props.showOverflow) {\n            warnLog('vxe.error.notProp', ['table.show-overflow']);\n          }\n\n          if (!$xetable.handleUpdateCellAreas) {\n            if (props.clipConfig) {\n              warnLog('vxe.error.notProp', ['clip-config']);\n            }\n\n            if (props.fnrConfig) {\n              warnLog('vxe.error.notProp', ['fnr-config']);\n            }\n\n            if (mouseOpts.area) {\n              errLog('vxe.error.notProp', ['mouse-config.area']);\n              return;\n            }\n          }\n\n          if (mouseOpts.area && mouseOpts.selected) {\n            warnLog('vxe.error.errConflicts', ['mouse-config.area', 'mouse-config.selected']);\n          }\n\n          if (mouseOpts.area && checkboxOpts.range) {\n            warnLog('vxe.error.errConflicts', ['mouse-config.area', 'checkbox-config.range']);\n          }\n\n          if (props.treeConfig && mouseOpts.area) {\n            errLog('vxe.error.noTree', ['mouse-config.area']);\n          }\n        } // 检查是否有安装需要的模块\n\n\n        if (process.env.NODE_ENV === 'development') {\n          if (props.editConfig && !$xetable.insert) {\n            errLog('vxe.error.reqModule', ['Edit']);\n          }\n\n          if (props.editRules && !$xetable.validate) {\n            errLog('vxe.error.reqModule', ['Validator']);\n          }\n\n          if ((checkboxOpts.range || props.keyboardConfig || props.mouseConfig) && !$xetable.triggerCellMousedownEvent) {\n            errLog('vxe.error.reqModule', ['Keyboard']);\n          }\n\n          if ((props.printConfig || props.importConfig || props.exportConfig) && !$xetable.exportData) {\n            errLog('vxe.error.reqModule', ['Export']);\n          }\n        }\n\n        Object.assign(scrollYStore, {\n          startIndex: 0,\n          endIndex: 0,\n          visibleSize: 0,\n          adaptive: sYOpts.adaptive !== false\n        });\n        Object.assign(scrollXStore, {\n          startIndex: 0,\n          endIndex: 0,\n          visibleSize: 0\n        });\n        loadTableData(data || []).then(function () {\n          if (data && data.length) {\n            internalData.inited = true;\n            internalData.initStatus = true;\n            handleLoadDefaults();\n            handleInitDefaults();\n          }\n\n          updateStyle();\n        });\n\n        if (props.autoResize) {\n          var el = refElem.value;\n          var parentEl = tablePrivateMethods.getParentElem();\n          resizeObserver = createResizeEvent(function () {\n            if (props.autoResize) {\n              tableMethods.recalculate(true);\n            }\n          });\n\n          if (el) {\n            resizeObserver.observe(el);\n          }\n\n          if (parentEl) {\n            resizeObserver.observe(parentEl);\n          }\n        }\n      });\n      GlobalEvent.on($xetable, 'paste', handleGlobalPasteEvent);\n      GlobalEvent.on($xetable, 'copy', handleGlobalCopyEvent);\n      GlobalEvent.on($xetable, 'cut', handleGlobalCutEvent);\n      GlobalEvent.on($xetable, 'mousedown', handleGlobalMousedownEvent);\n      GlobalEvent.on($xetable, 'blur', handleGlobalBlurEvent);\n      GlobalEvent.on($xetable, 'mousewheel', handleGlobalMousewheelEvent);\n      GlobalEvent.on($xetable, 'keydown', handleGlobalKeydownEvent);\n      GlobalEvent.on($xetable, 'resize', handleGlobalResizeEvent);\n\n      if ($xetable.handleGlobalContextmenuEvent) {\n        GlobalEvent.on($xetable, 'contextmenu', $xetable.handleGlobalContextmenuEvent);\n      }\n\n      tablePrivateMethods.preventEvent(null, 'mounted', {\n        $table: $xetable\n      });\n    });\n    onBeforeUnmount(function () {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n\n      tableMethods.closeFilter();\n\n      if ($xetable.closeMenu) {\n        $xetable.closeMenu();\n      }\n\n      tablePrivateMethods.preventEvent(null, 'beforeUnmount', {\n        $table: $xetable\n      });\n    });\n    onUnmounted(function () {\n      GlobalEvent.off($xetable, 'paste');\n      GlobalEvent.off($xetable, 'copy');\n      GlobalEvent.off($xetable, 'cut');\n      GlobalEvent.off($xetable, 'mousedown');\n      GlobalEvent.off($xetable, 'blur');\n      GlobalEvent.off($xetable, 'mousewheel');\n      GlobalEvent.off($xetable, 'keydown');\n      GlobalEvent.off($xetable, 'resize');\n      GlobalEvent.off($xetable, 'contextmenu');\n      tablePrivateMethods.preventEvent(null, 'unmounted', {\n        $table: $xetable\n      });\n    });\n\n    var renderVN = function () {\n      var _a;\n\n      var loading = props.loading,\n          stripe = props.stripe,\n          showHeader = props.showHeader,\n          height = props.height,\n          treeConfig = props.treeConfig,\n          mouseConfig = props.mouseConfig,\n          showFooter = props.showFooter,\n          highlightCell = props.highlightCell,\n          highlightHoverRow = props.highlightHoverRow,\n          highlightHoverColumn = props.highlightHoverColumn,\n          editConfig = props.editConfig;\n      var isGroup = reactData.isGroup,\n          overflowX = reactData.overflowX,\n          overflowY = reactData.overflowY,\n          scrollXLoad = reactData.scrollXLoad,\n          scrollYLoad = reactData.scrollYLoad,\n          scrollbarHeight = reactData.scrollbarHeight,\n          tableData = reactData.tableData,\n          tableColumn = reactData.tableColumn,\n          tableGroupColumn = reactData.tableGroupColumn,\n          footerTableData = reactData.footerTableData,\n          initStore = reactData.initStore,\n          columnStore = reactData.columnStore,\n          filterStore = reactData.filterStore;\n      var leftList = columnStore.leftList,\n          rightList = columnStore.rightList;\n      var tipConfig = computeTipConfig.value;\n      var treeOpts = computeTreeOpts.value;\n      var rowOpts = computeRowOpts.value;\n      var columnOpts = computeColumnOpts.value;\n      var vSize = computeSize.value;\n      var tableBorder = computeTableBorder.value;\n      var mouseOpts = computeMouseOpts.value;\n      var validOpts = computeValidOpts.value;\n      var validTipOpts = computeValidTipOpts.value;\n      var isMenu = computeIsMenu.value;\n      return h('div', {\n        ref: refElem,\n        class: ['vxe-table', 'vxe-table--render-default', \"tid_\" + xID, \"border--\" + tableBorder, (_a = {}, _a[\"size--\" + vSize] = vSize, _a['vxe-editable'] = !!editConfig, _a['cell--highlight'] = highlightCell, _a['cell--selected'] = mouseConfig && mouseOpts.selected, _a['cell--area'] = mouseConfig && mouseOpts.area, _a['row--highlight'] = rowOpts.isHover || highlightHoverRow, _a['column--highlight'] = columnOpts.isHover || highlightHoverColumn, _a['is--header'] = showHeader, _a['is--footer'] = showFooter, _a['is--group'] = isGroup, _a['is--tree-line'] = treeConfig && treeOpts.line, _a['is--fixed-left'] = leftList.length, _a['is--fixed-right'] = rightList.length, _a['is--animat'] = !!props.animat, _a['is--round'] = props.round, _a['is--stripe'] = !treeConfig && stripe, _a['is--loading'] = loading, _a['is--empty'] = !loading && !tableData.length, _a['is--scroll-y'] = overflowY, _a['is--scroll-x'] = overflowX, _a['is--virtual-x'] = scrollXLoad, _a['is--virtual-y'] = scrollYLoad, _a)],\n        onKeydown: keydownEvent\n      }, [\n      /**\n       * 隐藏列\n       */\n      h('div', {\n        class: 'vxe-table-slots'\n      }, slots.default ? slots.default({}) : []), h('div', {\n        class: 'vxe-table--render-wrapper'\n      }, [h('div', {\n        class: 'vxe-table--main-wrapper'\n      }, [\n      /**\n       * 表头\n       */\n      showHeader ? h(resolveComponent('vxe-table-header'), {\n        ref: refTableHeader,\n        tableData: tableData,\n        tableColumn: tableColumn,\n        tableGroupColumn: tableGroupColumn\n      }) : createCommentVNode(),\n      /**\n       * 表体\n       */\n      h(TableBodyComponent, {\n        ref: refTableBody,\n        tableData: tableData,\n        tableColumn: tableColumn\n      }),\n      /**\n       * 表尾\n       */\n      showFooter ? h(resolveComponent('vxe-table-footer'), {\n        ref: refTableFooter,\n        footerTableData: footerTableData,\n        tableColumn: tableColumn\n      }) : createCommentVNode()]), h('div', {\n        class: 'vxe-table--fixed-wrapper'\n      }, [\n      /**\n       * 左侧固定区域\n       */\n      leftList && leftList.length && overflowX ? renderFixed('left') : createCommentVNode(),\n      /**\n       * 右侧固定区域\n       */\n      rightList && rightList.length && overflowX ? renderFixed('right') : createCommentVNode()])]),\n      /**\n       * 空数据\n       */\n      h('div', {\n        ref: refEmptyPlaceholder,\n        class: 'vxe-table--empty-placeholder'\n      }, [h('div', {\n        class: 'vxe-table--empty-content'\n      }, renderEmptyContenet())]),\n      /**\n       * 边框线\n       */\n      h('div', {\n        class: 'vxe-table--border-line'\n      }),\n      /**\n       * 列宽线\n       */\n      h('div', {\n        ref: refCellResizeBar,\n        class: 'vxe-table--resizable-bar',\n        style: overflowX ? {\n          'padding-bottom': scrollbarHeight + \"px\"\n        } : null\n      }),\n      /**\n       * 加载中\n       */\n      h('div', {\n        class: ['vxe-table--loading vxe-loading', {\n          'is--visible': loading\n        }]\n      }, [h('div', {\n        class: 'vxe-loading--spinner'\n      })]),\n      /**\n       * 筛选\n       */\n      initStore.filter ? h(resolveComponent('vxe-table-filter'), {\n        ref: refTableFilter,\n        filterStore: filterStore\n      }) : createCommentVNode(),\n      /**\n       * 导入\n       */\n      initStore.import && props.importConfig ? h(resolveComponent('vxe-import-panel'), {\n        defaultOptions: reactData.importParams,\n        storeData: reactData.importStore\n      }) : createCommentVNode(),\n      /**\n       * 导出/导出\n       */\n      initStore.export && (props.exportConfig || props.printConfig) ? h(resolveComponent('vxe-export-panel'), {\n        defaultOptions: reactData.exportParams,\n        storeData: reactData.exportStore\n      }) : createCommentVNode(),\n      /**\n       * 快捷菜单\n       */\n      isMenu ? h(resolveComponent('vxe-table-context-menu'), {\n        ref: refTableMenu\n      }) : createCommentVNode(),\n      /**\n       * 通用提示\n       */\n      hasUseTooltip ? h(resolveComponent('vxe-tooltip'), {\n        ref: refCommTooltip,\n        isArrow: false,\n        enterable: false\n      }) : createCommentVNode(),\n      /**\n       * 校验提示\n       */\n      hasUseTooltip && props.editRules && validOpts.showMessage && (validOpts.message === 'default' ? !height : validOpts.message === 'tooltip') ? h(resolveComponent('vxe-tooltip'), __assign({\n        ref: refValidTooltip,\n        class: 'vxe-table--valid-error'\n      }, validOpts.message === 'tooltip' || tableData.length === 1 ? validTipOpts : {})) : createCommentVNode(),\n      /**\n       * 工具提示\n       */\n      hasUseTooltip ? h(resolveComponent('vxe-tooltip'), __assign({\n        ref: refTooltip\n      }, tipConfig)) : createCommentVNode()]);\n    };\n\n    $xetable.renderVN = renderVN;\n    provide('xecolgroup', null);\n    provide('$xetable', $xetable);\n    return $xetable;\n  },\n  render: function () {\n    return this.renderVN();\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/table/src/table.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","il","j","defineComponent","getCurrentInstance","h","createCommentVNode","resolveComponent","reactive","ref","provide","inject","nextTick","onActivated","onDeactivated","onBeforeUnmount","onUnmounted","watch","computed","onMounted","XEUtils","browse","isPx","isScale","hasClass","addClass","removeClass","getEventTargetNode","getPaddingTopBottomSize","setScrollTop","setScrollLeft","isNodeElement","getLastZIndex","nextZIndex","hasChildrenList","getFuncText","isEnableConf","formatText","eqEmptyValue","warnLog","errLog","getLog","createResizeEvent","GlobalEvent","hasEventKey","EVENT_KEYS","useSize","VXETable","GlobalConfig","Cell","TableBodyComponent","tableProps","tableEmits","getRowUniqueId","clearTableAllStatus","getRowkey","getRowid","rowToVisible","colToVisible","getCellValue","setCellValue","handleFieldOrColumn","toTreePathSeq","restoreScrollLocation","restoreScrollListener","isWebkit","edge","resizableStorageKey","visibleStorageKey","name","props","emits","setup","context","slots","emit","hasUseTooltip","tooltip","xID","uniqueId","computeSize","instance","reactData","staticColumns","tableGroupColumn","tableColumn","tableData","scrollXLoad","scrollYLoad","overflowY","overflowX","scrollbarWidth","scrollbarHeight","rowHeight","parentHeight","isGroup","isAllOverflow","isAllSelected","isIndeterminate","selection","currentRow","currentColumn","selectRow","footerTableData","expandColumn","treeNodeColumn","hasFixedColumn","rowExpandeds","expandLazyLoadeds","treeExpandeds","treeLazyLoadeds","treeIndeterminates","mergeList","mergeFooterList","initStore","filter","import","export","filterStore","style","options","column","multiple","visible","maxHeight","columnStore","leftList","centerList","rightList","resizeList","pxList","pxMinList","scaleList","scaleMinList","autoList","ctxMenuStore","selected","showChild","selectChild","list","editStore","indexs","columns","titles","row","copyed","cut","rows","actived","insertList","removeList","tooltipStore","content","currOpts","validStore","rule","isArrow","importStore","inited","file","type","modeList","typeList","filename","importParams","mode","types","message","exportStore","isPrint","hasFooter","hasMerge","hasTree","hasColgroup","exportParams","sheetName","isColgroup","isMerge","isAllExpand","useStyle","original","isHeader","isFooter","internalData","tZindex","elemStore","scrollXStore","offsetSize","visibleSize","startIndex","endIndex","scrollYStore","tableWidth","tableHeight","headerHeight","footerHeight","customHeight","customMaxHeight","hoverRow","lastScrollLeft","lastScrollTop","lastScrollTime","radioReserveRow","checkboxReserveRowMap","rowExpandedReserveRowMap","treeExpandedReserveRowMap","tableFullData","afterFullData","tableFullTreeData","afterTreeFullData","tableSynchData","tableSourceData","collectColumn","tableFullColumn","visibleColumn","fullAllDataRowIdData","fullDataRowIdData","fullColumnIdData","fullColumnFieldData","tooltipTimeout","initStatus","isActivated","tableMethods","tablePrivateMethods","refElem","refTooltip","refCommTooltip","refValidTooltip","refTableFilter","refTableMenu","refTableHeader","refTableBody","refTableFooter","refTableLeftHeader","refTableLeftBody","refTableLeftFooter","refTableRightHeader","refTableRightBody","refTableRightFooter","refLeftContainer","refRightContainer","refCellResizeBar","refEmptyPlaceholder","$xegrid","$xetoolbar","computeValidOpts","table","validConfig","computeSXOpts","scrollX","computeSYOpts","scrollY","computeRowHeightMaps","default","medium","small","mini","computeColumnOpts","columnConfig","computeRowOpts","rowConfig","computeResizableOpts","resizableConfig","computeSeqOpts","seqConfig","computeRadioOpts","radioConfig","computeCheckboxOpts","checkboxConfig","computeTooltipOpts","tooltipConfig","computeTipConfig","tooltipOpts","value","computeValidTipOpts","computeEditOpts","editConfig","computeSortOpts","orders","sortConfig","computeFilterOpts","filterConfig","computeMouseOpts","mouseConfig","computeAreaOpts","areaConfig","computeKeyboardOpts","keyboardConfig","computeClipOpts","clipConfig","computeFNROpts","fnrConfig","computeMenuOpts","menuConfig","computeHeaderMenu","menuOpts","headerOpts","header","computeBodyMenu","bodyOpts","body","computeFooterMenu","footerOpts","footer","computeIsMenu","headerMenu","bodyMenu","footerMenu","computeMenuList","rest","forEach","item","push","computeExportOpts","exportConfig","computeImportOpts","importConfig","computePrintOpts","printConfig","computeExpandOpts","expandConfig","computeTreeOpts","treeConfig","computeEmptyOpts","emptyRender","computeCellOffsetWidth","border","Math","max","ceil","computeCustomOpts","customConfig","computeTableBorder","computeIsAllCheckboxDisabled","checkboxOpts","strict","checkMethod","every","refMaps","computeMaps","$xetable","getRefMaps","getComputeMaps","xegrid","eqCellValue","row1","row2","field","val1","get","val2","isString","isNumber","isEqual","getNextSortOrder","sortOpts","currOrder","order","oIndex","indexOf","getCustomStorageMap","key","version","toStringJSON","localStorage","getItem","_v","getRecoverRow","rowid","handleReserveRow","reserveRowMap","reserveList","each","findRowIndexOf","computeVirtualX","tableBody","tableBodyElem","$el","scrollLeft","clientWidth","endWidth","toVisibleIndex","cWidth","colIndex","colLen","renderWidth","computeVirtualY","tableHeader","vSize","rowHeightMaps","tableHeaderElem","firstTrElem","querySelector","clientHeight","calculateMergerOffserIndex","offsetItem","mcIndex","len","mergeItem","mergeStartIndex","mergeSpanNumber","mergeEndIndex","setMerges","merges","mList","rowList","visibleColumn_1","isArray","col","rowspan","colspan","toNumber","findIndexOf","_row","_col","id","_rowspan","_colspan","mergeRowIndex","mergeColIndex","getVTColumnIndex","removeMerges","visibleColumn_2","Error","rItems","splice","clearAllSort","calcHeight","val","num","excludeHeight","getExcludeHeight","floor","toInteger","restoreCustomStorage","customOpts","storage","isResizable","resizable","isVisible","customMap_1","columnWidthStorage","resizeWidth","columnVisibleStorage","colVisibles","split","colHides","colShows","keyMap_1","eachTree","colKey","getKey","_a","isBoolean","cacheColumnMap","mouseOpts","some","showOverflow","checkboxColumn","radioColumn","hasFixed","handleFunc","index","items","path","parent","colid","property","fixed","treeNode","process","env","NODE_ENV","nodes","level","area","updateHeight","autoCellWidth","headerElem","bodyElem","footerElem","minCellWidth","bodyWidth","remainWidth","meanWidth","fit","minWidth","parseInt","scaleWidth","width","concat","dynamicList","dynamicSize","odiffer","offsetHeight","scrollHeight","offsetWidth","getParentHeight","checkScrolling","getOrderField","sortBy","sortType","cellValue","isFunction","getCellLabel","isNaN","toValueString","updateAfterDataIndex","treeOpts","allrest","seq","map","Number","join","_index","$index","children","transform","mapChildren","handleVirtualTreeToList","fullData_1","expandMaps_1","Map","has","set","updateScrollYStatus","updateAfterFullData","filterOpts","allRemoteFilter","remote","allFilterMethod","filterMethod","allRemoteSort","allSortMethod","sortMethod","sortMultiple","chronological","tableTree","filterColumns_1","orderColumns_1","sortable","filters","valueList_1","itemList_1","checked","valueList","itemList","sortTime","orderBy","handleFilter","filterRender","compConf","renderer","compFilterMethod","defaultFilterMethod","option","$table","values","searchTree","slice","sortRests","data","sortList","updateStyle","showFooter","allColumnOverflow","allColumnHeaderOverflow","showHeaderOverflow","allColumnFooterOverflow","showFooterOverflow","spanMethod","footerSpanMethod","containerList","emptyPlaceholderElem","cellOffsetWidth","keyboardOpts","bodyWrapperElem","top","height","fixedType","layoutList","isFixedLeft","fixedColumn","fixedWrapperElem","layout","wrapperElem","tableElem","tWidth","isOptimize","reduce","previous","msie","arrayEach","querySelectorAll","resizeElem","parentNode","repairElem","listElem","thElem","colNode","getColumnNode","column_1","cellOverflow","showEllipsis","showTitle","showTooltip","hasEllipsis","childWidth_1","countChild_1","emptyBlockElem","paddingRight","safari","marginTop","colgroupElem","colElem","getAttribute","column_2","isUndefined","isNull","hasEllipsis_1","elem","cellElem","colWidth","columnIndex","getColumnIndex","index_1","nextColumn","getColumns","setCurrentRow","addCellSelectedClass","checkValidate","triggerValidate","handleChangeCell","evnt","params","catch","e","then","handleActived","handleDefaultSort","defaultSort","getColumnByField","Date","now","handleTableData","handleDefaultSelectionChecked","fullDataRowIdData_1","checkAll","checkRowKeys","setAllCheckboxRow","defSelection_1","setCheckboxRow","handleDefaultRadioChecked","radioOpts","checkRowKey","reserve","setRadioRow","rowkey","handleDefaultRowExpand","fullDataRowIdData_2","expandOpts","expandAll","expandRowKeys","setAllRowExpand","defExpandeds_1","setRowExpand","handleRadioReserveRow","handleCheckboxReserveRow","handleReserveStatus","setTreeExpand","handleDefaultTreeExpand","tableFullData_1","treeOpts_1","setAllTreeExpand","defExpandeds_2","rowkey_1","matchObj","findTree","handleAsyncTreeExpandChilds","loadMethod","checkStrictly","Promise","resolve","childRecords","treeLoaded","remove","eqRow","loadTreeChildren","childRows","isCheckedByCheckboxRow","recalculate","handleTreeExpandReserve","expanded","handleAsyncRowExpand","rowIndex","getRowIndex","$rowIndex","getVMRowIndex","expandLoaded","handleRowExpandReserve","handleDefaultMergeCells","mergeCells","setMergeCells","handleDefaultMergeFooterItems","mergeFooterItems","setMergeFooterItems","computeScrollLoad","sYOpts","sXOpts","visibleXSize","offsetXSize","oSize","updateScrollXData","updateScrollXSpace","visibleYSize","offsetYSize","updateScrollYData","updateScrollYSpace","loadTableData","datas","keepSource","oldScrollYLoad","treeData","fullData","rowField","parentField","toArrayTree","parentKey","sYLoad","cacheRowMap","clone","clearCellAreas","clearCopyCellArea","clearMergeCells","clearMergeFooterItems","updateFooter","checkSelectionStatus","setTimeout","handleLoadDefaults","handleInitDefaults","handleTableColumn","loadScrollXData","offsetStartIndex","offsetEndIndex","closeTooltip","getColumnList","result","parseColumns","leftGroupList_1","centerGroupList_1","rightGroupList_1","isColGroup","subColumn","enabled","gt","showHeader","updateCellAreas","handleColumn","syncUpdate","handleBaseTreeExpand","lazy","hasChild","accordion","toggleMethod","$columnIndex","getVMColumnIndex","validRows","matchObj_1","isLoad","all","handleVirtualTreeExpand","loadScrollYData","scrollBodyElem","currentTarget","target","scrollTop","createGetRowCacheProp","prop","createGetColumnCacheProp","debounceScrollY","debounce","leading","trailing","keyCtxTimeout","dispatchEvent","$event","clearAll","syncData","updateData","refreshScroll","loadData","reloadData","reloadRow","record","oRow","newValue","newRecord","destructuring","parentRest","parentLevel","createData","rowid_1","childRow","loadColumn","mapTree","createColumn","reloadColumn","getRowNode","tr","cell","getRowSeq","getVTRowIndex","records","handleRrecord","defineField","createRow","isArr","revertData","targetRows","toArray","getUpdateRecords","isInsertByRow","clearData","removeInsertRow","isUpdateByRow","_b","rowid_2","oRowIndex","getColumnById","getTableColumn","fullColumn","getData","getCheckboxRecords","isFull","checkField","currTableData","filterTree","selection_1","getParentRow","rowOrRowid","getRowById","getTableData","visibleData","footerData","hideColumn","fieldOrColumn","handleCustom","showColumn","resetColumn","opts","defaultVisible","saveCustomResizable","refreshColumn","tableFooter","leftBody","rightBody","leftBodyElem","rightBodyElem","tableFooterElem","refull","openTooltip","$commTip","open","$tooltip","close","isAllCheckboxChecked","isAllCheckboxIndeterminate","getCheckboxIndeterminateRecords","handleSelectRow","isIndeterminateByCheckboxRow","toggleCheckboxRow","handleToggleCheckRowEvent","selectRows","beforeSelection","checkValFn","getRadioReserveRecord","rowid_3","rowkey_2","clearRadioReserve","getCheckboxReserveRecords","reserveSelection","afterFullIdMaps_1","oldRow","oldRowid","clearCheckboxReserve","toggleAllCheckboxRow","triggerCheckAllEvent","clearCheckboxRow","rowOpts","el","clearCurrentRow","clearCurrentColumn","isCurrent","highlightCurrentRow","isCheckedByRadioRow","clearRadioRow","getCurrentRecord","getRadioRecord","rowid_4","rowkey_3","getCurrentColumn","columnOpts","highlightCurrentColumn","setCurrentColumn","sort","sortConfs","sortOrder","confs","clearSort","isSort","getSortColumns","closeFilter","filterList","getCheckedFilters","isFilter","isRowExpandLoaded","clearRowExpandLoaded","reloadRowExpand","reloadExpandContent","toggleRowExpand","isExpandByRow","lazyRests","validRows_1","clearRowExpand","isExists","clearRowExpandReserve","getRowExpandRecords","getTreeExpandRecords","isTreeExpandLoaded","clearTreeExpandLoaded","reloadTreeExpand","reloadTreeChilds","toggleTreeExpand","isTreeExpandByRow","expandeds","rowChildren","clearTreeExpand","clearTreeExpandReserve","getScroll","virtualX","virtualY","scrollTo","scrollToRow","scrollToTreeRow","scrollToColumn","clearScroll","footerMethod","$grid","updateStatus","scope","customVal","editRules","row_1","column_3","hasCellRules","cell_1","getCell","validCellRules","clearValidate","showValidTooltip","removeMergeCells","getMergeCells","removeMergeFooterItems","getMergeFooterItems","focus","blur","connect","$toolbar","handleGlobalMousedownEvent","editOpts","$validTooltip","tableFilter","tableMenu","flag","document","preventEvent","args","autoClear","_lastCallTime","isClear","rowTargetNode","rowNodeRest","targetElem","offsetY","clearActived","clearSelected","closeMenu","handleGlobalBlurEvent","handleGlobalMousewheelEvent","keydownEvent","isEsc","ESCAPE","handleKeyboardEvent","stopPropagation","params_1","handleSelected","handleGlobalKeydownEvent","isMenu","menuList","keyCode","isBack","BACKSPACE","isTab","TAB","isEnter","ENTER","isSpacebar","SPACEBAR","isLeftArrow","ARROW_LEFT","isUpArrow","ARROW_UP","isRightArrow","ARROW_RIGHT","isDwArrow","ARROW_DOWN","isDel","DELETE","isF2","F2","isContextMenu","CONTEXT_MENU","hasMetaKey","metaKey","hasCtrlKey","ctrlKey","hasShiftKey","shiftKey","isAltKey","altKey","operArrow","operCtxMenu","isEditStatus","preventDefault","moveCtxMenu","params_2","isChecked","triggerRadioRowEvent","_keyCtx","clearTimeout","targetArgs","enterToTab","moveTabSelected","moveSelected","childrens","targetRow_1","triggerCurrentRowEvent","moveCurrentRow","delMethod","backMethod","parentRow_1","isEdit","editMethod","editRender","activeMethod","handleGlobalPasteEvent","isClip","handlePasteCellAreaEvent","handleGlobalCopyEvent","handleCopyCellAreaEvent","handleGlobalCutEvent","handleCutCellAreaEvent","handleGlobalResizeEvent","handleTargetEnterEvent","setActived","handleTooltip","overflowElem","tipElem","showAll","contentMethod","customContent","useCustom","eqNull","innerText","textContent","trim","isCellOverflow","scrollWidth","getSetupOptions","callSlot","slotFunc","getParentElem","gridEl","parentElem","parentPaddingSize","getComputedStyle","defaultValue","otherFields","labelField","force","fullList","isSource","isLazy","handleCache","analyColumnWidth","defaultWidth","defaultMinWidth","isReset","columnWidthStorageMap","columnWidthStorage_1","isPlainObject","isEmpty","undefined","setItem","toJSONString","saveCustomVisible","columnVisibleStorageMap","colHides_1","colShows_1","next","end","evntList","interceptor","func","halfField","disableRows_1","checkRows_1","isAllResolve","half","parentStatus","vItems_1","indeterminatesItem","find","selectItems","select","vItems_2","triggerHeaderHelpEvent","titlePrefix","titleHelp","content_1","triggerHeaderTooltipEvent","titleElem","triggerBodyTooltipEvent","triggerFooterTooltipEvent","handleTargetLeaveEvent","enterable","isActived","leaveDelay","triggerHeaderCellClickEvent","_lastResizeTime","triggerResizable","triggerSort","triggerFilter","trigger","triggerSortEvent","triggerHeaderCellDblclickEvent","triggerCellClickEvent","isRadioType","isCheckboxType","isExpandType","triggerRadio","triggerCheckbox","triggerTreeNode","triggerExpandNode","triggerRowExpandEvent","triggerTreeExpandEvent","triggerCellDblclickEvent","triggerCheckRowEvent","reserves","indeterminates","oldValue","isChange","triggerScrollXEvent","triggerScrollYEvent","adaptive","rests","nodes_1","leftSpaceWidth","marginLeft","xSpaceElem","bodyHeight","topSpaceHeight","ySpaceHeight","ySpaceElem","leftContainerElem","rightContainerElem","updateZindex","zIndex","handleUpdateCellAreas","triggerHoverEvent","setHoverRow","clearHoverRow","formatter","cellLabel","formatData","label","formatParams","globalFunc","formats","renderFixed","class","renderEmptyContenet","emptyOpts","empty","renderEmpty","emptyText","i18n","handleUupdateResize","syncResize","hooks","setupTable","hookRest","isObject","resizeObserver","rowId","keyField","showStatus","showUpdateStatus","showInsertStatus","line","rowKey","useKey","stripe","exportOpts","importOpts","importMethod","includeArrays","config","importTypes","includes","exportMethod","exportTypes","rowOpts_1","range","insert","validate","triggerCellMousedownEvent","exportData","autoResize","parentEl","observe","on","handleGlobalContextmenuEvent","disconnect","off","renderVN","loading","highlightCell","highlightHoverRow","highlightHoverColumn","tipConfig","tableBorder","validOpts","validTipOpts","isHover","animat","round","onKeydown","defaultOptions","storeData","showMessage","render"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { defineComponent, getCurrentInstance, h, createCommentVNode, resolveComponent, reactive, ref, provide, inject, nextTick, onActivated, onDeactivated, onBeforeUnmount, onUnmounted, watch, computed, onMounted } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { browse, isPx, isScale, hasClass, addClass, removeClass, getEventTargetNode, getPaddingTopBottomSize, setScrollTop, setScrollLeft, isNodeElement } from '../../tools/dom';\nimport { getLastZIndex, nextZIndex, hasChildrenList, getFuncText, isEnableConf, formatText, eqEmptyValue } from '../../tools/utils';\nimport { warnLog, errLog, getLog } from '../../tools/log';\nimport { createResizeEvent } from '../../tools/resize';\nimport { GlobalEvent, hasEventKey, EVENT_KEYS } from '../../tools/event';\nimport { useSize } from '../../hooks/size';\nimport { VXETable } from '../../v-x-e-table';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport Cell from './cell';\nimport TableBodyComponent from './body';\nimport tableProps from './props';\nimport tableEmits from './emits';\nimport { getRowUniqueId, clearTableAllStatus, getRowkey, getRowid, rowToVisible, colToVisible, getCellValue, setCellValue, handleFieldOrColumn, toTreePathSeq, restoreScrollLocation, restoreScrollListener } from './util';\nvar isWebkit = browse['-webkit'] && !browse.edge;\nvar resizableStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_WIDTH';\nvar visibleStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_VISIBLE';\nexport default defineComponent({\n    name: 'VxeTable',\n    props: tableProps,\n    emits: tableEmits,\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var hasUseTooltip = VXETable.tooltip;\n        var xID = XEUtils.uniqueId();\n        var computeSize = useSize(props);\n        var instance = getCurrentInstance();\n        var reactData = reactive({\n            // 低性能的静态列\n            staticColumns: [],\n            // 渲染的列分组\n            tableGroupColumn: [],\n            // 可视区渲染的列\n            tableColumn: [],\n            // 渲染中的数据\n            tableData: [],\n            // 是否启用了横向 X 可视渲染方式加载\n            scrollXLoad: false,\n            // 是否启用了纵向 Y 可视渲染方式加载\n            scrollYLoad: false,\n            // 是否存在纵向滚动条\n            overflowY: true,\n            // 是否存在横向滚动条\n            overflowX: false,\n            // 纵向滚动条的宽度\n            scrollbarWidth: 0,\n            // 横向滚动条的高度\n            scrollbarHeight: 0,\n            // 行高\n            rowHeight: 0,\n            // 表格父容器的高度\n            parentHeight: 0,\n            // 是否使用分组表头\n            isGroup: false,\n            isAllOverflow: false,\n            // 复选框属性，是否全选\n            isAllSelected: false,\n            // 复选框属性，有选中且非全选状态\n            isIndeterminate: false,\n            // 复选框属性，已选中的行\n            selection: [],\n            // 当前行\n            currentRow: null,\n            // 单选框属性，选中列\n            currentColumn: null,\n            // 单选框属性，选中行\n            selectRow: null,\n            // 表尾合计数据\n            footerTableData: [],\n            // 展开列信息\n            expandColumn: null,\n            // 树节点列信息\n            treeNodeColumn: null,\n            hasFixedColumn: false,\n            // 已展开的行\n            rowExpandeds: [],\n            // 懒加载中的展开行的列表\n            expandLazyLoadeds: [],\n            // 已展开树节点\n            treeExpandeds: [],\n            // 懒加载中的树节点的列表\n            treeLazyLoadeds: [],\n            // 树节点不确定状态的列表\n            treeIndeterminates: [],\n            // 合并单元格的对象集\n            mergeList: [],\n            // 合并表尾数据的对象集\n            mergeFooterList: [],\n            // 初始化标识\n            initStore: {\n                filter: false,\n                import: false,\n                export: false\n            },\n            // 当前选中的筛选列\n            filterStore: {\n                isAllSelected: false,\n                isIndeterminate: false,\n                style: null,\n                options: [],\n                column: null,\n                multiple: false,\n                visible: false,\n                maxHeight: null\n            },\n            // 存放列相关的信息\n            columnStore: {\n                leftList: [],\n                centerList: [],\n                rightList: [],\n                resizeList: [],\n                pxList: [],\n                pxMinList: [],\n                scaleList: [],\n                scaleMinList: [],\n                autoList: []\n            },\n            // 存放快捷菜单的信息\n            ctxMenuStore: {\n                selected: null,\n                visible: false,\n                showChild: false,\n                selectChild: null,\n                list: [],\n                style: null\n            },\n            // 存放可编辑相关信息\n            editStore: {\n                indexs: {\n                    columns: []\n                },\n                titles: {\n                    columns: []\n                },\n                // 选中源\n                selected: {\n                    row: null,\n                    column: null\n                },\n                // 已复制源\n                copyed: {\n                    cut: false,\n                    rows: [],\n                    columns: []\n                },\n                // 激活\n                actived: {\n                    row: null,\n                    column: null\n                },\n                insertList: [],\n                removeList: []\n            },\n            // 存放 tooltip 相关信息\n            tooltipStore: {\n                row: null,\n                column: null,\n                content: null,\n                visible: false,\n                currOpts: null\n            },\n            // 存放数据校验相关信息\n            validStore: {\n                visible: false,\n                row: null,\n                column: null,\n                content: '',\n                rule: null,\n                isArrow: false\n            },\n            // 导入相关信息\n            importStore: {\n                inited: false,\n                file: null,\n                type: '',\n                modeList: [],\n                typeList: [],\n                filename: '',\n                visible: false\n            },\n            importParams: {\n                mode: '',\n                types: null,\n                message: true\n            },\n            // 导出相关信息\n            exportStore: {\n                inited: false,\n                name: '',\n                modeList: [],\n                typeList: [],\n                columns: [],\n                isPrint: false,\n                hasFooter: false,\n                hasMerge: false,\n                hasTree: false,\n                hasColgroup: false,\n                visible: false\n            },\n            exportParams: {\n                filename: '',\n                sheetName: '',\n                mode: '',\n                type: '',\n                isColgroup: false,\n                isMerge: false,\n                isAllExpand: false,\n                useStyle: false,\n                original: false,\n                message: true,\n                isHeader: false,\n                isFooter: false\n            }\n        });\n        var internalData = {\n            tZindex: 0,\n            elemStore: {},\n            // 存放横向 X 虚拟滚动相关的信息\n            scrollXStore: {\n                offsetSize: 0,\n                visibleSize: 0,\n                startIndex: 0,\n                endIndex: 0\n            },\n            // 存放纵向 Y 虚拟滚动相关信息\n            scrollYStore: {\n                rowHeight: 0,\n                offsetSize: 0,\n                visibleSize: 0,\n                startIndex: 0,\n                endIndex: 0\n            },\n            // 表格宽度\n            tableWidth: 0,\n            // 表格高度\n            tableHeight: 0,\n            // 表头高度\n            headerHeight: 0,\n            // 表尾高度\n            footerHeight: 0,\n            customHeight: 0,\n            customMaxHeight: 0,\n            // 当前 hover 行\n            hoverRow: null,\n            // 最后滚动位置\n            lastScrollLeft: 0,\n            lastScrollTop: 0,\n            lastScrollTime: 0,\n            // 单选框属性，已选中保留的行\n            radioReserveRow: null,\n            // 复选框属性，已选中保留的行\n            checkboxReserveRowMap: {},\n            // 行数据，已展开保留的行\n            rowExpandedReserveRowMap: {},\n            // 树结构数据，已展开保留的行\n            treeExpandedReserveRowMap: {},\n            // 列表完整数据、条件处理后\n            tableFullData: [],\n            afterFullData: [],\n            // 树结构完整数据、条件处理后\n            tableFullTreeData: [],\n            afterTreeFullData: [],\n            tableSynchData: [],\n            tableSourceData: [],\n            // 收集的列配置（带分组）\n            collectColumn: [],\n            // 完整所有列（不带分组）\n            tableFullColumn: [],\n            // 渲染所有列\n            visibleColumn: [],\n            // 总的缓存数据集\n            fullAllDataRowIdData: {},\n            // 渲染中缓存数据\n            fullDataRowIdData: {},\n            fullColumnIdData: {},\n            fullColumnFieldData: {},\n            inited: false,\n            tooltipTimeout: null,\n            initStatus: false,\n            isActivated: false\n        };\n        var tableMethods = {};\n        var tablePrivateMethods = {};\n        var refElem = ref();\n        var refTooltip = ref();\n        var refCommTooltip = ref();\n        var refValidTooltip = ref();\n        var refTableFilter = ref();\n        var refTableMenu = ref();\n        var refTableHeader = ref();\n        var refTableBody = ref();\n        var refTableFooter = ref();\n        var refTableLeftHeader = ref();\n        var refTableLeftBody = ref();\n        var refTableLeftFooter = ref();\n        var refTableRightHeader = ref();\n        var refTableRightBody = ref();\n        var refTableRightFooter = ref();\n        var refLeftContainer = ref();\n        var refRightContainer = ref();\n        var refCellResizeBar = ref();\n        var refEmptyPlaceholder = ref();\n        var $xegrid = inject('$xegrid', null);\n        var $xetoolbar;\n        var computeValidOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.validConfig, props.validConfig);\n        });\n        var computeSXOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.scrollX, props.scrollX);\n        });\n        var computeSYOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.scrollY, props.scrollY);\n        });\n        var computeRowHeightMaps = computed(function () {\n            return {\n                default: 48,\n                medium: 44,\n                small: 40,\n                mini: 36\n            };\n        });\n        var computeColumnOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.columnConfig, props.columnConfig);\n        });\n        var computeRowOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.rowConfig, props.rowConfig);\n        });\n        var computeResizableOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.resizableConfig, props.resizableConfig);\n        });\n        var computeSeqOpts = computed(function () {\n            return Object.assign({ startIndex: 0 }, GlobalConfig.table.seqConfig, props.seqConfig);\n        });\n        var computeRadioOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.radioConfig, props.radioConfig);\n        });\n        var computeCheckboxOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.checkboxConfig, props.checkboxConfig);\n        });\n        var computeTooltipOpts = ref();\n        computeTooltipOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.tooltip, GlobalConfig.table.tooltipConfig, props.tooltipConfig);\n        });\n        var computeTipConfig = computed(function () {\n            var tooltipStore = reactData.tooltipStore;\n            var tooltipOpts = computeTooltipOpts.value;\n            return __assign(__assign({}, tooltipOpts), tooltipStore.currOpts);\n        });\n        var computeValidTipOpts = computed(function () {\n            var tooltipOpts = computeTooltipOpts.value;\n            return Object.assign({ isArrow: false }, tooltipOpts);\n        });\n        var computeEditOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.editConfig, props.editConfig);\n        });\n        var computeSortOpts = computed(function () {\n            return Object.assign({ orders: ['asc', 'desc', null] }, GlobalConfig.table.sortConfig, props.sortConfig);\n        });\n        var computeFilterOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.filterConfig, props.filterConfig);\n        });\n        var computeMouseOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.mouseConfig, props.mouseConfig);\n        });\n        var computeAreaOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.areaConfig, props.areaConfig);\n        });\n        var computeKeyboardOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.keyboardConfig, props.keyboardConfig);\n        });\n        var computeClipOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.clipConfig, props.clipConfig);\n        });\n        var computeFNROpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.fnrConfig, props.fnrConfig);\n        });\n        var computeMenuOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.menuConfig, props.menuConfig);\n        });\n        var computeHeaderMenu = computed(function () {\n            var menuOpts = computeMenuOpts.value;\n            var headerOpts = menuOpts.header;\n            return headerOpts && headerOpts.options ? headerOpts.options : [];\n        });\n        var computeBodyMenu = computed(function () {\n            var menuOpts = computeMenuOpts.value;\n            var bodyOpts = menuOpts.body;\n            return bodyOpts && bodyOpts.options ? bodyOpts.options : [];\n        });\n        var computeFooterMenu = computed(function () {\n            var menuOpts = computeMenuOpts.value;\n            var footerOpts = menuOpts.footer;\n            return footerOpts && footerOpts.options ? footerOpts.options : [];\n        });\n        var computeIsMenu = computed(function () {\n            var menuOpts = computeMenuOpts.value;\n            var headerMenu = computeHeaderMenu.value;\n            var bodyMenu = computeBodyMenu.value;\n            var footerMenu = computeFooterMenu.value;\n            return !!(props.menuConfig && isEnableConf(menuOpts) && (headerMenu.length || bodyMenu.length || footerMenu.length));\n        });\n        var computeMenuList = computed(function () {\n            var ctxMenuStore = reactData.ctxMenuStore;\n            var rest = [];\n            ctxMenuStore.list.forEach(function (list) {\n                list.forEach(function (item) {\n                    rest.push(item);\n                });\n            });\n            return rest;\n        });\n        var computeExportOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.exportConfig, props.exportConfig);\n        });\n        var computeImportOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.importConfig, props.importConfig);\n        });\n        var computePrintOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.printConfig, props.printConfig);\n        });\n        var computeExpandOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.expandConfig, props.expandConfig);\n        });\n        var computeTreeOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.treeConfig, props.treeConfig);\n        });\n        var computeEmptyOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.emptyRender, props.emptyRender);\n        });\n        var computeCellOffsetWidth = computed(function () {\n            return props.border ? Math.max(2, Math.ceil(reactData.scrollbarWidth / reactData.tableColumn.length)) : 1;\n        });\n        var computeCustomOpts = computed(function () {\n            return Object.assign({}, GlobalConfig.table.customConfig, props.customConfig);\n        });\n        var computeTableBorder = computed(function () {\n            var border = props.border;\n            if (border === true) {\n                return 'full';\n            }\n            if (border) {\n                return border;\n            }\n            return 'default';\n        });\n        var computeIsAllCheckboxDisabled = computed(function () {\n            var treeConfig = props.treeConfig;\n            var tableData = reactData.tableData;\n            var tableFullData = internalData.tableFullData;\n            var checkboxOpts = computeCheckboxOpts.value;\n            var strict = checkboxOpts.strict, checkMethod = checkboxOpts.checkMethod;\n            if (strict) {\n                if (tableData.length || tableFullData.length) {\n                    if (checkMethod) {\n                        if (treeConfig) {\n                            // 暂时不支持树形结构\n                        }\n                        // 如果所有行都被禁用\n                        return tableFullData.every(function (row) { return !checkMethod({ row: row }); });\n                    }\n                    return false;\n                }\n                return true;\n            }\n            return false;\n        });\n        var refMaps = {\n            refElem: refElem,\n            refTooltip: refTooltip,\n            refValidTooltip: refValidTooltip,\n            refTableFilter: refTableFilter,\n            refTableMenu: refTableMenu,\n            refTableHeader: refTableHeader,\n            refTableBody: refTableBody,\n            refTableFooter: refTableFooter,\n            refTableLeftHeader: refTableLeftHeader,\n            refTableLeftBody: refTableLeftBody,\n            refTableLeftFooter: refTableLeftFooter,\n            refTableRightHeader: refTableRightHeader,\n            refTableRightBody: refTableRightBody,\n            refTableRightFooter: refTableRightFooter,\n            refLeftContainer: refLeftContainer,\n            refRightContainer: refRightContainer,\n            refCellResizeBar: refCellResizeBar\n        };\n        var computeMaps = {\n            computeSize: computeSize,\n            computeValidOpts: computeValidOpts,\n            computeSXOpts: computeSXOpts,\n            computeSYOpts: computeSYOpts,\n            computeColumnOpts: computeColumnOpts,\n            computeRowOpts: computeRowOpts,\n            computeResizableOpts: computeResizableOpts,\n            computeSeqOpts: computeSeqOpts,\n            computeRadioOpts: computeRadioOpts,\n            computeCheckboxOpts: computeCheckboxOpts,\n            computeTooltipOpts: computeTooltipOpts,\n            computeEditOpts: computeEditOpts,\n            computeSortOpts: computeSortOpts,\n            computeFilterOpts: computeFilterOpts,\n            computeMouseOpts: computeMouseOpts,\n            computeAreaOpts: computeAreaOpts,\n            computeKeyboardOpts: computeKeyboardOpts,\n            computeClipOpts: computeClipOpts,\n            computeFNROpts: computeFNROpts,\n            computeHeaderMenu: computeHeaderMenu,\n            computeBodyMenu: computeBodyMenu,\n            computeFooterMenu: computeFooterMenu,\n            computeIsMenu: computeIsMenu,\n            computeMenuOpts: computeMenuOpts,\n            computeExportOpts: computeExportOpts,\n            computeImportOpts: computeImportOpts,\n            computePrintOpts: computePrintOpts,\n            computeExpandOpts: computeExpandOpts,\n            computeTreeOpts: computeTreeOpts,\n            computeEmptyOpts: computeEmptyOpts,\n            computeCustomOpts: computeCustomOpts,\n            computeIsAllCheckboxDisabled: computeIsAllCheckboxDisabled\n        };\n        var $xetable = {\n            xID: xID,\n            props: props,\n            context: context,\n            instance: instance,\n            reactData: reactData,\n            internalData: internalData,\n            getRefMaps: function () { return refMaps; },\n            getComputeMaps: function () { return computeMaps; },\n            xegrid: $xegrid\n        };\n        var eqCellValue = function (row1, row2, field) {\n            var val1 = XEUtils.get(row1, field);\n            var val2 = XEUtils.get(row2, field);\n            if (eqEmptyValue(val1) && eqEmptyValue(val2)) {\n                return true;\n            }\n            if (XEUtils.isString(val1) || XEUtils.isNumber(val1)) {\n                return ('' + val1) === ('' + val2);\n            }\n            return XEUtils.isEqual(val1, val2);\n        };\n        var getNextSortOrder = function (column) {\n            var sortOpts = computeSortOpts.value;\n            var orders = sortOpts.orders;\n            var currOrder = column.order || null;\n            var oIndex = orders.indexOf(currOrder) + 1;\n            return orders[oIndex < orders.length ? oIndex : 0];\n        };\n        var getCustomStorageMap = function (key) {\n            var version = GlobalConfig.version;\n            var rest = XEUtils.toStringJSON(localStorage.getItem(key) || '');\n            return rest && rest._v === version ? rest : { _v: version };\n        };\n        var getRecoverRow = function (list) {\n            var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n            return list.filter(function (row) {\n                var rowid = getRowid($xetable, row);\n                return !!fullAllDataRowIdData[rowid];\n            });\n        };\n        var handleReserveRow = function (reserveRowMap) {\n            var fullDataRowIdData = internalData.fullDataRowIdData;\n            var reserveList = [];\n            XEUtils.each(reserveRowMap, function (item, rowid) {\n                if (fullDataRowIdData[rowid] && $xetable.findRowIndexOf(reserveList, fullDataRowIdData[rowid].row) === -1) {\n                    reserveList.push(fullDataRowIdData[rowid].row);\n                }\n            });\n            return reserveList;\n        };\n        var computeVirtualX = function () {\n            var visibleColumn = internalData.visibleColumn;\n            var tableBody = refTableBody.value;\n            var tableBodyElem = tableBody ? tableBody.$el : null;\n            if (tableBodyElem) {\n                var scrollLeft = tableBodyElem.scrollLeft, clientWidth = tableBodyElem.clientWidth;\n                var endWidth = scrollLeft + clientWidth;\n                var toVisibleIndex = -1;\n                var cWidth = 0;\n                var visibleSize = 0;\n                for (var colIndex = 0, colLen = visibleColumn.length; colIndex < colLen; colIndex++) {\n                    cWidth += visibleColumn[colIndex].renderWidth;\n                    if (toVisibleIndex === -1 && scrollLeft < cWidth) {\n                        toVisibleIndex = colIndex;\n                    }\n                    if (toVisibleIndex >= 0) {\n                        visibleSize++;\n                        if (cWidth > endWidth) {\n                            break;\n                        }\n                    }\n                }\n                return { toVisibleIndex: Math.max(0, toVisibleIndex), visibleSize: Math.max(8, visibleSize) };\n            }\n            return { toVisibleIndex: 0, visibleSize: 8 };\n        };\n        var computeVirtualY = function () {\n            var tableHeader = refTableHeader.value;\n            var tableBody = refTableBody.value;\n            var tableBodyElem = tableBody ? tableBody.$el : null;\n            var vSize = computeSize.value;\n            var rowHeightMaps = computeRowHeightMaps.value;\n            if (tableBodyElem) {\n                var tableHeaderElem = tableHeader ? tableHeader.$el : null;\n                var rowHeight = 0;\n                var firstTrElem = void 0;\n                firstTrElem = tableBodyElem.querySelector('tr');\n                if (!firstTrElem && tableHeaderElem) {\n                    firstTrElem = tableHeaderElem.querySelector('tr');\n                }\n                if (firstTrElem) {\n                    rowHeight = firstTrElem.clientHeight;\n                }\n                if (!rowHeight) {\n                    rowHeight = rowHeightMaps[vSize || 'default'];\n                }\n                var visibleSize = Math.max(8, Math.ceil(tableBodyElem.clientHeight / rowHeight) + 2);\n                return { rowHeight: rowHeight, visibleSize: visibleSize };\n            }\n            return { rowHeight: 0, visibleSize: 8 };\n        };\n        var calculateMergerOffserIndex = function (list, offsetItem, type) {\n            for (var mcIndex = 0, len = list.length; mcIndex < len; mcIndex++) {\n                var mergeItem = list[mcIndex];\n                var startIndex = offsetItem.startIndex, endIndex = offsetItem.endIndex;\n                var mergeStartIndex = mergeItem[type];\n                var mergeSpanNumber = mergeItem[type + 'span'];\n                var mergeEndIndex = mergeStartIndex + mergeSpanNumber;\n                if (mergeStartIndex < startIndex && startIndex < mergeEndIndex) {\n                    offsetItem.startIndex = mergeStartIndex;\n                }\n                if (mergeStartIndex < endIndex && endIndex < mergeEndIndex) {\n                    offsetItem.endIndex = mergeEndIndex;\n                }\n                if (offsetItem.startIndex !== startIndex || offsetItem.endIndex !== endIndex) {\n                    mcIndex = -1;\n                }\n            }\n        };\n        var setMerges = function (merges, mList, rowList) {\n            if (merges) {\n                var treeConfig = props.treeConfig;\n                var visibleColumn_1 = internalData.visibleColumn;\n                if (treeConfig) {\n                    errLog('vxe.error.noTree', ['merge-footer-items']);\n                    return;\n                }\n                if (!XEUtils.isArray(merges)) {\n                    merges = [merges];\n                }\n                merges.forEach(function (item) {\n                    var row = item.row, col = item.col, rowspan = item.rowspan, colspan = item.colspan;\n                    if (rowList && XEUtils.isNumber(row)) {\n                        row = rowList[row];\n                    }\n                    if (XEUtils.isNumber(col)) {\n                        col = visibleColumn_1[col];\n                    }\n                    if ((rowList ? row : XEUtils.isNumber(row)) && col && (rowspan || colspan)) {\n                        rowspan = XEUtils.toNumber(rowspan) || 1;\n                        colspan = XEUtils.toNumber(colspan) || 1;\n                        if (rowspan > 1 || colspan > 1) {\n                            var mcIndex = XEUtils.findIndexOf(mList, function (item) { return (item._row === row || getRowid($xetable, item._row) === getRowid($xetable, row)) && (item._col.id === col || item._col.id === col.id); });\n                            var mergeItem = mList[mcIndex];\n                            if (mergeItem) {\n                                mergeItem.rowspan = rowspan;\n                                mergeItem.colspan = colspan;\n                                mergeItem._rowspan = rowspan;\n                                mergeItem._colspan = colspan;\n                            }\n                            else {\n                                var mergeRowIndex = rowList ? $xetable.findRowIndexOf(rowList, row) : row;\n                                var mergeColIndex = tableMethods.getVTColumnIndex(col);\n                                mList.push({\n                                    row: mergeRowIndex,\n                                    col: mergeColIndex,\n                                    rowspan: rowspan,\n                                    colspan: colspan,\n                                    _row: row,\n                                    _col: col,\n                                    _rowspan: rowspan,\n                                    _colspan: colspan\n                                });\n                            }\n                        }\n                    }\n                });\n            }\n        };\n        var removeMerges = function (merges, mList, rowList) {\n            var rest = [];\n            if (merges) {\n                var treeConfig = props.treeConfig;\n                var visibleColumn_2 = internalData.visibleColumn;\n                if (treeConfig) {\n                    throw new Error(getLog('vxe.error.noTree', ['merge-cells']));\n                }\n                if (!XEUtils.isArray(merges)) {\n                    merges = [merges];\n                }\n                merges.forEach(function (item) {\n                    var row = item.row, col = item.col;\n                    if (rowList && XEUtils.isNumber(row)) {\n                        row = rowList[row];\n                    }\n                    if (XEUtils.isNumber(col)) {\n                        col = visibleColumn_2[col];\n                    }\n                    var mcIndex = XEUtils.findIndexOf(mList, function (item) { return (item._row === row || getRowid($xetable, item._row) === getRowid($xetable, row)) && (item._col.id === col || item._col.id === col.id); });\n                    if (mcIndex > -1) {\n                        var rItems = mList.splice(mcIndex, 1);\n                        rest.push(rItems[0]);\n                    }\n                });\n            }\n            return rest;\n        };\n        var clearAllSort = function () {\n            var tableFullColumn = internalData.tableFullColumn;\n            tableFullColumn.forEach(function (column) {\n                column.order = null;\n            });\n        };\n        var calcHeight = function (key) {\n            var parentHeight = reactData.parentHeight;\n            var val = props[key];\n            var num = 0;\n            if (val) {\n                if (val === 'auto') {\n                    num = parentHeight;\n                }\n                else {\n                    var excludeHeight = $xetable.getExcludeHeight();\n                    if (isScale(val)) {\n                        num = Math.floor((XEUtils.toInteger(val) || 1) / 100 * parentHeight);\n                    }\n                    else {\n                        num = XEUtils.toNumber(val);\n                    }\n                    num = Math.max(40, num - excludeHeight);\n                }\n            }\n            return num;\n        };\n        /**\n         * 还原自定义列操作状态\n         */\n        var restoreCustomStorage = function () {\n            var id = props.id, customConfig = props.customConfig;\n            var collectColumn = internalData.collectColumn;\n            var customOpts = computeCustomOpts.value;\n            var storage = customOpts.storage;\n            var isResizable = storage === true || (storage && storage.resizable);\n            var isVisible = storage === true || (storage && storage.visible);\n            if (customConfig && (isResizable || isVisible)) {\n                var customMap_1 = {};\n                if (!id) {\n                    errLog('vxe.error.reqProp', ['id']);\n                    return;\n                }\n                if (isResizable) {\n                    var columnWidthStorage = getCustomStorageMap(resizableStorageKey)[id];\n                    if (columnWidthStorage) {\n                        XEUtils.each(columnWidthStorage, function (resizeWidth, field) {\n                            customMap_1[field] = { field: field, resizeWidth: resizeWidth };\n                        });\n                    }\n                }\n                if (isVisible) {\n                    var columnVisibleStorage = getCustomStorageMap(visibleStorageKey)[id];\n                    if (columnVisibleStorage) {\n                        var colVisibles = columnVisibleStorage.split('|');\n                        var colHides = colVisibles[0] ? colVisibles[0].split(',') : [];\n                        var colShows = colVisibles[1] ? colVisibles[1].split(',') : [];\n                        colHides.forEach(function (field) {\n                            if (customMap_1[field]) {\n                                customMap_1[field].visible = false;\n                            }\n                            else {\n                                customMap_1[field] = { field: field, visible: false };\n                            }\n                        });\n                        colShows.forEach(function (field) {\n                            if (customMap_1[field]) {\n                                customMap_1[field].visible = true;\n                            }\n                            else {\n                                customMap_1[field] = { field: field, visible: true };\n                            }\n                        });\n                    }\n                }\n                var keyMap_1 = {};\n                XEUtils.eachTree(collectColumn, function (column) {\n                    var colKey = column.getKey();\n                    if (colKey) {\n                        keyMap_1[colKey] = column;\n                    }\n                });\n                XEUtils.each(customMap_1, function (_a, field) {\n                    var visible = _a.visible, resizeWidth = _a.resizeWidth;\n                    var column = keyMap_1[field];\n                    if (column) {\n                        if (XEUtils.isNumber(resizeWidth)) {\n                            column.resizeWidth = resizeWidth;\n                        }\n                        if (XEUtils.isBoolean(visible)) {\n                            column.visible = visible;\n                        }\n                    }\n                });\n            }\n        };\n        /**\n         * 更新数据列的 Map\n         * 牺牲数据组装的耗时，用来换取使用过程中的流畅\n         */\n        var cacheColumnMap = function () {\n            var tableFullColumn = internalData.tableFullColumn, collectColumn = internalData.collectColumn;\n            var fullColumnIdData = internalData.fullColumnIdData = {};\n            var fullColumnFieldData = internalData.fullColumnFieldData = {};\n            var mouseOpts = computeMouseOpts.value;\n            var isGroup = collectColumn.some(hasChildrenList);\n            var isAllOverflow = !!props.showOverflow;\n            var expandColumn;\n            var treeNodeColumn;\n            var checkboxColumn;\n            var radioColumn;\n            var hasFixed;\n            var handleFunc = function (column, index, items, path, parent) {\n                var colid = column.id, property = column.property, fixed = column.fixed, type = column.type, treeNode = column.treeNode;\n                var rest = { column: column, colid: colid, index: index, items: items, parent: parent };\n                if (property) {\n                    if (process.env.NODE_ENV === 'development') {\n                        if (fullColumnFieldData[property]) {\n                            warnLog('vxe.error.colRepet', ['field', property]);\n                        }\n                    }\n                    fullColumnFieldData[property] = rest;\n                }\n                if (!hasFixed && fixed) {\n                    hasFixed = fixed;\n                }\n                if (treeNode) {\n                    if (process.env.NODE_ENV === 'development') {\n                        if (treeNodeColumn) {\n                            warnLog('vxe.error.colRepet', ['tree-node', treeNode]);\n                        }\n                    }\n                    if (!treeNodeColumn) {\n                        treeNodeColumn = column;\n                    }\n                }\n                else if (type === 'expand') {\n                    if (process.env.NODE_ENV === 'development') {\n                        if (expandColumn) {\n                            warnLog('vxe.error.colRepet', ['type', type]);\n                        }\n                    }\n                    if (!expandColumn) {\n                        expandColumn = column;\n                    }\n                }\n                if (process.env.NODE_ENV === 'development') {\n                    if (type === 'checkbox') {\n                        if (checkboxColumn) {\n                            warnLog('vxe.error.colRepet', ['type', type]);\n                        }\n                        if (!checkboxColumn) {\n                            checkboxColumn = column;\n                        }\n                    }\n                    else if (type === 'radio') {\n                        if (radioColumn) {\n                            warnLog('vxe.error.colRepet', ['type', type]);\n                        }\n                        if (!radioColumn) {\n                            radioColumn = column;\n                        }\n                    }\n                }\n                if (isAllOverflow && column.showOverflow === false) {\n                    isAllOverflow = false;\n                }\n                if (fullColumnIdData[colid]) {\n                    errLog('vxe.error.colRepet', ['colId', colid]);\n                }\n                fullColumnIdData[colid] = rest;\n            };\n            if (isGroup) {\n                XEUtils.eachTree(collectColumn, function (column, index, items, path, parent, nodes) {\n                    column.level = nodes.length;\n                    handleFunc(column, index, items, path, parent);\n                });\n            }\n            else {\n                tableFullColumn.forEach(handleFunc);\n            }\n            if (process.env.NODE_ENV === 'development') {\n                if (expandColumn && mouseOpts.area) {\n                    errLog('vxe.error.errConflicts', ['mouse-config.area', 'column.type=expand']);\n                }\n            }\n            reactData.isGroup = isGroup;\n            reactData.treeNodeColumn = treeNodeColumn;\n            reactData.expandColumn = expandColumn;\n            reactData.isAllOverflow = isAllOverflow;\n        };\n        var updateHeight = function () {\n            internalData.customHeight = calcHeight('height');\n            internalData.customMaxHeight = calcHeight('maxHeight');\n        };\n        /**\n         * 列宽算法\n         * 支持 px、%、固定 混合分配\n         * 支持动态列表调整分配\n         * 支持自动分配偏移量\n         * @param {Element} headerElem\n         * @param {Element} bodyElem\n         * @param {Element} footerElem\n         * @param {Number} bodyWidth\n         */\n        var autoCellWidth = function (headerElem, bodyElem, footerElem) {\n            var tableWidth = 0;\n            var minCellWidth = 40; // 列宽最少限制 40px\n            var bodyWidth = bodyElem.clientWidth - 1;\n            var remainWidth = bodyWidth;\n            var meanWidth = remainWidth / 100;\n            var fit = props.fit;\n            var columnStore = reactData.columnStore;\n            var resizeList = columnStore.resizeList, pxMinList = columnStore.pxMinList, pxList = columnStore.pxList, scaleList = columnStore.scaleList, scaleMinList = columnStore.scaleMinList, autoList = columnStore.autoList;\n            // 最小宽\n            pxMinList.forEach(function (column) {\n                var minWidth = parseInt(column.minWidth);\n                tableWidth += minWidth;\n                column.renderWidth = minWidth;\n            });\n            // 最小百分比\n            scaleMinList.forEach(function (column) {\n                var scaleWidth = Math.floor(parseInt(column.minWidth) * meanWidth);\n                tableWidth += scaleWidth;\n                column.renderWidth = scaleWidth;\n            });\n            // 固定百分比\n            scaleList.forEach(function (column) {\n                var scaleWidth = Math.floor(parseInt(column.width) * meanWidth);\n                tableWidth += scaleWidth;\n                column.renderWidth = scaleWidth;\n            });\n            // 固定宽\n            pxList.forEach(function (column) {\n                var width = parseInt(column.width);\n                tableWidth += width;\n                column.renderWidth = width;\n            });\n            // 调整了列宽\n            resizeList.forEach(function (column) {\n                var width = parseInt(column.resizeWidth);\n                tableWidth += width;\n                column.renderWidth = width;\n            });\n            remainWidth -= tableWidth;\n            meanWidth = remainWidth > 0 ? Math.floor(remainWidth / (scaleMinList.length + pxMinList.length + autoList.length)) : 0;\n            if (fit) {\n                if (remainWidth > 0) {\n                    scaleMinList.concat(pxMinList).forEach(function (column) {\n                        tableWidth += meanWidth;\n                        column.renderWidth += meanWidth;\n                    });\n                }\n            }\n            else {\n                meanWidth = minCellWidth;\n            }\n            // 自适应\n            autoList.forEach(function (column) {\n                var width = Math.max(meanWidth, minCellWidth);\n                column.renderWidth = width;\n                tableWidth += width;\n            });\n            if (fit) {\n                /**\n                 * 偏移量算法\n                 * 如果所有列足够放的情况下，从最后动态列开始分配\n                 */\n                var dynamicList = scaleList.concat(scaleMinList).concat(pxMinList).concat(autoList);\n                var dynamicSize = dynamicList.length - 1;\n                if (dynamicSize > 0) {\n                    var odiffer = bodyWidth - tableWidth;\n                    if (odiffer > 0) {\n                        while (odiffer > 0 && dynamicSize >= 0) {\n                            odiffer--;\n                            dynamicList[dynamicSize--].renderWidth++;\n                        }\n                        tableWidth = bodyWidth;\n                    }\n                }\n            }\n            var tableHeight = bodyElem.offsetHeight;\n            var overflowY = bodyElem.scrollHeight > bodyElem.clientHeight;\n            var scrollbarWidth = 0;\n            if (overflowY) {\n                scrollbarWidth = Math.max(bodyElem.offsetWidth - bodyElem.clientWidth, 0);\n            }\n            reactData.scrollbarWidth = scrollbarWidth;\n            reactData.overflowY = overflowY;\n            internalData.tableWidth = tableWidth;\n            internalData.tableHeight = tableHeight;\n            var headerHeight = 0;\n            if (headerElem) {\n                headerHeight = headerElem.clientHeight;\n                nextTick(function () {\n                    // 检测是否同步滚动\n                    if (headerElem && bodyElem && headerElem.scrollLeft !== bodyElem.scrollLeft) {\n                        headerElem.scrollLeft = bodyElem.scrollLeft;\n                    }\n                });\n            }\n            internalData.headerHeight = headerHeight;\n            var overflowX = false;\n            var footerHeight = 0;\n            var scrollbarHeight = 0;\n            if (footerElem) {\n                footerHeight = footerElem.offsetHeight;\n                overflowX = tableWidth > footerElem.clientWidth;\n                if (overflowX) {\n                    scrollbarHeight = Math.max(footerHeight - footerElem.clientHeight, 0);\n                }\n            }\n            else {\n                overflowX = tableWidth > bodyWidth;\n                if (overflowX) {\n                    scrollbarHeight = Math.max(tableHeight - bodyElem.clientHeight, 0);\n                }\n            }\n            internalData.footerHeight = footerHeight;\n            reactData.overflowX = overflowX;\n            reactData.scrollbarHeight = scrollbarHeight;\n            updateHeight();\n            reactData.parentHeight = Math.max(internalData.headerHeight + footerHeight + 20, tablePrivateMethods.getParentHeight());\n            if (overflowX) {\n                tablePrivateMethods.checkScrolling();\n            }\n        };\n        var getOrderField = function (column) {\n            var sortBy = column.sortBy, sortType = column.sortType;\n            return function (row) {\n                var cellValue;\n                if (sortBy) {\n                    cellValue = XEUtils.isFunction(sortBy) ? sortBy({ row: row, column: column }) : XEUtils.get(row, sortBy);\n                }\n                else {\n                    cellValue = tablePrivateMethods.getCellLabel(row, column);\n                }\n                if (!sortType || sortType === 'auto') {\n                    return isNaN(cellValue) ? cellValue : XEUtils.toNumber(cellValue);\n                }\n                else if (sortType === 'number') {\n                    return XEUtils.toNumber(cellValue);\n                }\n                else if (sortType === 'string') {\n                    return XEUtils.toValueString(cellValue);\n                }\n                return cellValue;\n            };\n        };\n        /**\n         * 预编译\n         * 对渲染中的数据提前解析序号及索引。牺牲提前编译耗时换取渲染中额外损耗，使运行时更加流畅\n         */\n        var updateAfterDataIndex = function () {\n            var treeConfig = props.treeConfig;\n            var afterFullData = internalData.afterFullData, fullDataRowIdData = internalData.fullDataRowIdData, fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n            var afterTreeFullData = internalData.afterTreeFullData;\n            var treeOpts = computeTreeOpts.value;\n            if (treeConfig) {\n                XEUtils.eachTree(afterTreeFullData, function (row, index, items, path) {\n                    var rowid = getRowid($xetable, row);\n                    var allrest = fullAllDataRowIdData[rowid];\n                    var seq = path.map(function (num, i) { return i % 2 === 0 ? (Number(num) + 1) : '.'; }).join('');\n                    if (allrest) {\n                        allrest.seq = seq;\n                        allrest._index = index;\n                    }\n                    else {\n                        var rest = { row: row, rowid: rowid, seq: seq, index: -1, $index: -1, _index: index, items: [], parent: null, level: 0 };\n                        fullAllDataRowIdData[rowid] = rest;\n                        fullDataRowIdData[rowid] = rest;\n                    }\n                }, { children: treeOpts.transform ? treeOpts.mapChildren : treeOpts.children });\n            }\n            else {\n                afterFullData.forEach(function (row, index) {\n                    var rowid = getRowid($xetable, row);\n                    var allrest = fullAllDataRowIdData[rowid];\n                    var seq = index + 1;\n                    if (allrest) {\n                        allrest.seq = seq;\n                        allrest._index = index;\n                    }\n                    else {\n                        var rest = { row: row, rowid: rowid, seq: seq, index: -1, $index: -1, _index: index, items: [], parent: null, level: 0 };\n                        fullAllDataRowIdData[rowid] = rest;\n                        fullDataRowIdData[rowid] = rest;\n                    }\n                });\n            }\n        };\n        /**\n         * 如果为虚拟树，将树结构拍平\n         * @returns\n         */\n        var handleVirtualTreeToList = function () {\n            var treeConfig = props.treeConfig;\n            var treeExpandeds = reactData.treeExpandeds;\n            var treeOpts = computeTreeOpts.value;\n            if (treeConfig && treeOpts.transform) {\n                var fullData_1 = [];\n                var expandMaps_1 = new Map();\n                XEUtils.eachTree(internalData.afterTreeFullData, function (row, index, items, path, parent) {\n                    if (!parent || (expandMaps_1.has(parent) && $xetable.findRowIndexOf(treeExpandeds, parent) > -1)) {\n                        expandMaps_1.set(row, 1);\n                        fullData_1.push(row);\n                    }\n                }, { children: treeOpts.mapChildren });\n                internalData.afterFullData = fullData_1;\n                updateScrollYStatus(fullData_1);\n                return fullData_1;\n            }\n            return internalData.afterFullData;\n        };\n        /**\n         * 获取处理后全量的表格数据\n         * 如果存在筛选条件，继续处理\n         */\n        var updateAfterFullData = function () {\n            var treeConfig = props.treeConfig;\n            var tableFullColumn = internalData.tableFullColumn, tableFullData = internalData.tableFullData, tableFullTreeData = internalData.tableFullTreeData;\n            var filterOpts = computeFilterOpts.value;\n            var sortOpts = computeSortOpts.value;\n            var treeOpts = computeTreeOpts.value;\n            var transform = treeOpts.transform;\n            var allRemoteFilter = filterOpts.remote, allFilterMethod = filterOpts.filterMethod;\n            var allRemoteSort = sortOpts.remote, allSortMethod = sortOpts.sortMethod, sortMultiple = sortOpts.multiple, chronological = sortOpts.chronological;\n            var tableData = [];\n            var tableTree = [];\n            // 处理列\n            if (!allRemoteFilter || !allRemoteSort) {\n                var filterColumns_1 = [];\n                var orderColumns_1 = [];\n                tableFullColumn.forEach(function (column) {\n                    var property = column.property, sortable = column.sortable, order = column.order, filters = column.filters;\n                    if (!allRemoteFilter && filters && filters.length) {\n                        var valueList_1 = [];\n                        var itemList_1 = [];\n                        filters.forEach(function (item) {\n                            if (item.checked) {\n                                itemList_1.push(item);\n                                valueList_1.push(item.value);\n                            }\n                        });\n                        if (itemList_1.length) {\n                            filterColumns_1.push({ column: column, valueList: valueList_1, itemList: itemList_1 });\n                        }\n                    }\n                    if (!allRemoteSort && sortable && order) {\n                        orderColumns_1.push({ column: column, field: property, property: property, order: order, sortTime: column.sortTime });\n                    }\n                });\n                if (sortMultiple && chronological && orderColumns_1.length > 1) {\n                    orderColumns_1 = XEUtils.orderBy(orderColumns_1, 'sortTime');\n                }\n                // 处理筛选\n                // 支持单列、多列、组合筛选\n                if (!allRemoteFilter && filterColumns_1.length) {\n                    var handleFilter = function (row) {\n                        return filterColumns_1.every(function (_a) {\n                            var column = _a.column, valueList = _a.valueList, itemList = _a.itemList;\n                            var filterMethod = column.filterMethod, filterRender = column.filterRender;\n                            var compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null;\n                            var compFilterMethod = compConf ? compConf.filterMethod : null;\n                            var defaultFilterMethod = compConf ? compConf.defaultFilterMethod : null;\n                            var cellValue = getCellValue(row, column);\n                            if (filterMethod) {\n                                return itemList.some(function (item) { return filterMethod({ value: item.value, option: item, cellValue: cellValue, row: row, column: column, $table: $xetable }); });\n                            }\n                            else if (compFilterMethod) {\n                                return itemList.some(function (item) { return compFilterMethod({ value: item.value, option: item, cellValue: cellValue, row: row, column: column, $table: $xetable }); });\n                            }\n                            else if (allFilterMethod) {\n                                return allFilterMethod({ options: itemList, values: valueList, cellValue: cellValue, row: row, column: column });\n                            }\n                            else if (defaultFilterMethod) {\n                                return itemList.some(function (item) { return defaultFilterMethod({ value: item.value, option: item, cellValue: cellValue, row: row, column: column, $table: $xetable }); });\n                            }\n                            return valueList.indexOf(XEUtils.get(row, column.property)) > -1;\n                        });\n                    };\n                    if (treeConfig && transform) {\n                        // 筛选虚拟树\n                        tableTree = XEUtils.searchTree(tableFullTreeData, handleFilter, __assign(__assign({}, treeOpts), { original: true }));\n                        tableData = tableTree;\n                    }\n                    else {\n                        tableData = treeConfig ? tableFullTreeData.filter(handleFilter) : tableFullData.filter(handleFilter);\n                        tableTree = tableData;\n                    }\n                }\n                else {\n                    if (treeConfig && transform) {\n                        // 还原虚拟树\n                        tableTree = XEUtils.searchTree(tableFullTreeData, function () { return true; }, __assign(__assign({}, treeOpts), { original: true }));\n                        tableData = tableTree;\n                    }\n                    else {\n                        tableData = treeConfig ? tableFullTreeData.slice(0) : tableFullData.slice(0);\n                        tableTree = tableData;\n                    }\n                }\n                // 处理排序（不能用于树形结构）\n                // 支持单列、多列、组合排序\n                if (!allRemoteSort && orderColumns_1.length) {\n                    if (treeConfig && transform) {\n                        // 虚拟树和列表一样，只能排序根级节点\n                        if (allSortMethod) {\n                            var sortRests = allSortMethod({ data: tableTree, sortList: orderColumns_1, $table: $xetable });\n                            tableTree = XEUtils.isArray(sortRests) ? sortRests : tableTree;\n                        }\n                        else {\n                            tableTree = XEUtils.orderBy(tableTree, orderColumns_1.map(function (_a) {\n                                var column = _a.column, order = _a.order;\n                                return [getOrderField(column), order];\n                            }));\n                        }\n                        tableData = tableTree;\n                    }\n                    else {\n                        if (allSortMethod) {\n                            var sortRests = allSortMethod({ data: tableData, sortList: orderColumns_1, $table: $xetable });\n                            tableData = XEUtils.isArray(sortRests) ? sortRests : tableData;\n                        }\n                        else {\n                            tableData = XEUtils.orderBy(tableData, orderColumns_1.map(function (_a) {\n                                var column = _a.column, order = _a.order;\n                                return [getOrderField(column), order];\n                            }));\n                        }\n                        tableTree = tableData;\n                    }\n                }\n            }\n            else {\n                if (treeConfig && transform) {\n                    // 还原虚拟树\n                    tableTree = XEUtils.searchTree(tableFullTreeData, function () { return true; }, __assign(__assign({}, treeOpts), { original: true }));\n                    tableData = tableTree;\n                }\n                else {\n                    tableData = treeConfig ? tableFullTreeData.slice(0) : tableFullData.slice(0);\n                    tableTree = tableData;\n                }\n            }\n            internalData.afterFullData = tableData;\n            internalData.afterTreeFullData = tableTree;\n            updateAfterDataIndex();\n        };\n        var updateStyle = function () {\n            var border = props.border, showFooter = props.showFooter, allColumnOverflow = props.showOverflow, allColumnHeaderOverflow = props.showHeaderOverflow, allColumnFooterOverflow = props.showFooterOverflow, mouseConfig = props.mouseConfig, spanMethod = props.spanMethod, footerSpanMethod = props.footerSpanMethod, keyboardConfig = props.keyboardConfig;\n            var isGroup = reactData.isGroup, currentRow = reactData.currentRow, tableColumn = reactData.tableColumn, scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad, scrollbarWidth = reactData.scrollbarWidth, scrollbarHeight = reactData.scrollbarHeight, columnStore = reactData.columnStore, editStore = reactData.editStore, mergeList = reactData.mergeList, mergeFooterList = reactData.mergeFooterList, isAllOverflow = reactData.isAllOverflow;\n            var visibleColumn = internalData.visibleColumn, fullColumnIdData = internalData.fullColumnIdData, tableHeight = internalData.tableHeight, tableWidth = internalData.tableWidth, headerHeight = internalData.headerHeight, footerHeight = internalData.footerHeight, elemStore = internalData.elemStore, customHeight = internalData.customHeight, customMaxHeight = internalData.customMaxHeight;\n            var containerList = ['main', 'left', 'right'];\n            var emptyPlaceholderElem = refEmptyPlaceholder.value;\n            var cellOffsetWidth = computeCellOffsetWidth.value;\n            var mouseOpts = computeMouseOpts.value;\n            var keyboardOpts = computeKeyboardOpts.value;\n            var bodyWrapperElem = elemStore['main-body-wrapper'];\n            if (emptyPlaceholderElem) {\n                emptyPlaceholderElem.style.top = headerHeight + \"px\";\n                emptyPlaceholderElem.style.height = bodyWrapperElem ? bodyWrapperElem.offsetHeight - scrollbarHeight + \"px\" : '';\n            }\n            if (customHeight > 0) {\n                if (showFooter) {\n                    customHeight += scrollbarHeight;\n                }\n            }\n            containerList.forEach(function (name, index) {\n                var fixedType = index > 0 ? name : '';\n                var layoutList = ['header', 'body', 'footer'];\n                var isFixedLeft = fixedType === 'left';\n                var fixedColumn = [];\n                var fixedWrapperElem;\n                if (fixedType) {\n                    fixedColumn = isFixedLeft ? columnStore.leftList : columnStore.rightList;\n                    fixedWrapperElem = isFixedLeft ? refLeftContainer.value : refRightContainer.value;\n                }\n                layoutList.forEach(function (layout) {\n                    var wrapperElem = elemStore[name + \"-\" + layout + \"-wrapper\"];\n                    var tableElem = elemStore[name + \"-\" + layout + \"-table\"];\n                    if (layout === 'header') {\n                        // 表头体样式处理\n                        // 横向滚动渲染\n                        var tWidth = tableWidth;\n                        // 如果是使用优化模式\n                        var isOptimize = false;\n                        if (!isGroup) {\n                            if (fixedType) {\n                                if (scrollXLoad || allColumnHeaderOverflow) {\n                                    isOptimize = true;\n                                }\n                            }\n                        }\n                        if (isOptimize) {\n                            tableColumn = fixedColumn;\n                        }\n                        tWidth = tableColumn.reduce(function (previous, column) { return previous + column.renderWidth; }, 0);\n                        if (tableElem) {\n                            tableElem.style.width = tWidth ? tWidth + scrollbarWidth + \"px\" : '';\n                            // 修复 IE 中高度无法自适应问题\n                            if (browse.msie) {\n                                XEUtils.arrayEach(tableElem.querySelectorAll('.vxe-resizable'), function (resizeElem) {\n                                    resizeElem.style.height = resizeElem.parentNode.offsetHeight + \"px\";\n                                });\n                            }\n                        }\n                        var repairElem = elemStore[name + \"-\" + layout + \"-repair\"];\n                        if (repairElem) {\n                            repairElem.style.width = tableWidth + \"px\";\n                        }\n                        var listElem = elemStore[name + \"-\" + layout + \"-list\"];\n                        if (isGroup && listElem) {\n                            XEUtils.arrayEach(listElem.querySelectorAll('.col--group'), function (thElem) {\n                                var colNode = tableMethods.getColumnNode(thElem);\n                                if (colNode) {\n                                    var column_1 = colNode.item;\n                                    var showHeaderOverflow = column_1.showHeaderOverflow;\n                                    var cellOverflow = XEUtils.isBoolean(showHeaderOverflow) ? showHeaderOverflow : allColumnHeaderOverflow;\n                                    var showEllipsis = cellOverflow === 'ellipsis';\n                                    var showTitle = cellOverflow === 'title';\n                                    var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';\n                                    var hasEllipsis = showTitle || showTooltip || showEllipsis;\n                                    var childWidth_1 = 0;\n                                    var countChild_1 = 0;\n                                    if (hasEllipsis) {\n                                        XEUtils.eachTree(column_1.children, function (item) {\n                                            if (!item.children || !column_1.children.length) {\n                                                countChild_1++;\n                                            }\n                                            childWidth_1 += item.renderWidth;\n                                        }, { children: 'children' });\n                                    }\n                                    thElem.style.width = hasEllipsis ? childWidth_1 - countChild_1 - (border ? 2 : 0) + \"px\" : '';\n                                }\n                            });\n                        }\n                    }\n                    else if (layout === 'body') {\n                        var emptyBlockElem = elemStore[name + \"-\" + layout + \"-emptyBlock\"];\n                        if (isNodeElement(wrapperElem)) {\n                            if (customMaxHeight) {\n                                wrapperElem.style.maxHeight = (fixedType ? customMaxHeight - headerHeight - (showFooter ? 0 : scrollbarHeight) : customMaxHeight - headerHeight) + \"px\";\n                            }\n                            else {\n                                if (customHeight > 0) {\n                                    wrapperElem.style.height = (fixedType ? (customHeight > 0 ? customHeight - headerHeight - footerHeight : tableHeight) - (showFooter ? 0 : scrollbarHeight) : customHeight - headerHeight - footerHeight) + \"px\";\n                                }\n                                else {\n                                    wrapperElem.style.height = '';\n                                }\n                            }\n                        }\n                        // 如果是固定列\n                        if (fixedWrapperElem) {\n                            if (isNodeElement(wrapperElem)) {\n                                wrapperElem.style.top = headerHeight + \"px\";\n                            }\n                            fixedWrapperElem.style.height = (customHeight > 0 ? customHeight - headerHeight - footerHeight : tableHeight) + headerHeight + footerHeight - scrollbarHeight * (showFooter ? 2 : 1) + \"px\";\n                            fixedWrapperElem.style.width = fixedColumn.reduce(function (previous, column) { return previous + column.renderWidth; }, isFixedLeft ? 0 : scrollbarWidth) + \"px\";\n                        }\n                        var tWidth = tableWidth;\n                        // 如果是使用优化模式\n                        if (fixedType) {\n                            if (scrollYLoad || (allColumnOverflow ? isAllOverflow : allColumnOverflow)) {\n                                if (!mergeList.length && !spanMethod && !(keyboardConfig && keyboardOpts.isMerge)) {\n                                    tableColumn = fixedColumn;\n                                }\n                                else {\n                                    tableColumn = visibleColumn;\n                                }\n                            }\n                            else {\n                                tableColumn = visibleColumn;\n                            }\n                        }\n                        tWidth = tableColumn.reduce(function (previous, column) { return previous + column.renderWidth; }, 0);\n                        if (tableElem) {\n                            tableElem.style.width = tWidth ? tWidth + \"px\" : '';\n                            // 兼容性处理\n                            tableElem.style.paddingRight = scrollbarWidth && fixedType && (browse['-moz'] || browse.safari) ? scrollbarWidth + \"px\" : '';\n                        }\n                        if (emptyBlockElem) {\n                            emptyBlockElem.style.width = tWidth ? tWidth + \"px\" : '';\n                        }\n                    }\n                    else if (layout === 'footer') {\n                        var tWidth = tableWidth;\n                        // 如果是使用优化模式\n                        if (fixedType) {\n                            if (scrollXLoad || allColumnFooterOverflow) {\n                                if (!mergeFooterList.length || !footerSpanMethod) {\n                                    tableColumn = fixedColumn;\n                                }\n                                else {\n                                    tableColumn = visibleColumn;\n                                }\n                            }\n                            else {\n                                tableColumn = visibleColumn;\n                            }\n                        }\n                        tWidth = tableColumn.reduce(function (previous, column) { return previous + column.renderWidth; }, 0);\n                        if (isNodeElement(wrapperElem)) {\n                            // 如果是固定列\n                            if (fixedWrapperElem) {\n                                wrapperElem.style.top = (customHeight > 0 ? customHeight - footerHeight : tableHeight + headerHeight) + \"px\";\n                            }\n                            wrapperElem.style.marginTop = -Math.max(1, scrollbarHeight) + \"px\";\n                        }\n                        if (tableElem) {\n                            tableElem.style.width = tWidth ? tWidth + scrollbarWidth + \"px\" : '';\n                        }\n                    }\n                    var colgroupElem = elemStore[name + \"-\" + layout + \"-colgroup\"];\n                    if (colgroupElem) {\n                        XEUtils.arrayEach(colgroupElem.children, function (colElem) {\n                            var colid = colElem.getAttribute('name');\n                            if (colid === 'col_gutter') {\n                                colElem.style.width = scrollbarWidth + \"px\";\n                            }\n                            if (fullColumnIdData[colid]) {\n                                var column_2 = fullColumnIdData[colid].column;\n                                var showHeaderOverflow = column_2.showHeaderOverflow, showFooterOverflow = column_2.showFooterOverflow, showOverflow = column_2.showOverflow;\n                                var cellOverflow = void 0;\n                                colElem.style.width = column_2.renderWidth + \"px\";\n                                if (layout === 'header') {\n                                    cellOverflow = XEUtils.isUndefined(showHeaderOverflow) || XEUtils.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;\n                                }\n                                else if (layout === 'footer') {\n                                    cellOverflow = XEUtils.isUndefined(showFooterOverflow) || XEUtils.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow;\n                                }\n                                else {\n                                    cellOverflow = XEUtils.isUndefined(showOverflow) || XEUtils.isNull(showOverflow) ? allColumnOverflow : showOverflow;\n                                }\n                                var showEllipsis = cellOverflow === 'ellipsis';\n                                var showTitle = cellOverflow === 'title';\n                                var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';\n                                var hasEllipsis_1 = showTitle || showTooltip || showEllipsis;\n                                var listElem = elemStore[name + \"-\" + layout + \"-list\"];\n                                // 纵向虚拟滚动不支持动态行高\n                                if (scrollYLoad && !hasEllipsis_1) {\n                                    hasEllipsis_1 = true;\n                                }\n                                if (listElem) {\n                                    XEUtils.arrayEach(listElem.querySelectorAll(\".\" + column_2.id), function (elem) {\n                                        var colspan = parseInt(elem.getAttribute('colspan') || 1);\n                                        var cellElem = elem.querySelector('.vxe-cell');\n                                        var colWidth = column_2.renderWidth;\n                                        if (cellElem) {\n                                            if (colspan > 1) {\n                                                var columnIndex = tableMethods.getColumnIndex(column_2);\n                                                for (var index_1 = 1; index_1 < colspan; index_1++) {\n                                                    var nextColumn = tableMethods.getColumns(columnIndex + index_1);\n                                                    if (nextColumn) {\n                                                        colWidth += nextColumn.renderWidth;\n                                                    }\n                                                }\n                                            }\n                                            cellElem.style.width = hasEllipsis_1 ? colWidth - (cellOffsetWidth * colspan) + \"px\" : '';\n                                        }\n                                    });\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n            if (currentRow) {\n                tableMethods.setCurrentRow(currentRow);\n            }\n            if (mouseConfig && mouseOpts.selected && editStore.selected.row && editStore.selected.column) {\n                $xetable.addCellSelectedClass();\n            }\n            return nextTick();\n        };\n        var checkValidate = function (type) {\n            if ($xetable.triggerValidate) {\n                return $xetable.triggerValidate(type);\n            }\n            return nextTick();\n        };\n        /**\n         * 当单元格发生改变时\n         * 如果存在规则，则校验\n         */\n        var handleChangeCell = function (evnt, params) {\n            checkValidate('blur')\n                .catch(function (e) { return e; })\n                .then(function () {\n                $xetable.handleActived(params, evnt)\n                    .then(function () { return checkValidate('change'); })\n                    .catch(function (e) { return e; });\n            });\n        };\n        var handleDefaultSort = function () {\n            var sortConfig = props.sortConfig;\n            if (sortConfig) {\n                var sortOpts = computeSortOpts.value;\n                var defaultSort = sortOpts.defaultSort;\n                if (defaultSort) {\n                    if (!XEUtils.isArray(defaultSort)) {\n                        defaultSort = [defaultSort];\n                    }\n                    if (defaultSort.length) {\n                        (sortConfig.multiple ? defaultSort : defaultSort.slice(0, 1)).forEach(function (item, index) {\n                            var field = item.field, order = item.order;\n                            if (field && order) {\n                                var column = tableMethods.getColumnByField(field);\n                                if (column && column.sortable) {\n                                    column.order = order;\n                                    column.sortTime = Date.now() + index;\n                                }\n                            }\n                        });\n                        if (!sortOpts.remote) {\n                            tablePrivateMethods.handleTableData(true).then(updateStyle);\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * 处理默认勾选\n         */\n        var handleDefaultSelectionChecked = function () {\n            var checkboxConfig = props.checkboxConfig;\n            if (checkboxConfig) {\n                var fullDataRowIdData_1 = internalData.fullDataRowIdData;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var checkAll = checkboxOpts.checkAll, checkRowKeys = checkboxOpts.checkRowKeys;\n                if (checkAll) {\n                    tableMethods.setAllCheckboxRow(true);\n                }\n                else if (checkRowKeys) {\n                    var defSelection_1 = [];\n                    checkRowKeys.forEach(function (rowid) {\n                        if (fullDataRowIdData_1[rowid]) {\n                            defSelection_1.push(fullDataRowIdData_1[rowid].row);\n                        }\n                    });\n                    tableMethods.setCheckboxRow(defSelection_1, true);\n                }\n            }\n        };\n        /**\n         * 处理单选框默认勾选\n         */\n        var handleDefaultRadioChecked = function () {\n            var _a;\n            var radioConfig = props.radioConfig;\n            if (radioConfig) {\n                var fullDataRowIdData = internalData.fullDataRowIdData;\n                var radioOpts = computeRadioOpts.value;\n                var rowid = radioOpts.checkRowKey, reserve = radioOpts.reserve;\n                if (rowid) {\n                    if (fullDataRowIdData[rowid]) {\n                        tableMethods.setRadioRow(fullDataRowIdData[rowid].row);\n                    }\n                    if (reserve) {\n                        var rowkey = getRowkey($xetable);\n                        internalData.radioReserveRow = (_a = {}, _a[rowkey] = rowid, _a);\n                    }\n                }\n            }\n        };\n        /**\n         * 处理默认展开行\n         */\n        var handleDefaultRowExpand = function () {\n            var expandConfig = props.expandConfig;\n            if (expandConfig) {\n                var fullDataRowIdData_2 = internalData.fullDataRowIdData;\n                var expandOpts = computeExpandOpts.value;\n                var expandAll = expandOpts.expandAll, expandRowKeys = expandOpts.expandRowKeys;\n                if (expandAll) {\n                    tableMethods.setAllRowExpand(true);\n                }\n                else if (expandRowKeys) {\n                    var defExpandeds_1 = [];\n                    expandRowKeys.forEach(function (rowid) {\n                        if (fullDataRowIdData_2[rowid]) {\n                            defExpandeds_1.push(fullDataRowIdData_2[rowid].row);\n                        }\n                    });\n                    tableMethods.setRowExpand(defExpandeds_1, true);\n                }\n            }\n        };\n        var handleRadioReserveRow = function (row) {\n            var radioOpts = computeRadioOpts.value;\n            if (radioOpts.reserve) {\n                internalData.radioReserveRow = row;\n            }\n        };\n        var handleCheckboxReserveRow = function (row, checked) {\n            var checkboxReserveRowMap = internalData.checkboxReserveRowMap;\n            var checkboxOpts = computeCheckboxOpts.value;\n            if (checkboxOpts.reserve) {\n                var rowid = getRowid($xetable, row);\n                if (checked) {\n                    checkboxReserveRowMap[rowid] = row;\n                }\n                else if (checkboxReserveRowMap[rowid]) {\n                    delete checkboxReserveRowMap[rowid];\n                }\n            }\n        };\n        // 还原展开、选中等相关状态\n        var handleReserveStatus = function () {\n            var treeConfig = props.treeConfig;\n            var expandColumn = reactData.expandColumn, currentRow = reactData.currentRow, selectRow = reactData.selectRow, selection = reactData.selection, rowExpandeds = reactData.rowExpandeds, treeExpandeds = reactData.treeExpandeds;\n            var fullDataRowIdData = internalData.fullDataRowIdData, fullAllDataRowIdData = internalData.fullAllDataRowIdData, radioReserveRow = internalData.radioReserveRow;\n            var expandOpts = computeExpandOpts.value;\n            var treeOpts = computeTreeOpts.value;\n            var radioOpts = computeRadioOpts.value;\n            var checkboxOpts = computeCheckboxOpts.value;\n            // 单选框\n            if (selectRow && !fullAllDataRowIdData[getRowid($xetable, selectRow)]) {\n                reactData.selectRow = null; // 刷新单选行状态\n            }\n            // 还原保留选中状态\n            if (radioOpts.reserve && radioReserveRow) {\n                var rowid = getRowid($xetable, radioReserveRow);\n                if (fullDataRowIdData[rowid]) {\n                    tableMethods.setRadioRow(fullDataRowIdData[rowid].row);\n                }\n            }\n            // 复选框\n            reactData.selection = getRecoverRow(selection); // 刷新多选行状态\n            // 还原保留选中状态\n            if (checkboxOpts.reserve) {\n                tableMethods.setCheckboxRow(handleReserveRow(internalData.checkboxReserveRowMap), true);\n            }\n            if (currentRow && !fullAllDataRowIdData[getRowid($xetable, currentRow)]) {\n                reactData.currentRow = null; // 刷新当前行状态\n            }\n            // 行展开\n            reactData.rowExpandeds = expandColumn ? getRecoverRow(rowExpandeds) : []; // 刷新行展开状态\n            // 还原保留状态\n            if (expandColumn && expandOpts.reserve) {\n                tableMethods.setRowExpand(handleReserveRow(internalData.rowExpandedReserveRowMap), true);\n            }\n            // 树展开\n            reactData.treeExpandeds = treeConfig ? getRecoverRow(treeExpandeds) : []; // 刷新树展开状态\n            if (treeConfig && treeOpts.reserve) {\n                tableMethods.setTreeExpand(handleReserveRow(internalData.treeExpandedReserveRowMap), true);\n            }\n        };\n        /**\n         * 处理默认展开树节点\n         */\n        var handleDefaultTreeExpand = function () {\n            var treeConfig = props.treeConfig;\n            if (treeConfig) {\n                var tableFullData_1 = internalData.tableFullData;\n                var treeOpts_1 = computeTreeOpts.value;\n                var expandAll = treeOpts_1.expandAll, expandRowKeys = treeOpts_1.expandRowKeys;\n                if (expandAll) {\n                    tableMethods.setAllTreeExpand(true);\n                }\n                else if (expandRowKeys) {\n                    var defExpandeds_2 = [];\n                    var rowkey_1 = getRowkey($xetable);\n                    expandRowKeys.forEach(function (rowid) {\n                        var matchObj = XEUtils.findTree(tableFullData_1, function (item) { return rowid === XEUtils.get(item, rowkey_1); }, treeOpts_1);\n                        if (matchObj) {\n                            defExpandeds_2.push(matchObj.item);\n                        }\n                    });\n                    tableMethods.setTreeExpand(defExpandeds_2, true);\n                }\n            }\n        };\n        var handleAsyncTreeExpandChilds = function (row) {\n            var treeExpandeds = reactData.treeExpandeds, treeLazyLoadeds = reactData.treeLazyLoadeds;\n            var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n            var treeOpts = computeTreeOpts.value;\n            var checkboxOpts = computeCheckboxOpts.value;\n            var transform = treeOpts.transform, loadMethod = treeOpts.loadMethod;\n            var checkStrictly = checkboxOpts.checkStrictly;\n            var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n            return new Promise(function (resolve) {\n                if (loadMethod) {\n                    treeLazyLoadeds.push(row);\n                    loadMethod({ $table: $xetable, row: row }).catch(function () { return []; }).then(function (childRecords) {\n                        rest.treeLoaded = true;\n                        XEUtils.remove(treeLazyLoadeds, function (item) { return $xetable.eqRow(item, row); });\n                        if (!XEUtils.isArray(childRecords)) {\n                            childRecords = [];\n                        }\n                        if (childRecords) {\n                            tableMethods.loadTreeChildren(row, childRecords).then(function (childRows) {\n                                if (childRows.length && $xetable.findRowIndexOf(treeExpandeds, row) === -1) {\n                                    treeExpandeds.push(row);\n                                }\n                                // 如果当前节点已选中，则展开后子节点也被选中\n                                if (!checkStrictly && tableMethods.isCheckedByCheckboxRow(row)) {\n                                    tableMethods.setCheckboxRow(childRows, true);\n                                }\n                                nextTick().then(function () {\n                                    if (transform) {\n                                        return tablePrivateMethods.handleTableData();\n                                    }\n                                }).then(function () {\n                                    return tableMethods.recalculate();\n                                }).then(function () { return resolve(); });\n                            });\n                        }\n                        else {\n                            nextTick().then(function () { return tableMethods.recalculate(); }).then(function () { return resolve(); });\n                        }\n                    });\n                }\n                else {\n                    resolve();\n                }\n            });\n        };\n        var handleTreeExpandReserve = function (row, expanded) {\n            var treeExpandedReserveRowMap = internalData.treeExpandedReserveRowMap;\n            var treeOpts = computeTreeOpts.value;\n            if (treeOpts.reserve) {\n                var rowid = getRowid($xetable, row);\n                if (expanded) {\n                    treeExpandedReserveRowMap[rowid] = row;\n                }\n                else if (treeExpandedReserveRowMap[rowid]) {\n                    delete treeExpandedReserveRowMap[rowid];\n                }\n            }\n        };\n        var handleAsyncRowExpand = function (row) {\n            var rowExpandeds = reactData.rowExpandeds, expandLazyLoadeds = reactData.expandLazyLoadeds;\n            var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n            var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n            return new Promise(function (resolve) {\n                var expandOpts = computeExpandOpts.value;\n                var loadMethod = expandOpts.loadMethod;\n                if (loadMethod) {\n                    expandLazyLoadeds.push(row);\n                    loadMethod({ $table: $xetable, row: row, rowIndex: tableMethods.getRowIndex(row), $rowIndex: tableMethods.getVMRowIndex(row) }).catch(function (e) { return e; }).then(function () {\n                        rest.expandLoaded = true;\n                        XEUtils.remove(expandLazyLoadeds, function (item) { return $xetable.eqRow(item, row); });\n                        rowExpandeds.push(row);\n                        resolve(nextTick().then(function () { return tableMethods.recalculate(); }));\n                    });\n                }\n                else {\n                    resolve();\n                }\n            });\n        };\n        var handleRowExpandReserve = function (row, expanded) {\n            var rowExpandedReserveRowMap = internalData.rowExpandedReserveRowMap;\n            var expandOpts = computeExpandOpts.value;\n            if (expandOpts.reserve) {\n                var rowid = getRowid($xetable, row);\n                if (expanded) {\n                    rowExpandedReserveRowMap[rowid] = row;\n                }\n                else if (rowExpandedReserveRowMap[rowid]) {\n                    delete rowExpandedReserveRowMap[rowid];\n                }\n            }\n        };\n        var handleDefaultMergeCells = function () {\n            var mergeCells = props.mergeCells;\n            if (mergeCells) {\n                tableMethods.setMergeCells(mergeCells);\n            }\n        };\n        var handleDefaultMergeFooterItems = function () {\n            var mergeFooterItems = props.mergeFooterItems;\n            if (mergeFooterItems) {\n                tableMethods.setMergeFooterItems(mergeFooterItems);\n            }\n        };\n        // 计算可视渲染相关数据\n        var computeScrollLoad = function () {\n            return nextTick().then(function () {\n                var scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad;\n                var scrollXStore = internalData.scrollXStore, scrollYStore = internalData.scrollYStore;\n                var sYOpts = computeSYOpts.value;\n                var sXOpts = computeSXOpts.value;\n                // 计算 X 逻辑\n                if (scrollXLoad) {\n                    var visibleXSize = computeVirtualX().visibleSize;\n                    var offsetXSize = sXOpts.oSize ? XEUtils.toNumber(sXOpts.oSize) : browse.msie ? 10 : (browse.edge ? 5 : 0);\n                    scrollXStore.offsetSize = offsetXSize;\n                    scrollXStore.visibleSize = visibleXSize;\n                    scrollXStore.endIndex = Math.max(scrollXStore.startIndex + scrollXStore.visibleSize + offsetXSize, scrollXStore.endIndex);\n                    tablePrivateMethods.updateScrollXData();\n                }\n                else {\n                    tablePrivateMethods.updateScrollXSpace();\n                }\n                // 计算 Y 逻辑\n                var _a = computeVirtualY(), rowHeight = _a.rowHeight, visibleYSize = _a.visibleSize;\n                scrollYStore.rowHeight = rowHeight;\n                if (scrollYLoad) {\n                    var offsetYSize = sYOpts.oSize ? XEUtils.toNumber(sYOpts.oSize) : browse.msie ? 20 : (browse.edge ? 10 : 0);\n                    scrollYStore.offsetSize = offsetYSize;\n                    scrollYStore.visibleSize = visibleYSize;\n                    scrollYStore.endIndex = Math.max(scrollYStore.startIndex + visibleYSize + offsetYSize, scrollYStore.endIndex);\n                    tablePrivateMethods.updateScrollYData();\n                }\n                else {\n                    tablePrivateMethods.updateScrollYSpace();\n                }\n                reactData.rowHeight = rowHeight;\n                nextTick(updateStyle);\n            });\n        };\n        /**\n         * 加载表格数据\n         * @param {Array} datas 数据\n         */\n        var loadTableData = function (datas) {\n            var keepSource = props.keepSource, treeConfig = props.treeConfig;\n            var editStore = reactData.editStore, oldScrollYLoad = reactData.scrollYLoad;\n            var scrollYStore = internalData.scrollYStore, scrollXStore = internalData.scrollXStore, lastScrollLeft = internalData.lastScrollLeft, lastScrollTop = internalData.lastScrollTop;\n            var treeOpts = computeTreeOpts.value;\n            var transform = treeOpts.transform;\n            var treeData = [];\n            var fullData = datas ? datas.slice(0) : [];\n            if (treeConfig) {\n                if (transform) {\n                    // 树结构自动转换\n                    if (process.env.NODE_ENV === 'development') {\n                        if (!treeOpts.rowField) {\n                            errLog('vxe.error.reqProp', ['tree-config.rowField']);\n                        }\n                        if (!treeOpts.parentField) {\n                            errLog('vxe.error.reqProp', ['tree-config.parentField']);\n                        }\n                        if (!treeOpts.children) {\n                            errLog('vxe.error.reqProp', ['tree-config.children']);\n                        }\n                        if (!treeOpts.mapChildren) {\n                            errLog('vxe.error.reqProp', ['tree-config.mapChildren']);\n                        }\n                        if (treeOpts.children === treeOpts.mapChildren) {\n                            errLog('vxe.error.errConflicts', ['tree-config.children', 'tree-config.mapChildren']);\n                        }\n                        fullData.forEach(function (row) {\n                            if (row[treeOpts.children] && row[treeOpts.children].length) {\n                                warnLog('vxe.error.errConflicts', ['tree-config.transform', \"row.\" + treeOpts.children]);\n                            }\n                        });\n                    }\n                    treeData = XEUtils.toArrayTree(fullData, {\n                        key: treeOpts.rowField,\n                        parentKey: treeOpts.parentField,\n                        children: treeOpts.children,\n                        mapChildren: treeOpts.mapChildren\n                    });\n                    fullData = treeData.slice(0);\n                }\n                else {\n                    treeData = fullData.slice(0);\n                }\n            }\n            scrollYStore.startIndex = 0;\n            scrollYStore.endIndex = 1;\n            scrollXStore.startIndex = 0;\n            scrollXStore.endIndex = 1;\n            editStore.insertList = [];\n            editStore.removeList = [];\n            var sYLoad = updateScrollYStatus(fullData);\n            reactData.scrollYLoad = sYLoad;\n            // 全量数据\n            internalData.tableFullData = fullData;\n            internalData.tableFullTreeData = treeData;\n            // 缓存数据\n            tablePrivateMethods.cacheRowMap(true);\n            // 原始数据\n            internalData.tableSynchData = datas;\n            // 克隆原数据，用于显示编辑状态，与编辑值做对比\n            if (keepSource) {\n                internalData.tableSourceData = XEUtils.clone(fullData, true);\n            }\n            if (process.env.NODE_ENV === 'development') {\n                if (sYLoad) {\n                    if (!(props.height || props.maxHeight)) {\n                        errLog('vxe.error.reqProp', ['table.height | table.max-height | table.scroll-y={enabled: false}']);\n                    }\n                    if (!props.showOverflow) {\n                        warnLog('vxe.error.reqProp', ['table.show-overflow']);\n                    }\n                    if (props.spanMethod) {\n                        warnLog('vxe.error.scrollErrProp', ['table.span-method']);\n                    }\n                }\n            }\n            if ($xetable.clearCellAreas && props.mouseConfig) {\n                $xetable.clearCellAreas();\n                $xetable.clearCopyCellArea();\n            }\n            tableMethods.clearMergeCells();\n            tableMethods.clearMergeFooterItems();\n            tablePrivateMethods.handleTableData(true);\n            tableMethods.updateFooter();\n            return nextTick().then(function () {\n                updateHeight();\n                updateStyle();\n            }).then(function () {\n                computeScrollLoad();\n            }).then(function () {\n                // 是否启用了虚拟滚动\n                if (sYLoad) {\n                    scrollYStore.endIndex = scrollYStore.visibleSize;\n                }\n                handleReserveStatus();\n                tablePrivateMethods.checkSelectionStatus();\n                return new Promise(function (resolve) {\n                    nextTick()\n                        .then(function () { return tableMethods.recalculate(); })\n                        .then(function () {\n                        // 是否变更虚拟滚动\n                        if (oldScrollYLoad === sYLoad) {\n                            restoreScrollLocation($xetable, lastScrollLeft, lastScrollTop).then(resolve);\n                        }\n                        else {\n                            setTimeout(function () { return restoreScrollLocation($xetable, lastScrollLeft, lastScrollTop).then(resolve); });\n                        }\n                    });\n                });\n            });\n        };\n        /**\n         * 处理数据加载默认行为\n         * 默认执行一次，除非被重置\n         */\n        var handleLoadDefaults = function () {\n            handleDefaultSelectionChecked();\n            handleDefaultRadioChecked();\n            handleDefaultRowExpand();\n            handleDefaultTreeExpand();\n            handleDefaultMergeCells();\n            handleDefaultMergeFooterItems();\n            nextTick(function () { return setTimeout(function () { return tableMethods.recalculate(); }); });\n        };\n        /**\n         * 处理初始化的默认行为\n         * 只会执行一次\n         */\n        var handleInitDefaults = function () {\n            handleDefaultSort();\n        };\n        var handleTableColumn = function () {\n            var scrollXLoad = reactData.scrollXLoad;\n            var visibleColumn = internalData.visibleColumn, scrollXStore = internalData.scrollXStore, fullColumnIdData = internalData.fullColumnIdData;\n            var tableColumn = scrollXLoad ? visibleColumn.slice(scrollXStore.startIndex, scrollXStore.endIndex) : visibleColumn.slice(0);\n            tableColumn.forEach(function (column, $index) {\n                var colid = column.id;\n                var rest = fullColumnIdData[colid];\n                if (rest) {\n                    rest.$index = $index;\n                }\n            });\n            reactData.tableColumn = tableColumn;\n        };\n        var loadScrollXData = function () {\n            var mergeList = reactData.mergeList, mergeFooterList = reactData.mergeFooterList;\n            var scrollXStore = internalData.scrollXStore;\n            var startIndex = scrollXStore.startIndex, endIndex = scrollXStore.endIndex, offsetSize = scrollXStore.offsetSize;\n            var _a = computeVirtualX(), toVisibleIndex = _a.toVisibleIndex, visibleSize = _a.visibleSize;\n            var offsetItem = {\n                startIndex: Math.max(0, toVisibleIndex - 1 - offsetSize),\n                endIndex: toVisibleIndex + visibleSize + offsetSize\n            };\n            calculateMergerOffserIndex(mergeList.concat(mergeFooterList), offsetItem, 'col');\n            var offsetStartIndex = offsetItem.startIndex, offsetEndIndex = offsetItem.endIndex;\n            if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {\n                if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {\n                    scrollXStore.startIndex = offsetStartIndex;\n                    scrollXStore.endIndex = offsetEndIndex;\n                    tablePrivateMethods.updateScrollXData();\n                }\n            }\n            tableMethods.closeTooltip();\n        };\n        // 获取所有的列，排除分组\n        var getColumnList = function (columns) {\n            var result = [];\n            columns.forEach(function (column) {\n                result.push.apply(result, (column.children && column.children.length ? getColumnList(column.children) : [column]));\n            });\n            return result;\n        };\n        var parseColumns = function () {\n            var leftList = [];\n            var centerList = [];\n            var rightList = [];\n            var isGroup = reactData.isGroup, columnStore = reactData.columnStore;\n            var sXOpts = computeSXOpts.value;\n            var collectColumn = internalData.collectColumn, tableFullColumn = internalData.tableFullColumn, scrollXStore = internalData.scrollXStore, fullColumnIdData = internalData.fullColumnIdData;\n            // 如果是分组表头，如果子列全部被隐藏，则根列也隐藏\n            if (isGroup) {\n                var leftGroupList_1 = [];\n                var centerGroupList_1 = [];\n                var rightGroupList_1 = [];\n                XEUtils.eachTree(collectColumn, function (column, index, items, path, parent) {\n                    var isColGroup = hasChildrenList(column);\n                    // 如果是分组，必须按组设置固定列，不允许给子列设置固定\n                    if (parent && parent.fixed) {\n                        column.fixed = parent.fixed;\n                    }\n                    if (parent && column.fixed !== parent.fixed) {\n                        errLog('vxe.error.groupFixed');\n                    }\n                    if (isColGroup) {\n                        column.visible = !!XEUtils.findTree(column.children, function (subColumn) { return hasChildrenList(subColumn) ? false : subColumn.visible; });\n                    }\n                    else if (column.visible) {\n                        if (column.fixed === 'left') {\n                            leftList.push(column);\n                        }\n                        else if (column.fixed === 'right') {\n                            rightList.push(column);\n                        }\n                        else {\n                            centerList.push(column);\n                        }\n                    }\n                });\n                collectColumn.forEach(function (column) {\n                    if (column.visible) {\n                        if (column.fixed === 'left') {\n                            leftGroupList_1.push(column);\n                        }\n                        else if (column.fixed === 'right') {\n                            rightGroupList_1.push(column);\n                        }\n                        else {\n                            centerGroupList_1.push(column);\n                        }\n                    }\n                });\n                reactData.tableGroupColumn = leftGroupList_1.concat(centerGroupList_1).concat(rightGroupList_1);\n            }\n            else {\n                // 重新分配列\n                tableFullColumn.forEach(function (column) {\n                    if (column.visible) {\n                        if (column.fixed === 'left') {\n                            leftList.push(column);\n                        }\n                        else if (column.fixed === 'right') {\n                            rightList.push(column);\n                        }\n                        else {\n                            centerList.push(column);\n                        }\n                    }\n                });\n            }\n            var visibleColumn = leftList.concat(centerList).concat(rightList);\n            var scrollXLoad = !!sXOpts.enabled && sXOpts.gt > -1 && sXOpts.gt < tableFullColumn.length;\n            reactData.hasFixedColumn = leftList.length > 0 || rightList.length > 0;\n            Object.assign(columnStore, { leftList: leftList, centerList: centerList, rightList: rightList });\n            if (scrollXLoad && isGroup) {\n                scrollXLoad = false;\n                if (process.env.NODE_ENV === 'development') {\n                    warnLog('vxe.error.scrollXNotGroup');\n                }\n            }\n            if (scrollXLoad) {\n                if (process.env.NODE_ENV === 'development') {\n                    if (props.showHeader && !props.showHeaderOverflow) {\n                        warnLog('vxe.error.reqProp', ['show-header-overflow']);\n                    }\n                    if (props.showFooter && !props.showFooterOverflow) {\n                        warnLog('vxe.error.reqProp', ['show-footer-overflow']);\n                    }\n                    if (props.spanMethod) {\n                        warnLog('vxe.error.scrollErrProp', ['span-method']);\n                    }\n                    if (props.footerSpanMethod) {\n                        warnLog('vxe.error.scrollErrProp', ['footer-span-method']);\n                    }\n                }\n                var visibleSize = computeVirtualX().visibleSize;\n                scrollXStore.startIndex = 0;\n                scrollXStore.endIndex = visibleSize;\n                scrollXStore.visibleSize = visibleSize;\n            }\n            // 如果列被显示/隐藏，则清除合并状态\n            // 如果列被设置为固定，则清除合并状态\n            if (visibleColumn.length !== internalData.visibleColumn.length || !internalData.visibleColumn.every(function (column, index) { return column === visibleColumn[index]; })) {\n                tableMethods.clearMergeCells();\n                tableMethods.clearMergeFooterItems();\n            }\n            reactData.scrollXLoad = scrollXLoad;\n            visibleColumn.forEach(function (column, index) {\n                var colid = column.id;\n                var rest = fullColumnIdData[colid];\n                if (rest) {\n                    rest._index = index;\n                }\n            });\n            internalData.visibleColumn = visibleColumn;\n            handleTableColumn();\n            return tableMethods.updateFooter().then(function () {\n                return tableMethods.recalculate();\n            }).then(function () {\n                tablePrivateMethods.updateCellAreas();\n                return tableMethods.recalculate();\n            });\n        };\n        var handleColumn = function (collectColumn) {\n            internalData.collectColumn = collectColumn;\n            var tableFullColumn = getColumnList(collectColumn);\n            internalData.tableFullColumn = tableFullColumn;\n            cacheColumnMap();\n            restoreCustomStorage();\n            parseColumns().then(function () {\n                if (reactData.scrollXLoad) {\n                    loadScrollXData();\n                }\n            });\n            tableMethods.clearMergeCells();\n            tableMethods.clearMergeFooterItems();\n            tablePrivateMethods.handleTableData(true);\n            if (process.env.NODE_ENV === 'development') {\n                if ((reactData.scrollXLoad || reactData.scrollYLoad) && reactData.expandColumn) {\n                    warnLog('vxe.error.scrollErrProp', ['column.type=expand']);\n                }\n            }\n            return nextTick().then(function () {\n                if ($xetoolbar) {\n                    $xetoolbar.syncUpdate({ collectColumn: collectColumn, $table: $xetable });\n                }\n                return tableMethods.recalculate();\n            });\n        };\n        var updateScrollYStatus = function (fullData) {\n            var treeConfig = props.treeConfig;\n            var sYOpts = computeSYOpts.value;\n            var treeOpts = computeTreeOpts.value;\n            var transform = treeOpts.transform;\n            var scrollYLoad = (transform || !treeConfig) && !!sYOpts.enabled && sYOpts.gt > -1 && sYOpts.gt < fullData.length;\n            reactData.scrollYLoad = scrollYLoad;\n            return scrollYLoad;\n        };\n        /**\n         * 展开与收起树节点\n         * @param rows\n         * @param expanded\n         * @returns\n         */\n        var handleBaseTreeExpand = function (rows, expanded) {\n            var treeExpandeds = reactData.treeExpandeds, treeLazyLoadeds = reactData.treeLazyLoadeds, treeNodeColumn = reactData.treeNodeColumn;\n            var fullAllDataRowIdData = internalData.fullAllDataRowIdData, tableFullData = internalData.tableFullData;\n            var treeOpts = computeTreeOpts.value;\n            var reserve = treeOpts.reserve, lazy = treeOpts.lazy, hasChild = treeOpts.hasChild, children = treeOpts.children, accordion = treeOpts.accordion, toggleMethod = treeOpts.toggleMethod;\n            var result = [];\n            var columnIndex = tableMethods.getColumnIndex(treeNodeColumn);\n            var $columnIndex = tableMethods.getVMColumnIndex(treeNodeColumn);\n            var validRows = toggleMethod ? rows.filter(function (row) { return toggleMethod({ $table: $xetable, expanded: expanded, column: treeNodeColumn, columnIndex: columnIndex, $columnIndex: $columnIndex, row: row }); }) : rows;\n            if (accordion) {\n                validRows = validRows.length ? [validRows[validRows.length - 1]] : [];\n                // 同一级只能展开一个\n                var matchObj_1 = XEUtils.findTree(tableFullData, function (item) { return item === validRows[0]; }, treeOpts);\n                if (matchObj_1) {\n                    XEUtils.remove(treeExpandeds, function (item) { return matchObj_1.items.indexOf(item) > -1; });\n                }\n            }\n            if (expanded) {\n                validRows.forEach(function (row) {\n                    if ($xetable.findRowIndexOf(treeExpandeds, row) === -1) {\n                        var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n                        var isLoad = lazy && row[hasChild] && !rest.treeLoaded && $xetable.findRowIndexOf(treeLazyLoadeds, row) === -1;\n                        // 是否使用懒加载\n                        if (isLoad) {\n                            result.push(handleAsyncTreeExpandChilds(row));\n                        }\n                        else {\n                            if (row[children] && row[children].length) {\n                                treeExpandeds.push(row);\n                            }\n                        }\n                    }\n                });\n            }\n            else {\n                XEUtils.remove(treeExpandeds, function (row) { return $xetable.findRowIndexOf(validRows, row) > -1; });\n            }\n            if (reserve) {\n                validRows.forEach(function (row) { return handleTreeExpandReserve(row, expanded); });\n            }\n            return Promise.all(result).then(function () {\n                return tableMethods.recalculate();\n            });\n        };\n        /**\n         * 虚拟树的展开与收起\n         * @param rows\n         * @param expanded\n         * @returns\n         */\n        var handleVirtualTreeExpand = function (rows, expanded) {\n            return handleBaseTreeExpand(rows, expanded).then(function () {\n                handleVirtualTreeToList();\n                return tablePrivateMethods.handleTableData();\n            }).then(function () {\n                return tableMethods.recalculate();\n            });\n        };\n        /**\n         * 纵向 Y 可视渲染处理\n         */\n        var loadScrollYData = function (evnt) {\n            var mergeList = reactData.mergeList;\n            var scrollYStore = internalData.scrollYStore;\n            var startIndex = scrollYStore.startIndex, endIndex = scrollYStore.endIndex, visibleSize = scrollYStore.visibleSize, offsetSize = scrollYStore.offsetSize, rowHeight = scrollYStore.rowHeight;\n            var scrollBodyElem = (evnt.currentTarget || evnt.target);\n            var scrollTop = scrollBodyElem.scrollTop;\n            var toVisibleIndex = Math.floor(scrollTop / rowHeight);\n            var offsetItem = {\n                startIndex: Math.max(0, toVisibleIndex - 1 - offsetSize),\n                endIndex: toVisibleIndex + visibleSize + offsetSize\n            };\n            calculateMergerOffserIndex(mergeList, offsetItem, 'row');\n            var offsetStartIndex = offsetItem.startIndex, offsetEndIndex = offsetItem.endIndex;\n            if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {\n                if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {\n                    scrollYStore.startIndex = offsetStartIndex;\n                    scrollYStore.endIndex = offsetEndIndex;\n                    tablePrivateMethods.updateScrollYData();\n                }\n            }\n        };\n        var createGetRowCacheProp = function (prop) {\n            return function (row) {\n                var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                if (row) {\n                    var rowid = getRowid($xetable, row);\n                    var rest = fullAllDataRowIdData[rowid];\n                    if (rest) {\n                        return rest[prop];\n                    }\n                }\n                return -1;\n            };\n        };\n        var createGetColumnCacheProp = function (prop) {\n            return function (column) {\n                var fullColumnIdData = internalData.fullColumnIdData;\n                if (column) {\n                    var rest = fullColumnIdData[column.id];\n                    if (rest) {\n                        return rest[prop];\n                    }\n                }\n                return -1;\n            };\n        };\n        var debounceScrollY = XEUtils.debounce(function (evnt) {\n            loadScrollYData(evnt);\n        }, 20, { leading: false, trailing: true });\n        var keyCtxTimeout;\n        tableMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $table: $xetable, $event: evnt }, params));\n            },\n            /**\n             * 重置表格的一切数据状态\n             */\n            clearAll: function () {\n                return clearTableAllStatus($xetable);\n            },\n            /**\n             * 同步 data 数据（即将废弃）\n             * 如果用了该方法，那么组件将不再记录增删改的状态，只能自行实现对应逻辑\n             * 对于某些特殊的场景，比如深层树节点元素发生变动时可能会用到\n             */\n            syncData: function () {\n                return nextTick().then(function () {\n                    reactData.tableData = [];\n                    emit('update:data', internalData.tableFullData);\n                    return nextTick();\n                });\n            },\n            /**\n             * 手动处理数据，用于手动排序与筛选\n             * 对于手动更改了排序、筛选...等条件后需要重新处理数据时可能会用到\n             */\n            updateData: function () {\n                var scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad;\n                return tablePrivateMethods.handleTableData(true).then(function () {\n                    tableMethods.updateFooter();\n                    if (scrollXLoad || scrollYLoad) {\n                        if (scrollXLoad) {\n                            tablePrivateMethods.updateScrollXSpace();\n                        }\n                        if (scrollYLoad) {\n                            tablePrivateMethods.updateScrollYSpace();\n                        }\n                        return tableMethods.refreshScroll();\n                    }\n                }).then(function () {\n                    tablePrivateMethods.updateCellAreas();\n                    return tableMethods.recalculate(true);\n                }).then(function () {\n                    // 存在滚动行为未结束情况\n                    setTimeout(function () { return $xetable.recalculate(); }, 50);\n                });\n            },\n            /**\n             * 重新加载数据，不会清空表格状态\n             * @param {Array} datas 数据\n             */\n            loadData: function (datas) {\n                var inited = internalData.inited, initStatus = internalData.initStatus;\n                return loadTableData(datas).then(function () {\n                    internalData.inited = true;\n                    internalData.initStatus = true;\n                    if (!initStatus) {\n                        handleLoadDefaults();\n                    }\n                    if (!inited) {\n                        handleInitDefaults();\n                    }\n                    return tableMethods.recalculate();\n                });\n            },\n            /**\n             * 重新加载数据，会清空表格状态\n             * @param {Array} datas 数据\n             */\n            reloadData: function (datas) {\n                var inited = internalData.inited;\n                return tableMethods.clearAll()\n                    .then(function () {\n                    internalData.inited = true;\n                    internalData.initStatus = true;\n                    return loadTableData(datas);\n                })\n                    .then(function () {\n                    handleLoadDefaults();\n                    if (!inited) {\n                        handleInitDefaults();\n                    }\n                    return tableMethods.recalculate();\n                });\n            },\n            /**\n             * 局部加载行数据并恢复到初始状态\n             * 对于行数据需要局部更改的场景中可能会用到\n             * @param {Row} row 行对象\n             * @param {Object} record 新数据\n             * @param {String} field 字段名\n             */\n            reloadRow: function (row, record, field) {\n                var keepSource = props.keepSource;\n                var tableData = reactData.tableData;\n                var tableSourceData = internalData.tableSourceData;\n                if (keepSource) {\n                    var rowIndex = tableMethods.getRowIndex(row);\n                    var oRow = tableSourceData[rowIndex];\n                    if (oRow && row) {\n                        if (field) {\n                            var newValue = XEUtils.get(record || row, field);\n                            XEUtils.set(row, field, newValue);\n                            XEUtils.set(oRow, field, newValue);\n                        }\n                        else {\n                            var newRecord = XEUtils.clone(__assign({}, record), true);\n                            XEUtils.destructuring(oRow, Object.assign(row, newRecord));\n                        }\n                    }\n                    reactData.tableData = tableData.slice(0);\n                }\n                else {\n                    if (process.env.NODE_ENV === 'development') {\n                        warnLog('vxe.error.reqProp', ['keep-source']);\n                    }\n                }\n                return nextTick();\n            },\n            /**\n             * 用于树结构，给行数据加载子节点\n             */\n            loadTreeChildren: function (row, childRecords) {\n                var keepSource = props.keepSource;\n                var tableSourceData = internalData.tableSourceData, fullDataRowIdData = internalData.fullDataRowIdData, fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                var treeOpts = computeTreeOpts.value;\n                var transform = treeOpts.transform, children = treeOpts.children, mapChildren = treeOpts.mapChildren;\n                var parentRest = fullAllDataRowIdData[getRowid($xetable, row)];\n                var parentLevel = parentRest ? parentRest.level : 0;\n                return tableMethods.createData(childRecords).then(function (rows) {\n                    if (keepSource) {\n                        var rowid_1 = getRowid($xetable, row);\n                        var matchObj = XEUtils.findTree(tableSourceData, function (item) { return rowid_1 === getRowid($xetable, item); }, treeOpts);\n                        if (matchObj) {\n                            matchObj.item[children] = XEUtils.clone(rows, true);\n                        }\n                    }\n                    XEUtils.eachTree(rows, function (childRow, index, items, path, parent, nodes) {\n                        var rowid = getRowid($xetable, childRow);\n                        var rest = { row: childRow, rowid: rowid, seq: -1, index: index, _index: -1, $index: -1, items: items, parent: parent, level: parentLevel + nodes.length };\n                        fullDataRowIdData[rowid] = rest;\n                        fullAllDataRowIdData[rowid] = rest;\n                    }, treeOpts);\n                    row[children] = rows;\n                    if (transform) {\n                        row[mapChildren] = rows;\n                    }\n                    updateAfterDataIndex();\n                    return rows;\n                });\n            },\n            /**\n             * 加载列配置\n             * 对于表格列需要重载、局部递增场景下可能会用到\n             * @param {ColumnInfo} columns 列配置\n             */\n            loadColumn: function (columns) {\n                var collectColumn = XEUtils.mapTree(columns, function (column) { return reactive(Cell.createColumn($xetable, column)); });\n                return handleColumn(collectColumn);\n            },\n            /**\n             * 加载列配置并恢复到初始状态\n             * 对于表格列需要重载、局部递增场景下可能会用到\n             * @param {ColumnInfo} columns 列配置\n             */\n            reloadColumn: function (columns) {\n                return tableMethods.clearAll().then(function () {\n                    return tableMethods.loadColumn(columns);\n                });\n            },\n            /**\n             * 根据 tr 元素获取对应的 row 信息\n             * @param {Element} tr 元素\n             */\n            getRowNode: function (tr) {\n                if (tr) {\n                    var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                    var rowid = tr.getAttribute('rowid');\n                    if (rowid) {\n                        var rest = fullAllDataRowIdData[rowid];\n                        if (rest) {\n                            return { rowid: rest.rowid, item: rest.row, index: rest.index, items: rest.items, parent: rest.parent };\n                        }\n                    }\n                }\n                return null;\n            },\n            /**\n             * 根据 th/td 元素获取对应的 column 信息\n             * @param {Element} cell 元素\n             */\n            getColumnNode: function (cell) {\n                if (cell) {\n                    var fullColumnIdData = internalData.fullColumnIdData;\n                    var colid = cell.getAttribute('colid');\n                    if (colid) {\n                        var rest = fullColumnIdData[colid];\n                        if (rest) {\n                            return { colid: rest.colid, item: rest.column, index: rest.index, items: rest.items, parent: rest.parent };\n                        }\n                    }\n                }\n                return null;\n            },\n            /**\n             * 根据 row 获取序号\n             * @param {Row} row 行对象\n             */\n            getRowSeq: createGetRowCacheProp('seq'),\n            /**\n             * 根据 row 获取相对于 data 中的索引\n             * @param {Row} row 行对象\n             */\n            getRowIndex: createGetRowCacheProp('index'),\n            /**\n             * 根据 row 获取相对于当前数据中的索引\n             * @param {Row} row 行对象\n             */\n            getVTRowIndex: createGetRowCacheProp('_index'),\n            /**\n             * 根据 row 获取渲染中的虚拟索引\n             * @param {Row} row 行对象\n             */\n            getVMRowIndex: createGetRowCacheProp('$index'),\n            /**\n             * 根据 column 获取相对于 columns 中的索引\n             * @param {ColumnInfo} column 列配置\n             */\n            getColumnIndex: createGetColumnCacheProp('index'),\n            /**\n             * 根据 column 获取相对于当前表格列中的索引\n             * @param {ColumnInfo} column 列配置\n             */\n            getVTColumnIndex: createGetColumnCacheProp('_index'),\n            /**\n             * 根据 column 获取渲染中的虚拟索引\n             * @param {ColumnInfo} column 列配置\n             */\n            getVMColumnIndex: createGetColumnCacheProp('$index'),\n            /**\n             * 创建 data 对象\n             * 对于某些特殊场景可能会用到，会自动对数据的字段名进行检测，如果不存在就自动定义\n             * @param {Array} records 新数据\n             */\n            createData: function (records) {\n                var treeConfig = props.treeConfig;\n                var treeOpts = computeTreeOpts.value;\n                var handleRrecord = function (record) { return reactive(tablePrivateMethods.defineField(Object.assign({}, record))); };\n                var rows = treeConfig ? XEUtils.mapTree(records, handleRrecord, treeOpts) : records.map(handleRrecord);\n                return nextTick().then(function () { return rows; });\n            },\n            /**\n             * 创建 Row|Rows 对象\n             * 对于某些特殊场景需要对数据进行手动插入时可能会用到\n             * @param {Array/Object} records 新数据\n             */\n            createRow: function (records) {\n                var isArr = XEUtils.isArray(records);\n                if (!isArr) {\n                    records = [records];\n                }\n                return nextTick().then(function () { return tableMethods.createData(records).then(function (rows) { return isArr ? rows : rows[0]; }); });\n            },\n            /**\n             * 还原数据\n             * 如果不传任何参数，则还原整个表格\n             * 如果传 row 则还原一行\n             * 如果传 rows 则还原多行\n             * 如果还额外传了 field 则还原指定的单元格数据\n             */\n            revertData: function (rows, field) {\n                var keepSource = props.keepSource;\n                var tableSourceData = internalData.tableSourceData, tableFullData = internalData.tableFullData;\n                if (!keepSource) {\n                    if (process.env.NODE_ENV === 'development') {\n                        warnLog('vxe.error.reqProp', ['keep-source']);\n                    }\n                    return nextTick();\n                }\n                var targetRows = rows;\n                if (rows) {\n                    if (!XEUtils.isArray(rows)) {\n                        targetRows = [rows];\n                    }\n                }\n                else {\n                    targetRows = XEUtils.toArray($xetable.getUpdateRecords());\n                }\n                if (targetRows.length) {\n                    targetRows.forEach(function (row) {\n                        if (!tableMethods.isInsertByRow(row)) {\n                            var rowIndex = $xetable.findRowIndexOf(tableFullData, row);\n                            var oRow = tableSourceData[rowIndex];\n                            if (oRow && row) {\n                                if (field) {\n                                    XEUtils.set(row, field, XEUtils.clone(XEUtils.get(oRow, field), true));\n                                }\n                                else {\n                                    XEUtils.destructuring(row, XEUtils.clone(oRow, true));\n                                }\n                            }\n                        }\n                    });\n                }\n                if (rows) {\n                    return nextTick();\n                }\n                return tableMethods.reloadData(tableSourceData);\n            },\n            /**\n             * 清空单元格内容\n             * 如果不创参数，则清空整个表格内容\n             * 如果传 row 则清空一行内容\n             * 如果传 rows 则清空多行内容\n             * 如果还额外传了 field 则清空指定单元格内容\n             * @param {Array/Row} rows 行数据\n             * @param {String} field 字段名\n             */\n            clearData: function (rows, field) {\n                var tableFullData = internalData.tableFullData, visibleColumn = internalData.visibleColumn;\n                if (!arguments.length) {\n                    rows = tableFullData;\n                }\n                else if (rows && !XEUtils.isArray(rows)) {\n                    rows = [rows];\n                }\n                if (field) {\n                    rows.forEach(function (row) { return XEUtils.set(row, field, null); });\n                }\n                else {\n                    rows.forEach(function (row) {\n                        visibleColumn.forEach(function (column) {\n                            if (column.property) {\n                                setCellValue(row, column, null);\n                            }\n                        });\n                    });\n                }\n                return nextTick();\n            },\n            /**\n             * 检查是否为临时行数据\n             * @param {Row} row 行对象\n             */\n            isInsertByRow: function (row) {\n                var editStore = reactData.editStore;\n                return $xetable.findRowIndexOf(editStore.insertList, row) > -1;\n            },\n            /**\n             * 删除所有新增的临时数据\n             * @returns\n             */\n            removeInsertRow: function () {\n                var editStore = reactData.editStore;\n                return $xetable.remove(editStore.insertList);\n            },\n            /**\n             * 检查行或列数据是否发生改变\n             * @param {Row} row 行对象\n             * @param {String} field 字段名\n             */\n            isUpdateByRow: function (row, field) {\n                var _a, _b;\n                var keepSource = props.keepSource, treeConfig = props.treeConfig;\n                var visibleColumn = internalData.visibleColumn, tableSourceData = internalData.tableSourceData, fullDataRowIdData = internalData.fullDataRowIdData;\n                var treeOpts = computeTreeOpts.value;\n                if (keepSource) {\n                    var oRow = void 0, property = void 0;\n                    var rowid_2 = getRowid($xetable, row);\n                    // 新增的数据不需要检测\n                    if (!fullDataRowIdData[rowid_2]) {\n                        return false;\n                    }\n                    if (treeConfig) {\n                        var children = treeOpts.children;\n                        var matchObj = XEUtils.findTree(tableSourceData, function (item) { return rowid_2 === getRowid($xetable, item); }, treeOpts);\n                        row = Object.assign({}, row, (_a = {}, _a[children] = null, _a));\n                        if (matchObj) {\n                            oRow = Object.assign({}, matchObj.item, (_b = {}, _b[children] = null, _b));\n                        }\n                    }\n                    else {\n                        var oRowIndex = fullDataRowIdData[rowid_2].index;\n                        oRow = tableSourceData[oRowIndex];\n                    }\n                    if (oRow) {\n                        if (arguments.length > 1) {\n                            return !eqCellValue(oRow, row, field);\n                        }\n                        for (var index = 0, len = visibleColumn.length; index < len; index++) {\n                            property = visibleColumn[index].property;\n                            if (property && !eqCellValue(oRow, row, property)) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            },\n            /**\n             * 获取表格的可视列，也可以指定索引获取列\n             * @param {Number} columnIndex 索引\n             */\n            getColumns: function (columnIndex) {\n                var columns = internalData.visibleColumn;\n                return XEUtils.isUndefined(columnIndex) ? columns.slice(0) : columns[columnIndex];\n            },\n            /**\n             * 根据列的唯一主键获取列\n             * @param {String} colid 列主键\n             */\n            getColumnById: function (colid) {\n                var fullColumnIdData = internalData.fullColumnIdData;\n                return fullColumnIdData[colid] ? fullColumnIdData[colid].column : null;\n            },\n            /**\n             * 根据列的字段名获取列\n             * @param {String} field 字段名\n             */\n            getColumnByField: function (field) {\n                var fullColumnFieldData = internalData.fullColumnFieldData;\n                return fullColumnFieldData[field] ? fullColumnFieldData[field].column : null;\n            },\n            /**\n             * 获取当前表格的列\n             * 收集到的全量列、全量表头列、处理条件之后的全量表头列、当前渲染中的表头列\n             */\n            getTableColumn: function () {\n                return {\n                    collectColumn: internalData.collectColumn.slice(0),\n                    fullColumn: internalData.tableFullColumn.slice(0),\n                    visibleColumn: internalData.visibleColumn.slice(0),\n                    tableColumn: reactData.tableColumn.slice(0)\n                };\n            },\n            /**\n             * 获取数据，和 data 的行为一致，也可以指定索引获取数据\n             */\n            getData: function (rowIndex) {\n                var tableSynchData = props.data || internalData.tableSynchData;\n                return XEUtils.isUndefined(rowIndex) ? tableSynchData.slice(0) : tableSynchData[rowIndex];\n            },\n            /**\n             * 用于多选行，获取已选中的数据\n             */\n            getCheckboxRecords: function (isFull) {\n                var treeConfig = props.treeConfig;\n                var tableFullData = internalData.tableFullData, afterFullData = internalData.afterFullData, afterTreeFullData = internalData.afterTreeFullData, tableFullTreeData = internalData.tableFullTreeData;\n                var treeOpts = computeTreeOpts.value;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var transform = treeOpts.transform, children = treeOpts.children, mapChildren = treeOpts.mapChildren;\n                var property = checkboxOpts.checkField;\n                var rowList = [];\n                var currTableData = isFull ? (transform ? tableFullTreeData : tableFullData) : (transform ? afterTreeFullData : afterFullData);\n                if (property) {\n                    if (treeConfig) {\n                        rowList = XEUtils.filterTree(currTableData, function (row) { return XEUtils.get(row, property); }, { children: transform ? mapChildren : children });\n                    }\n                    else {\n                        rowList = currTableData.filter(function (row) { return XEUtils.get(row, property); });\n                    }\n                }\n                else {\n                    var selection_1 = reactData.selection;\n                    if (treeConfig) {\n                        rowList = XEUtils.filterTree(currTableData, function (row) { return $xetable.findRowIndexOf(selection_1, row) > -1; }, { children: transform ? mapChildren : children });\n                    }\n                    else {\n                        rowList = currTableData.filter(function (row) { return $xetable.findRowIndexOf(selection_1, row) > -1; });\n                    }\n                }\n                return rowList;\n            },\n            /**\n             * 只对 tree-config 有效，获取行的父级\n             */\n            getParentRow: function (rowOrRowid) {\n                var treeConfig = props.treeConfig;\n                var fullDataRowIdData = internalData.fullDataRowIdData;\n                if (rowOrRowid && treeConfig) {\n                    var rowid = void 0;\n                    if (XEUtils.isString(rowOrRowid)) {\n                        rowid = rowOrRowid;\n                    }\n                    else {\n                        rowid = getRowid($xetable, rowOrRowid);\n                    }\n                    if (rowid) {\n                        return fullDataRowIdData[rowid] ? fullDataRowIdData[rowid].parent : null;\n                    }\n                }\n                return null;\n            },\n            /**\n             * 根据行的唯一主键获取行\n             * @param {String/Number} rowid 行主键\n             */\n            getRowById: function (rowid) {\n                var fullDataRowIdData = internalData.fullDataRowIdData;\n                return fullDataRowIdData[rowid] ? fullDataRowIdData[rowid].row : null;\n            },\n            /**\n             * 根据行获取行的唯一主键\n             * @param {Row} row 行对象\n             */\n            getRowid: function (row) {\n                return getRowid($xetable, row);\n            },\n            /**\n             * 获取处理后的表格数据\n             * 如果存在筛选条件，继续处理\n             * 如果存在排序，继续处理\n             */\n            getTableData: function () {\n                var tableData = reactData.tableData, footerTableData = reactData.footerTableData;\n                var tableFullData = internalData.tableFullData, afterFullData = internalData.afterFullData;\n                return {\n                    fullData: tableFullData.slice(0),\n                    visibleData: afterFullData.slice(0),\n                    tableData: tableData.slice(0),\n                    footerData: footerTableData.slice(0)\n                };\n            },\n            /**\n             * 隐藏指定列\n             */\n            hideColumn: function (fieldOrColumn) {\n                var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                if (column) {\n                    column.visible = false;\n                }\n                return tablePrivateMethods.handleCustom();\n            },\n            /**\n             * 显示指定列\n             */\n            showColumn: function (fieldOrColumn) {\n                var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                if (column) {\n                    column.visible = true;\n                }\n                return tablePrivateMethods.handleCustom();\n            },\n            /**\n             * 手动重置列的显示隐藏、列宽拖动的状态；\n             * 如果为 true 则重置所有状态\n             * 如果已关联工具栏，则会同步更新\n             */\n            resetColumn: function (options) {\n                var tableFullColumn = internalData.tableFullColumn;\n                var customOpts = computeCustomOpts.value;\n                var checkMethod = customOpts.checkMethod;\n                var opts = Object.assign({ visible: true, resizable: options === true }, options);\n                tableFullColumn.forEach(function (column) {\n                    if (opts.resizable) {\n                        column.resizeWidth = 0;\n                    }\n                    if (!checkMethod || checkMethod({ column: column })) {\n                        column.visible = column.defaultVisible;\n                    }\n                });\n                if (opts.resizable) {\n                    tablePrivateMethods.saveCustomResizable(true);\n                }\n                return tablePrivateMethods.handleCustom();\n            },\n            /**\n             * 刷新列信息\n             * 将固定的列左边、右边分别靠边\n             */\n            refreshColumn: function () {\n                return parseColumns().then(function () {\n                    return tableMethods.refreshScroll();\n                }).then(function () {\n                    return tableMethods.recalculate();\n                });\n            },\n            /**\n             * 刷新滚动操作，手动同步滚动相关位置（对于某些特殊的操作，比如滚动条错位、固定列不同步）\n             */\n            refreshScroll: function () {\n                var lastScrollLeft = internalData.lastScrollLeft, lastScrollTop = internalData.lastScrollTop;\n                var tableBody = refTableBody.value;\n                var tableFooter = refTableFooter.value;\n                var leftBody = refTableLeftBody.value;\n                var rightBody = refTableRightBody.value;\n                var tableBodyElem = tableBody ? tableBody.$el : null;\n                var leftBodyElem = leftBody ? leftBody.$el : null;\n                var rightBodyElem = rightBody ? rightBody.$el : null;\n                var tableFooterElem = tableFooter ? tableFooter.$el : null;\n                return new Promise(function (resolve) {\n                    // 还原滚动条位置\n                    if (lastScrollLeft || lastScrollTop) {\n                        return restoreScrollLocation($xetable, lastScrollLeft, lastScrollTop).then(resolve).then(function () {\n                            // 存在滚动行为未结束情况\n                            setTimeout(resolve, 30);\n                        });\n                    }\n                    // 重置\n                    setScrollTop(tableBodyElem, lastScrollTop);\n                    setScrollTop(leftBodyElem, lastScrollTop);\n                    setScrollTop(rightBodyElem, lastScrollTop);\n                    setScrollLeft(tableFooterElem, lastScrollLeft);\n                    // 存在滚动行为未结束情况\n                    setTimeout(resolve, 30);\n                });\n            },\n            /**\n             * 计算单元格列宽，动态分配可用剩余空间\n             * 支持 width=? width=?px width=?% min-width=? min-width=?px min-width=?%\n             */\n            recalculate: function (refull) {\n                var tableHeader = refTableHeader.value;\n                var tableBody = refTableBody.value;\n                var tableFooter = refTableFooter.value;\n                var bodyElem = tableBody ? tableBody.$el : null;\n                var headerElem = tableHeader ? tableHeader.$el : null;\n                var footerElem = tableFooter ? tableFooter.$el : null;\n                if (bodyElem) {\n                    autoCellWidth(headerElem, bodyElem, footerElem);\n                    if (refull === true) {\n                        // 初始化时需要在列计算之后再执行优化运算，达到最优显示效果\n                        return computeScrollLoad().then(function () {\n                            autoCellWidth(headerElem, bodyElem, footerElem);\n                            return computeScrollLoad();\n                        });\n                    }\n                }\n                return computeScrollLoad();\n            },\n            openTooltip: function (target, content) {\n                var $commTip = refCommTooltip.value;\n                if ($commTip) {\n                    return $commTip.open(target, content);\n                }\n                return nextTick();\n            },\n            /**\n             * 关闭 tooltip\n             */\n            closeTooltip: function () {\n                var tooltipStore = reactData.tooltipStore;\n                var $tooltip = refTooltip.value;\n                var $commTip = refCommTooltip.value;\n                if (tooltipStore.visible) {\n                    Object.assign(tooltipStore, {\n                        row: null,\n                        column: null,\n                        content: null,\n                        visible: false\n                    });\n                    if ($tooltip) {\n                        $tooltip.close();\n                    }\n                }\n                if ($commTip) {\n                    $commTip.close();\n                }\n                return nextTick();\n            },\n            /**\n             * 判断列头复选框是否被选中\n             */\n            isAllCheckboxChecked: function () {\n                return reactData.isAllSelected;\n            },\n            /**\n             * 判断列头复选框是否被半选\n             */\n            isAllCheckboxIndeterminate: function () {\n                return !reactData.isAllSelected && reactData.isIndeterminate;\n            },\n            /**\n             * 获取复选框半选状态的行数据\n             */\n            getCheckboxIndeterminateRecords: function (isFull) {\n                var treeConfig = props.treeConfig;\n                var afterFullData = internalData.afterFullData;\n                var treeIndeterminates = reactData.treeIndeterminates;\n                if (treeConfig) {\n                    return isFull ? treeIndeterminates.slice(0) : treeIndeterminates.filter(function (row) { return $xetable.findRowIndexOf(afterFullData, row) > -1; });\n                }\n                return [];\n            },\n            /**\n             * 用于多选行，设置行为选中状态，第二个参数为选中与否\n             * @param {Array/Row} rows 行数据\n             * @param {Boolean} value 是否选中\n             */\n            setCheckboxRow: function (rows, value) {\n                if (rows && !XEUtils.isArray(rows)) {\n                    rows = [rows];\n                }\n                rows.forEach(function (row) { return tablePrivateMethods.handleSelectRow({ row: row }, !!value); });\n                return nextTick();\n            },\n            isCheckedByCheckboxRow: function (row) {\n                var selection = reactData.selection;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var property = checkboxOpts.checkField;\n                if (property) {\n                    return XEUtils.get(row, property);\n                }\n                return $xetable.findRowIndexOf(selection, row) > -1;\n            },\n            isIndeterminateByCheckboxRow: function (row) {\n                var treeIndeterminates = reactData.treeIndeterminates;\n                return $xetable.findRowIndexOf(treeIndeterminates, row) > -1 && !tableMethods.isCheckedByCheckboxRow(row);\n            },\n            /**\n             * 多选，切换某一行的选中状态\n             */\n            toggleCheckboxRow: function (row) {\n                tablePrivateMethods.handleToggleCheckRowEvent(null, { row: row });\n                return nextTick();\n            },\n            /**\n             * 用于多选行，设置所有行的选中状态\n             * @param {Boolean} value 是否选中\n             */\n            setAllCheckboxRow: function (value) {\n                var treeConfig = props.treeConfig;\n                var selection = reactData.selection;\n                var afterFullData = internalData.afterFullData, checkboxReserveRowMap = internalData.checkboxReserveRowMap;\n                var treeOpts = computeTreeOpts.value;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var property = checkboxOpts.checkField, reserve = checkboxOpts.reserve, checkStrictly = checkboxOpts.checkStrictly, checkMethod = checkboxOpts.checkMethod;\n                var selectRows = [];\n                var beforeSelection = treeConfig ? [] : selection.filter(function (row) { return $xetable.findRowIndexOf(afterFullData, row) === -1; });\n                if (checkStrictly) {\n                    reactData.isAllSelected = value;\n                }\n                else {\n                    /**\n                     * 绑定属性方式（高性能，有污染）\n                     * 必须在行数据存在对应的属性，否则将不响应\n                     */\n                    if (property) {\n                        var checkValFn = function (row) {\n                            if (!checkMethod || checkMethod({ row: row })) {\n                                if (value) {\n                                    selectRows.push(row);\n                                }\n                                XEUtils.set(row, property, value);\n                            }\n                        };\n                        // 如果存在选中方法\n                        // 如果方法成立，则更新值，否则忽略该数据\n                        if (treeConfig) {\n                            XEUtils.eachTree(afterFullData, checkValFn, treeOpts);\n                        }\n                        else {\n                            afterFullData.forEach(checkValFn);\n                        }\n                    }\n                    else {\n                        /**\n                         * 默认方式（低性能，无污染）\n                         * 无需任何属性，直接绑定\n                         */\n                        if (treeConfig) {\n                            if (value) {\n                                /**\n                                 * 如果是树勾选\n                                 * 如果方法成立，则添加到临时集合中\n                                 */\n                                XEUtils.eachTree(afterFullData, function (row) {\n                                    if (!checkMethod || checkMethod({ row: row })) {\n                                        selectRows.push(row);\n                                    }\n                                }, treeOpts);\n                            }\n                            else {\n                                /**\n                                 * 如果是树取消\n                                 * 如果方法成立，则不添加到临时集合中\n                                 */\n                                if (checkMethod) {\n                                    XEUtils.eachTree(afterFullData, function (row) {\n                                        if (checkMethod({ row: row }) ? 0 : $xetable.findRowIndexOf(selection, row) > -1) {\n                                            selectRows.push(row);\n                                        }\n                                    }, treeOpts);\n                                }\n                            }\n                        }\n                        else {\n                            if (value) {\n                                /**\n                                 * 如果是行勾选\n                                 * 如果存在选中方法且成立或者本身已勾选，则添加到临时集合中\n                                 * 如果不存在选中方法，则添加所有数据到临时集合中\n                                 */\n                                if (checkMethod) {\n                                    selectRows = afterFullData.filter(function (row) { return $xetable.findRowIndexOf(selection, row) > -1 || checkMethod({ row: row }); });\n                                }\n                                else {\n                                    selectRows = afterFullData.slice(0);\n                                }\n                            }\n                            else {\n                                /**\n                                 * 如果是行取消\n                                 * 如果方法成立，则不添加到临时集合中；如果方法不成立则判断当前是否已勾选，如果已被勾选则添加到新集合中\n                                 * 如果不存在选中方法，无需处理，临时集合默认为空\n                                 */\n                                if (checkMethod) {\n                                    selectRows = afterFullData.filter(function (row) { return checkMethod({ row: row }) ? 0 : $xetable.findRowIndexOf(selection, row) > -1; });\n                                }\n                            }\n                        }\n                    }\n                    if (reserve) {\n                        if (value) {\n                            selectRows.forEach(function (row) {\n                                checkboxReserveRowMap[getRowid($xetable, row)] = row;\n                            });\n                        }\n                        else {\n                            afterFullData.forEach(function (row) { return handleCheckboxReserveRow(row, false); });\n                        }\n                    }\n                    reactData.selection = property ? [] : beforeSelection.concat(selectRows);\n                }\n                reactData.treeIndeterminates = [];\n                tablePrivateMethods.checkSelectionStatus();\n                return nextTick();\n            },\n            /**\n             * 获取单选框保留选中的行\n             */\n            getRadioReserveRecord: function (isFull) {\n                var treeConfig = props.treeConfig;\n                var fullDataRowIdData = internalData.fullDataRowIdData, radioReserveRow = internalData.radioReserveRow, afterFullData = internalData.afterFullData;\n                var radioOpts = computeRadioOpts.value;\n                var treeOpts = computeTreeOpts.value;\n                if (radioOpts.reserve && radioReserveRow) {\n                    var rowid_3 = getRowid($xetable, radioReserveRow);\n                    if (isFull) {\n                        if (!fullDataRowIdData[rowid_3]) {\n                            return radioReserveRow;\n                        }\n                    }\n                    else {\n                        var rowkey_2 = getRowkey($xetable);\n                        if (treeConfig) {\n                            var matchObj = XEUtils.findTree(afterFullData, function (row) { return rowid_3 === XEUtils.get(row, rowkey_2); }, treeOpts);\n                            if (matchObj) {\n                                return radioReserveRow;\n                            }\n                        }\n                        else {\n                            if (!afterFullData.some(function (row) { return rowid_3 === XEUtils.get(row, rowkey_2); })) {\n                                return radioReserveRow;\n                            }\n                        }\n                    }\n                }\n                return null;\n            },\n            clearRadioReserve: function () {\n                internalData.radioReserveRow = null;\n                return nextTick();\n            },\n            /**\n             * 获取复选框保留选中的行\n             */\n            getCheckboxReserveRecords: function (isFull) {\n                var treeConfig = props.treeConfig;\n                var afterFullData = internalData.afterFullData, fullDataRowIdData = internalData.fullDataRowIdData, checkboxReserveRowMap = internalData.checkboxReserveRowMap;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var treeOpts = computeTreeOpts.value;\n                var reserveSelection = [];\n                if (checkboxOpts.reserve) {\n                    var afterFullIdMaps_1 = {};\n                    if (treeConfig) {\n                        XEUtils.eachTree(afterFullData, function (row) {\n                            afterFullIdMaps_1[getRowid($xetable, row)] = 1;\n                        }, treeOpts);\n                    }\n                    else {\n                        afterFullData.forEach(function (row) {\n                            afterFullIdMaps_1[getRowid($xetable, row)] = 1;\n                        });\n                    }\n                    XEUtils.each(checkboxReserveRowMap, function (oldRow, oldRowid) {\n                        if (oldRow) {\n                            if (isFull) {\n                                if (!fullDataRowIdData[oldRowid]) {\n                                    reserveSelection.push(oldRow);\n                                }\n                            }\n                            else {\n                                if (!afterFullIdMaps_1[oldRowid]) {\n                                    reserveSelection.push(oldRow);\n                                }\n                            }\n                        }\n                    });\n                }\n                return reserveSelection;\n            },\n            clearCheckboxReserve: function () {\n                internalData.checkboxReserveRowMap = {};\n                return nextTick();\n            },\n            /**\n             * 多选，切换所有行的选中状态\n             */\n            toggleAllCheckboxRow: function () {\n                tablePrivateMethods.triggerCheckAllEvent(null, !reactData.isAllSelected);\n                return nextTick();\n            },\n            /**\n             * 用于多选行，手动清空用户的选择\n             * 清空行为不管是否被禁用还是保留记录，都将彻底清空选中状态\n             */\n            clearCheckboxRow: function () {\n                var treeConfig = props.treeConfig;\n                var tableFullData = internalData.tableFullData;\n                var treeOpts = computeTreeOpts.value;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var property = checkboxOpts.checkField, reserve = checkboxOpts.reserve;\n                if (property) {\n                    if (treeConfig) {\n                        XEUtils.eachTree(tableFullData, function (item) { return XEUtils.set(item, property, false); }, treeOpts);\n                    }\n                    else {\n                        tableFullData.forEach(function (item) { return XEUtils.set(item, property, false); });\n                    }\n                }\n                if (reserve) {\n                    tableFullData.forEach(function (row) { return handleCheckboxReserveRow(row, false); });\n                }\n                reactData.isAllSelected = false;\n                reactData.isIndeterminate = false;\n                reactData.selection = [];\n                reactData.treeIndeterminates = [];\n                return nextTick();\n            },\n            /**\n             * 用于当前行，设置某一行为高亮状态\n             * @param {Row} row 行对象\n             */\n            setCurrentRow: function (row) {\n                var rowOpts = computeRowOpts.value;\n                var el = refElem.value;\n                tableMethods.clearCurrentRow();\n                tableMethods.clearCurrentColumn();\n                reactData.currentRow = row;\n                if (rowOpts.isCurrent || props.highlightCurrentRow) {\n                    if (el) {\n                        XEUtils.arrayEach(el.querySelectorAll(\"[rowid=\\\"\" + getRowid($xetable, row) + \"\\\"]\"), function (elem) { return addClass(elem, 'row--current'); });\n                    }\n                }\n                return nextTick();\n            },\n            isCheckedByRadioRow: function (row) {\n                return $xetable.eqRow(reactData.selectRow, row);\n            },\n            /**\n             * 用于单选行，设置某一行为选中状态\n             * @param {Row} row 行对象\n             */\n            setRadioRow: function (row) {\n                var radioOpts = computeRadioOpts.value;\n                var checkMethod = radioOpts.checkMethod;\n                if (row && (!checkMethod || checkMethod({ row: row }))) {\n                    reactData.selectRow = row;\n                    handleRadioReserveRow(row);\n                }\n                return nextTick();\n            },\n            /**\n             * 用于当前行，手动清空当前高亮的状态\n             */\n            clearCurrentRow: function () {\n                var el = refElem.value;\n                reactData.currentRow = null;\n                internalData.hoverRow = null;\n                if (el) {\n                    XEUtils.arrayEach(el.querySelectorAll('.row--current'), function (elem) { return removeClass(elem, 'row--current'); });\n                }\n                return nextTick();\n            },\n            /**\n             * 用于单选行，手动清空用户的选择\n             */\n            clearRadioRow: function () {\n                reactData.selectRow = null;\n                return nextTick();\n            },\n            /**\n             * 用于当前行，获取当前行的数据\n             */\n            getCurrentRecord: function () {\n                var rowOpts = computeRowOpts.value;\n                return rowOpts.isCurrent || props.highlightCurrentRow ? reactData.currentRow : null;\n            },\n            /**\n             * 用于单选行，获取当已选中的数据\n             */\n            getRadioRecord: function (isFull) {\n                var treeConfig = props.treeConfig;\n                var fullDataRowIdData = internalData.fullDataRowIdData, afterFullData = internalData.afterFullData;\n                var selectRow = reactData.selectRow;\n                var treeOpts = computeTreeOpts.value;\n                if (selectRow) {\n                    var rowid_4 = getRowid($xetable, selectRow);\n                    if (isFull) {\n                        if (!fullDataRowIdData[rowid_4]) {\n                            return selectRow;\n                        }\n                    }\n                    else {\n                        if (treeConfig) {\n                            var rowkey_3 = getRowkey($xetable);\n                            var matchObj = XEUtils.findTree(afterFullData, function (row) { return rowid_4 === XEUtils.get(row, rowkey_3); }, treeOpts);\n                            if (matchObj) {\n                                return selectRow;\n                            }\n                        }\n                        else {\n                            if ($xetable.findRowIndexOf(afterFullData, selectRow) > -1) {\n                                return selectRow;\n                            }\n                        }\n                    }\n                }\n                return null;\n            },\n            getCurrentColumn: function () {\n                var columnOpts = computeColumnOpts.value;\n                return columnOpts.isCurrent || props.highlightCurrentColumn ? reactData.currentColumn : null;\n            },\n            /**\n             * 用于当前列，设置某列行为高亮状态\n             */\n            setCurrentColumn: function (fieldOrColumn) {\n                var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                if (column) {\n                    tableMethods.clearCurrentRow();\n                    tableMethods.clearCurrentColumn();\n                    reactData.currentColumn = column;\n                }\n                return nextTick();\n            },\n            /**\n             * 用于当前列，手动清空当前高亮的状态\n             */\n            clearCurrentColumn: function () {\n                reactData.currentColumn = null;\n                return nextTick();\n            },\n            sort: function (sortConfs, sortOrder) {\n                var sortOpts = computeSortOpts.value;\n                var multiple = sortOpts.multiple, remote = sortOpts.remote, orders = sortOpts.orders;\n                if (sortConfs) {\n                    if (XEUtils.isString(sortConfs)) {\n                        sortConfs = [\n                            { field: sortConfs, order: sortOrder }\n                        ];\n                    }\n                }\n                if (!XEUtils.isArray(sortConfs)) {\n                    sortConfs = [sortConfs];\n                }\n                if (sortConfs.length) {\n                    if (!multiple) {\n                        clearAllSort();\n                    }\n                    (multiple ? sortConfs : [sortConfs[0]]).forEach(function (confs, index) {\n                        var field = confs.field, order = confs.order;\n                        var column = field;\n                        if (XEUtils.isString(field)) {\n                            column = tableMethods.getColumnByField(field);\n                        }\n                        if (column && column.sortable) {\n                            if (orders.indexOf(order) === -1) {\n                                order = getNextSortOrder(column);\n                            }\n                            if (column.order !== order) {\n                                column.order = order;\n                            }\n                            column.sortTime = Date.now() + index;\n                        }\n                    });\n                    // 如果是服务端排序，则跳过本地排序处理\n                    if (!remote) {\n                        tablePrivateMethods.handleTableData(true);\n                    }\n                    return nextTick().then(updateStyle);\n                }\n                return nextTick();\n            },\n            /**\n             * 清空指定列的排序条件\n             * 如果为空则清空所有列的排序条件\n             * @param {String} fieldOrColumn 列或字段名\n             */\n            clearSort: function (fieldOrColumn) {\n                var sortOpts = computeSortOpts.value;\n                if (fieldOrColumn) {\n                    var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                    if (column) {\n                        column.order = null;\n                    }\n                }\n                else {\n                    clearAllSort();\n                }\n                if (!sortOpts.remote) {\n                    tablePrivateMethods.handleTableData(true);\n                }\n                return nextTick().then(updateStyle);\n            },\n            isSort: function (fieldOrColumn) {\n                if (fieldOrColumn) {\n                    var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                    return column ? column.sortable && !!column.order : false;\n                }\n                return tableMethods.getSortColumns().length > 0;\n            },\n            getSortColumns: function () {\n                var sortOpts = computeSortOpts.value;\n                var multiple = sortOpts.multiple, chronological = sortOpts.chronological;\n                var sortList = [];\n                var tableFullColumn = internalData.tableFullColumn;\n                tableFullColumn.forEach(function (column) {\n                    var property = column.property, order = column.order;\n                    if (column.sortable && order) {\n                        sortList.push({ column: column, field: property, property: property, order: order, sortTime: column.sortTime });\n                    }\n                });\n                if (multiple && chronological && sortList.length > 1) {\n                    return XEUtils.orderBy(sortList, 'sortTime');\n                }\n                return sortList;\n            },\n            /**\n             * 关闭筛选\n             * @param {Event} evnt 事件\n             */\n            closeFilter: function () {\n                var filterStore = reactData.filterStore;\n                var column = filterStore.column, visible = filterStore.visible;\n                Object.assign(filterStore, {\n                    isAllSelected: false,\n                    isIndeterminate: false,\n                    options: [],\n                    visible: false\n                });\n                if (visible) {\n                    $xetable.dispatchEvent('filter-visible', { column: column, property: column.property, filterList: $xetable.getCheckedFilters(), visible: false }, null);\n                }\n                return nextTick();\n            },\n            /**\n             * 判断指定列是否为筛选状态，如果为空则判断所有列\n             * @param {String} fieldOrColumn 字段名\n             */\n            isFilter: function (fieldOrColumn) {\n                var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                if (column) {\n                    return column.filters && column.filters.some(function (option) { return option.checked; });\n                }\n                return $xetable.getCheckedFilters().length > 0;\n            },\n            /**\n             * 判断展开行是否懒加载完成\n             * @param {Row} row 行对象\n             */\n            isRowExpandLoaded: function (row) {\n                var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n                return rest && !!rest.expandLoaded;\n            },\n            clearRowExpandLoaded: function (row) {\n                var expandLazyLoadeds = reactData.expandLazyLoadeds;\n                var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                var expandOpts = computeExpandOpts.value;\n                var lazy = expandOpts.lazy;\n                var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n                if (lazy && rest) {\n                    rest.expandLoaded = false;\n                    XEUtils.remove(expandLazyLoadeds, function (item) { return $xetable.eqRow(item, row); });\n                }\n                return nextTick();\n            },\n            /**\n             * 重新懒加载展开行，并展开内容\n             * @param {Row} row 行对象\n             */\n            reloadRowExpand: function (row) {\n                var expandLazyLoadeds = reactData.expandLazyLoadeds;\n                var expandOpts = computeExpandOpts.value;\n                var lazy = expandOpts.lazy;\n                if (lazy && $xetable.findRowIndexOf(expandLazyLoadeds, row) === -1) {\n                    tableMethods.clearRowExpandLoaded(row)\n                        .then(function () { return handleAsyncRowExpand(row); });\n                }\n                return nextTick();\n            },\n            reloadExpandContent: function (row) {\n                if (process.env.NODE_ENV === 'development') {\n                    warnLog('vxe.error.delFunc', ['reloadExpandContent', 'reloadRowExpand']);\n                }\n                // 即将废弃\n                return tableMethods.reloadRowExpand(row);\n            },\n            /**\n             * 切换展开行\n             */\n            toggleRowExpand: function (row) {\n                return tableMethods.setRowExpand(row, !tableMethods.isExpandByRow(row));\n            },\n            /**\n             * 设置所有行的展开与否\n             * @param {Boolean} expanded 是否展开\n             */\n            setAllRowExpand: function (expanded) {\n                var expandOpts = computeExpandOpts.value;\n                return tableMethods.setRowExpand(expandOpts.lazy ? reactData.tableData : internalData.tableFullData, expanded);\n            },\n            /**\n             * 设置展开行，二个参数设置这一行展开与否\n             * 支持单行\n             * 支持多行\n             * @param {Array/Row} rows 行数据\n             * @param {Boolean} expanded 是否展开\n             */\n            setRowExpand: function (rows, expanded) {\n                var rowExpandeds = reactData.rowExpandeds, expandLazyLoadeds = reactData.expandLazyLoadeds, column = reactData.expandColumn;\n                var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                var expandOpts = computeExpandOpts.value;\n                var reserve = expandOpts.reserve, lazy = expandOpts.lazy, accordion = expandOpts.accordion, toggleMethod = expandOpts.toggleMethod;\n                var lazyRests = [];\n                var columnIndex = tableMethods.getColumnIndex(column);\n                var $columnIndex = tableMethods.getVMColumnIndex(column);\n                if (rows) {\n                    if (!XEUtils.isArray(rows)) {\n                        rows = [rows];\n                    }\n                    if (accordion) {\n                        // 只能同时展开一个\n                        rowExpandeds = [];\n                        rows = rows.slice(rows.length - 1, rows.length);\n                    }\n                    var validRows_1 = toggleMethod ? rows.filter(function (row) { return toggleMethod({ $table: $xetable, expanded: expanded, column: column, columnIndex: columnIndex, $columnIndex: $columnIndex, row: row, rowIndex: tableMethods.getRowIndex(row), $rowIndex: tableMethods.getVMRowIndex(row) }); }) : rows;\n                    if (expanded) {\n                        validRows_1.forEach(function (row) {\n                            if ($xetable.findRowIndexOf(rowExpandeds, row) === -1) {\n                                var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n                                var isLoad = lazy && !rest.expandLoaded && $xetable.findRowIndexOf(expandLazyLoadeds, row) === -1;\n                                if (isLoad) {\n                                    lazyRests.push(handleAsyncRowExpand(row));\n                                }\n                                else {\n                                    rowExpandeds.push(row);\n                                }\n                            }\n                        });\n                    }\n                    else {\n                        XEUtils.remove(rowExpandeds, function (row) { return $xetable.findRowIndexOf(validRows_1, row) > -1; });\n                    }\n                    if (reserve) {\n                        validRows_1.forEach(function (row) { return handleRowExpandReserve(row, expanded); });\n                    }\n                }\n                reactData.rowExpandeds = rowExpandeds;\n                return Promise.all(lazyRests).then(function () { return tableMethods.recalculate(); });\n            },\n            /**\n             * 判断行是否为展开状态\n             * @param {Row} row 行对象\n             */\n            isExpandByRow: function (row) {\n                var rowExpandeds = reactData.rowExpandeds;\n                return $xetable.findRowIndexOf(rowExpandeds, row) > -1;\n            },\n            /**\n             * 手动清空展开行状态，数据会恢复成未展开的状态\n             */\n            clearRowExpand: function () {\n                var rowExpandeds = reactData.rowExpandeds;\n                var tableFullData = internalData.tableFullData;\n                var expandOpts = computeExpandOpts.value;\n                var reserve = expandOpts.reserve;\n                var isExists = rowExpandeds.length;\n                reactData.rowExpandeds = [];\n                if (reserve) {\n                    tableFullData.forEach(function (row) { return handleRowExpandReserve(row, false); });\n                }\n                return nextTick().then(function () {\n                    if (isExists) {\n                        tableMethods.recalculate();\n                    }\n                });\n            },\n            clearRowExpandReserve: function () {\n                internalData.rowExpandedReserveRowMap = {};\n                return nextTick();\n            },\n            getRowExpandRecords: function () {\n                return reactData.rowExpandeds.slice(0);\n            },\n            getTreeExpandRecords: function () {\n                return reactData.treeExpandeds.slice(0);\n            },\n            /**\n             * 判断树节点是否懒加载完成\n             * @param {Row} row 行对象\n             */\n            isTreeExpandLoaded: function (row) {\n                var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n                return rest && !!rest.treeLoaded;\n            },\n            clearTreeExpandLoaded: function (row) {\n                var treeExpandeds = reactData.treeExpandeds;\n                var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                var treeOpts = computeTreeOpts.value;\n                var transform = treeOpts.transform, lazy = treeOpts.lazy;\n                var rest = fullAllDataRowIdData[getRowid($xetable, row)];\n                if (lazy && rest) {\n                    rest.treeLoaded = false;\n                    XEUtils.remove(treeExpandeds, function (item) { return $xetable.eqRow(item, row); });\n                }\n                if (transform) {\n                    handleVirtualTreeToList();\n                    return tablePrivateMethods.handleTableData();\n                }\n                return nextTick();\n            },\n            /**\n             * 重新懒加载树节点，并展开该节点\n             * @param {Row} row 行对象\n             */\n            reloadTreeExpand: function (row) {\n                var treeLazyLoadeds = reactData.treeLazyLoadeds;\n                var treeOpts = computeTreeOpts.value;\n                var transform = treeOpts.transform, lazy = treeOpts.lazy, hasChild = treeOpts.hasChild;\n                if (lazy && row[hasChild] && $xetable.findRowIndexOf(treeLazyLoadeds, row) === -1) {\n                    tableMethods.clearTreeExpandLoaded(row).then(function () {\n                        return handleAsyncTreeExpandChilds(row);\n                    }).then(function () {\n                        if (transform) {\n                            handleVirtualTreeToList();\n                            return tablePrivateMethods.handleTableData();\n                        }\n                    }).then(function () {\n                        return tableMethods.recalculate();\n                    });\n                }\n                return nextTick();\n            },\n            reloadTreeChilds: function (row) {\n                if (process.env.NODE_ENV === 'development') {\n                    warnLog('vxe.error.delFunc', ['reloadTreeChilds', 'reloadTreeExpand']);\n                }\n                // 即将废弃\n                return tableMethods.reloadTreeExpand(row);\n            },\n            /**\n             * 切换/展开树节点\n             */\n            toggleTreeExpand: function (row) {\n                return tableMethods.setTreeExpand(row, !tableMethods.isTreeExpandByRow(row));\n            },\n            /**\n             * 设置所有树节点的展开与否\n             * @param {Boolean} expanded 是否展开\n             */\n            setAllTreeExpand: function (expanded) {\n                var tableFullData = internalData.tableFullData;\n                var treeOpts = computeTreeOpts.value;\n                var transform = treeOpts.transform, lazy = treeOpts.lazy, children = treeOpts.children;\n                var expandeds = [];\n                XEUtils.eachTree(tableFullData, function (row) {\n                    var rowChildren = row[children];\n                    if (lazy || (rowChildren && rowChildren.length)) {\n                        expandeds.push(row);\n                    }\n                }, treeOpts);\n                return tableMethods.setTreeExpand(expandeds, expanded).then(function () {\n                    if (transform) {\n                        handleVirtualTreeToList();\n                        return tableMethods.recalculate();\n                    }\n                });\n            },\n            /**\n             * 设置展开树形节点，二个参数设置这一行展开与否\n             * 支持单行\n             * 支持多行\n             * @param {Array/Row} rows 行数据\n             * @param {Boolean} expanded 是否展开\n             */\n            setTreeExpand: function (rows, expanded) {\n                var treeOpts = computeTreeOpts.value;\n                var transform = treeOpts.transform;\n                if (rows) {\n                    if (!XEUtils.isArray(rows)) {\n                        rows = [rows];\n                    }\n                    if (rows.length) {\n                        // 如果为虚拟树\n                        if (transform) {\n                            return handleVirtualTreeExpand(rows, expanded);\n                        }\n                        else {\n                            return handleBaseTreeExpand(rows, expanded);\n                        }\n                    }\n                }\n                return nextTick();\n            },\n            /**\n             * 判断行是否为树形节点展开状态\n             * @param {Row} row 行对象\n             */\n            isTreeExpandByRow: function (row) {\n                var treeExpandeds = reactData.treeExpandeds;\n                return $xetable.findRowIndexOf(treeExpandeds, row) > -1;\n            },\n            /**\n             * 手动清空树形节点的展开状态，数据会恢复成未展开的状态\n             */\n            clearTreeExpand: function () {\n                var treeExpandeds = reactData.treeExpandeds;\n                var tableFullTreeData = internalData.tableFullTreeData;\n                var treeOpts = computeTreeOpts.value;\n                var transform = treeOpts.transform, reserve = treeOpts.reserve;\n                var isExists = treeExpandeds.length;\n                reactData.treeExpandeds = [];\n                if (reserve) {\n                    XEUtils.eachTree(tableFullTreeData, function (row) { return handleTreeExpandReserve(row, false); }, treeOpts);\n                }\n                return tablePrivateMethods.handleTableData().then(function () {\n                    if (transform) {\n                        handleVirtualTreeToList();\n                        return tablePrivateMethods.handleTableData();\n                    }\n                }).then(function () {\n                    if (isExists) {\n                        return tableMethods.recalculate();\n                    }\n                });\n            },\n            clearTreeExpandReserve: function () {\n                internalData.treeExpandedReserveRowMap = {};\n                return nextTick();\n            },\n            /**\n             * 获取表格的滚动状态\n             */\n            getScroll: function () {\n                var scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad;\n                var tableBody = refTableBody.value;\n                var bodyElem = tableBody.$el;\n                return {\n                    virtualX: scrollXLoad,\n                    virtualY: scrollYLoad,\n                    scrollTop: bodyElem.scrollTop,\n                    scrollLeft: bodyElem.scrollLeft\n                };\n            },\n            /**\n             * 如果有滚动条，则滚动到对应的位置\n             * @param {Number} scrollLeft 左距离\n             * @param {Number} scrollTop 上距离\n             */\n            scrollTo: function (scrollLeft, scrollTop) {\n                var tableBody = refTableBody.value;\n                var tableFooter = refTableFooter.value;\n                var rightBody = refTableRightBody.value;\n                var tableBodyElem = tableBody ? tableBody.$el : null;\n                var rightBodyElem = rightBody ? rightBody.$el : null;\n                var tableFooterElem = tableFooter ? tableFooter.$el : null;\n                if (XEUtils.isNumber(scrollLeft)) {\n                    setScrollLeft(tableFooterElem || tableBodyElem, scrollLeft);\n                }\n                if (XEUtils.isNumber(scrollTop)) {\n                    setScrollTop(rightBodyElem || tableBodyElem, scrollTop);\n                }\n                if (reactData.scrollXLoad || reactData.scrollYLoad) {\n                    return new Promise(function (resolve) { return setTimeout(function () { return resolve(nextTick()); }, 50); });\n                }\n                return nextTick();\n            },\n            /**\n             * 如果有滚动条，则滚动到对应的行\n             * @param {Row} row 行对象\n             * @param {ColumnInfo} fieldOrColumn 列配置\n             */\n            scrollToRow: function (row, fieldOrColumn) {\n                var rest = [];\n                if (row) {\n                    if (props.treeConfig) {\n                        rest.push(tablePrivateMethods.scrollToTreeRow(row));\n                    }\n                    else {\n                        rest.push(rowToVisible($xetable, row));\n                    }\n                }\n                if (fieldOrColumn) {\n                    rest.push(tableMethods.scrollToColumn(fieldOrColumn));\n                }\n                return Promise.all(rest);\n            },\n            /**\n             * 如果有滚动条，则滚动到对应的列\n             */\n            scrollToColumn: function (fieldOrColumn) {\n                var fullColumnIdData = internalData.fullColumnIdData;\n                var column = handleFieldOrColumn($xetable, fieldOrColumn);\n                if (column && fullColumnIdData[column.id]) {\n                    return colToVisible($xetable, column);\n                }\n                return nextTick();\n            },\n            /**\n             * 手动清除滚动相关信息，还原到初始状态\n             */\n            clearScroll: function () {\n                var scrollXStore = internalData.scrollXStore, scrollYStore = internalData.scrollYStore;\n                var tableBody = refTableBody.value;\n                var tableFooter = refTableFooter.value;\n                var rightBody = refTableRightBody.value;\n                var tableBodyElem = tableBody ? tableBody.$el : null;\n                var rightBodyElem = rightBody ? rightBody.$el : null;\n                var tableFooterElem = tableFooter ? tableFooter.$el : null;\n                if (rightBodyElem) {\n                    restoreScrollListener(rightBodyElem);\n                    rightBodyElem.scrollTop = 0;\n                }\n                if (tableFooterElem) {\n                    tableFooterElem.scrollLeft = 0;\n                }\n                if (tableBodyElem) {\n                    restoreScrollListener(tableBodyElem);\n                    tableBodyElem.scrollTop = 0;\n                    tableBodyElem.scrollLeft = 0;\n                }\n                scrollXStore.startIndex = 0;\n                scrollYStore.startIndex = 0;\n                return nextTick();\n            },\n            /**\n             * 更新表尾合计\n             */\n            updateFooter: function () {\n                var showFooter = props.showFooter, footerMethod = props.footerMethod;\n                var visibleColumn = internalData.visibleColumn, afterFullData = internalData.afterFullData;\n                if (showFooter && footerMethod) {\n                    reactData.footerTableData = visibleColumn.length ? footerMethod({ columns: visibleColumn, data: afterFullData, $table: $xetable, $grid: $xegrid }) : [];\n                }\n                return nextTick();\n            },\n            /**\n             * 更新列状态\n             * 如果组件值 v-model 发生 change 时，调用改函数用于更新某一列编辑状态\n             * 如果单元格配置了校验规则，则会进行校验\n             */\n            updateStatus: function (scope, cellValue) {\n                var customVal = !XEUtils.isUndefined(cellValue);\n                return nextTick().then(function () {\n                    var editRules = props.editRules;\n                    var validStore = reactData.validStore;\n                    var tableBody = refTableBody.value;\n                    if (scope && tableBody && editRules) {\n                        var row_1 = scope.row, column_3 = scope.column;\n                        var type = 'change';\n                        if ($xetable.hasCellRules) {\n                            if ($xetable.hasCellRules(type, row_1, column_3)) {\n                                var cell_1 = tablePrivateMethods.getCell(row_1, column_3);\n                                if (cell_1) {\n                                    return $xetable.validCellRules(type, row_1, column_3, cellValue)\n                                        .then(function () {\n                                        if (customVal && validStore.visible) {\n                                            setCellValue(row_1, column_3, cellValue);\n                                        }\n                                        $xetable.clearValidate();\n                                    })\n                                        .catch(function (_a) {\n                                        var rule = _a.rule;\n                                        if (customVal) {\n                                            setCellValue(row_1, column_3, cellValue);\n                                        }\n                                        $xetable.showValidTooltip({ rule: rule, row: row_1, column: column_3, cell: cell_1 });\n                                    });\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n            /**\n             * 设置合并单元格\n             * @param {TableMergeConfig[]} merges { row: Row|number, column: ColumnInfo|number, rowspan: number, colspan: number }\n             */\n            setMergeCells: function (merges) {\n                if (props.spanMethod) {\n                    errLog('vxe.error.errConflicts', ['merge-cells', 'span-method']);\n                }\n                setMerges(merges, reactData.mergeList, internalData.afterFullData);\n                return nextTick().then(function () { return tablePrivateMethods.updateCellAreas(); });\n            },\n            /**\n             * 移除单元格合并\n             * @param {TableMergeConfig[]} merges 多个或数组 [{row:Row|number, col:ColumnInfo|number}]\n             */\n            removeMergeCells: function (merges) {\n                if (props.spanMethod) {\n                    errLog('vxe.error.errConflicts', ['merge-cells', 'span-method']);\n                }\n                var rest = removeMerges(merges, reactData.mergeList, internalData.afterFullData);\n                return nextTick().then(function () {\n                    tablePrivateMethods.updateCellAreas();\n                    return rest;\n                });\n            },\n            /**\n             * 获取所有被合并的单元格\n             */\n            getMergeCells: function () {\n                return reactData.mergeList.slice(0);\n            },\n            /**\n             * 清除所有单元格合并\n             */\n            clearMergeCells: function () {\n                reactData.mergeList = [];\n                return nextTick();\n            },\n            setMergeFooterItems: function (merges) {\n                if (props.footerSpanMethod) {\n                    errLog('vxe.error.errConflicts', ['merge-footer-items', 'footer-span-method']);\n                }\n                setMerges(merges, reactData.mergeFooterList);\n                return nextTick().then(function () { return tablePrivateMethods.updateCellAreas(); });\n            },\n            removeMergeFooterItems: function (merges) {\n                if (props.footerSpanMethod) {\n                    errLog('vxe.error.errConflicts', ['merge-footer-items', 'footer-span-method']);\n                }\n                var rest = removeMerges(merges, reactData.mergeFooterList);\n                return nextTick().then(function () {\n                    tablePrivateMethods.updateCellAreas();\n                    return rest;\n                });\n            },\n            /**\n             * 获取所有被合并的表尾\n             */\n            getMergeFooterItems: function () {\n                return reactData.mergeFooterList.slice(0);\n            },\n            /**\n             * 清除所有表尾合并\n             */\n            clearMergeFooterItems: function () {\n                reactData.mergeFooterList = [];\n                return nextTick();\n            },\n            focus: function () {\n                internalData.isActivated = true;\n                return nextTick();\n            },\n            blur: function () {\n                internalData.isActivated = false;\n                return nextTick();\n            },\n            /**\n             * 连接工具栏\n             * @param $toolbar\n             */\n            connect: function ($toolbar) {\n                if ($toolbar) {\n                    $xetoolbar = $toolbar;\n                    $xetoolbar.syncUpdate({ collectColumn: internalData.collectColumn, $table: $xetable });\n                }\n                else {\n                    errLog('vxe.error.barUnableLink');\n                }\n                return nextTick();\n            }\n        };\n        /**\n         * 全局按下事件处理\n         */\n        var handleGlobalMousedownEvent = function (evnt) {\n            var editStore = reactData.editStore, ctxMenuStore = reactData.ctxMenuStore, filterStore = reactData.filterStore;\n            var mouseConfig = props.mouseConfig;\n            var el = refElem.value;\n            var editOpts = computeEditOpts.value;\n            var actived = editStore.actived;\n            var $validTooltip = refValidTooltip.value;\n            var tableFilter = refTableFilter.value;\n            var tableMenu = refTableMenu.value;\n            if (tableFilter) {\n                if (getEventTargetNode(evnt, el, 'vxe-cell--filter').flag) {\n                    // 如果点击了筛选按钮\n                }\n                else if (getEventTargetNode(evnt, tableFilter.$el).flag) {\n                    // 如果点击筛选容器\n                }\n                else {\n                    if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-clear').flag) {\n                        tablePrivateMethods.preventEvent(evnt, 'event.clearFilter', filterStore.args, tableMethods.closeFilter);\n                    }\n                }\n            }\n            // 如果已激活了编辑状态\n            if (actived.row) {\n                if (!(editOpts.autoClear === false)) {\n                    // 如果是激活状态，点击了单元格之外\n                    var cell = actived.args.cell;\n                    if ((!cell || !getEventTargetNode(evnt, cell).flag)) {\n                        if ($validTooltip && getEventTargetNode(evnt, $validTooltip.$el).flag) {\n                            // 如果是激活状态，且点击了校验提示框\n                        }\n                        else if (!internalData._lastCallTime || internalData._lastCallTime + 50 < Date.now()) {\n                            // 如果是激活状态，点击了单元格之外\n                            if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-clear').flag) {\n                                // 如果手动调用了激活单元格，避免触发源被移除后导致重复关闭\n                                tablePrivateMethods.preventEvent(evnt, 'event.clearActived', actived.args, function () {\n                                    var isClear;\n                                    if (editOpts.mode === 'row') {\n                                        var rowTargetNode = getEventTargetNode(evnt, el, 'vxe-body--row');\n                                        var rowNodeRest = rowTargetNode.flag ? tableMethods.getRowNode(rowTargetNode.targetElem) : null;\n                                        // row 方式，如果点击了不同行\n                                        isClear = rowNodeRest ? !$xetable.eqRow(rowNodeRest.item, actived.args.row) : false;\n                                    }\n                                    else {\n                                        // cell 方式，如果是非编辑列\n                                        isClear = !getEventTargetNode(evnt, el, 'col--edit').flag;\n                                    }\n                                    // 如果点击表头行，则清除激活状态\n                                    if (!isClear) {\n                                        isClear = getEventTargetNode(evnt, el, 'vxe-header--row').flag;\n                                    }\n                                    // 如果点击表尾行，则清除激活状态\n                                    if (!isClear) {\n                                        isClear = getEventTargetNode(evnt, el, 'vxe-footer--row').flag;\n                                    }\n                                    // 如果固定了高度且点击了行之外的空白处，则清除激活状态\n                                    if (!isClear && props.height && !reactData.overflowY) {\n                                        var bodyWrapperElem = evnt.target;\n                                        if (hasClass(bodyWrapperElem, 'vxe-table--body-wrapper')) {\n                                            isClear = evnt.offsetY < bodyWrapperElem.clientHeight;\n                                        }\n                                    }\n                                    if (isClear ||\n                                        // 如果点击了当前表格之外\n                                        !getEventTargetNode(evnt, el).flag) {\n                                        setTimeout(function () { return $xetable.clearActived(evnt); });\n                                    }\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            else if (mouseConfig) {\n                if (!getEventTargetNode(evnt, el).flag && !($xegrid && getEventTargetNode(evnt, $xegrid.getRefMaps().refElem.value).flag) && !(tableMenu && getEventTargetNode(evnt, tableMenu.getRefMaps().refElem.value).flag) && !($xetoolbar && getEventTargetNode(evnt, $xetoolbar.getRefMaps().refElem.value).flag)) {\n                    $xetable.clearSelected();\n                    if ($xetable.clearCellAreas) {\n                        if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-areas-clear').flag) {\n                            tablePrivateMethods.preventEvent(evnt, 'event.clearAreas', {}, function () {\n                                $xetable.clearCellAreas();\n                                $xetable.clearCopyCellArea();\n                            });\n                        }\n                    }\n                }\n            }\n            // 如果配置了快捷菜单且，点击了其他地方则关闭\n            if ($xetable.closeMenu) {\n                if (ctxMenuStore.visible && tableMenu && !getEventTargetNode(evnt, tableMenu.getRefMaps().refElem.value).flag) {\n                    $xetable.closeMenu();\n                }\n            }\n            // 最后激活的表格\n            internalData.isActivated = getEventTargetNode(evnt, $xegrid ? $xegrid.getRefMaps().refElem.value : el).flag;\n        };\n        /**\n         * 窗口失焦事件处理\n         */\n        var handleGlobalBlurEvent = function () {\n            tableMethods.closeFilter();\n            if ($xetable.closeMenu) {\n                $xetable.closeMenu();\n            }\n        };\n        /**\n         * 全局滚动事件\n         */\n        var handleGlobalMousewheelEvent = function () {\n            tableMethods.closeTooltip();\n            if ($xetable.closeMenu) {\n                $xetable.closeMenu();\n            }\n        };\n        /**\n         * 表格键盘事件\n         */\n        var keydownEvent = function (evnt) {\n            var mouseConfig = props.mouseConfig, keyboardConfig = props.keyboardConfig;\n            var filterStore = reactData.filterStore, ctxMenuStore = reactData.ctxMenuStore, editStore = reactData.editStore;\n            var mouseOpts = computeMouseOpts.value;\n            var keyboardOpts = computeKeyboardOpts.value;\n            var actived = editStore.actived;\n            var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n            if (isEsc) {\n                tablePrivateMethods.preventEvent(evnt, 'event.keydown', null, function () {\n                    tableMethods.dispatchEvent('keydown-start', {}, evnt);\n                    if (keyboardConfig && mouseConfig && mouseOpts.area && $xetable.handleKeyboardEvent) {\n                        $xetable.handleKeyboardEvent(evnt);\n                    }\n                    else if (actived.row || filterStore.visible || ctxMenuStore.visible) {\n                        evnt.stopPropagation();\n                        // 如果按下了 Esc 键，关闭快捷菜单、筛选\n                        if ($xetable.closeMenu) {\n                            $xetable.closeMenu();\n                        }\n                        tableMethods.closeFilter();\n                        if (keyboardConfig && keyboardOpts.isEsc) {\n                            // 如果是激活编辑状态，则取消编辑\n                            if (actived.row) {\n                                var params_1 = actived.args;\n                                $xetable.clearActived(evnt);\n                                // 如果配置了选中功能，则为选中状态\n                                if (mouseOpts.selected) {\n                                    nextTick(function () { return $xetable.handleSelected(params_1, evnt); });\n                                }\n                            }\n                        }\n                    }\n                    tableMethods.dispatchEvent('keydown', {}, evnt);\n                    tableMethods.dispatchEvent('keydown-end', {}, evnt);\n                });\n            }\n        };\n        /**\n         * 全局键盘事件\n         */\n        var handleGlobalKeydownEvent = function (evnt) {\n            // 该行为只对当前激活的表格有效\n            if (internalData.isActivated) {\n                tablePrivateMethods.preventEvent(evnt, 'event.keydown', null, function () {\n                    var mouseConfig = props.mouseConfig, keyboardConfig = props.keyboardConfig, treeConfig = props.treeConfig, editConfig = props.editConfig, highlightCurrentRow = props.highlightCurrentRow;\n                    var ctxMenuStore = reactData.ctxMenuStore, editStore = reactData.editStore, currentRow = reactData.currentRow;\n                    var isMenu = computeIsMenu.value;\n                    var bodyMenu = computeBodyMenu.value;\n                    var keyboardOpts = computeKeyboardOpts.value;\n                    var mouseOpts = computeMouseOpts.value;\n                    var editOpts = computeEditOpts.value;\n                    var treeOpts = computeTreeOpts.value;\n                    var menuList = computeMenuList.value;\n                    var rowOpts = computeRowOpts.value;\n                    var selected = editStore.selected, actived = editStore.actived;\n                    var keyCode = evnt.keyCode;\n                    var isEsc = hasEventKey(evnt, EVENT_KEYS.ESCAPE);\n                    var isBack = hasEventKey(evnt, EVENT_KEYS.BACKSPACE);\n                    var isTab = hasEventKey(evnt, EVENT_KEYS.TAB);\n                    var isEnter = hasEventKey(evnt, EVENT_KEYS.ENTER);\n                    var isSpacebar = hasEventKey(evnt, EVENT_KEYS.SPACEBAR);\n                    var isLeftArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_LEFT);\n                    var isUpArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_UP);\n                    var isRightArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_RIGHT);\n                    var isDwArrow = hasEventKey(evnt, EVENT_KEYS.ARROW_DOWN);\n                    var isDel = hasEventKey(evnt, EVENT_KEYS.DELETE);\n                    var isF2 = hasEventKey(evnt, EVENT_KEYS.F2);\n                    var isContextMenu = hasEventKey(evnt, EVENT_KEYS.CONTEXT_MENU);\n                    var hasMetaKey = evnt.metaKey;\n                    var hasCtrlKey = evnt.ctrlKey;\n                    var hasShiftKey = evnt.shiftKey;\n                    var isAltKey = evnt.altKey;\n                    var operArrow = isLeftArrow || isUpArrow || isRightArrow || isDwArrow;\n                    var operCtxMenu = isMenu && ctxMenuStore.visible && (isEnter || isSpacebar || operArrow);\n                    var isEditStatus = isEnableConf(editConfig) && actived.column && actived.row;\n                    var params;\n                    if (operCtxMenu) {\n                        // 如果配置了右键菜单; 支持方向键操作、回车\n                        evnt.preventDefault();\n                        if (ctxMenuStore.showChild && hasChildrenList(ctxMenuStore.selected)) {\n                            $xetable.moveCtxMenu(evnt, ctxMenuStore, 'selectChild', isLeftArrow, false, ctxMenuStore.selected.children);\n                        }\n                        else {\n                            $xetable.moveCtxMenu(evnt, ctxMenuStore, 'selected', isRightArrow, true, menuList);\n                        }\n                    }\n                    else if (keyboardConfig && mouseConfig && mouseOpts.area && $xetable.handleKeyboardEvent) {\n                        $xetable.handleKeyboardEvent(evnt);\n                    }\n                    else if (isEsc) {\n                        // 如果按下了 Esc 键，关闭快捷菜单、筛选\n                        if ($xetable.closeMenu) {\n                            $xetable.closeMenu();\n                        }\n                        tableMethods.closeFilter();\n                        if (keyboardConfig && keyboardOpts.isEsc) {\n                            // 如果是激活编辑状态，则取消编辑\n                            if (actived.row) {\n                                var params_2 = actived.args;\n                                $xetable.clearActived(evnt);\n                                // 如果配置了选中功能，则为选中状态\n                                if (mouseOpts.selected) {\n                                    nextTick(function () { return $xetable.handleSelected(params_2, evnt); });\n                                }\n                            }\n                        }\n                    }\n                    else if (isSpacebar && keyboardConfig && keyboardOpts.isChecked && selected.row && selected.column && (selected.column.type === 'checkbox' || selected.column.type === 'radio')) {\n                        // 空格键支持选中复选框\n                        evnt.preventDefault();\n                        if (selected.column.type === 'checkbox') {\n                            tablePrivateMethods.handleToggleCheckRowEvent(evnt, selected.args);\n                        }\n                        else {\n                            tablePrivateMethods.triggerRadioRowEvent(evnt, selected.args);\n                        }\n                    }\n                    else if (isF2 && isEnableConf(editConfig)) {\n                        if (!isEditStatus) {\n                            // 如果按下了 F2 键\n                            if (selected.row && selected.column) {\n                                evnt.preventDefault();\n                                $xetable.handleActived(selected.args, evnt);\n                            }\n                        }\n                    }\n                    else if (isContextMenu) {\n                        // 如果按下上下文键\n                        internalData._keyCtx = selected.row && selected.column && bodyMenu.length;\n                        clearTimeout(keyCtxTimeout);\n                        keyCtxTimeout = setTimeout(function () {\n                            internalData._keyCtx = false;\n                        }, 1000);\n                    }\n                    else if (isEnter && !isAltKey && keyboardConfig && keyboardOpts.isEnter && (selected.row || actived.row || (treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow))) {\n                        // 退出选中\n                        if (hasCtrlKey) {\n                            // 如果是激活编辑状态，则取消编辑\n                            if (actived.row) {\n                                params = actived.args;\n                                $xetable.clearActived(evnt);\n                                // 如果配置了选中功能，则为选中状态\n                                if (mouseOpts.selected) {\n                                    nextTick(function () { return $xetable.handleSelected(params, evnt); });\n                                }\n                            }\n                        }\n                        else {\n                            // 如果是激活状态，退则出到上一行/下一行\n                            if (selected.row || actived.row) {\n                                var targetArgs = selected.row ? selected.args : actived.args;\n                                if (hasShiftKey) {\n                                    if (keyboardOpts.enterToTab) {\n                                        $xetable.moveTabSelected(targetArgs, hasShiftKey, evnt);\n                                    }\n                                    else {\n                                        $xetable.moveSelected(targetArgs, isLeftArrow, true, isRightArrow, false, evnt);\n                                    }\n                                }\n                                else {\n                                    if (keyboardOpts.enterToTab) {\n                                        $xetable.moveTabSelected(targetArgs, hasShiftKey, evnt);\n                                    }\n                                    else {\n                                        $xetable.moveSelected(targetArgs, isLeftArrow, false, isRightArrow, true, evnt);\n                                    }\n                                }\n                            }\n                            else if (treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow) {\n                                // 如果是树形表格当前行回车移动到子节点\n                                var childrens = currentRow[treeOpts.children];\n                                if (childrens && childrens.length) {\n                                    evnt.preventDefault();\n                                    var targetRow_1 = childrens[0];\n                                    params = {\n                                        $table: $xetable,\n                                        row: targetRow_1,\n                                        rowIndex: tableMethods.getRowIndex(targetRow_1),\n                                        $rowIndex: tableMethods.getVMRowIndex(targetRow_1)\n                                    };\n                                    tableMethods.setTreeExpand(currentRow, true)\n                                        .then(function () { return tableMethods.scrollToRow(targetRow_1); })\n                                        .then(function () { return tablePrivateMethods.triggerCurrentRowEvent(evnt, params); });\n                                }\n                            }\n                        }\n                    }\n                    else if (operArrow && keyboardConfig && keyboardOpts.isArrow) {\n                        if (!isEditStatus) {\n                            // 如果按下了方向键\n                            if (selected.row && selected.column) {\n                                $xetable.moveSelected(selected.args, isLeftArrow, isUpArrow, isRightArrow, isDwArrow, evnt);\n                            }\n                            else if ((isUpArrow || isDwArrow) && (rowOpts.isCurrent || highlightCurrentRow)) {\n                                // 当前行按键上下移动\n                                $xetable.moveCurrentRow(isUpArrow, isDwArrow, evnt);\n                            }\n                        }\n                    }\n                    else if (isTab && keyboardConfig && keyboardOpts.isTab) {\n                        // 如果按下了 Tab 键切换\n                        if (selected.row || selected.column) {\n                            $xetable.moveTabSelected(selected.args, hasShiftKey, evnt);\n                        }\n                        else if (actived.row || actived.column) {\n                            $xetable.moveTabSelected(actived.args, hasShiftKey, evnt);\n                        }\n                    }\n                    else if (keyboardConfig && isEnableConf(editConfig) && (isDel || (treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow ? isBack && keyboardOpts.isArrow : isBack))) {\n                        if (!isEditStatus) {\n                            var delMethod = keyboardOpts.delMethod, backMethod = keyboardOpts.backMethod;\n                            // 如果是删除键\n                            if (keyboardOpts.isDel && (selected.row || selected.column)) {\n                                if (delMethod) {\n                                    delMethod({\n                                        row: selected.row,\n                                        rowIndex: tableMethods.getRowIndex(selected.row),\n                                        column: selected.column,\n                                        columnIndex: tableMethods.getColumnIndex(selected.column),\n                                        $table: $xetable\n                                    });\n                                }\n                                else {\n                                    setCellValue(selected.row, selected.column, null);\n                                }\n                                if (isBack) {\n                                    if (backMethod) {\n                                        backMethod({\n                                            row: selected.row,\n                                            rowIndex: tableMethods.getRowIndex(selected.row),\n                                            column: selected.column,\n                                            columnIndex: tableMethods.getColumnIndex(selected.column),\n                                            $table: $xetable\n                                        });\n                                    }\n                                    else {\n                                        $xetable.handleActived(selected.args, evnt);\n                                    }\n                                }\n                                else if (isDel) {\n                                    // 如果按下 del 键，更新表尾数据\n                                    tableMethods.updateFooter();\n                                }\n                            }\n                            else if (isBack && keyboardOpts.isArrow && treeConfig && (rowOpts.isCurrent || highlightCurrentRow) && currentRow) {\n                                // 如果树形表格回退键关闭当前行返回父节点\n                                var parentRow_1 = XEUtils.findTree(internalData.afterFullData, function (item) { return item === currentRow; }, treeOpts).parent;\n                                if (parentRow_1) {\n                                    evnt.preventDefault();\n                                    params = {\n                                        $table: $xetable,\n                                        row: parentRow_1,\n                                        rowIndex: tableMethods.getRowIndex(parentRow_1),\n                                        $rowIndex: tableMethods.getVMRowIndex(parentRow_1)\n                                    };\n                                    tableMethods.setTreeExpand(parentRow_1, false)\n                                        .then(function () { return tableMethods.scrollToRow(parentRow_1); })\n                                        .then(function () { return tablePrivateMethods.triggerCurrentRowEvent(evnt, params); });\n                                }\n                            }\n                        }\n                    }\n                    else if (keyboardConfig && isEnableConf(editConfig) && keyboardOpts.isEdit && !hasCtrlKey && !hasMetaKey && (isSpacebar || (keyCode >= 48 && keyCode <= 57) || (keyCode >= 65 && keyCode <= 90) || (keyCode >= 96 && keyCode <= 111) || (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222))) {\n                        var editMethod = keyboardOpts.editMethod;\n                        // 启用编辑后，空格键功能将失效\n                        // if (isSpacebar) {\n                        //   evnt.preventDefault()\n                        // }\n                        // 如果是按下非功能键之外允许直接编辑\n                        if (selected.column && selected.row && isEnableConf(selected.column.editRender)) {\n                            if (!editOpts.activeMethod || editOpts.activeMethod(__assign(__assign({}, selected.args), { $table: $xetable }))) {\n                                if (editMethod) {\n                                    editMethod({\n                                        row: selected.row,\n                                        rowIndex: tableMethods.getRowIndex(selected.row),\n                                        column: selected.column,\n                                        columnIndex: tableMethods.getColumnIndex(selected.column),\n                                        $table: $xetable,\n                                        $grid: $xegrid\n                                    });\n                                }\n                                else {\n                                    setCellValue(selected.row, selected.column, null);\n                                    $xetable.handleActived(selected.args, evnt);\n                                }\n                            }\n                        }\n                    }\n                    tableMethods.dispatchEvent('keydown', {}, evnt);\n                });\n            }\n        };\n        var handleGlobalPasteEvent = function (evnt) {\n            var keyboardConfig = props.keyboardConfig, mouseConfig = props.mouseConfig;\n            var editStore = reactData.editStore, filterStore = reactData.filterStore;\n            var isActivated = internalData.isActivated;\n            var mouseOpts = computeMouseOpts.value;\n            var keyboardOpts = computeKeyboardOpts.value;\n            var actived = editStore.actived;\n            if (isActivated && !filterStore.visible) {\n                if (!(actived.row || actived.column)) {\n                    if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handlePasteCellAreaEvent) {\n                        $xetable.handlePasteCellAreaEvent(evnt);\n                    }\n                }\n                tableMethods.dispatchEvent('paste', {}, evnt);\n            }\n        };\n        var handleGlobalCopyEvent = function (evnt) {\n            var keyboardConfig = props.keyboardConfig, mouseConfig = props.mouseConfig;\n            var editStore = reactData.editStore, filterStore = reactData.filterStore;\n            var isActivated = internalData.isActivated;\n            var mouseOpts = computeMouseOpts.value;\n            var keyboardOpts = computeKeyboardOpts.value;\n            var actived = editStore.actived;\n            if (isActivated && !filterStore.visible) {\n                if (!(actived.row || actived.column)) {\n                    if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handleCopyCellAreaEvent) {\n                        $xetable.handleCopyCellAreaEvent(evnt);\n                    }\n                }\n                tableMethods.dispatchEvent('copy', {}, evnt);\n            }\n        };\n        var handleGlobalCutEvent = function (evnt) {\n            var keyboardConfig = props.keyboardConfig, mouseConfig = props.mouseConfig;\n            var editStore = reactData.editStore, filterStore = reactData.filterStore;\n            var isActivated = internalData.isActivated;\n            var mouseOpts = computeMouseOpts.value;\n            var keyboardOpts = computeKeyboardOpts.value;\n            var actived = editStore.actived;\n            if (isActivated && !filterStore.visible) {\n                if (!(actived.row || actived.column)) {\n                    if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handleCutCellAreaEvent) {\n                        $xetable.handleCutCellAreaEvent(evnt);\n                    }\n                }\n                tableMethods.dispatchEvent('cut', {}, evnt);\n            }\n        };\n        var handleGlobalResizeEvent = function () {\n            if ($xetable.closeMenu) {\n                $xetable.closeMenu();\n            }\n            tablePrivateMethods.updateCellAreas();\n            tableMethods.recalculate(true);\n        };\n        var handleTargetEnterEvent = function (isClear) {\n            var $tooltip = refTooltip.value;\n            clearTimeout(internalData.tooltipTimeout);\n            if (isClear) {\n                tableMethods.closeTooltip();\n            }\n            else {\n                if ($tooltip) {\n                    $tooltip.setActived(true);\n                }\n            }\n        };\n        /**\n         * 处理显示 tooltip\n         * @param {Event} evnt 事件\n         * @param {ColumnInfo} column 列配置\n         * @param {Row} row 行对象\n         */\n        var handleTooltip = function (evnt, cell, overflowElem, tipElem, params) {\n            params.cell = cell;\n            var tooltipStore = reactData.tooltipStore;\n            var tooltipOpts = computeTooltipOpts.value;\n            var column = params.column, row = params.row;\n            var showAll = tooltipOpts.showAll, contentMethod = tooltipOpts.contentMethod;\n            var customContent = contentMethod ? contentMethod(params) : null;\n            var useCustom = contentMethod && !XEUtils.eqNull(customContent);\n            var content = useCustom ? customContent : (column.type === 'html' ? overflowElem.innerText : overflowElem.textContent).trim();\n            var isCellOverflow = overflowElem.scrollWidth > overflowElem.clientWidth;\n            if (content && (showAll || useCustom || isCellOverflow)) {\n                Object.assign(tooltipStore, {\n                    row: row,\n                    column: column,\n                    visible: true,\n                    currOpts: null\n                });\n                nextTick(function () {\n                    var $tooltip = refTooltip.value;\n                    if ($tooltip) {\n                        $tooltip.open(isCellOverflow ? overflowElem : (tipElem || overflowElem), formatText(content));\n                    }\n                });\n            }\n            return nextTick();\n        };\n        /**\n         * 内部方法\n         */\n        tablePrivateMethods = {\n            getSetupOptions: function () {\n                return GlobalConfig;\n            },\n            updateAfterDataIndex: updateAfterDataIndex,\n            callSlot: function (slotFunc, params) {\n                if (slotFunc) {\n                    if ($xegrid) {\n                        return $xegrid.callSlot(slotFunc, params);\n                    }\n                    if (XEUtils.isFunction(slotFunc)) {\n                        return slotFunc(params);\n                    }\n                }\n                return [];\n            },\n            /**\n             * 获取父容器元素\n             */\n            getParentElem: function () {\n                var el = refElem.value;\n                if ($xegrid) {\n                    var gridEl = $xegrid.getRefMaps().refElem.value;\n                    return gridEl ? gridEl.parentNode : null;\n                }\n                return el ? el.parentNode : null;\n            },\n            /**\n             * 获取父容器的高度\n             */\n            getParentHeight: function () {\n                var height = props.height;\n                var el = refElem.value;\n                if (el) {\n                    var parentElem = el.parentNode;\n                    var parentPaddingSize = height === 'auto' ? getPaddingTopBottomSize(parentElem) : 0;\n                    return Math.floor($xegrid ? $xegrid.getParentHeight() : XEUtils.toNumber(getComputedStyle(parentElem).height) - parentPaddingSize);\n                }\n                return 0;\n            },\n            /**\n             * 获取需要排除的高度\n             * 但渲染表格高度时，需要排除工具栏或分页等相关组件的高度\n             * 如果存在表尾合计滚动条，则需要排除滚动条高度\n             */\n            getExcludeHeight: function () {\n                return $xegrid ? $xegrid.getExcludeHeight() : 0;\n            },\n            /**\n             * 定义行数据中的列属性，如果不存在则定义\n             * @param {Row} record 行数据\n             */\n            defineField: function (record) {\n                var treeConfig = props.treeConfig;\n                var expandOpts = computeExpandOpts.value;\n                var treeOpts = computeTreeOpts.value;\n                var radioOpts = computeRadioOpts.value;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var rowkey = getRowkey($xetable);\n                internalData.tableFullColumn.forEach(function (column) {\n                    var property = column.property, editRender = column.editRender;\n                    if (property && !XEUtils.has(record, property)) {\n                        var cellValue = null;\n                        if (editRender) {\n                            var defaultValue = editRender.defaultValue;\n                            if (XEUtils.isFunction(defaultValue)) {\n                                cellValue = defaultValue({ column: column });\n                            }\n                            else if (!XEUtils.isUndefined(defaultValue)) {\n                                cellValue = defaultValue;\n                            }\n                        }\n                        XEUtils.set(record, property, cellValue);\n                    }\n                });\n                var otherFields = [radioOpts.labelField, checkboxOpts.checkField, checkboxOpts.labelField, expandOpts.labelField];\n                otherFields.forEach(function (key) {\n                    if (key && eqEmptyValue(XEUtils.get(record, key))) {\n                        XEUtils.set(record, key, null);\n                    }\n                });\n                if (treeConfig && treeOpts.lazy && XEUtils.isUndefined(record[treeOpts.children])) {\n                    record[treeOpts.children] = null;\n                }\n                // 必须有行数据的唯一主键，可以自行设置；也可以默认生成一个随机数\n                if (eqEmptyValue(XEUtils.get(record, rowkey))) {\n                    XEUtils.set(record, rowkey, getRowUniqueId());\n                }\n                return record;\n            },\n            handleTableData: function (force) {\n                var scrollYLoad = reactData.scrollYLoad;\n                var scrollYStore = internalData.scrollYStore, fullDataRowIdData = internalData.fullDataRowIdData;\n                var fullList = internalData.afterFullData;\n                // 是否进行数据处理\n                if (force) {\n                    // 更新数据，处理筛选和排序\n                    updateAfterFullData();\n                    // 如果为虚拟树，将树结构拍平\n                    fullList = handleVirtualTreeToList();\n                }\n                var tableData = scrollYLoad ? fullList.slice(scrollYStore.startIndex, scrollYStore.endIndex) : fullList.slice(0);\n                tableData.forEach(function (row, $index) {\n                    var rowid = getRowid($xetable, row);\n                    var rest = fullDataRowIdData[rowid];\n                    if (rest) {\n                        rest.$index = $index;\n                    }\n                });\n                reactData.tableData = tableData;\n                return nextTick();\n            },\n            /**\n             * 更新数据行的 Map\n             * 牺牲数据组装的耗时，用来换取使用过程中的流畅\n             */\n            cacheRowMap: function (isSource) {\n                var treeConfig = props.treeConfig;\n                var treeOpts = computeTreeOpts.value;\n                var fullDataRowIdData = internalData.fullDataRowIdData, fullAllDataRowIdData = internalData.fullAllDataRowIdData, tableFullData = internalData.tableFullData, tableFullTreeData = internalData.tableFullTreeData;\n                var rowkey = getRowkey($xetable);\n                var isLazy = treeConfig && treeOpts.lazy;\n                var handleCache = function (row, index, items, path, parent, nodes) {\n                    var rowid = getRowid($xetable, row);\n                    var seq = treeConfig && path ? toTreePathSeq(path) : index + 1;\n                    var level = nodes ? nodes.length - 1 : 0;\n                    if (eqEmptyValue(rowid)) {\n                        rowid = getRowUniqueId();\n                        XEUtils.set(row, rowkey, rowid);\n                    }\n                    if (isLazy && row[treeOpts.hasChild] && XEUtils.isUndefined(row[treeOpts.children])) {\n                        row[treeOpts.children] = null;\n                    }\n                    var rest = { row: row, rowid: rowid, seq: seq, index: treeConfig && parent ? -1 : index, _index: -1, $index: -1, items: items, parent: parent, level: level };\n                    if (isSource) {\n                        fullDataRowIdData[rowid] = rest;\n                    }\n                    fullAllDataRowIdData[rowid] = rest;\n                };\n                if (isSource) {\n                    fullDataRowIdData = internalData.fullDataRowIdData = {};\n                }\n                fullAllDataRowIdData = internalData.fullAllDataRowIdData = {};\n                if (treeConfig) {\n                    XEUtils.eachTree(tableFullTreeData, handleCache, treeOpts);\n                }\n                else {\n                    tableFullData.forEach(handleCache);\n                }\n            },\n            /**\n             * 指定列宽的列进行拆分\n             */\n            analyColumnWidth: function () {\n                var tableFullColumn = internalData.tableFullColumn;\n                var columnOpts = computeColumnOpts.value;\n                var defaultWidth = columnOpts.width, defaultMinWidth = columnOpts.minWidth;\n                var resizeList = [];\n                var pxList = [];\n                var pxMinList = [];\n                var scaleList = [];\n                var scaleMinList = [];\n                var autoList = [];\n                tableFullColumn.forEach(function (column) {\n                    if (defaultWidth && !column.width) {\n                        column.width = defaultWidth;\n                    }\n                    if (defaultMinWidth && !column.minWidth) {\n                        column.minWidth = defaultMinWidth;\n                    }\n                    if (column.visible) {\n                        if (column.resizeWidth) {\n                            resizeList.push(column);\n                        }\n                        else if (isPx(column.width)) {\n                            pxList.push(column);\n                        }\n                        else if (isScale(column.width)) {\n                            scaleList.push(column);\n                        }\n                        else if (isPx(column.minWidth)) {\n                            pxMinList.push(column);\n                        }\n                        else if (isScale(column.minWidth)) {\n                            scaleMinList.push(column);\n                        }\n                        else {\n                            autoList.push(column);\n                        }\n                    }\n                });\n                Object.assign(reactData.columnStore, { resizeList: resizeList, pxList: pxList, pxMinList: pxMinList, scaleList: scaleList, scaleMinList: scaleMinList, autoList: autoList });\n            },\n            saveCustomResizable: function (isReset) {\n                var id = props.id, customConfig = props.customConfig;\n                var customOpts = computeCustomOpts.value;\n                var collectColumn = internalData.collectColumn;\n                var storage = customOpts.storage;\n                var isResizable = storage === true || (storage && storage.resizable);\n                if (customConfig && isResizable) {\n                    var columnWidthStorageMap = getCustomStorageMap(resizableStorageKey);\n                    var columnWidthStorage_1;\n                    if (!id) {\n                        errLog('vxe.error.reqProp', ['id']);\n                        return;\n                    }\n                    if (!isReset) {\n                        columnWidthStorage_1 = XEUtils.isPlainObject(columnWidthStorageMap[id]) ? columnWidthStorageMap[id] : {};\n                        XEUtils.eachTree(collectColumn, function (column) {\n                            if (column.resizeWidth) {\n                                var colKey = column.getKey();\n                                if (colKey) {\n                                    columnWidthStorage_1[colKey] = column.renderWidth;\n                                }\n                            }\n                        });\n                    }\n                    columnWidthStorageMap[id] = XEUtils.isEmpty(columnWidthStorage_1) ? undefined : columnWidthStorage_1;\n                    localStorage.setItem(resizableStorageKey, XEUtils.toJSONString(columnWidthStorageMap));\n                }\n            },\n            saveCustomVisible: function () {\n                var id = props.id, customConfig = props.customConfig;\n                var collectColumn = internalData.collectColumn;\n                var customOpts = computeCustomOpts.value;\n                var checkMethod = customOpts.checkMethod, storage = customOpts.storage;\n                var isVisible = storage === true || (storage && storage.visible);\n                if (customConfig && isVisible) {\n                    var columnVisibleStorageMap = getCustomStorageMap(visibleStorageKey);\n                    var colHides_1 = [];\n                    var colShows_1 = [];\n                    if (!id) {\n                        errLog('vxe.error.reqProp', ['id']);\n                        return;\n                    }\n                    XEUtils.eachTree(collectColumn, function (column) {\n                        if (!checkMethod || checkMethod({ column: column })) {\n                            if (!column.visible && column.defaultVisible) {\n                                var colKey = column.getKey();\n                                if (colKey) {\n                                    colHides_1.push(colKey);\n                                }\n                            }\n                            else if (column.visible && !column.defaultVisible) {\n                                var colKey = column.getKey();\n                                if (colKey) {\n                                    colShows_1.push(colKey);\n                                }\n                            }\n                        }\n                    });\n                    columnVisibleStorageMap[id] = [colHides_1.join(',')].concat(colShows_1.length ? [colShows_1.join(',')] : []).join('|') || undefined;\n                    localStorage.setItem(visibleStorageKey, XEUtils.toJSONString(columnVisibleStorageMap));\n                }\n            },\n            handleCustom: function () {\n                tablePrivateMethods.saveCustomVisible();\n                tablePrivateMethods.analyColumnWidth();\n                return tableMethods.refreshColumn();\n            },\n            preventEvent: function (evnt, type, args, next, end) {\n                var evntList = VXETable.interceptor.get(type);\n                var rest;\n                if (!evntList.some(function (func) { return func(Object.assign({ $grid: $xegrid, $table: $xetable, $event: evnt }, args)) === false; })) {\n                    if (next) {\n                        rest = next();\n                    }\n                }\n                if (end) {\n                    end();\n                }\n                return rest;\n            },\n            checkSelectionStatus: function () {\n                var treeConfig = props.treeConfig;\n                var selection = reactData.selection, treeIndeterminates = reactData.treeIndeterminates;\n                var afterFullData = internalData.afterFullData;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var checkField = checkboxOpts.checkField, halfField = checkboxOpts.halfField, checkStrictly = checkboxOpts.checkStrictly, checkMethod = checkboxOpts.checkMethod;\n                if (!checkStrictly) {\n                    var disableRows_1 = [];\n                    var checkRows_1 = [];\n                    var isAllResolve = false;\n                    var isAllSelected = false;\n                    var isIndeterminate = false;\n                    if (checkField) {\n                        isAllResolve = afterFullData.every(checkMethod\n                            ? function (row) {\n                                if (!checkMethod({ row: row })) {\n                                    disableRows_1.push(row);\n                                    return true;\n                                }\n                                if (XEUtils.get(row, checkField)) {\n                                    checkRows_1.push(row);\n                                    return true;\n                                }\n                                return false;\n                            }\n                            : function (row) { return XEUtils.get(row, checkField); });\n                        isAllSelected = isAllResolve && afterFullData.length !== disableRows_1.length;\n                        if (treeConfig) {\n                            if (halfField) {\n                                isIndeterminate = !isAllSelected && afterFullData.some(function (row) { return XEUtils.get(row, checkField) || XEUtils.get(row, halfField) || $xetable.findRowIndexOf(treeIndeterminates, row) > -1; });\n                            }\n                            else {\n                                isIndeterminate = !isAllSelected && afterFullData.some(function (row) { return XEUtils.get(row, checkField) || $xetable.findRowIndexOf(treeIndeterminates, row) > -1; });\n                            }\n                        }\n                        else {\n                            if (halfField) {\n                                isIndeterminate = !isAllSelected && afterFullData.some(function (row) { return XEUtils.get(row, checkField) || XEUtils.get(row, halfField); });\n                            }\n                            else {\n                                isIndeterminate = !isAllSelected && afterFullData.some(function (row) { return XEUtils.get(row, checkField); });\n                            }\n                        }\n                    }\n                    else {\n                        isAllResolve = afterFullData.every(checkMethod\n                            ? function (row) {\n                                if (!checkMethod({ row: row })) {\n                                    disableRows_1.push(row);\n                                    return true;\n                                }\n                                if ($xetable.findRowIndexOf(selection, row) > -1) {\n                                    checkRows_1.push(row);\n                                    return true;\n                                }\n                                return false;\n                            }\n                            : function (row) { return $xetable.findRowIndexOf(selection, row) > -1; });\n                        isAllSelected = isAllResolve && afterFullData.length !== disableRows_1.length;\n                        if (treeConfig) {\n                            isIndeterminate = !isAllSelected && afterFullData.some(function (row) { return $xetable.findRowIndexOf(treeIndeterminates, row) > -1 || $xetable.findRowIndexOf(selection, row) > -1; });\n                        }\n                        else {\n                            isIndeterminate = !isAllSelected && afterFullData.some(function (row) { return $xetable.findRowIndexOf(selection, row) > -1; });\n                        }\n                    }\n                    reactData.isAllSelected = isAllSelected;\n                    reactData.isIndeterminate = isIndeterminate;\n                }\n            },\n            /**\n             * 多选，行选中事件\n             * value 选中true 不选false 半选-1\n             */\n            handleSelectRow: function (_a, value) {\n                var row = _a.row;\n                var treeConfig = props.treeConfig;\n                var selection = reactData.selection, treeIndeterminates = reactData.treeIndeterminates;\n                var afterFullData = internalData.afterFullData;\n                var treeOpts = computeTreeOpts.value;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var property = checkboxOpts.checkField, checkStrictly = checkboxOpts.checkStrictly, checkMethod = checkboxOpts.checkMethod;\n                if (property) {\n                    if (treeConfig && !checkStrictly) {\n                        if (value === -1) {\n                            if ($xetable.findRowIndexOf(treeIndeterminates, row) === -1) {\n                                treeIndeterminates.push(row);\n                            }\n                            XEUtils.set(row, property, false);\n                        }\n                        else {\n                            // 更新子节点状态\n                            XEUtils.eachTree([row], function (item) {\n                                if ($xetable.eqRow(item, row) || (!checkMethod || checkMethod({ row: item }))) {\n                                    XEUtils.set(item, property, value);\n                                    XEUtils.remove(treeIndeterminates, function (half) { return half === item; });\n                                    handleCheckboxReserveRow(row, value);\n                                }\n                            }, treeOpts);\n                        }\n                        // 如果存在父节点，更新父节点状态\n                        var matchObj = XEUtils.findTree(afterFullData, function (item) { return $xetable.eqRow(item, row); }, treeOpts);\n                        if (matchObj && matchObj.parent) {\n                            var parentStatus = void 0;\n                            var vItems_1 = checkMethod ? matchObj.items.filter(function (item) { return checkMethod({ row: item }); }) : matchObj.items;\n                            var indeterminatesItem = XEUtils.find(matchObj.items, function (item) { return $xetable.findRowIndexOf(treeIndeterminates, item) > -1; });\n                            if (indeterminatesItem) {\n                                parentStatus = -1;\n                            }\n                            else {\n                                var selectItems = matchObj.items.filter(function (item) { return XEUtils.get(item, property); });\n                                parentStatus = selectItems.filter(function (item) { return $xetable.findRowIndexOf(vItems_1, item) > -1; }).length === vItems_1.length ? true : (selectItems.length || value === -1 ? -1 : false);\n                            }\n                            return tablePrivateMethods.handleSelectRow({ row: matchObj.parent }, parentStatus);\n                        }\n                    }\n                    else {\n                        if (!checkMethod || checkMethod({ row: row })) {\n                            XEUtils.set(row, property, value);\n                            handleCheckboxReserveRow(row, value);\n                        }\n                    }\n                }\n                else {\n                    if (treeConfig && !checkStrictly) {\n                        if (value === -1) {\n                            if ($xetable.findRowIndexOf(treeIndeterminates, row) === -1) {\n                                treeIndeterminates.push(row);\n                            }\n                            XEUtils.remove(selection, function (item) { return $xetable.eqRow(item, row); });\n                        }\n                        else {\n                            // 更新子节点状态\n                            XEUtils.eachTree([row], function (item) {\n                                if ($xetable.eqRow(item, row) || (!checkMethod || checkMethod({ row: item }))) {\n                                    if (value) {\n                                        selection.push(item);\n                                    }\n                                    else {\n                                        XEUtils.remove(selection, function (select) { return select === item; });\n                                    }\n                                    XEUtils.remove(treeIndeterminates, function (half) { return half === item; });\n                                    handleCheckboxReserveRow(row, value);\n                                }\n                            }, treeOpts);\n                        }\n                        // 如果存在父节点，更新父节点状态\n                        var matchObj = XEUtils.findTree(afterFullData, function (item) { return $xetable.eqRow(item, row); }, treeOpts);\n                        if (matchObj && matchObj.parent) {\n                            var parentStatus = void 0;\n                            var vItems_2 = checkMethod ? matchObj.items.filter(function (item) { return checkMethod({ row: item }); }) : matchObj.items;\n                            var indeterminatesItem = XEUtils.find(matchObj.items, function (item) { return $xetable.findRowIndexOf(treeIndeterminates, item) > -1; });\n                            if (indeterminatesItem) {\n                                parentStatus = -1;\n                            }\n                            else {\n                                var selectItems = matchObj.items.filter(function (item) { return $xetable.findRowIndexOf(selection, item) > -1; });\n                                parentStatus = selectItems.filter(function (item) { return $xetable.findRowIndexOf(vItems_2, item) > -1; }).length === vItems_2.length ? true : (selectItems.length || value === -1 ? -1 : false);\n                            }\n                            return tablePrivateMethods.handleSelectRow({ row: matchObj.parent }, parentStatus);\n                        }\n                    }\n                    else {\n                        if (!checkMethod || checkMethod({ row: row })) {\n                            if (value) {\n                                if ($xetable.findRowIndexOf(selection, row) === -1) {\n                                    selection.push(row);\n                                }\n                            }\n                            else {\n                                XEUtils.remove(selection, function (item) { return $xetable.eqRow(item, row); });\n                            }\n                            handleCheckboxReserveRow(row, value);\n                        }\n                    }\n                }\n                tablePrivateMethods.checkSelectionStatus();\n            },\n            triggerHeaderHelpEvent: function (evnt, params) {\n                var column = params.column;\n                var titlePrefix = column.titlePrefix || column.titleHelp;\n                if (titlePrefix.content || titlePrefix.message) {\n                    var tooltipStore = reactData.tooltipStore;\n                    var content_1 = getFuncText(titlePrefix.content || titlePrefix.message);\n                    handleTargetEnterEvent(true);\n                    tooltipStore.visible = true;\n                    tooltipStore.currOpts = __assign(__assign({}, titlePrefix), { content: null });\n                    nextTick(function () {\n                        var $tooltip = refTooltip.value;\n                        if ($tooltip) {\n                            $tooltip.open(evnt.currentTarget, content_1);\n                        }\n                    });\n                }\n            },\n            /**\n             * 触发表头 tooltip 事件\n             */\n            triggerHeaderTooltipEvent: function (evnt, params) {\n                var tooltipStore = reactData.tooltipStore;\n                var column = params.column;\n                var titleElem = evnt.currentTarget;\n                handleTargetEnterEvent(true);\n                if (tooltipStore.column !== column || !tooltipStore.visible) {\n                    handleTooltip(evnt, titleElem, titleElem, null, params);\n                }\n            },\n            /**\n             * 触发单元格 tooltip 事件\n             */\n            triggerBodyTooltipEvent: function (evnt, params) {\n                var editConfig = props.editConfig;\n                var editStore = reactData.editStore;\n                var tooltipStore = reactData.tooltipStore;\n                var editOpts = computeEditOpts.value;\n                var actived = editStore.actived;\n                var row = params.row, column = params.column;\n                var cell = evnt.currentTarget;\n                handleTargetEnterEvent(tooltipStore.column !== column || tooltipStore.row !== row);\n                if (isEnableConf(editConfig)) {\n                    if ((editOpts.mode === 'row' && actived.row === row) || (actived.row === row && actived.column === column)) {\n                        return;\n                    }\n                }\n                if (tooltipStore.column !== column || tooltipStore.row !== row || !tooltipStore.visible) {\n                    var overflowElem = void 0;\n                    var tipElem = void 0;\n                    if (column.treeNode) {\n                        overflowElem = cell.querySelector('.vxe-tree-cell');\n                        if (column.type === 'html') {\n                            tipElem = cell.querySelector('.vxe-cell--html');\n                        }\n                    }\n                    else {\n                        tipElem = cell.querySelector(column.type === 'html' ? '.vxe-cell--html' : '.vxe-cell--label');\n                    }\n                    handleTooltip(evnt, cell, overflowElem || cell.children[0], tipElem, params);\n                }\n            },\n            /**\n             * 触发表尾 tooltip 事件\n             */\n            triggerFooterTooltipEvent: function (evnt, params) {\n                var column = params.column;\n                var tooltipStore = reactData.tooltipStore;\n                var cell = evnt.currentTarget;\n                handleTargetEnterEvent(tooltipStore.column !== column || tooltipStore.row);\n                if (tooltipStore.column !== column || !tooltipStore.visible) {\n                    handleTooltip(evnt, cell, cell.querySelector('.vxe-cell--item') || cell.children[0], null, params);\n                }\n            },\n            handleTargetLeaveEvent: function () {\n                var tooltipOpts = computeTooltipOpts.value;\n                var $tooltip = refTooltip.value;\n                if ($tooltip) {\n                    $tooltip.setActived(false);\n                }\n                if (tooltipOpts.enterable) {\n                    internalData.tooltipTimeout = setTimeout(function () {\n                        $tooltip = refTooltip.value;\n                        if ($tooltip && !$tooltip.isActived()) {\n                            tableMethods.closeTooltip();\n                        }\n                    }, tooltipOpts.leaveDelay);\n                }\n                else {\n                    tableMethods.closeTooltip();\n                }\n            },\n            triggerHeaderCellClickEvent: function (evnt, params) {\n                var _lastResizeTime = internalData._lastResizeTime;\n                var sortOpts = computeSortOpts.value;\n                var columnOpts = computeColumnOpts.value;\n                var column = params.column;\n                var cell = evnt.currentTarget;\n                var triggerResizable = _lastResizeTime && _lastResizeTime > Date.now() - 300;\n                var triggerSort = getEventTargetNode(evnt, cell, 'vxe-cell--sort').flag;\n                var triggerFilter = getEventTargetNode(evnt, cell, 'vxe-cell--filter').flag;\n                if (sortOpts.trigger === 'cell' && !(triggerResizable || triggerSort || triggerFilter)) {\n                    tablePrivateMethods.triggerSortEvent(evnt, column, getNextSortOrder(column));\n                }\n                tableMethods.dispatchEvent('header-cell-click', Object.assign({ triggerResizable: triggerResizable, triggerSort: triggerSort, triggerFilter: triggerFilter, cell: cell }, params), evnt);\n                if (columnOpts.isCurrent || props.highlightCurrentColumn) {\n                    tableMethods.setCurrentColumn(column);\n                }\n            },\n            triggerHeaderCellDblclickEvent: function (evnt, params) {\n                tableMethods.dispatchEvent('header-cell-dblclick', Object.assign({ cell: evnt.currentTarget }, params), evnt);\n            },\n            /**\n             * 列点击事件\n             * 如果是单击模式，则激活为编辑状态\n             * 如果是双击模式，则单击后选中状态\n             */\n            triggerCellClickEvent: function (evnt, params) {\n                var highlightCurrentRow = props.highlightCurrentRow, editConfig = props.editConfig;\n                var editStore = reactData.editStore;\n                var expandOpts = computeExpandOpts.value;\n                var editOpts = computeEditOpts.value;\n                var treeOpts = computeTreeOpts.value;\n                var radioOpts = computeRadioOpts.value;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var rowOpts = computeRowOpts.value;\n                var actived = editStore.actived;\n                var row = params.row, column = params.column;\n                var type = column.type, treeNode = column.treeNode;\n                var isRadioType = type === 'radio';\n                var isCheckboxType = type === 'checkbox';\n                var isExpandType = type === 'expand';\n                var cell = evnt.currentTarget;\n                var triggerRadio = isRadioType && getEventTargetNode(evnt, cell, 'vxe-cell--radio').flag;\n                var triggerCheckbox = isCheckboxType && getEventTargetNode(evnt, cell, 'vxe-cell--checkbox').flag;\n                var triggerTreeNode = treeNode && getEventTargetNode(evnt, cell, 'vxe-tree--btn-wrapper').flag;\n                var triggerExpandNode = isExpandType && getEventTargetNode(evnt, cell, 'vxe-table--expanded').flag;\n                params = Object.assign({ cell: cell, triggerRadio: triggerRadio, triggerCheckbox: triggerCheckbox, triggerTreeNode: triggerTreeNode, triggerExpandNode: triggerExpandNode }, params);\n                if (!triggerCheckbox && !triggerRadio) {\n                    // 如果是展开行\n                    if (!triggerExpandNode && (expandOpts.trigger === 'row' || (isExpandType && expandOpts.trigger === 'cell'))) {\n                        tablePrivateMethods.triggerRowExpandEvent(evnt, params);\n                    }\n                    // 如果是树形表格\n                    if ((treeOpts.trigger === 'row' || (treeNode && treeOpts.trigger === 'cell'))) {\n                        tablePrivateMethods.triggerTreeExpandEvent(evnt, params);\n                    }\n                }\n                // 如果点击了树节点\n                if (!triggerTreeNode) {\n                    if (!triggerExpandNode) {\n                        // 如果是高亮行\n                        if (rowOpts.isCurrent || highlightCurrentRow) {\n                            if (!triggerCheckbox && !triggerRadio) {\n                                tablePrivateMethods.triggerCurrentRowEvent(evnt, params);\n                            }\n                        }\n                        // 如果是单选框\n                        if (!triggerRadio && (radioOpts.trigger === 'row' || (isRadioType && radioOpts.trigger === 'cell'))) {\n                            tablePrivateMethods.triggerRadioRowEvent(evnt, params);\n                        }\n                        // 如果是复选框\n                        if (!triggerCheckbox && (checkboxOpts.trigger === 'row' || (isCheckboxType && checkboxOpts.trigger === 'cell'))) {\n                            tablePrivateMethods.handleToggleCheckRowEvent(evnt, params);\n                        }\n                    }\n                    // 如果设置了单元格选中功能，则不会使用点击事件去处理（只能支持双击模式）\n                    if (isEnableConf(editConfig)) {\n                        if (editOpts.trigger === 'manual') {\n                            if (actived.args && actived.row === row && column !== actived.column) {\n                                handleChangeCell(evnt, params);\n                            }\n                        }\n                        else if (!actived.args || row !== actived.row || column !== actived.column) {\n                            if (editOpts.trigger === 'click') {\n                                handleChangeCell(evnt, params);\n                            }\n                            else if (editOpts.trigger === 'dblclick') {\n                                if (editOpts.mode === 'row' && actived.row === row) {\n                                    handleChangeCell(evnt, params);\n                                }\n                            }\n                        }\n                    }\n                }\n                tableMethods.dispatchEvent('cell-click', params, evnt);\n            },\n            /**\n             * 列双击点击事件\n             * 如果是双击模式，则激活为编辑状态\n             */\n            triggerCellDblclickEvent: function (evnt, params) {\n                var editConfig = props.editConfig;\n                var editStore = reactData.editStore;\n                var editOpts = computeEditOpts.value;\n                var actived = editStore.actived;\n                var cell = evnt.currentTarget;\n                params = Object.assign({ cell: cell }, params);\n                if (isEnableConf(editConfig) && editOpts.trigger === 'dblclick') {\n                    if (!actived.args || evnt.currentTarget !== actived.args.cell) {\n                        if (editOpts.mode === 'row') {\n                            checkValidate('blur')\n                                .catch(function (e) { return e; })\n                                .then(function () {\n                                $xetable.handleActived(params, evnt)\n                                    .then(function () { return checkValidate('change'); })\n                                    .catch(function (e) { return e; });\n                            });\n                        }\n                        else if (editOpts.mode === 'cell') {\n                            $xetable.handleActived(params, evnt)\n                                .then(function () { return checkValidate('change'); })\n                                .catch(function (e) { return e; });\n                        }\n                    }\n                }\n                tableMethods.dispatchEvent('cell-dblclick', params, evnt);\n            },\n            handleToggleCheckRowEvent: function (evnt, params) {\n                var selection = reactData.selection;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var property = checkboxOpts.checkField;\n                var row = params.row;\n                var value = property ? !XEUtils.get(row, property) : $xetable.findRowIndexOf(selection, row) === -1;\n                if (evnt) {\n                    tablePrivateMethods.triggerCheckRowEvent(evnt, params, value);\n                }\n                else {\n                    tablePrivateMethods.handleSelectRow(params, value);\n                }\n            },\n            triggerCheckRowEvent: function (evnt, params, value) {\n                var checkboxOpts = computeCheckboxOpts.value;\n                var checkMethod = checkboxOpts.checkMethod;\n                if (!checkMethod || checkMethod({ row: params.row })) {\n                    tablePrivateMethods.handleSelectRow(params, value);\n                    tableMethods.dispatchEvent('checkbox-change', Object.assign({\n                        records: tableMethods.getCheckboxRecords(),\n                        reserves: tableMethods.getCheckboxReserveRecords(),\n                        indeterminates: tableMethods.getCheckboxIndeterminateRecords(),\n                        checked: value\n                    }, params), evnt);\n                }\n            },\n            /**\n             * 多选，选中所有事件\n             */\n            triggerCheckAllEvent: function (evnt, value) {\n                tableMethods.setAllCheckboxRow(value);\n                if (evnt) {\n                    tableMethods.dispatchEvent('checkbox-all', {\n                        records: tableMethods.getCheckboxRecords(),\n                        reserves: tableMethods.getCheckboxReserveRecords(),\n                        indeterminates: tableMethods.getCheckboxIndeterminateRecords(),\n                        checked: value\n                    }, evnt);\n                }\n            },\n            /**\n             * 单选，行选中事件\n             */\n            triggerRadioRowEvent: function (evnt, params) {\n                var oldValue = reactData.selectRow;\n                var row = params.row;\n                var radioOpts = computeRadioOpts.value;\n                var newValue = row;\n                var isChange = oldValue !== newValue;\n                if (isChange) {\n                    tableMethods.setRadioRow(newValue);\n                }\n                else if (!radioOpts.strict) {\n                    isChange = oldValue === newValue;\n                    if (isChange) {\n                        newValue = null;\n                        tableMethods.clearRadioRow();\n                    }\n                }\n                if (isChange) {\n                    tableMethods.dispatchEvent('radio-change', __assign({ oldValue: oldValue, newValue: newValue }, params), evnt);\n                }\n            },\n            triggerCurrentRowEvent: function (evnt, params) {\n                var oldValue = reactData.currentRow;\n                var newValue = params.row;\n                var isChange = oldValue !== newValue;\n                tableMethods.setCurrentRow(newValue);\n                if (isChange) {\n                    tableMethods.dispatchEvent('current-change', __assign({ oldValue: oldValue, newValue: newValue }, params), evnt);\n                }\n            },\n            /**\n             * 展开行事件\n             */\n            triggerRowExpandEvent: function (evnt, params) {\n                var expandLazyLoadeds = reactData.expandLazyLoadeds, column = reactData.expandColumn;\n                var expandOpts = computeExpandOpts.value;\n                var row = params.row;\n                var lazy = expandOpts.lazy;\n                if (!lazy || $xetable.findRowIndexOf(expandLazyLoadeds, row) === -1) {\n                    var expanded = !tableMethods.isExpandByRow(row);\n                    var columnIndex = tableMethods.getColumnIndex(column);\n                    var $columnIndex = tableMethods.getVMColumnIndex(column);\n                    tableMethods.setRowExpand(row, expanded);\n                    tableMethods.dispatchEvent('toggle-row-expand', {\n                        expanded: expanded,\n                        column: column,\n                        columnIndex: columnIndex,\n                        $columnIndex: $columnIndex,\n                        row: row,\n                        rowIndex: tableMethods.getRowIndex(row),\n                        $rowIndex: tableMethods.getVMRowIndex(row)\n                    }, evnt);\n                }\n            },\n            /**\n             * 展开树节点事件\n             */\n            triggerTreeExpandEvent: function (evnt, params) {\n                var treeLazyLoadeds = reactData.treeLazyLoadeds;\n                var treeOpts = computeTreeOpts.value;\n                var row = params.row, column = params.column;\n                var lazy = treeOpts.lazy;\n                if (!lazy || $xetable.findRowIndexOf(treeLazyLoadeds, row) === -1) {\n                    var expanded = !tableMethods.isTreeExpandByRow(row);\n                    var columnIndex = tableMethods.getColumnIndex(column);\n                    var $columnIndex = tableMethods.getVMColumnIndex(column);\n                    tableMethods.setTreeExpand(row, expanded);\n                    tableMethods.dispatchEvent('toggle-tree-expand', { expanded: expanded, column: column, columnIndex: columnIndex, $columnIndex: $columnIndex, row: row }, evnt);\n                }\n            },\n            /**\n             * 点击排序事件\n             */\n            triggerSortEvent: function (evnt, column, order) {\n                var sortOpts = computeSortOpts.value;\n                var property = column.property;\n                if (column.sortable) {\n                    if (!order || column.order === order) {\n                        tableMethods.clearSort(sortOpts.multiple ? column : null);\n                    }\n                    else {\n                        tableMethods.sort({ field: property, order: order });\n                    }\n                    var params = { column: column, property: property, order: column.order, sortList: tableMethods.getSortColumns() };\n                    tableMethods.dispatchEvent('sort-change', params, evnt);\n                }\n            },\n            /**\n             * 横向 X 可视渲染事件处理\n             */\n            triggerScrollXEvent: function () {\n                loadScrollXData();\n            },\n            /**\n             * 纵向 Y 可视渲染事件处理\n             */\n            triggerScrollYEvent: function (evnt) {\n                var scrollYStore = internalData.scrollYStore;\n                var adaptive = scrollYStore.adaptive, offsetSize = scrollYStore.offsetSize, visibleSize = scrollYStore.visibleSize;\n                // webkit 浏览器使用最佳的渲染方式，且最高渲染量不能大于 40 条\n                if (isWebkit && adaptive && (offsetSize * 2 + visibleSize) <= 40) {\n                    loadScrollYData(evnt);\n                }\n                else {\n                    debounceScrollY(evnt);\n                }\n            },\n            /**\n             * 对于树形结构中，可以直接滚动到指定深层节点中\n             * 对于某些特定的场景可能会用到，比如定位到某一节点\n             * @param {Row} row 行对象\n             */\n            scrollToTreeRow: function (row) {\n                var treeConfig = props.treeConfig;\n                var tableFullData = internalData.tableFullData;\n                var rests = [];\n                if (treeConfig) {\n                    var treeOpts = computeTreeOpts.value;\n                    var matchObj = XEUtils.findTree(tableFullData, function (item) { return $xetable.eqRow(item, row); }, treeOpts);\n                    if (matchObj) {\n                        var nodes_1 = matchObj.nodes;\n                        nodes_1.forEach(function (row, index) {\n                            if (index < nodes_1.length - 1 && !tableMethods.isTreeExpandByRow(row)) {\n                                rests.push(tableMethods.setTreeExpand(row, true));\n                            }\n                        });\n                    }\n                }\n                return Promise.all(rests).then(function () { return rowToVisible($xetable, row); });\n            },\n            // 更新横向 X 可视渲染上下剩余空间大小\n            updateScrollXSpace: function () {\n                var scrollXLoad = reactData.scrollXLoad, scrollbarWidth = reactData.scrollbarWidth;\n                var visibleColumn = internalData.visibleColumn, scrollXStore = internalData.scrollXStore, elemStore = internalData.elemStore, tableWidth = internalData.tableWidth;\n                var tableHeader = refTableHeader.value;\n                var tableBody = refTableBody.value;\n                var tableFooter = refTableFooter.value;\n                var tableBodyElem = tableBody ? tableBody.$el : null;\n                if (tableBodyElem) {\n                    var tableHeaderElem = tableHeader ? tableHeader.$el : null;\n                    var tableFooterElem = tableFooter ? tableFooter.$el : null;\n                    var headerElem = tableHeaderElem ? tableHeaderElem.querySelector('.vxe-table--header') : null;\n                    var bodyElem = tableBodyElem.querySelector('.vxe-table--body');\n                    var footerElem = tableFooterElem ? tableFooterElem.querySelector('.vxe-table--footer') : null;\n                    var leftSpaceWidth = visibleColumn.slice(0, scrollXStore.startIndex).reduce(function (previous, column) { return previous + column.renderWidth; }, 0);\n                    var marginLeft = '';\n                    if (scrollXLoad) {\n                        marginLeft = leftSpaceWidth + \"px\";\n                    }\n                    if (headerElem) {\n                        headerElem.style.marginLeft = marginLeft;\n                    }\n                    bodyElem.style.marginLeft = marginLeft;\n                    if (footerElem) {\n                        footerElem.style.marginLeft = marginLeft;\n                    }\n                    var containerList = ['main'];\n                    containerList.forEach(function (name) {\n                        var layoutList = ['header', 'body', 'footer'];\n                        layoutList.forEach(function (layout) {\n                            var xSpaceElem = elemStore[name + \"-\" + layout + \"-xSpace\"];\n                            if (xSpaceElem) {\n                                xSpaceElem.style.width = scrollXLoad ? tableWidth + (layout === 'header' ? scrollbarWidth : 0) + \"px\" : '';\n                            }\n                        });\n                    });\n                    nextTick(updateStyle);\n                }\n            },\n            // 更新纵向 Y 可视渲染上下剩余空间大小\n            updateScrollYSpace: function () {\n                var scrollYLoad = reactData.scrollYLoad;\n                var scrollYStore = internalData.scrollYStore, elemStore = internalData.elemStore, afterFullData = internalData.afterFullData;\n                var startIndex = scrollYStore.startIndex, rowHeight = scrollYStore.rowHeight;\n                var bodyHeight = afterFullData.length * rowHeight;\n                var topSpaceHeight = Math.max(0, startIndex * rowHeight);\n                var containerList = ['main', 'left', 'right'];\n                var marginTop = '';\n                var ySpaceHeight = '';\n                if (scrollYLoad) {\n                    marginTop = topSpaceHeight + \"px\";\n                    ySpaceHeight = bodyHeight + \"px\";\n                }\n                containerList.forEach(function (name) {\n                    var layoutList = ['header', 'body', 'footer'];\n                    var tableElem = elemStore[name + \"-body-table\"];\n                    if (tableElem) {\n                        tableElem.style.marginTop = marginTop;\n                    }\n                    layoutList.forEach(function (layout) {\n                        var ySpaceElem = elemStore[name + \"-\" + layout + \"-ySpace\"];\n                        if (ySpaceElem) {\n                            ySpaceElem.style.height = ySpaceHeight;\n                        }\n                    });\n                });\n                nextTick(updateStyle);\n            },\n            updateScrollXData: function () {\n                reactData.tableColumn = [];\n                nextTick(function () {\n                    handleTableColumn();\n                    tablePrivateMethods.updateScrollXSpace();\n                });\n            },\n            updateScrollYData: function () {\n                reactData.tableData = [];\n                nextTick(function () {\n                    tablePrivateMethods.handleTableData();\n                    tablePrivateMethods.updateScrollYSpace();\n                });\n            },\n            /**\n             * 处理固定列的显示状态\n             */\n            checkScrolling: function () {\n                var leftContainerElem = refLeftContainer.value;\n                var rightContainerElem = refRightContainer.value;\n                var tableBody = refTableBody.value;\n                var bodyElem = tableBody ? tableBody.$el : null;\n                if (bodyElem) {\n                    if (leftContainerElem) {\n                        if (bodyElem.scrollLeft > 0) {\n                            addClass(leftContainerElem, 'scrolling--middle');\n                        }\n                        else {\n                            removeClass(leftContainerElem, 'scrolling--middle');\n                        }\n                    }\n                    if (rightContainerElem) {\n                        if (bodyElem.clientWidth < bodyElem.scrollWidth - Math.ceil(bodyElem.scrollLeft)) {\n                            addClass(rightContainerElem, 'scrolling--middle');\n                        }\n                        else {\n                            removeClass(rightContainerElem, 'scrolling--middle');\n                        }\n                    }\n                }\n            },\n            updateZindex: function () {\n                if (props.zIndex) {\n                    internalData.tZindex = props.zIndex;\n                }\n                else if (internalData.tZindex < getLastZIndex()) {\n                    internalData.tZindex = nextZIndex();\n                }\n            },\n            updateCellAreas: function () {\n                var mouseConfig = props.mouseConfig;\n                var mouseOpts = computeMouseOpts.value;\n                if (mouseConfig && mouseOpts.area && $xetable.handleUpdateCellAreas) {\n                    $xetable.handleUpdateCellAreas();\n                }\n            },\n            /**\n             * 行 hover 事件\n             */\n            triggerHoverEvent: function (evnt, _a) {\n                var row = _a.row;\n                tablePrivateMethods.setHoverRow(row);\n            },\n            setHoverRow: function (row) {\n                var rowid = getRowid($xetable, row);\n                var el = refElem.value;\n                tablePrivateMethods.clearHoverRow();\n                if (el) {\n                    XEUtils.arrayEach(el.querySelectorAll(\"[rowid=\\\"\" + rowid + \"\\\"]\"), function (elem) { return addClass(elem, 'row--hover'); });\n                }\n                internalData.hoverRow = row;\n            },\n            clearHoverRow: function () {\n                var el = refElem.value;\n                if (el) {\n                    XEUtils.arrayEach(el.querySelectorAll('.vxe-body--row.row--hover'), function (elem) { return removeClass(elem, 'row--hover'); });\n                }\n                internalData.hoverRow = null;\n            },\n            getCell: function (row, column) {\n                var rowid = getRowid($xetable, row);\n                var tableBody = refTableBody.value;\n                var leftBody = refTableLeftBody.value;\n                var rightBody = refTableRightBody.value;\n                var bodyElem;\n                if (column.fixed) {\n                    if (column.fixed === 'left') {\n                        if (leftBody) {\n                            bodyElem = leftBody.$el;\n                        }\n                    }\n                    else {\n                        if (rightBody) {\n                            bodyElem = rightBody.$el;\n                        }\n                    }\n                }\n                if (!bodyElem) {\n                    bodyElem = tableBody.$el;\n                }\n                if (bodyElem) {\n                    return bodyElem.querySelector(\".vxe-body--row[rowid=\\\"\" + rowid + \"\\\"] .\" + column.id);\n                }\n                return null;\n            },\n            getCellLabel: function (row, column) {\n                var formatter = column.formatter;\n                var cellValue = getCellValue(row, column);\n                var cellLabel = cellValue;\n                if (formatter) {\n                    var formatData = void 0;\n                    var fullAllDataRowIdData = internalData.fullAllDataRowIdData;\n                    var rowid = getRowid($xetable, row);\n                    var colid = column.id;\n                    var rest = fullAllDataRowIdData[rowid];\n                    if (rest) {\n                        formatData = rest.formatData;\n                        if (!formatData) {\n                            formatData = fullAllDataRowIdData[rowid].formatData = {};\n                        }\n                        if (rest && formatData[colid]) {\n                            if (formatData[colid].value === cellValue) {\n                                return formatData[colid].label;\n                            }\n                        }\n                    }\n                    var formatParams = { cellValue: cellValue, row: row, rowIndex: tableMethods.getRowIndex(row), column: column, columnIndex: tableMethods.getColumnIndex(column) };\n                    if (XEUtils.isString(formatter)) {\n                        var globalFunc = VXETable.formats.get(formatter);\n                        cellLabel = globalFunc ? globalFunc(formatParams) : '';\n                    }\n                    else if (XEUtils.isArray(formatter)) {\n                        var globalFunc = VXETable.formats.get(formatter[0]);\n                        cellLabel = globalFunc ? globalFunc.apply(void 0, __spreadArray([formatParams], formatter.slice(1))) : '';\n                    }\n                    else {\n                        cellLabel = formatter(formatParams);\n                    }\n                    if (formatData) {\n                        formatData[colid] = { value: cellValue, label: cellLabel };\n                    }\n                }\n                return cellLabel;\n            },\n            findRowIndexOf: function (list, row) {\n                return row ? XEUtils.findIndexOf(list, function (item) { return $xetable.eqRow(item, row); }) : -1;\n            },\n            eqRow: function (row1, row2) {\n                if (row1 && row2) {\n                    if (row1 === row2) {\n                        return true;\n                    }\n                    return getRowid($xetable, row1) === getRowid($xetable, row2);\n                }\n                return false;\n            }\n        };\n        // 检测对应模块是否安装\n        if (process.env.NODE_ENV === 'development') {\n            'openExport,openPrint,exportData,openImport,importData,saveFile,readFile,importByFile,print'.split(',').forEach(function (name) {\n                $xetable[name] = function () {\n                    errLog('vxe.error.reqModule', ['Export']);\n                };\n            });\n            'clearValidate,fullValidate,validate'.split(',').forEach(function (name) {\n                $xetable[name] = function () {\n                    errLog('vxe.error.reqModule', ['Validator']);\n                };\n            });\n        }\n        Object.assign($xetable, tableMethods, tablePrivateMethods);\n        /**\n         * 渲染浮固定列\n         * 分别渲染左边固定列和右边固定列\n         * 如果宽度足够情况下，则不需要渲染固定列\n         * @param {String} fixedType 固定列类型\n         */\n        var renderFixed = function (fixedType) {\n            var showHeader = props.showHeader, showFooter = props.showFooter;\n            var tableData = reactData.tableData, tableColumn = reactData.tableColumn, tableGroupColumn = reactData.tableGroupColumn, columnStore = reactData.columnStore, footerTableData = reactData.footerTableData;\n            var isFixedLeft = fixedType === 'left';\n            var fixedColumn = isFixedLeft ? columnStore.leftList : columnStore.rightList;\n            return h('div', {\n                ref: isFixedLeft ? refLeftContainer : refRightContainer,\n                class: \"vxe-table--fixed-\" + fixedType + \"-wrapper\"\n            }, [\n                showHeader ? h(resolveComponent('vxe-table-header'), {\n                    ref: isFixedLeft ? refTableLeftHeader : refTableRightHeader,\n                    fixedType: fixedType,\n                    tableData: tableData,\n                    tableColumn: tableColumn,\n                    tableGroupColumn: tableGroupColumn,\n                    fixedColumn: fixedColumn\n                }) : createCommentVNode(),\n                h(TableBodyComponent, {\n                    ref: isFixedLeft ? refTableLeftBody : refTableRightBody,\n                    fixedType: fixedType,\n                    tableData: tableData,\n                    tableColumn: tableColumn,\n                    fixedColumn: fixedColumn\n                }),\n                showFooter ? h(resolveComponent('vxe-table-footer'), {\n                    ref: isFixedLeft ? refTableLeftFooter : refTableRightFooter,\n                    footerTableData: footerTableData,\n                    tableColumn: tableColumn,\n                    fixedColumn: fixedColumn,\n                    fixedType: fixedType\n                }) : createCommentVNode()\n            ]);\n        };\n        var renderEmptyContenet = function () {\n            var emptyOpts = computeEmptyOpts.value;\n            var params = { $table: $xetable };\n            if (slots.empty) {\n                return slots.empty(params);\n            }\n            else {\n                var compConf = emptyOpts.name ? VXETable.renderer.get(emptyOpts.name) : null;\n                var renderEmpty = compConf ? compConf.renderEmpty : null;\n                if (renderEmpty) {\n                    return renderEmpty(emptyOpts, params);\n                }\n            }\n            return getFuncText(props.emptyText) || GlobalConfig.i18n('vxe.table.emptyText');\n        };\n        function handleUupdateResize() {\n            var el = refElem.value;\n            if (el && el.clientWidth && el.clientHeight) {\n                tableMethods.recalculate();\n            }\n        }\n        watch(function () { return props.data; }, function (value) {\n            var inited = internalData.inited, initStatus = internalData.initStatus;\n            loadTableData(value || []).then(function () {\n                var scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad, expandColumn = reactData.expandColumn;\n                internalData.inited = true;\n                internalData.initStatus = true;\n                if (!initStatus) {\n                    handleLoadDefaults();\n                }\n                if (!inited) {\n                    handleInitDefaults();\n                }\n                if (process.env.NODE_ENV === 'development') {\n                    if ((scrollXLoad || scrollYLoad) && expandColumn) {\n                        warnLog('vxe.error.scrollErrProp', ['column.type=expand']);\n                    }\n                }\n                tableMethods.recalculate();\n            });\n        });\n        watch(function () { return reactData.staticColumns; }, function (value) {\n            handleColumn(value);\n        });\n        watch(function () { return reactData.tableColumn; }, function () {\n            tablePrivateMethods.analyColumnWidth();\n        });\n        watch(function () { return props.showHeader; }, function () {\n            nextTick(function () {\n                tableMethods.recalculate(true).then(function () { return tableMethods.refreshScroll(); });\n            });\n        });\n        watch(function () { return props.showFooter; }, function () {\n            nextTick(function () {\n                tableMethods.recalculate(true).then(function () { return tableMethods.refreshScroll(); });\n            });\n        });\n        watch(function () { return props.height; }, function () {\n            nextTick(function () { return tableMethods.recalculate(true); });\n        });\n        watch(function () { return props.maxHeight; }, function () {\n            nextTick(function () { return tableMethods.recalculate(true); });\n        });\n        watch(function () { return props.syncResize; }, function (value) {\n            if (value) {\n                handleUupdateResize();\n                nextTick(function () {\n                    handleUupdateResize();\n                    setTimeout(function () { return handleUupdateResize(); });\n                });\n            }\n        });\n        watch(function () { return props.mergeCells; }, function (value) {\n            tableMethods.clearMergeCells();\n            nextTick(function () {\n                if (value) {\n                    tableMethods.setMergeCells(value);\n                }\n            });\n        });\n        watch(function () { return props.mergeFooterItems; }, function (value) {\n            tableMethods.clearMergeFooterItems();\n            nextTick(function () {\n                if (value) {\n                    tableMethods.setMergeFooterItems(value);\n                }\n            });\n        });\n        VXETable.hooks.forEach(function (options) {\n            var setupTable = options.setupTable;\n            if (setupTable) {\n                var hookRest = setupTable($xetable);\n                if (hookRest && XEUtils.isObject(hookRest)) {\n                    Object.assign($xetable, hookRest);\n                }\n            }\n        });\n        tablePrivateMethods.preventEvent(null, 'created', { $table: $xetable });\n        var resizeObserver;\n        onActivated(function () {\n            tableMethods.recalculate().then(function () { return tableMethods.refreshScroll(); });\n            tablePrivateMethods.preventEvent(null, 'activated', { $table: $xetable });\n        });\n        onDeactivated(function () {\n            internalData.isActivated = false;\n            tablePrivateMethods.preventEvent(null, 'deactivated', { $table: $xetable });\n        });\n        onMounted(function () {\n            nextTick(function () {\n                var data = props.data, treeConfig = props.treeConfig, showOverflow = props.showOverflow;\n                var scrollXStore = internalData.scrollXStore, scrollYStore = internalData.scrollYStore;\n                var sYOpts = computeSYOpts.value;\n                var editOpts = computeEditOpts.value;\n                var treeOpts = computeTreeOpts.value;\n                var radioOpts = computeRadioOpts.value;\n                var checkboxOpts = computeCheckboxOpts.value;\n                var expandOpts = computeExpandOpts.value;\n                var rowOpts = computeRowOpts.value;\n                if (process.env.NODE_ENV === 'development') {\n                    // if (props.rowId) {\n                    //   warnLog('vxe.error.delProp', ['row-id', 'row-config.keyField'])\n                    // }\n                    // if (props.rowKey) {\n                    //   warnLog('vxe.error.delProp', ['row-id', 'row-config.useKey'])\n                    // }\n                    // if (props.columnKey) {\n                    //   warnLog('vxe.error.delProp', ['row-id', 'column-config.useKey'])\n                    // }\n                    if (!(props.rowId || rowOpts.keyField) && (checkboxOpts.reserve || checkboxOpts.checkRowKeys || radioOpts.reserve || radioOpts.checkRowKey || expandOpts.expandRowKeys || treeOpts.expandRowKeys)) {\n                        warnLog('vxe.error.reqProp', ['row-config.keyField']);\n                    }\n                    if (props.editConfig && (editOpts.showStatus || editOpts.showUpdateStatus || editOpts.showInsertStatus) && !props.keepSource) {\n                        warnLog('vxe.error.reqProp', ['keep-source']);\n                    }\n                    if (treeConfig && treeOpts.line && (!(props.rowKey || rowOpts.useKey) || !showOverflow)) {\n                        warnLog('vxe.error.reqProp', ['row-config.useKey | show-overflow']);\n                    }\n                    if (treeConfig && props.stripe) {\n                        warnLog('vxe.error.noTree', ['stripe']);\n                    }\n                    if (props.showFooter && !props.footerMethod) {\n                        warnLog('vxe.error.reqProp', ['footer-method']);\n                    }\n                    // if (props.highlightCurrentRow) {\n                    //   warnLog('vxe.error.delProp', ['highlight-current-row', 'row-config.isCurrent'])\n                    // }\n                    // if (props.highlightHoverRow) {\n                    //   warnLog('vxe.error.delProp', ['highlight-hover-row', 'row-config.isHover'])\n                    // }\n                    // if (props.highlightCurrentColumn) {\n                    //   warnLog('vxe.error.delProp', ['highlight-current-column', 'column-config.isCurrent'])\n                    // }\n                    // if (props.highlightHoverColumn) {\n                    //   warnLog('vxe.error.delProp', ['highlight-hover-column', 'column-config.isHover'])\n                    // }\n                    // 检查导入导出类型，如果自定义导入导出方法，则不校验类型\n                    var exportConfig = props.exportConfig, importConfig = props.importConfig;\n                    var exportOpts = computeExportOpts.value;\n                    var importOpts = computeImportOpts.value;\n                    if (importConfig && importOpts.types && !importOpts.importMethod && !XEUtils.includeArrays(VXETable.config.importTypes, importOpts.types)) {\n                        warnLog('vxe.error.errProp', [\"export-config.types=\" + importOpts.types.join(','), importOpts.types.filter(function (type) { return XEUtils.includes(VXETable.config.importTypes, type); }).join(',') || VXETable.config.importTypes.join(',')]);\n                    }\n                    if (exportConfig && exportOpts.types && !exportOpts.exportMethod && !XEUtils.includeArrays(VXETable.config.exportTypes, exportOpts.types)) {\n                        warnLog('vxe.error.errProp', [\"export-config.types=\" + exportOpts.types.join(','), exportOpts.types.filter(function (type) { return XEUtils.includes(VXETable.config.exportTypes, type); }).join(',') || VXETable.config.exportTypes.join(',')]);\n                    }\n                }\n                if (process.env.NODE_ENV === 'development') {\n                    var customOpts = computeCustomOpts.value;\n                    var mouseOpts = computeMouseOpts.value;\n                    var rowOpts_1 = computeRowOpts.value;\n                    if (!props.id && props.customConfig && (customOpts.storage === true || (customOpts.storage && customOpts.storage.resizable) || (customOpts.storage && customOpts.storage.visible))) {\n                        errLog('vxe.error.reqProp', ['id']);\n                    }\n                    if (props.treeConfig && checkboxOpts.range) {\n                        errLog('vxe.error.noTree', ['checkbox-config.range']);\n                    }\n                    if (rowOpts_1.height && !props.showOverflow) {\n                        warnLog('vxe.error.notProp', ['table.show-overflow']);\n                    }\n                    if (!$xetable.handleUpdateCellAreas) {\n                        if (props.clipConfig) {\n                            warnLog('vxe.error.notProp', ['clip-config']);\n                        }\n                        if (props.fnrConfig) {\n                            warnLog('vxe.error.notProp', ['fnr-config']);\n                        }\n                        if (mouseOpts.area) {\n                            errLog('vxe.error.notProp', ['mouse-config.area']);\n                            return;\n                        }\n                    }\n                    if (mouseOpts.area && mouseOpts.selected) {\n                        warnLog('vxe.error.errConflicts', ['mouse-config.area', 'mouse-config.selected']);\n                    }\n                    if (mouseOpts.area && checkboxOpts.range) {\n                        warnLog('vxe.error.errConflicts', ['mouse-config.area', 'checkbox-config.range']);\n                    }\n                    if (props.treeConfig && mouseOpts.area) {\n                        errLog('vxe.error.noTree', ['mouse-config.area']);\n                    }\n                }\n                // 检查是否有安装需要的模块\n                if (process.env.NODE_ENV === 'development') {\n                    if (props.editConfig && !$xetable.insert) {\n                        errLog('vxe.error.reqModule', ['Edit']);\n                    }\n                    if (props.editRules && !$xetable.validate) {\n                        errLog('vxe.error.reqModule', ['Validator']);\n                    }\n                    if ((checkboxOpts.range || props.keyboardConfig || props.mouseConfig) && !$xetable.triggerCellMousedownEvent) {\n                        errLog('vxe.error.reqModule', ['Keyboard']);\n                    }\n                    if ((props.printConfig || props.importConfig || props.exportConfig) && !$xetable.exportData) {\n                        errLog('vxe.error.reqModule', ['Export']);\n                    }\n                }\n                Object.assign(scrollYStore, {\n                    startIndex: 0,\n                    endIndex: 0,\n                    visibleSize: 0,\n                    adaptive: sYOpts.adaptive !== false\n                });\n                Object.assign(scrollXStore, {\n                    startIndex: 0,\n                    endIndex: 0,\n                    visibleSize: 0\n                });\n                loadTableData(data || []).then(function () {\n                    if (data && data.length) {\n                        internalData.inited = true;\n                        internalData.initStatus = true;\n                        handleLoadDefaults();\n                        handleInitDefaults();\n                    }\n                    updateStyle();\n                });\n                if (props.autoResize) {\n                    var el = refElem.value;\n                    var parentEl = tablePrivateMethods.getParentElem();\n                    resizeObserver = createResizeEvent(function () {\n                        if (props.autoResize) {\n                            tableMethods.recalculate(true);\n                        }\n                    });\n                    if (el) {\n                        resizeObserver.observe(el);\n                    }\n                    if (parentEl) {\n                        resizeObserver.observe(parentEl);\n                    }\n                }\n            });\n            GlobalEvent.on($xetable, 'paste', handleGlobalPasteEvent);\n            GlobalEvent.on($xetable, 'copy', handleGlobalCopyEvent);\n            GlobalEvent.on($xetable, 'cut', handleGlobalCutEvent);\n            GlobalEvent.on($xetable, 'mousedown', handleGlobalMousedownEvent);\n            GlobalEvent.on($xetable, 'blur', handleGlobalBlurEvent);\n            GlobalEvent.on($xetable, 'mousewheel', handleGlobalMousewheelEvent);\n            GlobalEvent.on($xetable, 'keydown', handleGlobalKeydownEvent);\n            GlobalEvent.on($xetable, 'resize', handleGlobalResizeEvent);\n            if ($xetable.handleGlobalContextmenuEvent) {\n                GlobalEvent.on($xetable, 'contextmenu', $xetable.handleGlobalContextmenuEvent);\n            }\n            tablePrivateMethods.preventEvent(null, 'mounted', { $table: $xetable });\n        });\n        onBeforeUnmount(function () {\n            if (resizeObserver) {\n                resizeObserver.disconnect();\n            }\n            tableMethods.closeFilter();\n            if ($xetable.closeMenu) {\n                $xetable.closeMenu();\n            }\n            tablePrivateMethods.preventEvent(null, 'beforeUnmount', { $table: $xetable });\n        });\n        onUnmounted(function () {\n            GlobalEvent.off($xetable, 'paste');\n            GlobalEvent.off($xetable, 'copy');\n            GlobalEvent.off($xetable, 'cut');\n            GlobalEvent.off($xetable, 'mousedown');\n            GlobalEvent.off($xetable, 'blur');\n            GlobalEvent.off($xetable, 'mousewheel');\n            GlobalEvent.off($xetable, 'keydown');\n            GlobalEvent.off($xetable, 'resize');\n            GlobalEvent.off($xetable, 'contextmenu');\n            tablePrivateMethods.preventEvent(null, 'unmounted', { $table: $xetable });\n        });\n        var renderVN = function () {\n            var _a;\n            var loading = props.loading, stripe = props.stripe, showHeader = props.showHeader, height = props.height, treeConfig = props.treeConfig, mouseConfig = props.mouseConfig, showFooter = props.showFooter, highlightCell = props.highlightCell, highlightHoverRow = props.highlightHoverRow, highlightHoverColumn = props.highlightHoverColumn, editConfig = props.editConfig;\n            var isGroup = reactData.isGroup, overflowX = reactData.overflowX, overflowY = reactData.overflowY, scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad, scrollbarHeight = reactData.scrollbarHeight, tableData = reactData.tableData, tableColumn = reactData.tableColumn, tableGroupColumn = reactData.tableGroupColumn, footerTableData = reactData.footerTableData, initStore = reactData.initStore, columnStore = reactData.columnStore, filterStore = reactData.filterStore;\n            var leftList = columnStore.leftList, rightList = columnStore.rightList;\n            var tipConfig = computeTipConfig.value;\n            var treeOpts = computeTreeOpts.value;\n            var rowOpts = computeRowOpts.value;\n            var columnOpts = computeColumnOpts.value;\n            var vSize = computeSize.value;\n            var tableBorder = computeTableBorder.value;\n            var mouseOpts = computeMouseOpts.value;\n            var validOpts = computeValidOpts.value;\n            var validTipOpts = computeValidTipOpts.value;\n            var isMenu = computeIsMenu.value;\n            return h('div', {\n                ref: refElem,\n                class: ['vxe-table', 'vxe-table--render-default', \"tid_\" + xID, \"border--\" + tableBorder, (_a = {},\n                        _a[\"size--\" + vSize] = vSize,\n                        _a['vxe-editable'] = !!editConfig,\n                        _a['cell--highlight'] = highlightCell,\n                        _a['cell--selected'] = mouseConfig && mouseOpts.selected,\n                        _a['cell--area'] = mouseConfig && mouseOpts.area,\n                        _a['row--highlight'] = rowOpts.isHover || highlightHoverRow,\n                        _a['column--highlight'] = columnOpts.isHover || highlightHoverColumn,\n                        _a['is--header'] = showHeader,\n                        _a['is--footer'] = showFooter,\n                        _a['is--group'] = isGroup,\n                        _a['is--tree-line'] = treeConfig && treeOpts.line,\n                        _a['is--fixed-left'] = leftList.length,\n                        _a['is--fixed-right'] = rightList.length,\n                        _a['is--animat'] = !!props.animat,\n                        _a['is--round'] = props.round,\n                        _a['is--stripe'] = !treeConfig && stripe,\n                        _a['is--loading'] = loading,\n                        _a['is--empty'] = !loading && !tableData.length,\n                        _a['is--scroll-y'] = overflowY,\n                        _a['is--scroll-x'] = overflowX,\n                        _a['is--virtual-x'] = scrollXLoad,\n                        _a['is--virtual-y'] = scrollYLoad,\n                        _a)],\n                onKeydown: keydownEvent\n            }, [\n                /**\n                 * 隐藏列\n                 */\n                h('div', {\n                    class: 'vxe-table-slots'\n                }, slots.default ? slots.default({}) : []),\n                h('div', {\n                    class: 'vxe-table--render-wrapper'\n                }, [\n                    h('div', {\n                        class: 'vxe-table--main-wrapper'\n                    }, [\n                        /**\n                         * 表头\n                         */\n                        showHeader ? h(resolveComponent('vxe-table-header'), {\n                            ref: refTableHeader,\n                            tableData: tableData,\n                            tableColumn: tableColumn,\n                            tableGroupColumn: tableGroupColumn\n                        }) : createCommentVNode(),\n                        /**\n                         * 表体\n                         */\n                        h(TableBodyComponent, {\n                            ref: refTableBody,\n                            tableData: tableData,\n                            tableColumn: tableColumn\n                        }),\n                        /**\n                         * 表尾\n                         */\n                        showFooter ? h(resolveComponent('vxe-table-footer'), {\n                            ref: refTableFooter,\n                            footerTableData: footerTableData,\n                            tableColumn: tableColumn\n                        }) : createCommentVNode()\n                    ]),\n                    h('div', {\n                        class: 'vxe-table--fixed-wrapper'\n                    }, [\n                        /**\n                         * 左侧固定区域\n                         */\n                        leftList && leftList.length && overflowX ? renderFixed('left') : createCommentVNode(),\n                        /**\n                         * 右侧固定区域\n                         */\n                        rightList && rightList.length && overflowX ? renderFixed('right') : createCommentVNode()\n                    ])\n                ]),\n                /**\n                 * 空数据\n                 */\n                h('div', {\n                    ref: refEmptyPlaceholder,\n                    class: 'vxe-table--empty-placeholder'\n                }, [\n                    h('div', {\n                        class: 'vxe-table--empty-content'\n                    }, renderEmptyContenet())\n                ]),\n                /**\n                 * 边框线\n                 */\n                h('div', {\n                    class: 'vxe-table--border-line'\n                }),\n                /**\n                 * 列宽线\n                 */\n                h('div', {\n                    ref: refCellResizeBar,\n                    class: 'vxe-table--resizable-bar',\n                    style: overflowX ? {\n                        'padding-bottom': scrollbarHeight + \"px\"\n                    } : null\n                }),\n                /**\n                 * 加载中\n                 */\n                h('div', {\n                    class: ['vxe-table--loading vxe-loading', {\n                            'is--visible': loading\n                        }]\n                }, [\n                    h('div', {\n                        class: 'vxe-loading--spinner'\n                    })\n                ]),\n                /**\n                 * 筛选\n                 */\n                initStore.filter ? h(resolveComponent('vxe-table-filter'), {\n                    ref: refTableFilter,\n                    filterStore: filterStore\n                }) : createCommentVNode(),\n                /**\n                 * 导入\n                 */\n                initStore.import && props.importConfig ? h(resolveComponent('vxe-import-panel'), {\n                    defaultOptions: reactData.importParams,\n                    storeData: reactData.importStore\n                }) : createCommentVNode(),\n                /**\n                 * 导出/导出\n                 */\n                initStore.export && (props.exportConfig || props.printConfig) ? h(resolveComponent('vxe-export-panel'), {\n                    defaultOptions: reactData.exportParams,\n                    storeData: reactData.exportStore\n                }) : createCommentVNode(),\n                /**\n                 * 快捷菜单\n                 */\n                isMenu ? h(resolveComponent('vxe-table-context-menu'), {\n                    ref: refTableMenu\n                }) : createCommentVNode(),\n                /**\n                 * 通用提示\n                 */\n                hasUseTooltip ? h(resolveComponent('vxe-tooltip'), {\n                    ref: refCommTooltip,\n                    isArrow: false,\n                    enterable: false\n                }) : createCommentVNode(),\n                /**\n                 * 校验提示\n                 */\n                hasUseTooltip && props.editRules && validOpts.showMessage && (validOpts.message === 'default' ? !height : validOpts.message === 'tooltip') ? h(resolveComponent('vxe-tooltip'), __assign({ ref: refValidTooltip, class: 'vxe-table--valid-error' }, (validOpts.message === 'tooltip' || tableData.length === 1 ? validTipOpts : {}))) : createCommentVNode(),\n                /**\n                 * 工具提示\n                 */\n                hasUseTooltip ? h(resolveComponent('vxe-tooltip'), __assign({ ref: refTooltip }, tipConfig)) : createCommentVNode()\n            ]);\n        };\n        $xetable.renderVN = renderVN;\n        provide('xecolgroup', null);\n        provide('$xetable', $xetable);\n        return $xetable;\n    },\n    render: function () {\n        return this.renderVN();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}