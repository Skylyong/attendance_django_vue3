{"ast":null,"code":"var arrayEach = require('./arrayEach');\n\nvar toArray = require('./toArray');\n\nvar map = require('./map');\n\nvar isArray = require('./isArray');\n\nvar isFunction = require('./isFunction');\n\nvar isPlainObject = require('./isPlainObject');\n\nvar isUndefined = require('./isUndefined');\n\nvar isNull = require('./isNull');\n\nvar eqNull = require('./eqNull');\n\nvar get = require('./get');\n\nvar property = require('./property');\n\nvar ORDER_PROP_ASC = 'asc';\nvar ORDER_PROP_DESC = 'desc'; // function handleSort (v1, v2) {\n//   return v1 > v2 ? 1 : -1\n// }\n// '' < 数字 < 字符 < null < undefined\n\nfunction handleSort(v1, v2) {\n  if (isUndefined(v1)) {\n    return 1;\n  }\n\n  if (isNull(v1)) {\n    return isUndefined(v2) ? -1 : 1;\n  }\n\n  return v1 && v1.localeCompare ? v1.localeCompare(v2) : v1 > v2 ? 1 : -1;\n}\n\nfunction buildMultiOrders(name, confs, compares) {\n  return function (item1, item2) {\n    var v1 = item1[name];\n    var v2 = item2[name];\n\n    if (v1 === v2) {\n      return compares ? compares(item1, item2) : 0;\n    }\n\n    return confs.order === ORDER_PROP_DESC ? handleSort(v2, v1) : handleSort(v1, v2);\n  };\n}\n\nfunction getSortConfs(arr, list, fieldConfs, context) {\n  var sortConfs = [];\n  fieldConfs = isArray(fieldConfs) ? fieldConfs : [fieldConfs];\n  arrayEach(fieldConfs, function (handle, index) {\n    if (handle) {\n      var field = handle;\n      var order;\n\n      if (isArray(handle)) {\n        field = handle[0];\n        order = handle[1];\n      } else if (isPlainObject(handle)) {\n        field = handle.field;\n        order = handle.order;\n      }\n\n      sortConfs.push({\n        field: field,\n        order: order || ORDER_PROP_ASC\n      });\n      arrayEach(list, isFunction(field) ? function (item, key) {\n        item[index] = field.call(context, item.data, key, arr);\n      } : function (item) {\n        item[index] = field ? get(item.data, field) : item.data;\n      });\n    }\n  });\n  return sortConfs;\n}\n/**\r\n  * 将数组进行排序\r\n  *\r\n  * @param {Array} arr 数组\r\n  * @param {Function/String/Array} fieldConfs 方法或属性\r\n  * @param {Object} context 上下文\r\n  * @return {Array}\r\n  */\n\n\nfunction orderBy(arr, fieldConfs, context) {\n  if (arr) {\n    if (eqNull(fieldConfs)) {\n      return toArray(arr).sort(handleSort);\n    }\n\n    var compares;\n    var list = map(arr, function (item) {\n      return {\n        data: item\n      };\n    });\n    var sortConfs = getSortConfs(arr, list, fieldConfs, context);\n    var len = sortConfs.length - 1;\n\n    while (len >= 0) {\n      compares = buildMultiOrders(len, sortConfs[len], compares);\n      len--;\n    }\n\n    if (compares) {\n      list = list.sort(compares);\n    }\n\n    return map(list, property('data'));\n  }\n\n  return [];\n}\n\nmodule.exports = orderBy;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/orderBy.js"],"names":["arrayEach","require","toArray","map","isArray","isFunction","isPlainObject","isUndefined","isNull","eqNull","get","property","ORDER_PROP_ASC","ORDER_PROP_DESC","handleSort","v1","v2","localeCompare","buildMultiOrders","name","confs","compares","item1","item2","order","getSortConfs","arr","list","fieldConfs","context","sortConfs","handle","index","field","push","item","key","call","data","orderBy","sort","len","length","module","exports"],"mappings":"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","sourcesContent":["var arrayEach = require('./arrayEach')\r\nvar toArray = require('./toArray')\r\nvar map = require('./map')\r\n\r\nvar isArray = require('./isArray')\r\nvar isFunction = require('./isFunction')\r\nvar isPlainObject = require('./isPlainObject')\r\nvar isUndefined = require('./isUndefined')\r\nvar isNull = require('./isNull')\r\nvar eqNull = require('./eqNull')\r\nvar get = require('./get')\r\nvar property = require('./property')\r\n\r\nvar ORDER_PROP_ASC = 'asc'\r\nvar ORDER_PROP_DESC = 'desc'\r\n\r\n// function handleSort (v1, v2) {\r\n//   return v1 > v2 ? 1 : -1\r\n// }\r\n\r\n// '' < 数字 < 字符 < null < undefined\r\nfunction handleSort (v1, v2) {\r\n  if (isUndefined(v1)) {\r\n    return 1\r\n  }\r\n  if (isNull(v1)) {\r\n    return isUndefined(v2) ? -1 : 1\r\n  }\r\n  return v1 && v1.localeCompare ? v1.localeCompare(v2) : (v1 > v2 ? 1 : -1)\r\n}\r\n\r\nfunction buildMultiOrders (name, confs, compares) {\r\n  return function (item1, item2) {\r\n    var v1 = item1[name]\r\n    var v2 = item2[name]\r\n    if (v1 === v2) {\r\n      return compares ? compares(item1, item2) : 0\r\n    }\r\n    return confs.order === ORDER_PROP_DESC ? handleSort(v2, v1) : handleSort(v1, v2)\r\n  }\r\n}\r\n\r\nfunction getSortConfs (arr, list, fieldConfs, context) {\r\n  var sortConfs = []\r\n  fieldConfs = isArray(fieldConfs) ? fieldConfs : [fieldConfs]\r\n  arrayEach(fieldConfs, function (handle, index) {\r\n    if (handle) {\r\n      var field = handle\r\n      var order\r\n      if (isArray(handle)) {\r\n        field = handle[0]\r\n        order = handle[1]\r\n      } else if (isPlainObject(handle)) {\r\n        field = handle.field\r\n        order = handle.order\r\n      }\r\n      sortConfs.push({\r\n        field: field,\r\n        order: order || ORDER_PROP_ASC\r\n      })\r\n      arrayEach(list, isFunction(field) ? function (item, key) {\r\n        item[index] = field.call(context, item.data, key, arr)\r\n      } : function (item) {\r\n        item[index] = field ? get(item.data, field) : item.data\r\n      })\r\n    }\r\n  })\r\n  return sortConfs\r\n}\r\n\r\n/**\r\n  * 将数组进行排序\r\n  *\r\n  * @param {Array} arr 数组\r\n  * @param {Function/String/Array} fieldConfs 方法或属性\r\n  * @param {Object} context 上下文\r\n  * @return {Array}\r\n  */\r\nfunction orderBy (arr, fieldConfs, context) {\r\n  if (arr) {\r\n    if (eqNull(fieldConfs)) {\r\n      return toArray(arr).sort(handleSort)\r\n    }\r\n    var compares\r\n    var list = map(arr, function (item) {\r\n      return { data: item }\r\n    })\r\n    var sortConfs = getSortConfs(arr, list, fieldConfs, context)\r\n    var len = sortConfs.length - 1\r\n    while (len >= 0) {\r\n      compares = buildMultiOrders(len, sortConfs[len], compares)\r\n      len--\r\n    }\r\n    if (compares) {\r\n      list = list.sort(compares)\r\n    }\r\n    return map(list, property('data'))\r\n  }\r\n  return []\r\n}\r\n\r\nmodule.exports = orderBy\r\n"]},"metadata":{},"sourceType":"script"}