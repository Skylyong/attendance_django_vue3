{"ast":null,"code":"var each = require('./each');\n\nvar isFunction = require('./isFunction');\n\nvar property = require('./property');\n/**\r\n  * 指定方法后的返回值组成的新对象\r\n  *\r\n  * @param {Object} obj 对象/数组\r\n  * @param {Function} iterate(item, index, obj) 回调\r\n  * @param {Object} context 上下文\r\n  * @return {Object}\r\n  */\n\n\nfunction objectMap(obj, iterate, context) {\n  var result = {};\n\n  if (obj) {\n    if (iterate) {\n      if (!isFunction(iterate)) {\n        iterate = property(iterate);\n      }\n\n      each(obj, function (val, index) {\n        result[index] = iterate.call(context, val, index, obj);\n      });\n    } else {\n      return obj;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = objectMap;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/objectMap.js"],"names":["each","require","isFunction","property","objectMap","obj","iterate","context","result","val","index","call","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,SAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AACzC,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIH,GAAJ,EAAS;AACP,QAAIC,OAAJ,EAAa;AACX,UAAI,CAACJ,UAAU,CAACI,OAAD,CAAf,EAA0B;AACxBA,QAAAA,OAAO,GAAGH,QAAQ,CAACG,OAAD,CAAlB;AACD;;AACDN,MAAAA,IAAI,CAACK,GAAD,EAAM,UAAUI,GAAV,EAAeC,KAAf,EAAsB;AAC9BF,QAAAA,MAAM,CAACE,KAAD,CAAN,GAAgBJ,OAAO,CAACK,IAAR,CAAaJ,OAAb,EAAsBE,GAAtB,EAA2BC,KAA3B,EAAkCL,GAAlC,CAAhB;AACD,OAFG,CAAJ;AAGD,KAPD,MAOO;AACL,aAAOA,GAAP;AACD;AACF;;AACD,SAAOG,MAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["var each = require('./each')\r\nvar isFunction = require('./isFunction')\r\nvar property = require('./property')\r\n\r\n/**\r\n  * 指定方法后的返回值组成的新对象\r\n  *\r\n  * @param {Object} obj 对象/数组\r\n  * @param {Function} iterate(item, index, obj) 回调\r\n  * @param {Object} context 上下文\r\n  * @return {Object}\r\n  */\r\nfunction objectMap (obj, iterate, context) {\r\n  var result = {}\r\n  if (obj) {\r\n    if (iterate) {\r\n      if (!isFunction(iterate)) {\r\n        iterate = property(iterate)\r\n      }\r\n      each(obj, function (val, index) {\r\n        result[index] = iterate.call(context, val, index, obj)\r\n      })\r\n    } else {\r\n      return obj\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nmodule.exports = objectMap\r\n"]},"metadata":{},"sourceType":"script"}