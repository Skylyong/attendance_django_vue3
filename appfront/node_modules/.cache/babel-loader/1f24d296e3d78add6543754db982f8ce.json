{"ast":null,"code":"import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { truthProp, createNamespace, BORDER_TOP_BOTTOM } from \"../utils\";\nconst [name, bem] = createNamespace(\"cell-group\");\nconst cellGroupProps = {\n  title: String,\n  inset: Boolean,\n  border: truthProp\n};\nvar stdin_default = defineComponent({\n  name,\n  inheritAttrs: false,\n  props: cellGroupProps,\n\n  setup(props, {\n    slots,\n    attrs\n  }) {\n    const renderGroup = () => {\n      var _a;\n\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": [bem({\n          inset: props.inset\n        }), {\n          [BORDER_TOP_BOTTOM]: props.border && !props.inset\n        }]\n      }, attrs), [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n\n    const renderTitle = () => _createVNode(\"div\", {\n      \"class\": bem(\"title\", {\n        inset: props.inset\n      })\n    }, [slots.title ? slots.title() : props.title]);\n\n    return () => {\n      if (props.title || slots.title) {\n        return _createVNode(_Fragment, null, [renderTitle(), renderGroup()]);\n      }\n\n      return renderGroup();\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/cell-group/CellGroup.js"],"names":["Fragment","_Fragment","createVNode","_createVNode","mergeProps","_mergeProps","defineComponent","truthProp","createNamespace","BORDER_TOP_BOTTOM","name","bem","cellGroupProps","title","String","inset","Boolean","border","stdin_default","inheritAttrs","props","setup","slots","attrs","renderGroup","_a","default","call","renderTitle"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,SAArB,EAAgCC,WAAW,IAAIC,YAA/C,EAA6DC,UAAU,IAAIC,WAA3E,QAA8F,KAA9F;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,iBAArC,QAA8D,UAA9D;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,IAAcH,eAAe,CAAC,YAAD,CAAnC;AACA,MAAMI,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAEC,MADc;AAErBC,EAAAA,KAAK,EAAEC,OAFc;AAGrBC,EAAAA,MAAM,EAAEV;AAHa,CAAvB;AAKA,IAAIW,aAAa,GAAGZ,eAAe,CAAC;AAClCI,EAAAA,IADkC;AAElCS,EAAAA,YAAY,EAAE,KAFoB;AAGlCC,EAAAA,KAAK,EAAER,cAH2B;;AAIlCS,EAAAA,KAAK,CAACD,KAAD,EAAQ;AACXE,IAAAA,KADW;AAEXC,IAAAA;AAFW,GAAR,EAGF;AACD,UAAMC,WAAW,GAAG,MAAM;AACxB,UAAIC,EAAJ;;AACA,aAAOtB,YAAY,CAAC,KAAD,EAAQE,WAAW,CAAC;AACrC,iBAAS,CAACM,GAAG,CAAC;AACZI,UAAAA,KAAK,EAAEK,KAAK,CAACL;AADD,SAAD,CAAJ,EAEL;AACF,WAACN,iBAAD,GAAqBW,KAAK,CAACH,MAAN,IAAgB,CAACG,KAAK,CAACL;AAD1C,SAFK;AAD4B,OAAD,EAMnCQ,KANmC,CAAnB,EAMR,CAAC,CAACE,EAAE,GAAGH,KAAK,CAACI,OAAZ,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCD,EAAE,CAACE,IAAH,CAAQL,KAAR,CAAzC,CANQ,CAAnB;AAOD,KATD;;AAUA,UAAMM,WAAW,GAAG,MAAMzB,YAAY,CAAC,KAAD,EAAQ;AAC5C,eAASQ,GAAG,CAAC,OAAD,EAAU;AACpBI,QAAAA,KAAK,EAAEK,KAAK,CAACL;AADO,OAAV;AADgC,KAAR,EAInC,CAACO,KAAK,CAACT,KAAN,GAAcS,KAAK,CAACT,KAAN,EAAd,GAA8BO,KAAK,CAACP,KAArC,CAJmC,CAAtC;;AAKA,WAAO,MAAM;AACX,UAAIO,KAAK,CAACP,KAAN,IAAeS,KAAK,CAACT,KAAzB,EAAgC;AAC9B,eAAOV,YAAY,CAACF,SAAD,EAAY,IAAZ,EAAkB,CAAC2B,WAAW,EAAZ,EAAgBJ,WAAW,EAA3B,CAAlB,CAAnB;AACD;;AACD,aAAOA,WAAW,EAAlB;AACD,KALD;AAMD;;AA7BiC,CAAD,CAAnC;AA+BA,SACEN,aAAa,IAAIQ,OADnB","sourcesContent":["import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { truthProp, createNamespace, BORDER_TOP_BOTTOM } from \"../utils\";\nconst [name, bem] = createNamespace(\"cell-group\");\nconst cellGroupProps = {\n  title: String,\n  inset: Boolean,\n  border: truthProp\n};\nvar stdin_default = defineComponent({\n  name,\n  inheritAttrs: false,\n  props: cellGroupProps,\n  setup(props, {\n    slots,\n    attrs\n  }) {\n    const renderGroup = () => {\n      var _a;\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": [bem({\n          inset: props.inset\n        }), {\n          [BORDER_TOP_BOTTOM]: props.border && !props.inset\n        }]\n      }, attrs), [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n    const renderTitle = () => _createVNode(\"div\", {\n      \"class\": bem(\"title\", {\n        inset: props.inset\n      })\n    }, [slots.title ? slots.title() : props.title]);\n    return () => {\n      if (props.title || slots.title) {\n        return _createVNode(_Fragment, null, [renderTitle(), renderGroup()]);\n      }\n      return renderGroup();\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}