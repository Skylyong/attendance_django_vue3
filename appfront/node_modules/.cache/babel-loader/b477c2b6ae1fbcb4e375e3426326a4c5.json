{"ast":null,"code":"import { usePagination } from 'vue-request';\nimport { getworkerApplyHistory } from '../../api/api.js';\nimport { computed, defineComponent, hydrate } from 'vue';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: true,\n  width: '20%',\n  slots: {\n    customRender: 'name'\n  }\n}, {\n  title: 'Gender',\n  dataIndex: 'phone',\n  filters: [{\n    text: 'Male',\n    value: 'male'\n  }, {\n    text: 'Female',\n    value: 'female'\n  }],\n  width: '20%'\n}, {\n  title: 'Email',\n  dataIndex: 'email'\n}];\n\nconst queryData = params => {\n  console.log('fdsfsdf', params);\n  var h = `https://randomuser.me/api?noinfo&${new URLSearchParams(params)}`;\n  console.log('hhhhhh', h);\n  return h;\n};\n\nconsole.log;\nexport default defineComponent({\n  setup() {\n    const {\n      data: dataSource,\n      run,\n      loading,\n      current,\n      //  getworkerApplyHistory(2)\n      pageSize\n    } = usePagination(queryData, {\n      formatResult: res => res.results,\n      pagination: {\n        currentKey: 'page',\n        pageSizeKey: 'results'\n      }\n    });\n    const pagination = computed(() => ({\n      total: 200,\n      current: current.value,\n      pageSize: pageSize.value\n    }));\n\n    const handleTableChange = (pag, filters, sorter) => {\n      run({\n        results: pag.pageSize,\n        page: pag?.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    };\n\n    console.log('datadfdfsd:', dataSource);\n    return {\n      dataSource,\n      pagination,\n      loading,\n      columns,\n      handleTableChange\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAaA,SAASA,aAAT,QAA8B,aAA9B;AACA,SAAOC,qBAAP,QAAmC,kBAAnC;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,OAApC,QAAmD,KAAnD;AACA,MAAMC,OAAM,GAAI,CACd;AACEC,OAAK,EAAE,MADT;AAEEC,WAAS,EAAE,MAFb;AAGEC,QAAM,EAAE,IAHV;AAIEC,OAAK,EAAE,KAJT;AAKEC,OAAK,EAAE;AACLC,gBAAY,EAAE;AADT;AALT,CADc,EAUd;AACEL,OAAK,EAAE,QADT;AAEEC,WAAS,EAAE,OAFb;AAGEK,SAAO,EAAE,CACP;AACEC,QAAI,EAAE,MADR;AAEEC,SAAK,EAAE;AAFT,GADO,EAKP;AACED,QAAI,EAAE,QADR;AAEEC,SAAK,EAAE;AAFT,GALO,CAHX;AAaEL,OAAK,EAAE;AAbT,CAVc,EAyBd;AACEH,OAAK,EAAE,OADT;AAEEC,WAAS,EAAE;AAFb,CAzBc,CAAhB;;AAgCA,MAAMQ,SAAQ,GAAIC,MAAK,IAAK;AACxBC,SAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,MAAIG,IAAK,oCAAmC,IAAIC,eAAJ,CAAoBJ,MAApB,CAA4B,EAAxE;AACCC,SAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,CAAtB;AACH,SAAOA,CAAP;AACD,CALD;;AAOAF,OAAO,CAACC,GAAR;AAEA,eAAef,eAAe,CAAC;AAC7BkB,OAAK,GAAG;AACN,UAAM;AACJC,UAAI,EAAEC,UADF;AAEJC,SAFI;AAGJC,aAHI;AAIJC,aAJI;AAIK;AACTC;AALI,QAMF3B,aAAa,CAACe,SAAD,EAAY;AAC3Ba,kBAAY,EAAEC,GAAE,IAAKA,GAAG,CAACC,OADE;AAE3BC,gBAAU,EAAE;AACVC,kBAAU,EAAE,MADF;AAEVC,mBAAW,EAAE;AAFH;AAFe,KAAZ,CANjB;AAcA,UAAMF,UAAS,GAAI7B,QAAQ,CAAC,OAAO;AACjCgC,WAAK,EAAE,GAD0B;AAEjCR,aAAO,EAAEA,OAAO,CAACZ,KAFgB;AAGjCa,cAAQ,EAAEA,QAAQ,CAACb;AAHc,KAAP,CAAD,CAA3B;;AAMA,UAAMqB,iBAAgB,GAAI,CAACC,GAAD,EAAMxB,OAAN,EAAeJ,MAAf,KAA0B;AAClDgB,SAAG,CAAC;AACFM,eAAO,EAAEM,GAAG,CAACT,QADX;AAEFU,YAAI,EAAED,GAAG,EAAEV,OAFT;AAGFY,iBAAS,EAAE9B,MAAM,CAAC+B,KAHhB;AAIFC,iBAAS,EAAEhC,MAAM,CAACiC,KAJhB;AAKF,WAAG7B;AALD,OAAD,CAAH;AAOD,KARD;;AASAK,WAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,UAA3B;AACA,WAAO;AACLA,gBADK;AAELQ,gBAFK;AAGLN,aAHK;AAILpB,aAJK;AAKL8B;AALK,KAAP;AAOD;;AAvC4B,CAAD,CAA9B","names":["usePagination","getworkerApplyHistory","computed","defineComponent","hydrate","columns","title","dataIndex","sorter","width","slots","customRender","filters","text","value","queryData","params","console","log","h","URLSearchParams","setup","data","dataSource","run","loading","current","pageSize","formatResult","res","results","pagination","currentKey","pageSizeKey","total","handleTableChange","pag","page","sortField","field","sortOrder","order"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/worker/workerApplyHistory.vue"],"sourcesContent":["<template>\n  <a-table\n    :columns=\"columns\"\n    :row-key=\"record => record.login.uuid\"\n    :data-source=\"dataSource\"\n    :pagination=\"pagination\"\n    :loading=\"loading\"\n    @change=\"handleTableChange\"\n  >\n    <template #name=\"{ text }\">{{ text.first }} {{ text.last }}</template>\n  </a-table>\n</template>\n<script>\nimport { usePagination } from 'vue-request';\nimport{getworkerApplyHistory} from '../../api/api.js'\nimport { computed, defineComponent, hydrate } from 'vue';\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: true,\n    width: '20%',\n    slots: {\n      customRender: 'name',\n    },\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'phone',\n    filters: [\n      {\n        text: 'Male',\n        value: 'male',\n      },\n      {\n        text: 'Female',\n        value: 'female',\n      },\n    ],\n    width: '20%',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n  },\n];\n\n\nconst queryData = params => {\n    console.log('fdsfsdf', params)\n    var h = `https://randomuser.me/api?noinfo&${new URLSearchParams(params)}`;\n     console.log('hhhhhh', h)\n  return h;\n};\n\nconsole.log\n\nexport default defineComponent({\n  setup() {\n    const {\n      data: dataSource,\n      run,\n      loading,\n      current, //  getworkerApplyHistory(2)\n      pageSize,\n    } = usePagination(queryData, {\n      formatResult: res => res.results,\n      pagination: {\n        currentKey: 'page',\n        pageSizeKey: 'results',\n      },\n    });\n\n    const pagination = computed(() => ({\n      total: 200,\n      current: current.value,\n      pageSize: pageSize.value,\n    }));\n\n    const handleTableChange = (pag, filters, sorter) => {\n      run({\n        results: pag.pageSize,\n        page: pag?.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    };\n    console.log('datadfdfsd:', dataSource)\n    return {\n      dataSource,\n      pagination,\n      loading,\n      columns,\n      handleTableChange,\n    };\n  },\n});\n</script>"]},"metadata":{},"sourceType":"module"}