{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, numericProp, unknownProp, createNamespace } from \"../utils\";\nimport { useCustomFieldValue } from \"@vant/use\";\nimport { Loading } from \"../loading\";\nconst [name, bem] = createNamespace(\"switch\");\nconst switchProps = {\n  size: numericProp,\n  loading: Boolean,\n  disabled: Boolean,\n  modelValue: unknownProp,\n  activeColor: String,\n  inactiveColor: String,\n  activeValue: {\n    type: unknownProp,\n    default: true\n  },\n  inactiveValue: {\n    type: unknownProp,\n    default: false\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: switchProps,\n  emits: [\"change\", \"update:modelValue\"],\n\n  setup(props, {\n    emit\n  }) {\n    const isChecked = () => props.modelValue === props.activeValue;\n\n    const onClick = () => {\n      if (!props.disabled && !props.loading) {\n        const newValue = isChecked() ? props.inactiveValue : props.activeValue;\n        emit(\"update:modelValue\", newValue);\n        emit(\"change\", newValue);\n      }\n    };\n\n    const renderLoading = () => {\n      if (props.loading) {\n        const color = isChecked() ? props.activeColor : props.inactiveColor;\n        return _createVNode(Loading, {\n          \"class\": bem(\"loading\"),\n          \"color\": color\n        }, null);\n      }\n    };\n\n    useCustomFieldValue(() => props.modelValue);\n    return () => {\n      const {\n        size,\n        loading,\n        disabled,\n        activeColor,\n        inactiveColor\n      } = props;\n      const checked = isChecked();\n      const style = {\n        fontSize: addUnit(size),\n        backgroundColor: checked ? activeColor : inactiveColor\n      };\n      return _createVNode(\"div\", {\n        \"role\": \"switch\",\n        \"class\": bem({\n          on: checked,\n          loading,\n          disabled\n        }),\n        \"style\": style,\n        \"tabindex\": disabled ? void 0 : 0,\n        \"aria-checked\": checked,\n        \"onClick\": onClick\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"node\")\n      }, [renderLoading()])]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/switch/Switch.js"],"names":["createVNode","_createVNode","defineComponent","addUnit","numericProp","unknownProp","createNamespace","useCustomFieldValue","Loading","name","bem","switchProps","size","loading","Boolean","disabled","modelValue","activeColor","String","inactiveColor","activeValue","type","default","inactiveValue","stdin_default","props","emits","setup","emit","isChecked","onClick","newValue","renderLoading","color","checked","style","fontSize","backgroundColor","on"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, numericProp, unknownProp, createNamespace } from \"../utils\";\nimport { useCustomFieldValue } from \"@vant/use\";\nimport { Loading } from \"../loading\";\nconst [name, bem] = createNamespace(\"switch\");\nconst switchProps = {\n  size: numericProp,\n  loading: Boolean,\n  disabled: Boolean,\n  modelValue: unknownProp,\n  activeColor: String,\n  inactiveColor: String,\n  activeValue: {\n    type: unknownProp,\n    default: true\n  },\n  inactiveValue: {\n    type: unknownProp,\n    default: false\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: switchProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit\n  }) {\n    const isChecked = () => props.modelValue === props.activeValue;\n    const onClick = () => {\n      if (!props.disabled && !props.loading) {\n        const newValue = isChecked() ? props.inactiveValue : props.activeValue;\n        emit(\"update:modelValue\", newValue);\n        emit(\"change\", newValue);\n      }\n    };\n    const renderLoading = () => {\n      if (props.loading) {\n        const color = isChecked() ? props.activeColor : props.inactiveColor;\n        return _createVNode(Loading, {\n          \"class\": bem(\"loading\"),\n          \"color\": color\n        }, null);\n      }\n    };\n    useCustomFieldValue(() => props.modelValue);\n    return () => {\n      const {\n        size,\n        loading,\n        disabled,\n        activeColor,\n        inactiveColor\n      } = props;\n      const checked = isChecked();\n      const style = {\n        fontSize: addUnit(size),\n        backgroundColor: checked ? activeColor : inactiveColor\n      };\n      return _createVNode(\"div\", {\n        \"role\": \"switch\",\n        \"class\": bem({\n          on: checked,\n          loading,\n          disabled\n        }),\n        \"style\": style,\n        \"tabindex\": disabled ? void 0 : 0,\n        \"aria-checked\": checked,\n        \"onClick\": onClick\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"node\")\n      }, [renderLoading()])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}