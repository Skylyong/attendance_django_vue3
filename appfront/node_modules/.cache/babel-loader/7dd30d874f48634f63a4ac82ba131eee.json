{"ast":null,"code":"import { defineComponent, h, computed, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getFuncText } from '../../tools/utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n  name: 'VxeRadio',\n  props: {\n    modelValue: [String, Number, Boolean],\n    label: {\n      type: [String, Number, Boolean],\n      default: null\n    },\n    title: [String, Number],\n    content: [String, Number],\n    disabled: Boolean,\n    name: String,\n    strict: {\n      type: Boolean,\n      default: function () {\n        return GlobalConfig.radio.strict;\n      }\n    },\n    size: {\n      type: String,\n      default: function () {\n        return GlobalConfig.radio.size || GlobalConfig.size;\n      }\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup: function (props, context) {\n    var slots = context.slots,\n        emit = context.emit;\n    var xID = XEUtils.uniqueId();\n    var $xeradio = {\n      xID: xID,\n      props: props,\n      context: context\n    };\n    var computeSize = useSize(props);\n    var $xeradiogroup = inject('$xeradiogroup', null);\n    var radioMethods = {};\n    var computeDisabled = computed(function () {\n      return props.disabled || $xeradiogroup && $xeradiogroup.props.disabled;\n    });\n    var computeName = computed(function () {\n      return $xeradiogroup ? $xeradiogroup.name : props.name;\n    });\n    var computeStrict = computed(function () {\n      return $xeradiogroup ? $xeradiogroup.props.strict : props.strict;\n    });\n    var computeChecked = computed(function () {\n      var modelValue = props.modelValue,\n          label = props.label;\n      return $xeradiogroup ? $xeradiogroup.props.modelValue === label : modelValue === label;\n    });\n\n    var handleValue = function (label, evnt) {\n      if ($xeradiogroup) {\n        $xeradiogroup.handleChecked({\n          label: label\n        }, evnt);\n      } else {\n        emit('update:modelValue', label);\n        radioMethods.dispatchEvent('change', {\n          label: label\n        }, evnt);\n      }\n    };\n\n    var changeEvent = function (evnt) {\n      var isDisabled = computeDisabled.value;\n\n      if (!isDisabled) {\n        handleValue(props.label, evnt);\n      }\n    };\n\n    var clickEvent = function (evnt) {\n      var isDisabled = computeDisabled.value;\n      var isStrict = computeStrict.value;\n\n      if (!isDisabled && !isStrict) {\n        if (props.label === ($xeradiogroup ? $xeradiogroup.props.modelValue : props.modelValue)) {\n          handleValue(null, evnt);\n        }\n      }\n    };\n\n    radioMethods = {\n      dispatchEvent: function (type, params, evnt) {\n        emit(type, Object.assign({\n          $radio: $xeradio,\n          $event: evnt\n        }, params));\n      }\n    };\n    Object.assign($xeradio, radioMethods);\n\n    var renderVN = function () {\n      var _a;\n\n      var vSize = computeSize.value;\n      var isDisabled = computeDisabled.value;\n      var name = computeName.value;\n      var checked = computeChecked.value;\n      return h('label', {\n        class: ['vxe-radio', (_a = {}, _a[\"size--\" + vSize] = vSize, _a['is--disabled'] = isDisabled, _a)],\n        title: props.title\n      }, [h('input', {\n        class: 'vxe-radio--input',\n        type: 'radio',\n        name: name,\n        checked: checked,\n        disabled: isDisabled,\n        onChange: changeEvent,\n        onClick: clickEvent\n      }), h('span', {\n        class: 'vxe-radio--icon'\n      }), h('span', {\n        class: 'vxe-radio--label'\n      }, slots.default ? slots.default({}) : getFuncText(props.content))]);\n    };\n\n    $xeradio.renderVN = renderVN;\n    return $xeradio;\n  },\n  render: function () {\n    return this.renderVN();\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/radio/src/radio.js"],"names":["defineComponent","h","computed","inject","XEUtils","getFuncText","GlobalConfig","useSize","name","props","modelValue","String","Number","Boolean","label","type","default","title","content","disabled","strict","radio","size","emits","setup","context","slots","emit","xID","uniqueId","$xeradio","computeSize","$xeradiogroup","radioMethods","computeDisabled","computeName","computeStrict","computeChecked","handleValue","evnt","handleChecked","dispatchEvent","changeEvent","isDisabled","value","clickEvent","isStrict","params","Object","assign","$radio","$event","renderVN","_a","vSize","checked","class","onChange","onClick","render"],"mappings":"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","sourcesContent":["import { defineComponent, h, computed, inject } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getFuncText } from '../../tools/utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { useSize } from '../../hooks/size';\nexport default defineComponent({\n    name: 'VxeRadio',\n    props: {\n        modelValue: [String, Number, Boolean],\n        label: { type: [String, Number, Boolean], default: null },\n        title: [String, Number],\n        content: [String, Number],\n        disabled: Boolean,\n        name: String,\n        strict: { type: Boolean, default: function () { return GlobalConfig.radio.strict; } },\n        size: { type: String, default: function () { return GlobalConfig.radio.size || GlobalConfig.size; } }\n    },\n    emits: [\n        'update:modelValue',\n        'change'\n    ],\n    setup: function (props, context) {\n        var slots = context.slots, emit = context.emit;\n        var xID = XEUtils.uniqueId();\n        var $xeradio = {\n            xID: xID,\n            props: props,\n            context: context\n        };\n        var computeSize = useSize(props);\n        var $xeradiogroup = inject('$xeradiogroup', null);\n        var radioMethods = {};\n        var computeDisabled = computed(function () {\n            return props.disabled || ($xeradiogroup && $xeradiogroup.props.disabled);\n        });\n        var computeName = computed(function () {\n            return $xeradiogroup ? $xeradiogroup.name : props.name;\n        });\n        var computeStrict = computed(function () {\n            return $xeradiogroup ? $xeradiogroup.props.strict : props.strict;\n        });\n        var computeChecked = computed(function () {\n            var modelValue = props.modelValue, label = props.label;\n            return $xeradiogroup ? $xeradiogroup.props.modelValue === label : modelValue === label;\n        });\n        var handleValue = function (label, evnt) {\n            if ($xeradiogroup) {\n                $xeradiogroup.handleChecked({ label: label }, evnt);\n            }\n            else {\n                emit('update:modelValue', label);\n                radioMethods.dispatchEvent('change', { label: label }, evnt);\n            }\n        };\n        var changeEvent = function (evnt) {\n            var isDisabled = computeDisabled.value;\n            if (!isDisabled) {\n                handleValue(props.label, evnt);\n            }\n        };\n        var clickEvent = function (evnt) {\n            var isDisabled = computeDisabled.value;\n            var isStrict = computeStrict.value;\n            if (!isDisabled && !isStrict) {\n                if (props.label === ($xeradiogroup ? $xeradiogroup.props.modelValue : props.modelValue)) {\n                    handleValue(null, evnt);\n                }\n            }\n        };\n        radioMethods = {\n            dispatchEvent: function (type, params, evnt) {\n                emit(type, Object.assign({ $radio: $xeradio, $event: evnt }, params));\n            }\n        };\n        Object.assign($xeradio, radioMethods);\n        var renderVN = function () {\n            var _a;\n            var vSize = computeSize.value;\n            var isDisabled = computeDisabled.value;\n            var name = computeName.value;\n            var checked = computeChecked.value;\n            return h('label', {\n                class: ['vxe-radio', (_a = {},\n                        _a[\"size--\" + vSize] = vSize,\n                        _a['is--disabled'] = isDisabled,\n                        _a)],\n                title: props.title\n            }, [\n                h('input', {\n                    class: 'vxe-radio--input',\n                    type: 'radio',\n                    name: name,\n                    checked: checked,\n                    disabled: isDisabled,\n                    onChange: changeEvent,\n                    onClick: clickEvent\n                }),\n                h('span', {\n                    class: 'vxe-radio--icon'\n                }),\n                h('span', {\n                    class: 'vxe-radio--label'\n                }, slots.default ? slots.default({}) : getFuncText(props.content))\n            ]);\n        };\n        $xeradio.renderVN = renderVN;\n        return $xeradio;\n    },\n    render: function () {\n        return this.renderVN();\n    }\n});\n"]},"metadata":{},"sourceType":"module"}