{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { extend, unitToPx, truthProp, makeArrayProp, preventDefault, makeStringProp, makeNumericProp, createNamespace, HAPTICS_FEEDBACK, BORDER_UNSET_TOP_BOTTOM } from \"../utils\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Loading } from \"../loading\";\nimport Column, { PICKER_KEY } from \"./PickerColumn\";\nconst [name, bem, t] = createNamespace(\"picker\");\nconst pickerSharedProps = {\n  title: String,\n  loading: Boolean,\n  readonly: Boolean,\n  allowHtml: Boolean,\n  itemHeight: makeNumericProp(44),\n  showToolbar: truthProp,\n  swipeDuration: makeNumericProp(1e3),\n  visibleItemCount: makeNumericProp(6),\n  cancelButtonText: String,\n  confirmButtonText: String\n};\nconst pickerProps = extend({}, pickerSharedProps, {\n  columns: makeArrayProp(),\n  valueKey: String,\n  defaultIndex: makeNumericProp(0),\n  toolbarPosition: makeStringProp(\"top\"),\n  columnsFieldNames: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: pickerProps,\n  emits: [\"confirm\", \"cancel\", \"change\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (slots.default) {\n        console.warn('[Vant] Picker: \"default\" slot is deprecated, please use \"toolbar\" slot instead.');\n      }\n\n      if (props.valueKey) {\n        console.warn('[Vant] Picker: \"valueKey\" prop is deprecated, please use \"columnsFieldNames\" prop instead.');\n      }\n    }\n\n    const hasOptions = ref(false);\n    const formattedColumns = ref([]);\n    const {\n      text: textKey,\n      values: valuesKey,\n      children: childrenKey\n    } = extend({\n      text: props.valueKey || \"text\",\n      values: \"values\",\n      children: \"children\"\n    }, props.columnsFieldNames);\n    const {\n      children,\n      linkChildren\n    } = useChildren(PICKER_KEY);\n    linkChildren();\n    const itemHeight = computed(() => unitToPx(props.itemHeight));\n    const dataType = computed(() => {\n      const firstColumn = props.columns[0];\n\n      if (typeof firstColumn === \"object\") {\n        if (childrenKey in firstColumn) {\n          return \"cascade\";\n        }\n\n        if (valuesKey in firstColumn) {\n          return \"object\";\n        }\n      }\n\n      return \"plain\";\n    });\n\n    const formatCascade = () => {\n      var _a;\n\n      const formatted = [];\n      let cursor = {\n        [childrenKey]: props.columns\n      };\n\n      while (cursor && cursor[childrenKey]) {\n        const children2 = cursor[childrenKey];\n        let defaultIndex = (_a = cursor.defaultIndex) != null ? _a : +props.defaultIndex;\n\n        while (children2[defaultIndex] && children2[defaultIndex].disabled) {\n          if (defaultIndex < children2.length - 1) {\n            defaultIndex++;\n          } else {\n            defaultIndex = 0;\n            break;\n          }\n        }\n\n        formatted.push({\n          [valuesKey]: cursor[childrenKey],\n          className: cursor.className,\n          defaultIndex\n        });\n        cursor = children2[defaultIndex];\n      }\n\n      formattedColumns.value = formatted;\n    };\n\n    const format = () => {\n      const {\n        columns\n      } = props;\n\n      if (dataType.value === \"plain\") {\n        formattedColumns.value = [{\n          [valuesKey]: columns\n        }];\n      } else if (dataType.value === \"cascade\") {\n        formatCascade();\n      } else {\n        formattedColumns.value = columns;\n      }\n\n      hasOptions.value = formattedColumns.value.some(item => item[valuesKey] && item[valuesKey].length !== 0);\n    };\n\n    const getIndexes = () => children.map(child => child.state.index);\n\n    const setColumnValues = (index, options) => {\n      const column = children[index];\n\n      if (column) {\n        column.setOptions(options);\n        hasOptions.value = true;\n      }\n    };\n\n    const onCascadeChange = columnIndex => {\n      let cursor = {\n        [childrenKey]: props.columns\n      };\n      const indexes = getIndexes();\n\n      for (let i = 0; i <= columnIndex; i++) {\n        cursor = cursor[childrenKey][indexes[i]];\n      }\n\n      while (cursor && cursor[childrenKey]) {\n        columnIndex++;\n        setColumnValues(columnIndex, cursor[childrenKey]);\n        cursor = cursor[childrenKey][cursor.defaultIndex || 0];\n      }\n    };\n\n    const getChild = index => children[index];\n\n    const getColumnValue = index => {\n      const column = getChild(index);\n\n      if (column) {\n        return column.getValue();\n      }\n    };\n\n    const setColumnValue = (index, value) => {\n      const column = getChild(index);\n\n      if (column) {\n        column.setValue(value);\n\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(index);\n        }\n      }\n    };\n\n    const getColumnIndex = index => {\n      const column = getChild(index);\n\n      if (column) {\n        return column.state.index;\n      }\n    };\n\n    const setColumnIndex = (columnIndex, optionIndex) => {\n      const column = getChild(columnIndex);\n\n      if (column) {\n        column.setIndex(optionIndex);\n\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(columnIndex);\n        }\n      }\n    };\n\n    const getColumnValues = index => {\n      const column = getChild(index);\n\n      if (column) {\n        return column.state.options;\n      }\n    };\n\n    const getValues = () => children.map(child => child.getValue());\n\n    const setValues = values => {\n      values.forEach((value, index) => {\n        setColumnValue(index, value);\n      });\n    };\n\n    const setIndexes = indexes => {\n      indexes.forEach((optionIndex, columnIndex) => {\n        setColumnIndex(columnIndex, optionIndex);\n      });\n    };\n\n    const emitAction = event => {\n      if (dataType.value === \"plain\") {\n        emit(event, getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(event, getValues(), getIndexes());\n      }\n    };\n\n    const onChange = columnIndex => {\n      if (dataType.value === \"cascade\") {\n        onCascadeChange(columnIndex);\n      }\n\n      if (dataType.value === \"plain\") {\n        emit(\"change\", getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(\"change\", getValues(), columnIndex);\n      }\n    };\n\n    const confirm = () => {\n      children.forEach(child => child.stopMomentum());\n      emitAction(\"confirm\");\n    };\n\n    const cancel = () => emitAction(\"cancel\");\n\n    const renderTitle = () => {\n      if (slots.title) {\n        return slots.title();\n      }\n\n      if (props.title) {\n        return _createVNode(\"div\", {\n          \"class\": [bem(\"title\"), \"van-ellipsis\"]\n        }, [props.title]);\n      }\n    };\n\n    const renderCancel = () => {\n      const text = props.cancelButtonText || t(\"cancel\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"cancel\"), HAPTICS_FEEDBACK],\n        \"onClick\": cancel\n      }, [slots.cancel ? slots.cancel() : text]);\n    };\n\n    const renderConfirm = () => {\n      const text = props.confirmButtonText || t(\"confirm\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"confirm\"), HAPTICS_FEEDBACK],\n        \"onClick\": confirm\n      }, [slots.confirm ? slots.confirm() : text]);\n    };\n\n    const renderToolbar = () => {\n      if (props.showToolbar) {\n        const slot = slots.toolbar || slots.default;\n        return _createVNode(\"div\", {\n          \"class\": bem(\"toolbar\")\n        }, [slot ? slot() : [renderCancel(), renderTitle(), renderConfirm()]]);\n      }\n    };\n\n    const renderColumnItems = () => formattedColumns.value.map((item, columnIndex) => {\n      var _a;\n\n      return _createVNode(Column, {\n        \"textKey\": textKey,\n        \"readonly\": props.readonly,\n        \"allowHtml\": props.allowHtml,\n        \"className\": item.className,\n        \"itemHeight\": itemHeight.value,\n        \"defaultIndex\": (_a = item.defaultIndex) != null ? _a : +props.defaultIndex,\n        \"swipeDuration\": props.swipeDuration,\n        \"initialOptions\": item[valuesKey],\n        \"visibleItemCount\": props.visibleItemCount,\n        \"onChange\": () => onChange(columnIndex)\n      }, {\n        option: slots.option\n      });\n    });\n\n    const renderMask = wrapHeight => {\n      if (hasOptions.value) {\n        const frameStyle = {\n          height: `${itemHeight.value}px`\n        };\n        const maskStyle = {\n          backgroundSize: `100% ${(wrapHeight - itemHeight.value) / 2}px`\n        };\n        return [_createVNode(\"div\", {\n          \"class\": bem(\"mask\"),\n          \"style\": maskStyle\n        }, null), _createVNode(\"div\", {\n          \"class\": [BORDER_UNSET_TOP_BOTTOM, bem(\"frame\")],\n          \"style\": frameStyle\n        }, null)];\n      }\n    };\n\n    const renderColumns = () => {\n      const wrapHeight = itemHeight.value * +props.visibleItemCount;\n      const columnsStyle = {\n        height: `${wrapHeight}px`\n      };\n      return _createVNode(\"div\", {\n        \"class\": bem(\"columns\"),\n        \"style\": columnsStyle,\n        \"onTouchmove\": preventDefault\n      }, [renderColumnItems(), renderMask(wrapHeight)]);\n    };\n\n    watch(() => props.columns, format, {\n      immediate: true\n    });\n    useExpose({\n      confirm,\n      getValues,\n      setValues,\n      getIndexes,\n      setIndexes,\n      getColumnIndex,\n      setColumnIndex,\n      getColumnValue,\n      setColumnValue,\n      getColumnValues,\n      setColumnValues\n    });\n    return () => {\n      var _a, _b;\n\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [props.toolbarPosition === \"top\" ? renderToolbar() : null, props.loading ? _createVNode(Loading, {\n        \"class\": bem(\"loading\")\n      }, null) : null, (_a = slots[\"columns-top\"]) == null ? void 0 : _a.call(slots), renderColumns(), (_b = slots[\"columns-bottom\"]) == null ? void 0 : _b.call(slots), props.toolbarPosition === \"bottom\" ? renderToolbar() : null]);\n    };\n  }\n\n});\nexport { stdin_default as default, pickerSharedProps };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/picker/Picker.js"],"names":["createVNode","_createVNode","ref","watch","computed","defineComponent","extend","unitToPx","truthProp","makeArrayProp","preventDefault","makeStringProp","makeNumericProp","createNamespace","HAPTICS_FEEDBACK","BORDER_UNSET_TOP_BOTTOM","useChildren","useExpose","Loading","Column","PICKER_KEY","name","bem","t","pickerSharedProps","title","String","loading","Boolean","readonly","allowHtml","itemHeight","showToolbar","swipeDuration","visibleItemCount","cancelButtonText","confirmButtonText","pickerProps","columns","valueKey","defaultIndex","toolbarPosition","columnsFieldNames","Object","stdin_default","props","emits","setup","emit","slots","process","env","NODE_ENV","default","console","warn","hasOptions","formattedColumns","text","textKey","values","valuesKey","children","childrenKey","linkChildren","dataType","firstColumn","formatCascade","_a","formatted","cursor","children2","disabled","length","push","className","value","format","some","item","getIndexes","map","child","state","index","setColumnValues","options","column","setOptions","onCascadeChange","columnIndex","indexes","i","getChild","getColumnValue","getValue","setColumnValue","setValue","getColumnIndex","setColumnIndex","optionIndex","setIndex","getColumnValues","getValues","setValues","forEach","setIndexes","emitAction","event","onChange","confirm","stopMomentum","cancel","renderTitle","renderCancel","renderConfirm","renderToolbar","slot","toolbar","renderColumnItems","option","renderMask","wrapHeight","frameStyle","height","maskStyle","backgroundSize","renderColumns","columnsStyle","immediate","_b","call"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { extend, unitToPx, truthProp, makeArrayProp, preventDefault, makeStringProp, makeNumericProp, createNamespace, HAPTICS_FEEDBACK, BORDER_UNSET_TOP_BOTTOM } from \"../utils\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Loading } from \"../loading\";\nimport Column, { PICKER_KEY } from \"./PickerColumn\";\nconst [name, bem, t] = createNamespace(\"picker\");\nconst pickerSharedProps = {\n  title: String,\n  loading: Boolean,\n  readonly: Boolean,\n  allowHtml: Boolean,\n  itemHeight: makeNumericProp(44),\n  showToolbar: truthProp,\n  swipeDuration: makeNumericProp(1e3),\n  visibleItemCount: makeNumericProp(6),\n  cancelButtonText: String,\n  confirmButtonText: String\n};\nconst pickerProps = extend({}, pickerSharedProps, {\n  columns: makeArrayProp(),\n  valueKey: String,\n  defaultIndex: makeNumericProp(0),\n  toolbarPosition: makeStringProp(\"top\"),\n  columnsFieldNames: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: pickerProps,\n  emits: [\"confirm\", \"cancel\", \"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (slots.default) {\n        console.warn('[Vant] Picker: \"default\" slot is deprecated, please use \"toolbar\" slot instead.');\n      }\n      if (props.valueKey) {\n        console.warn('[Vant] Picker: \"valueKey\" prop is deprecated, please use \"columnsFieldNames\" prop instead.');\n      }\n    }\n    const hasOptions = ref(false);\n    const formattedColumns = ref([]);\n    const {\n      text: textKey,\n      values: valuesKey,\n      children: childrenKey\n    } = extend({\n      text: props.valueKey || \"text\",\n      values: \"values\",\n      children: \"children\"\n    }, props.columnsFieldNames);\n    const {\n      children,\n      linkChildren\n    } = useChildren(PICKER_KEY);\n    linkChildren();\n    const itemHeight = computed(() => unitToPx(props.itemHeight));\n    const dataType = computed(() => {\n      const firstColumn = props.columns[0];\n      if (typeof firstColumn === \"object\") {\n        if (childrenKey in firstColumn) {\n          return \"cascade\";\n        }\n        if (valuesKey in firstColumn) {\n          return \"object\";\n        }\n      }\n      return \"plain\";\n    });\n    const formatCascade = () => {\n      var _a;\n      const formatted = [];\n      let cursor = {\n        [childrenKey]: props.columns\n      };\n      while (cursor && cursor[childrenKey]) {\n        const children2 = cursor[childrenKey];\n        let defaultIndex = (_a = cursor.defaultIndex) != null ? _a : +props.defaultIndex;\n        while (children2[defaultIndex] && children2[defaultIndex].disabled) {\n          if (defaultIndex < children2.length - 1) {\n            defaultIndex++;\n          } else {\n            defaultIndex = 0;\n            break;\n          }\n        }\n        formatted.push({\n          [valuesKey]: cursor[childrenKey],\n          className: cursor.className,\n          defaultIndex\n        });\n        cursor = children2[defaultIndex];\n      }\n      formattedColumns.value = formatted;\n    };\n    const format = () => {\n      const {\n        columns\n      } = props;\n      if (dataType.value === \"plain\") {\n        formattedColumns.value = [{\n          [valuesKey]: columns\n        }];\n      } else if (dataType.value === \"cascade\") {\n        formatCascade();\n      } else {\n        formattedColumns.value = columns;\n      }\n      hasOptions.value = formattedColumns.value.some((item) => item[valuesKey] && item[valuesKey].length !== 0);\n    };\n    const getIndexes = () => children.map((child) => child.state.index);\n    const setColumnValues = (index, options) => {\n      const column = children[index];\n      if (column) {\n        column.setOptions(options);\n        hasOptions.value = true;\n      }\n    };\n    const onCascadeChange = (columnIndex) => {\n      let cursor = {\n        [childrenKey]: props.columns\n      };\n      const indexes = getIndexes();\n      for (let i = 0; i <= columnIndex; i++) {\n        cursor = cursor[childrenKey][indexes[i]];\n      }\n      while (cursor && cursor[childrenKey]) {\n        columnIndex++;\n        setColumnValues(columnIndex, cursor[childrenKey]);\n        cursor = cursor[childrenKey][cursor.defaultIndex || 0];\n      }\n    };\n    const getChild = (index) => children[index];\n    const getColumnValue = (index) => {\n      const column = getChild(index);\n      if (column) {\n        return column.getValue();\n      }\n    };\n    const setColumnValue = (index, value) => {\n      const column = getChild(index);\n      if (column) {\n        column.setValue(value);\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(index);\n        }\n      }\n    };\n    const getColumnIndex = (index) => {\n      const column = getChild(index);\n      if (column) {\n        return column.state.index;\n      }\n    };\n    const setColumnIndex = (columnIndex, optionIndex) => {\n      const column = getChild(columnIndex);\n      if (column) {\n        column.setIndex(optionIndex);\n        if (dataType.value === \"cascade\") {\n          onCascadeChange(columnIndex);\n        }\n      }\n    };\n    const getColumnValues = (index) => {\n      const column = getChild(index);\n      if (column) {\n        return column.state.options;\n      }\n    };\n    const getValues = () => children.map((child) => child.getValue());\n    const setValues = (values) => {\n      values.forEach((value, index) => {\n        setColumnValue(index, value);\n      });\n    };\n    const setIndexes = (indexes) => {\n      indexes.forEach((optionIndex, columnIndex) => {\n        setColumnIndex(columnIndex, optionIndex);\n      });\n    };\n    const emitAction = (event) => {\n      if (dataType.value === \"plain\") {\n        emit(event, getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(event, getValues(), getIndexes());\n      }\n    };\n    const onChange = (columnIndex) => {\n      if (dataType.value === \"cascade\") {\n        onCascadeChange(columnIndex);\n      }\n      if (dataType.value === \"plain\") {\n        emit(\"change\", getColumnValue(0), getColumnIndex(0));\n      } else {\n        emit(\"change\", getValues(), columnIndex);\n      }\n    };\n    const confirm = () => {\n      children.forEach((child) => child.stopMomentum());\n      emitAction(\"confirm\");\n    };\n    const cancel = () => emitAction(\"cancel\");\n    const renderTitle = () => {\n      if (slots.title) {\n        return slots.title();\n      }\n      if (props.title) {\n        return _createVNode(\"div\", {\n          \"class\": [bem(\"title\"), \"van-ellipsis\"]\n        }, [props.title]);\n      }\n    };\n    const renderCancel = () => {\n      const text = props.cancelButtonText || t(\"cancel\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"cancel\"), HAPTICS_FEEDBACK],\n        \"onClick\": cancel\n      }, [slots.cancel ? slots.cancel() : text]);\n    };\n    const renderConfirm = () => {\n      const text = props.confirmButtonText || t(\"confirm\");\n      return _createVNode(\"button\", {\n        \"type\": \"button\",\n        \"class\": [bem(\"confirm\"), HAPTICS_FEEDBACK],\n        \"onClick\": confirm\n      }, [slots.confirm ? slots.confirm() : text]);\n    };\n    const renderToolbar = () => {\n      if (props.showToolbar) {\n        const slot = slots.toolbar || slots.default;\n        return _createVNode(\"div\", {\n          \"class\": bem(\"toolbar\")\n        }, [slot ? slot() : [renderCancel(), renderTitle(), renderConfirm()]]);\n      }\n    };\n    const renderColumnItems = () => formattedColumns.value.map((item, columnIndex) => {\n      var _a;\n      return _createVNode(Column, {\n        \"textKey\": textKey,\n        \"readonly\": props.readonly,\n        \"allowHtml\": props.allowHtml,\n        \"className\": item.className,\n        \"itemHeight\": itemHeight.value,\n        \"defaultIndex\": (_a = item.defaultIndex) != null ? _a : +props.defaultIndex,\n        \"swipeDuration\": props.swipeDuration,\n        \"initialOptions\": item[valuesKey],\n        \"visibleItemCount\": props.visibleItemCount,\n        \"onChange\": () => onChange(columnIndex)\n      }, {\n        option: slots.option\n      });\n    });\n    const renderMask = (wrapHeight) => {\n      if (hasOptions.value) {\n        const frameStyle = {\n          height: `${itemHeight.value}px`\n        };\n        const maskStyle = {\n          backgroundSize: `100% ${(wrapHeight - itemHeight.value) / 2}px`\n        };\n        return [_createVNode(\"div\", {\n          \"class\": bem(\"mask\"),\n          \"style\": maskStyle\n        }, null), _createVNode(\"div\", {\n          \"class\": [BORDER_UNSET_TOP_BOTTOM, bem(\"frame\")],\n          \"style\": frameStyle\n        }, null)];\n      }\n    };\n    const renderColumns = () => {\n      const wrapHeight = itemHeight.value * +props.visibleItemCount;\n      const columnsStyle = {\n        height: `${wrapHeight}px`\n      };\n      return _createVNode(\"div\", {\n        \"class\": bem(\"columns\"),\n        \"style\": columnsStyle,\n        \"onTouchmove\": preventDefault\n      }, [renderColumnItems(), renderMask(wrapHeight)]);\n    };\n    watch(() => props.columns, format, {\n      immediate: true\n    });\n    useExpose({\n      confirm,\n      getValues,\n      setValues,\n      getIndexes,\n      setIndexes,\n      getColumnIndex,\n      setColumnIndex,\n      getColumnValue,\n      setColumnValue,\n      getColumnValues,\n      setColumnValues\n    });\n    return () => {\n      var _a, _b;\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [props.toolbarPosition === \"top\" ? renderToolbar() : null, props.loading ? _createVNode(Loading, {\n        \"class\": bem(\"loading\")\n      }, null) : null, (_a = slots[\"columns-top\"]) == null ? void 0 : _a.call(slots), renderColumns(), (_b = slots[\"columns-bottom\"]) == null ? void 0 : _b.call(slots), props.toolbarPosition === \"bottom\" ? renderToolbar() : null]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  pickerSharedProps\n};\n"]},"metadata":{},"sourceType":"module"}