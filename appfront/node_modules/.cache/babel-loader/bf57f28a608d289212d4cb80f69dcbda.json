{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  return _openBlock(), _createBlock(_component_a_table, {\n    columns: _ctx.columns,\n    \"data-source\": _ctx.data,\n    onChange: _ctx.onChange\n  }, null, 8\n  /* PROPS */\n  , [\"columns\", \"data-source\", \"onChange\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aAAqEC,kBAArE,EAAqE;AAA3DC,WAAO,EAAEC,YAAkD;AAAxC,mBAAaA,SAA2B;AAApBC,YAAM,EAAED;AAAY,GAArE;;AAAA","names":["_createBlock","_component_a_table","columns","_ctx","onChange"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/worker/workerApplyHistory.vue"],"sourcesContent":["<template>\n  <a-table :columns=\"columns\" :data-source=\"data\" @change=\"onChange\" />\n</template>\n\n\n\n\n\n<script>\nimport { defineComponent, ref } from 'vue';\nimport{getworkerApplyHistory} from '../../api/api.js'\nconst columns = [\n    \n    {\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe',\n  }, {\n    text: 'Jim',\n    value: 'Jim',\n  }, \n  {\n    text: 'Submenu',\n    value: 'Submenu',\n    children: [{\n      text: 'Green',\n      value: 'Green',\n    }, {\n      text: 'Black',\n      value: 'Black',\n    }],\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['descend'],\n}, \n\n{\n  title: 'Age',\n  dataIndex: 'age',\n  defaultSortOrder: 'descend',\n  sorter: (a, b) => a.age - b.age,\n},\n\n\n{\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London',\n  }, {\n    text: 'New York',\n    value: 'New York',\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: ['descend', 'ascend'],\n}];\n\n\n\n\n\n\n\n// const data = [{\n//   key: '1',\n//   name: 'John Brown',\n//   age: 32,\n//   address: 'New York No. 1 Lake Park',\n// }, {\n//   key: '2',\n//   name: 'Jim Green',\n//   age: 42,\n//   address: 'London No. 1 Lake Park',\n// }, {\n//   key: '3',\n//   name: 'Joe Black',\n//   age: 32,\n//   address: 'Sidney No. 1 Lake Park',\n// }, {\n//   key: '4',\n//   name: 'Jim Red',\n//   age: 32,\n//   address: 'London No. 2 Lake Park',\n// }];\n\n\n\nexport default defineComponent({\n  setup() {\n      let data = ref()\n    const onChange = (pagination, filters, sorter) => {\n      console.log('params', pagination, filters, sorter);\n    };\n\n\n\n    getworkerApplyHistory(2).then (\n       response =>{\n         if (response['code'] == 1){\n        //    data.value = \n        data_total = response['data']\n        data = data_total\n         }\n       \n       }\n       \n       )\n\n\n\n\n    return {\n      data,\n      columns,\n      onChange,\n    };\n  },\n\n});\n</script>"]},"metadata":{},"sourceType":"module"}