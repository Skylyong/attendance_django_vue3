{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, numericProp, createNamespace } from \"../utils\";\nimport { SIDEBAR_KEY } from \"../sidebar/Sidebar\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"sidebar-item\");\nconst sidebarItemProps = extend({}, routeProps, {\n  dot: Boolean,\n  title: String,\n  badge: numericProp,\n  disabled: Boolean,\n  badgeProps: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: sidebarItemProps,\n  emits: [\"click\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const route = useRoute();\n    const {\n      parent,\n      index\n    } = useParent(SIDEBAR_KEY);\n\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <SidebarItem> must be a child component of <Sidebar>.\");\n      }\n\n      return;\n    }\n\n    const onClick = () => {\n      if (props.disabled) {\n        return;\n      }\n\n      emit(\"click\", index.value);\n      parent.setActive(index.value);\n      route();\n    };\n\n    return () => {\n      const {\n        dot,\n        badge,\n        title,\n        disabled\n      } = props;\n      const selected = index.value === parent.getActive();\n      return _createVNode(\"div\", {\n        \"role\": \"tab\",\n        \"class\": bem({\n          select: selected,\n          disabled\n        }),\n        \"tabindex\": disabled ? void 0 : 0,\n        \"aria-selected\": selected,\n        \"onClick\": onClick\n      }, [_createVNode(Badge, _mergeProps({\n        \"dot\": dot,\n        \"class\": bem(\"text\"),\n        \"content\": badge\n      }, props.badgeProps), {\n        default: () => [slots.title ? slots.title() : title]\n      })]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/sidebar-item/SidebarItem.js"],"names":["createVNode","_createVNode","mergeProps","_mergeProps","defineComponent","extend","numericProp","createNamespace","SIDEBAR_KEY","useParent","useRoute","routeProps","Badge","name","bem","sidebarItemProps","dot","Boolean","title","String","badge","disabled","badgeProps","Object","stdin_default","props","emits","setup","emit","slots","route","parent","index","process","env","NODE_ENV","console","error","onClick","value","setActive","selected","getActive","select","default"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,EAAsCC,UAAU,IAAIC,WAApD,QAAuE,KAAvE;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,eAA9B,QAAqD,UAArD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,0BAArC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,IAAcP,eAAe,CAAC,cAAD,CAAnC;AACA,MAAMQ,gBAAgB,GAAGV,MAAM,CAAC,EAAD,EAAKM,UAAL,EAAiB;AAC9CK,EAAAA,GAAG,EAAEC,OADyC;AAE9CC,EAAAA,KAAK,EAAEC,MAFuC;AAG9CC,EAAAA,KAAK,EAAEd,WAHuC;AAI9Ce,EAAAA,QAAQ,EAAEJ,OAJoC;AAK9CK,EAAAA,UAAU,EAAEC;AALkC,CAAjB,CAA/B;AAOA,IAAIC,aAAa,GAAGpB,eAAe,CAAC;AAClCS,EAAAA,IADkC;AAElCY,EAAAA,KAAK,EAAEV,gBAF2B;AAGlCW,EAAAA,KAAK,EAAE,CAAC,OAAD,CAH2B;;AAIlCC,EAAAA,KAAK,CAACF,KAAD,EAAQ;AACXG,IAAAA,IADW;AAEXC,IAAAA;AAFW,GAAR,EAGF;AACD,UAAMC,KAAK,GAAGpB,QAAQ,EAAtB;AACA,UAAM;AACJqB,MAAAA,MADI;AAEJC,MAAAA;AAFI,QAGFvB,SAAS,CAACD,WAAD,CAHb;;AAIA,QAAI,CAACuB,MAAL,EAAa;AACX,UAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,QAAAA,OAAO,CAACC,KAAR,CAAc,8DAAd;AACD;;AACD;AACD;;AACD,UAAMC,OAAO,GAAG,MAAM;AACpB,UAAIb,KAAK,CAACJ,QAAV,EAAoB;AAClB;AACD;;AACDO,MAAAA,IAAI,CAAC,OAAD,EAAUI,KAAK,CAACO,KAAhB,CAAJ;AACAR,MAAAA,MAAM,CAACS,SAAP,CAAiBR,KAAK,CAACO,KAAvB;AACAT,MAAAA,KAAK;AACN,KAPD;;AAQA,WAAO,MAAM;AACX,YAAM;AACJd,QAAAA,GADI;AAEJI,QAAAA,KAFI;AAGJF,QAAAA,KAHI;AAIJG,QAAAA;AAJI,UAKFI,KALJ;AAMA,YAAMgB,QAAQ,GAAGT,KAAK,CAACO,KAAN,KAAgBR,MAAM,CAACW,SAAP,EAAjC;AACA,aAAOzC,YAAY,CAAC,KAAD,EAAQ;AACzB,gBAAQ,KADiB;AAEzB,iBAASa,GAAG,CAAC;AACX6B,UAAAA,MAAM,EAAEF,QADG;AAEXpB,UAAAA;AAFW,SAAD,CAFa;AAMzB,oBAAYA,QAAQ,GAAG,KAAK,CAAR,GAAY,CANP;AAOzB,yBAAiBoB,QAPQ;AAQzB,mBAAWH;AARc,OAAR,EAShB,CAACrC,YAAY,CAACW,KAAD,EAAQT,WAAW,CAAC;AAClC,eAAOa,GAD2B;AAElC,iBAASF,GAAG,CAAC,MAAD,CAFsB;AAGlC,mBAAWM;AAHuB,OAAD,EAIhCK,KAAK,CAACH,UAJ0B,CAAnB,EAIM;AACpBsB,QAAAA,OAAO,EAAE,MAAM,CAACf,KAAK,CAACX,KAAN,GAAcW,KAAK,CAACX,KAAN,EAAd,GAA8BA,KAA/B;AADK,OAJN,CAAb,CATgB,CAAnB;AAgBD,KAxBD;AAyBD;;AApDiC,CAAD,CAAnC;AAsDA,SACEM,aAAa,IAAIoB,OADnB","sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { extend, numericProp, createNamespace } from \"../utils\";\nimport { SIDEBAR_KEY } from \"../sidebar/Sidebar\";\nimport { useParent } from \"@vant/use\";\nimport { useRoute, routeProps } from \"../composables/use-route\";\nimport { Badge } from \"../badge\";\nconst [name, bem] = createNamespace(\"sidebar-item\");\nconst sidebarItemProps = extend({}, routeProps, {\n  dot: Boolean,\n  title: String,\n  badge: numericProp,\n  disabled: Boolean,\n  badgeProps: Object\n});\nvar stdin_default = defineComponent({\n  name,\n  props: sidebarItemProps,\n  emits: [\"click\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const route = useRoute();\n    const {\n      parent,\n      index\n    } = useParent(SIDEBAR_KEY);\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <SidebarItem> must be a child component of <Sidebar>.\");\n      }\n      return;\n    }\n    const onClick = () => {\n      if (props.disabled) {\n        return;\n      }\n      emit(\"click\", index.value);\n      parent.setActive(index.value);\n      route();\n    };\n    return () => {\n      const {\n        dot,\n        badge,\n        title,\n        disabled\n      } = props;\n      const selected = index.value === parent.getActive();\n      return _createVNode(\"div\", {\n        \"role\": \"tab\",\n        \"class\": bem({\n          select: selected,\n          disabled\n        }),\n        \"tabindex\": disabled ? void 0 : 0,\n        \"aria-selected\": selected,\n        \"onClick\": onClick\n      }, [_createVNode(Badge, _mergeProps({\n        \"dot\": dot,\n        \"class\": bem(\"text\"),\n        \"content\": badge\n      }, props.badgeProps), {\n        default: () => [slots.title ? slots.title() : title]\n      })]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}