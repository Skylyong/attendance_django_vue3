{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { truthProp, numericProp, BORDER_BOTTOM, getZIndexStyle, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { usePlaceholder } from \"../composables/use-placeholder\";\nimport { Icon } from \"../icon\";\nconst [name, bem] = createNamespace(\"nav-bar\");\nconst navBarProps = {\n  title: String,\n  fixed: Boolean,\n  zIndex: numericProp,\n  border: truthProp,\n  leftText: String,\n  rightText: String,\n  leftArrow: Boolean,\n  placeholder: Boolean,\n  safeAreaInsetTop: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: navBarProps,\n  emits: [\"click-left\", \"click-right\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const navBarRef = ref();\n    const renderPlaceholder = usePlaceholder(navBarRef, bem);\n\n    const onClickLeft = event => emit(\"click-left\", event);\n\n    const onClickRight = event => emit(\"click-right\", event);\n\n    const renderLeft = () => {\n      if (slots.left) {\n        return slots.left();\n      }\n\n      return [props.leftArrow && _createVNode(Icon, {\n        \"class\": bem(\"arrow\"),\n        \"name\": \"arrow-left\"\n      }, null), props.leftText && _createVNode(\"span\", {\n        \"class\": bem(\"text\")\n      }, [props.leftText])];\n    };\n\n    const renderRight = () => {\n      if (slots.right) {\n        return slots.right();\n      }\n\n      return _createVNode(\"span\", {\n        \"class\": bem(\"text\")\n      }, [props.rightText]);\n    };\n\n    const renderNavBar = () => {\n      const {\n        title,\n        fixed,\n        border,\n        zIndex\n      } = props;\n      const style = getZIndexStyle(zIndex);\n      const hasLeft = props.leftArrow || props.leftText || slots.left;\n      const hasRight = props.rightText || slots.right;\n      return _createVNode(\"div\", {\n        \"ref\": navBarRef,\n        \"style\": style,\n        \"class\": [bem({\n          fixed,\n          \"safe-area-inset-top\": props.safeAreaInsetTop\n        }), {\n          [BORDER_BOTTOM]: border\n        }]\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"content\")\n      }, [hasLeft && _createVNode(\"div\", {\n        \"class\": [bem(\"left\"), HAPTICS_FEEDBACK],\n        \"onClick\": onClickLeft\n      }, [renderLeft()]), _createVNode(\"div\", {\n        \"class\": [bem(\"title\"), \"van-ellipsis\"]\n      }, [slots.title ? slots.title() : title]), hasRight && _createVNode(\"div\", {\n        \"class\": [bem(\"right\"), HAPTICS_FEEDBACK],\n        \"onClick\": onClickRight\n      }, [renderRight()])])]);\n    };\n\n    return () => {\n      if (props.fixed && props.placeholder) {\n        return renderPlaceholder(renderNavBar);\n      }\n\n      return renderNavBar();\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/nav-bar/NavBar.js"],"names":["createVNode","_createVNode","ref","defineComponent","truthProp","numericProp","BORDER_BOTTOM","getZIndexStyle","createNamespace","HAPTICS_FEEDBACK","usePlaceholder","Icon","name","bem","navBarProps","title","String","fixed","Boolean","zIndex","border","leftText","rightText","leftArrow","placeholder","safeAreaInsetTop","stdin_default","props","emits","setup","emit","slots","navBarRef","renderPlaceholder","onClickLeft","event","onClickRight","renderLeft","left","renderRight","right","renderNavBar","style","hasLeft","hasRight","default"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;AACA,SAASC,GAAT,EAAcC,eAAd,QAAqC,KAArC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,aAAjC,EAAgDC,cAAhD,EAAgEC,eAAhE,EAAiFC,gBAAjF,QAAyG,UAAzG;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,MAAM,CAACC,IAAD,EAAOC,GAAP,IAAcL,eAAe,CAAC,SAAD,CAAnC;AACA,MAAMM,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAEC,MADW;AAElBC,EAAAA,KAAK,EAAEC,OAFW;AAGlBC,EAAAA,MAAM,EAAEd,WAHU;AAIlBe,EAAAA,MAAM,EAAEhB,SAJU;AAKlBiB,EAAAA,QAAQ,EAAEL,MALQ;AAMlBM,EAAAA,SAAS,EAAEN,MANO;AAOlBO,EAAAA,SAAS,EAAEL,OAPO;AAQlBM,EAAAA,WAAW,EAAEN,OARK;AASlBO,EAAAA,gBAAgB,EAAEP;AATA,CAApB;AAWA,IAAIQ,aAAa,GAAGvB,eAAe,CAAC;AAClCS,EAAAA,IADkC;AAElCe,EAAAA,KAAK,EAAEb,WAF2B;AAGlCc,EAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,aAAf,CAH2B;;AAIlCC,EAAAA,KAAK,CAACF,KAAD,EAAQ;AACXG,IAAAA,IADW;AAEXC,IAAAA;AAFW,GAAR,EAGF;AACD,UAAMC,SAAS,GAAG9B,GAAG,EAArB;AACA,UAAM+B,iBAAiB,GAAGvB,cAAc,CAACsB,SAAD,EAAYnB,GAAZ,CAAxC;;AACA,UAAMqB,WAAW,GAAIC,KAAD,IAAWL,IAAI,CAAC,YAAD,EAAeK,KAAf,CAAnC;;AACA,UAAMC,YAAY,GAAID,KAAD,IAAWL,IAAI,CAAC,aAAD,EAAgBK,KAAhB,CAApC;;AACA,UAAME,UAAU,GAAG,MAAM;AACvB,UAAIN,KAAK,CAACO,IAAV,EAAgB;AACd,eAAOP,KAAK,CAACO,IAAN,EAAP;AACD;;AACD,aAAO,CAACX,KAAK,CAACJ,SAAN,IAAmBtB,YAAY,CAACU,IAAD,EAAO;AAC5C,iBAASE,GAAG,CAAC,OAAD,CADgC;AAE5C,gBAAQ;AAFoC,OAAP,EAGpC,IAHoC,CAAhC,EAGGc,KAAK,CAACN,QAAN,IAAkBpB,YAAY,CAAC,MAAD,EAAS;AAC/C,iBAASY,GAAG,CAAC,MAAD;AADmC,OAAT,EAErC,CAACc,KAAK,CAACN,QAAP,CAFqC,CAHjC,CAAP;AAMD,KAVD;;AAWA,UAAMkB,WAAW,GAAG,MAAM;AACxB,UAAIR,KAAK,CAACS,KAAV,EAAiB;AACf,eAAOT,KAAK,CAACS,KAAN,EAAP;AACD;;AACD,aAAOvC,YAAY,CAAC,MAAD,EAAS;AAC1B,iBAASY,GAAG,CAAC,MAAD;AADc,OAAT,EAEhB,CAACc,KAAK,CAACL,SAAP,CAFgB,CAAnB;AAGD,KAPD;;AAQA,UAAMmB,YAAY,GAAG,MAAM;AACzB,YAAM;AACJ1B,QAAAA,KADI;AAEJE,QAAAA,KAFI;AAGJG,QAAAA,MAHI;AAIJD,QAAAA;AAJI,UAKFQ,KALJ;AAMA,YAAMe,KAAK,GAAGnC,cAAc,CAACY,MAAD,CAA5B;AACA,YAAMwB,OAAO,GAAGhB,KAAK,CAACJ,SAAN,IAAmBI,KAAK,CAACN,QAAzB,IAAqCU,KAAK,CAACO,IAA3D;AACA,YAAMM,QAAQ,GAAGjB,KAAK,CAACL,SAAN,IAAmBS,KAAK,CAACS,KAA1C;AACA,aAAOvC,YAAY,CAAC,KAAD,EAAQ;AACzB,eAAO+B,SADkB;AAEzB,iBAASU,KAFgB;AAGzB,iBAAS,CAAC7B,GAAG,CAAC;AACZI,UAAAA,KADY;AAEZ,iCAAuBU,KAAK,CAACF;AAFjB,SAAD,CAAJ,EAGL;AACF,WAACnB,aAAD,GAAiBc;AADf,SAHK;AAHgB,OAAR,EAShB,CAACnB,YAAY,CAAC,KAAD,EAAQ;AACtB,iBAASY,GAAG,CAAC,SAAD;AADU,OAAR,EAEb,CAAC8B,OAAO,IAAI1C,YAAY,CAAC,KAAD,EAAQ;AACjC,iBAAS,CAACY,GAAG,CAAC,MAAD,CAAJ,EAAcJ,gBAAd,CADwB;AAEjC,mBAAWyB;AAFsB,OAAR,EAGxB,CAACG,UAAU,EAAX,CAHwB,CAAxB,EAGiBpC,YAAY,CAAC,KAAD,EAAQ;AACtC,iBAAS,CAACY,GAAG,CAAC,OAAD,CAAJ,EAAe,cAAf;AAD6B,OAAR,EAE7B,CAACkB,KAAK,CAAChB,KAAN,GAAcgB,KAAK,CAAChB,KAAN,EAAd,GAA8BA,KAA/B,CAF6B,CAH7B,EAKwC6B,QAAQ,IAAI3C,YAAY,CAAC,KAAD,EAAQ;AACzE,iBAAS,CAACY,GAAG,CAAC,OAAD,CAAJ,EAAeJ,gBAAf,CADgE;AAEzE,mBAAW2B;AAF8D,OAAR,EAGhE,CAACG,WAAW,EAAZ,CAHgE,CALhE,CAFa,CAAb,CATgB,CAAnB;AAoBD,KA9BD;;AA+BA,WAAO,MAAM;AACX,UAAIZ,KAAK,CAACV,KAAN,IAAeU,KAAK,CAACH,WAAzB,EAAsC;AACpC,eAAOS,iBAAiB,CAACQ,YAAD,CAAxB;AACD;;AACD,aAAOA,YAAY,EAAnB;AACD,KALD;AAMD;;AApEiC,CAAD,CAAnC;AAsEA,SACEf,aAAa,IAAImB,OADnB","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, defineComponent } from \"vue\";\nimport { truthProp, numericProp, BORDER_BOTTOM, getZIndexStyle, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { usePlaceholder } from \"../composables/use-placeholder\";\nimport { Icon } from \"../icon\";\nconst [name, bem] = createNamespace(\"nav-bar\");\nconst navBarProps = {\n  title: String,\n  fixed: Boolean,\n  zIndex: numericProp,\n  border: truthProp,\n  leftText: String,\n  rightText: String,\n  leftArrow: Boolean,\n  placeholder: Boolean,\n  safeAreaInsetTop: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: navBarProps,\n  emits: [\"click-left\", \"click-right\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const navBarRef = ref();\n    const renderPlaceholder = usePlaceholder(navBarRef, bem);\n    const onClickLeft = (event) => emit(\"click-left\", event);\n    const onClickRight = (event) => emit(\"click-right\", event);\n    const renderLeft = () => {\n      if (slots.left) {\n        return slots.left();\n      }\n      return [props.leftArrow && _createVNode(Icon, {\n        \"class\": bem(\"arrow\"),\n        \"name\": \"arrow-left\"\n      }, null), props.leftText && _createVNode(\"span\", {\n        \"class\": bem(\"text\")\n      }, [props.leftText])];\n    };\n    const renderRight = () => {\n      if (slots.right) {\n        return slots.right();\n      }\n      return _createVNode(\"span\", {\n        \"class\": bem(\"text\")\n      }, [props.rightText]);\n    };\n    const renderNavBar = () => {\n      const {\n        title,\n        fixed,\n        border,\n        zIndex\n      } = props;\n      const style = getZIndexStyle(zIndex);\n      const hasLeft = props.leftArrow || props.leftText || slots.left;\n      const hasRight = props.rightText || slots.right;\n      return _createVNode(\"div\", {\n        \"ref\": navBarRef,\n        \"style\": style,\n        \"class\": [bem({\n          fixed,\n          \"safe-area-inset-top\": props.safeAreaInsetTop\n        }), {\n          [BORDER_BOTTOM]: border\n        }]\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"content\")\n      }, [hasLeft && _createVNode(\"div\", {\n        \"class\": [bem(\"left\"), HAPTICS_FEEDBACK],\n        \"onClick\": onClickLeft\n      }, [renderLeft()]), _createVNode(\"div\", {\n        \"class\": [bem(\"title\"), \"van-ellipsis\"]\n      }, [slots.title ? slots.title() : title]), hasRight && _createVNode(\"div\", {\n        \"class\": [bem(\"right\"), HAPTICS_FEEDBACK],\n        \"onClick\": onClickRight\n      }, [renderRight()])])]);\n    };\n    return () => {\n      if (props.fixed && props.placeholder) {\n        return renderPlaceholder(renderNavBar);\n      }\n      return renderNavBar();\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}