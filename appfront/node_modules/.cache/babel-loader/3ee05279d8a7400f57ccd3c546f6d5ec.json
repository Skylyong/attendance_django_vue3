{"ast":null,"code":"import { onBeforeUpdate } from 'vue';\n/**\n * Locker return cached mark.\n * If set to `true`, will return `true` in a short time even if set `false`.\n * If set to `false` and then set to `true`, will change to `true`.\n * And after time duration, it will back to `null` automatically.\n */\n\nexport default function useLock() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 250;\n  var lock = null;\n  var timeout;\n  onBeforeUpdate(function () {\n    window.clearTimeout(timeout);\n  });\n\n  function doLock(locked) {\n    if (locked || lock === null) {\n      lock = locked;\n    }\n\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(function () {\n      lock = null;\n    }, duration);\n  }\n\n  return [function () {\n    return lock;\n  }, doLock];\n}","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/ant-design-vue/es/vc-select/hooks/useLock.js"],"names":["onBeforeUpdate","useLock","duration","arguments","length","undefined","lock","timeout","window","clearTimeout","doLock","locked","setTimeout"],"mappings":"AAAA,SAASA,cAAT,QAA+B,KAA/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,GAAnF;AACA,MAAIG,IAAI,GAAG,IAAX;AACA,MAAIC,OAAJ;AACAP,EAAAA,cAAc,CAAC,YAAY;AACzBQ,IAAAA,MAAM,CAACC,YAAP,CAAoBF,OAApB;AACD,GAFa,CAAd;;AAIA,WAASG,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,QAAIA,MAAM,IAAIL,IAAI,KAAK,IAAvB,EAA6B;AAC3BA,MAAAA,IAAI,GAAGK,MAAP;AACD;;AAEDH,IAAAA,MAAM,CAACC,YAAP,CAAoBF,OAApB;AACAA,IAAAA,OAAO,GAAGC,MAAM,CAACI,UAAP,CAAkB,YAAY;AACtCN,MAAAA,IAAI,GAAG,IAAP;AACD,KAFS,EAEPJ,QAFO,CAAV;AAGD;;AAED,SAAO,CAAC,YAAY;AAClB,WAAOI,IAAP;AACD,GAFM,EAEJI,MAFI,CAAP;AAGD","sourcesContent":["import { onBeforeUpdate } from 'vue';\n/**\n * Locker return cached mark.\n * If set to `true`, will return `true` in a short time even if set `false`.\n * If set to `false` and then set to `true`, will change to `true`.\n * And after time duration, it will back to `null` automatically.\n */\n\nexport default function useLock() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 250;\n  var lock = null;\n  var timeout;\n  onBeforeUpdate(function () {\n    window.clearTimeout(timeout);\n  });\n\n  function doLock(locked) {\n    if (locked || lock === null) {\n      lock = locked;\n    }\n\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(function () {\n      lock = null;\n    }, duration);\n  }\n\n  return [function () {\n    return lock;\n  }, doLock];\n}"]},"metadata":{},"sourceType":"module"}