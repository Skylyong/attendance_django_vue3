{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"progress\");\nconst progressProps = {\n  color: String,\n  inactive: Boolean,\n  pivotText: String,\n  textColor: String,\n  showPivot: truthProp,\n  pivotColor: String,\n  trackColor: String,\n  strokeWidth: numericProp,\n  percentage: {\n    type: numericProp,\n    default: 0,\n    validator: value => value >= 0 && value <= 100\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: progressProps,\n\n  setup(props) {\n    const background = computed(() => props.inactive ? void 0 : props.color);\n\n    const renderPivot = () => {\n      const {\n        textColor,\n        pivotText,\n        pivotColor,\n        percentage\n      } = props;\n      const text = pivotText != null ? pivotText : `${percentage}%`;\n\n      if (props.showPivot && text) {\n        const style = {\n          color: textColor,\n          left: `${+percentage}%`,\n          transform: `translate(-${+percentage}%,-50%)`,\n          background: pivotColor || background.value\n        };\n        return _createVNode(\"span\", {\n          \"style\": style,\n          \"class\": bem(\"pivot\", {\n            inactive: props.inactive\n          })\n        }, [text]);\n      }\n    };\n\n    return () => {\n      const {\n        trackColor,\n        percentage,\n        strokeWidth\n      } = props;\n      const rootStyle = {\n        background: trackColor,\n        height: addUnit(strokeWidth)\n      };\n      const portionStyle = {\n        width: `${percentage}%`,\n        background: background.value\n      };\n      return _createVNode(\"div\", {\n        \"class\": bem(),\n        \"style\": rootStyle\n      }, [_createVNode(\"span\", {\n        \"class\": bem(\"portion\", {\n          inactive: props.inactive\n        }),\n        \"style\": portionStyle\n      }, null), renderPivot()]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/progress/Progress.js"],"names":["createVNode","_createVNode","computed","defineComponent","addUnit","truthProp","numericProp","createNamespace","name","bem","progressProps","color","String","inactive","Boolean","pivotText","textColor","showPivot","pivotColor","trackColor","strokeWidth","percentage","type","default","validator","value","stdin_default","props","setup","background","renderPivot","text","style","left","transform","rootStyle","height","portionStyle","width"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"progress\");\nconst progressProps = {\n  color: String,\n  inactive: Boolean,\n  pivotText: String,\n  textColor: String,\n  showPivot: truthProp,\n  pivotColor: String,\n  trackColor: String,\n  strokeWidth: numericProp,\n  percentage: {\n    type: numericProp,\n    default: 0,\n    validator: (value) => value >= 0 && value <= 100\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: progressProps,\n  setup(props) {\n    const background = computed(() => props.inactive ? void 0 : props.color);\n    const renderPivot = () => {\n      const {\n        textColor,\n        pivotText,\n        pivotColor,\n        percentage\n      } = props;\n      const text = pivotText != null ? pivotText : `${percentage}%`;\n      if (props.showPivot && text) {\n        const style = {\n          color: textColor,\n          left: `${+percentage}%`,\n          transform: `translate(-${+percentage}%,-50%)`,\n          background: pivotColor || background.value\n        };\n        return _createVNode(\"span\", {\n          \"style\": style,\n          \"class\": bem(\"pivot\", {\n            inactive: props.inactive\n          })\n        }, [text]);\n      }\n    };\n    return () => {\n      const {\n        trackColor,\n        percentage,\n        strokeWidth\n      } = props;\n      const rootStyle = {\n        background: trackColor,\n        height: addUnit(strokeWidth)\n      };\n      const portionStyle = {\n        width: `${percentage}%`,\n        background: background.value\n      };\n      return _createVNode(\"div\", {\n        \"class\": bem(),\n        \"style\": rootStyle\n      }, [_createVNode(\"span\", {\n        \"class\": bem(\"portion\", {\n          inactive: props.inactive\n        }),\n        \"style\": portionStyle\n      }, null), renderPivot()]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}