{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { defineComponent, inject } from 'vue';\nimport omit from 'omit.js';\nimport debounce from 'lodash-es/debounce';\nimport FolderOpenOutlined from '@ant-design/icons-vue/FolderOpenOutlined';\nimport FolderOutlined from '@ant-design/icons-vue/FolderOutlined';\nimport FileOutlined from '@ant-design/icons-vue/FileOutlined';\nimport PropTypes from '../_util/vue-types';\nimport classNames from '../_util/classNames';\nimport { conductExpandParent, convertTreeToEntities } from '../vc-tree/src/util';\nimport Tree, { TreeProps } from './Tree';\nimport { calcRangeKeys, getFullKeyList, convertDirectoryKeysToNodes, getFullKeyListByTreeData } from './util';\nimport BaseMixin from '../_util/BaseMixin';\nimport { getOptionProps, getComponent, getSlot } from '../_util/props-util';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { defaultConfigProvider } from '../config-provider';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return _createVNode(FileOutlined, null, null);\n  }\n\n  return expanded ? _createVNode(FolderOpenOutlined, null, null) : _createVNode(FolderOutlined, null, null);\n}\n\nexport default defineComponent({\n  name: 'ADirectoryTree',\n  mixins: [BaseMixin],\n  inheritAttrs: false,\n  props: initDefaultProps(_extends(_extends({}, TreeProps()), {\n    expandAction: PropTypes.oneOf([false, 'click', 'doubleclick', 'dblclick'])\n  }), {\n    showIcon: true,\n    expandAction: 'click'\n  }),\n  setup: function setup() {\n    return {\n      children: null,\n      onDebounceExpand: null,\n      tree: null,\n      lastSelectedKey: '',\n      cachedSelectedKeys: [],\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  data: function data() {\n    var props = getOptionProps(this);\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        expandedKeys = props.expandedKeys,\n        defaultExpandedKeys = props.defaultExpandedKeys;\n    var children = getSlot(this);\n\n    var _convertTreeToEntitie = convertTreeToEntities(children),\n        keyEntities = _convertTreeToEntitie.keyEntities;\n\n    var state = {}; // Selected keys\n\n    state._selectedKeys = props.selectedKeys || props.defaultSelectedKeys || []; // Expanded keys\n\n    if (defaultExpandAll) {\n      if (props.treeData) {\n        state._expandedKeys = getFullKeyListByTreeData(props.treeData, props.replaceFields);\n      } else {\n        state._expandedKeys = getFullKeyList(children);\n      }\n    } else if (defaultExpandParent) {\n      state._expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      state._expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n\n    return _extends({\n      _selectedKeys: [],\n      _expandedKeys: []\n    }, state);\n  },\n  watch: {\n    expandedKeys: function expandedKeys(val) {\n      this.setState({\n        _expandedKeys: val\n      });\n    },\n    selectedKeys: function selectedKeys(val) {\n      this.setState({\n        _selectedKeys: val\n      });\n    }\n  },\n  created: function created() {\n    this.onDebounceExpand = debounce(this.expandFolderNode, 200, {\n      leading: true\n    });\n  },\n  methods: {\n    handleExpand: function handleExpand(expandedKeys, info) {\n      this.setUncontrolledState({\n        _expandedKeys: expandedKeys\n      });\n      this.$emit('update:expandedKeys', expandedKeys);\n      this.$emit('expand', expandedKeys, info);\n      return undefined;\n    },\n    handleClick: function handleClick(event, node) {\n      var expandAction = this.$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        this.onDebounceExpand(event, node);\n      }\n\n      this.$emit('click', event, node);\n    },\n    handleDoubleClick: function handleDoubleClick(event, node) {\n      var expandAction = this.$props.expandAction; // Expand the tree\n\n      if (expandAction === 'dblclick' || expandAction === 'doubleclick') {\n        this.onDebounceExpand(event, node);\n      }\n\n      this.$emit('doubleclick', event, node);\n      this.$emit('dblclick', event, node);\n    },\n    hanldeSelect: function hanldeSelect(keys, event) {\n      var multiple = this.$props.multiple;\n      var children = this.children || [];\n      var _this$$data$_expanded = this.$data._expandedKeys,\n          expandedKeys = _this$$data$_expanded === void 0 ? [] : _this$$data$_expanded;\n      var node = event.node,\n          nativeEvent = event.nativeEvent;\n      var _node$eventKey = node.eventKey,\n          eventKey = _node$eventKey === void 0 ? '' : _node$eventKey;\n      var newState = {}; // We need wrap this event since some value is not same\n\n      var newEvent = _extends(_extends({}, event), {\n        selected: true\n      }); // Windows / Mac single pick\n\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        this.lastSelectedKey = eventKey;\n        this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys, eventKey, this.lastSelectedKey)))));\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        this.lastSelectedKey = eventKey;\n        this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = [event.node];\n      }\n\n      newState._selectedKeys = newSelectedKeys;\n      this.$emit('update:selectedKeys', newSelectedKeys);\n      this.$emit('select', newSelectedKeys, newEvent);\n      this.setUncontrolledState(newState);\n    },\n    setTreeRef: function setTreeRef(node) {\n      this.tree = node;\n    },\n    expandFolderNode: function expandFolderNode(event, node) {\n      var isLeaf = node.isLeaf;\n\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      }\n\n      if (this.tree.tree) {\n        // Get internal vc-tree\n        var internalTree = this.tree.tree; // Call internal rc-tree expand function\n        // https://github.com/ant-design/ant-design/issues/12567\n\n        internalTree.onNodeExpand(event, node);\n      }\n    },\n    setUncontrolledState: function setUncontrolledState(state) {\n      var newState = omit(state, Object.keys(getOptionProps(this)).map(function (p) {\n        return \"_\".concat(p);\n      }));\n\n      if (Object.keys(newState).length) {\n        this.setState(newState);\n      }\n    },\n    handleCheck: function handleCheck(checkedObj, eventObj) {\n      this.$emit('update:checkedKeys', checkedObj);\n      this.$emit('check', checkedObj, eventObj);\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    this.children = getSlot(this);\n\n    var _a = getOptionProps(this),\n        customizePrefixCls = _a.prefixCls,\n        props = __rest(_a, [\"prefixCls\"]);\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('tree', customizePrefixCls);\n    var _this$$data = this.$data,\n        expandedKeys = _this$$data._expandedKeys,\n        selectedKeys = _this$$data._selectedKeys;\n\n    var _b = this.$attrs,\n        className = _b.class,\n        restAttrs = __rest(_b, [\"class\"]);\n\n    var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), className);\n\n    var treeProps = _extends(_extends(_extends({\n      icon: getIcon\n    }, restAttrs), omit(props, ['onUpdate:selectedKeys', 'onUpdate:checkedKeys', 'onUpdate:expandedKeys'])), {\n      prefixCls: prefixCls,\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      switcherIcon: getComponent(this, 'switcherIcon'),\n      ref: this.setTreeRef,\n      class: connectClassName,\n      onSelect: this.hanldeSelect,\n      onClick: this.handleClick,\n      onDblclick: this.handleDoubleClick,\n      onExpand: this.handleExpand,\n      onCheck: this.handleCheck\n    });\n\n    return _createVNode(Tree, treeProps, _objectSpread({\n      default: function _default() {\n        return [_this.children];\n      }\n    }, omit(this.$slots, ['default'])));\n  }\n});","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/tree/DirectoryTree.js"],"names":["_objectSpread","_toConsumableArray","_extends","resolveDirective","_resolveDirective","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineComponent","inject","omit","debounce","FolderOpenOutlined","FolderOutlined","FileOutlined","PropTypes","classNames","conductExpandParent","convertTreeToEntities","Tree","TreeProps","calcRangeKeys","getFullKeyList","convertDirectoryKeysToNodes","getFullKeyListByTreeData","BaseMixin","getOptionProps","getComponent","getSlot","initDefaultProps","defaultConfigProvider","getIcon","props","isLeaf","expanded","name","mixins","inheritAttrs","expandAction","oneOf","showIcon","setup","children","onDebounceExpand","tree","lastSelectedKey","cachedSelectedKeys","configProvider","data","defaultExpandAll","defaultExpandParent","expandedKeys","defaultExpandedKeys","_convertTreeToEntitie","keyEntities","state","_selectedKeys","selectedKeys","defaultSelectedKeys","treeData","_expandedKeys","replaceFields","watch","val","setState","created","expandFolderNode","leading","methods","handleExpand","info","setUncontrolledState","$emit","undefined","handleClick","event","node","$props","handleDoubleClick","hanldeSelect","keys","multiple","_this$$data$_expanded","$data","nativeEvent","_node$eventKey","eventKey","newState","newEvent","selected","ctrlPick","ctrlKey","metaKey","shiftPick","shiftKey","newSelectedKeys","selectedNodes","Array","from","Set","concat","setTreeRef","internalTree","onNodeExpand","map","handleCheck","checkedObj","eventObj","render","_this","_a","customizePrefixCls","prefixCls","getPrefixCls","_this$$data","_b","$attrs","className","class","restAttrs","connectClassName","treeProps","icon","switcherIcon","ref","onSelect","onClick","onDblclick","onExpand","onCheck","default","_default","$slots"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { defineComponent, inject } from 'vue';\nimport omit from 'omit.js';\nimport debounce from 'lodash-es/debounce';\nimport FolderOpenOutlined from '@ant-design/icons-vue/FolderOpenOutlined';\nimport FolderOutlined from '@ant-design/icons-vue/FolderOutlined';\nimport FileOutlined from '@ant-design/icons-vue/FileOutlined';\nimport PropTypes from '../_util/vue-types';\nimport classNames from '../_util/classNames';\nimport { conductExpandParent, convertTreeToEntities } from '../vc-tree/src/util';\nimport Tree, { TreeProps } from './Tree';\nimport { calcRangeKeys, getFullKeyList, convertDirectoryKeysToNodes, getFullKeyListByTreeData } from './util';\nimport BaseMixin from '../_util/BaseMixin';\nimport { getOptionProps, getComponent, getSlot } from '../_util/props-util';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { defaultConfigProvider } from '../config-provider';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return _createVNode(FileOutlined, null, null);\n  }\n\n  return expanded ? _createVNode(FolderOpenOutlined, null, null) : _createVNode(FolderOutlined, null, null);\n}\n\nexport default defineComponent({\n  name: 'ADirectoryTree',\n  mixins: [BaseMixin],\n  inheritAttrs: false,\n  props: initDefaultProps(_extends(_extends({}, TreeProps()), {\n    expandAction: PropTypes.oneOf([false, 'click', 'doubleclick', 'dblclick'])\n  }), {\n    showIcon: true,\n    expandAction: 'click'\n  }),\n  setup: function setup() {\n    return {\n      children: null,\n      onDebounceExpand: null,\n      tree: null,\n      lastSelectedKey: '',\n      cachedSelectedKeys: [],\n      configProvider: inject('configProvider', defaultConfigProvider)\n    };\n  },\n  data: function data() {\n    var props = getOptionProps(this);\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        expandedKeys = props.expandedKeys,\n        defaultExpandedKeys = props.defaultExpandedKeys;\n    var children = getSlot(this);\n\n    var _convertTreeToEntitie = convertTreeToEntities(children),\n        keyEntities = _convertTreeToEntitie.keyEntities;\n\n    var state = {}; // Selected keys\n\n    state._selectedKeys = props.selectedKeys || props.defaultSelectedKeys || []; // Expanded keys\n\n    if (defaultExpandAll) {\n      if (props.treeData) {\n        state._expandedKeys = getFullKeyListByTreeData(props.treeData, props.replaceFields);\n      } else {\n        state._expandedKeys = getFullKeyList(children);\n      }\n    } else if (defaultExpandParent) {\n      state._expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      state._expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n\n    return _extends({\n      _selectedKeys: [],\n      _expandedKeys: []\n    }, state);\n  },\n  watch: {\n    expandedKeys: function expandedKeys(val) {\n      this.setState({\n        _expandedKeys: val\n      });\n    },\n    selectedKeys: function selectedKeys(val) {\n      this.setState({\n        _selectedKeys: val\n      });\n    }\n  },\n  created: function created() {\n    this.onDebounceExpand = debounce(this.expandFolderNode, 200, {\n      leading: true\n    });\n  },\n  methods: {\n    handleExpand: function handleExpand(expandedKeys, info) {\n      this.setUncontrolledState({\n        _expandedKeys: expandedKeys\n      });\n      this.$emit('update:expandedKeys', expandedKeys);\n      this.$emit('expand', expandedKeys, info);\n      return undefined;\n    },\n    handleClick: function handleClick(event, node) {\n      var expandAction = this.$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        this.onDebounceExpand(event, node);\n      }\n\n      this.$emit('click', event, node);\n    },\n    handleDoubleClick: function handleDoubleClick(event, node) {\n      var expandAction = this.$props.expandAction; // Expand the tree\n\n      if (expandAction === 'dblclick' || expandAction === 'doubleclick') {\n        this.onDebounceExpand(event, node);\n      }\n\n      this.$emit('doubleclick', event, node);\n      this.$emit('dblclick', event, node);\n    },\n    hanldeSelect: function hanldeSelect(keys, event) {\n      var multiple = this.$props.multiple;\n      var children = this.children || [];\n      var _this$$data$_expanded = this.$data._expandedKeys,\n          expandedKeys = _this$$data$_expanded === void 0 ? [] : _this$$data$_expanded;\n      var node = event.node,\n          nativeEvent = event.nativeEvent;\n      var _node$eventKey = node.eventKey,\n          eventKey = _node$eventKey === void 0 ? '' : _node$eventKey;\n      var newState = {}; // We need wrap this event since some value is not same\n\n      var newEvent = _extends(_extends({}, event), {\n        selected: true\n      }); // Windows / Mac single pick\n\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        this.lastSelectedKey = eventKey;\n        this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys, eventKey, this.lastSelectedKey)))));\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        this.lastSelectedKey = eventKey;\n        this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = [event.node];\n      }\n\n      newState._selectedKeys = newSelectedKeys;\n      this.$emit('update:selectedKeys', newSelectedKeys);\n      this.$emit('select', newSelectedKeys, newEvent);\n      this.setUncontrolledState(newState);\n    },\n    setTreeRef: function setTreeRef(node) {\n      this.tree = node;\n    },\n    expandFolderNode: function expandFolderNode(event, node) {\n      var isLeaf = node.isLeaf;\n\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      }\n\n      if (this.tree.tree) {\n        // Get internal vc-tree\n        var internalTree = this.tree.tree; // Call internal rc-tree expand function\n        // https://github.com/ant-design/ant-design/issues/12567\n\n        internalTree.onNodeExpand(event, node);\n      }\n    },\n    setUncontrolledState: function setUncontrolledState(state) {\n      var newState = omit(state, Object.keys(getOptionProps(this)).map(function (p) {\n        return \"_\".concat(p);\n      }));\n\n      if (Object.keys(newState).length) {\n        this.setState(newState);\n      }\n    },\n    handleCheck: function handleCheck(checkedObj, eventObj) {\n      this.$emit('update:checkedKeys', checkedObj);\n      this.$emit('check', checkedObj, eventObj);\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    this.children = getSlot(this);\n\n    var _a = getOptionProps(this),\n        customizePrefixCls = _a.prefixCls,\n        props = __rest(_a, [\"prefixCls\"]);\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('tree', customizePrefixCls);\n    var _this$$data = this.$data,\n        expandedKeys = _this$$data._expandedKeys,\n        selectedKeys = _this$$data._selectedKeys;\n\n    var _b = this.$attrs,\n        className = _b.class,\n        restAttrs = __rest(_b, [\"class\"]);\n\n    var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), className);\n\n    var treeProps = _extends(_extends(_extends({\n      icon: getIcon\n    }, restAttrs), omit(props, ['onUpdate:selectedKeys', 'onUpdate:checkedKeys', 'onUpdate:expandedKeys'])), {\n      prefixCls: prefixCls,\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      switcherIcon: getComponent(this, 'switcherIcon'),\n      ref: this.setTreeRef,\n      class: connectClassName,\n      onSelect: this.hanldeSelect,\n      onClick: this.handleClick,\n      onDblclick: this.handleDoubleClick,\n      onExpand: this.handleExpand,\n      onCheck: this.handleCheck\n    });\n\n    return _createVNode(Tree, treeProps, _objectSpread({\n      default: function _default() {\n        return [_this.children];\n      }\n    }, omit(this.$slots, ['default'])));\n  }\n});"]},"metadata":{},"sourceType":"module"}