{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { inject, toRaw } from 'vue';\nimport PropTypes from '../../_util/vue-types';\nimport get from 'lodash-es/get';\nimport classNames from '../../_util/classNames';\nimport { isValidElement } from '../../_util/props-util';\n\nfunction isInvalidRenderCellText(text) {\n  return text && !isValidElement(text) && Object.prototype.toString.call(text) === '[object Object]';\n}\n\nexport default {\n  name: 'TableCell',\n  inheritAttrs: false,\n  props: {\n    record: PropTypes.object,\n    prefixCls: PropTypes.string,\n    index: PropTypes.number,\n    indent: PropTypes.number,\n    indentSize: PropTypes.number,\n    column: PropTypes.object,\n    expandIcon: PropTypes.any,\n    component: PropTypes.any,\n    colIndex: PropTypes.number\n  },\n  setup: function setup() {\n    return {\n      table: inject('table', {}),\n      store: inject('table-store', {})\n    };\n  },\n  methods: {\n    handleClick: function handleClick(e) {\n      var record = this.record,\n          onCellClick = this.column.onCellClick;\n\n      if (onCellClick) {\n        onCellClick(record, e);\n      }\n    }\n  },\n  render: function render() {\n    var _classNames;\n\n    var record = this.record,\n        indentSize = this.indentSize,\n        prefixCls = this.prefixCls,\n        indent = this.indent,\n        index = this.index,\n        expandIcon = this.expandIcon,\n        column = this.column,\n        BodyCell = this.component;\n    var fixedInfoList = this.store.fixedInfoList || [];\n    var fixedInfo = fixedInfoList[this.colIndex] || {};\n    var fixLeft = fixedInfo.fixLeft,\n        fixRight = fixedInfo.fixRight,\n        firstFixLeft = fixedInfo.firstFixLeft,\n        lastFixLeft = fixedInfo.lastFixLeft,\n        firstFixRight = fixedInfo.firstFixRight,\n        lastFixRight = fixedInfo.lastFixRight; // ====================== Fixed =======================\n\n    var fixedStyle = {};\n    var isFixLeft = typeof fixLeft === 'number';\n    var isFixRight = typeof fixRight === 'number';\n\n    if (isFixLeft) {\n      fixedStyle.position = 'sticky';\n      fixedStyle.left = \"\".concat(fixLeft, \"px\");\n    }\n\n    if (isFixRight) {\n      fixedStyle.position = 'sticky';\n      fixedStyle.right = \"\".concat(fixRight, \"px\");\n    }\n\n    var dataIndex = column.dataIndex,\n        customRender = column.customRender,\n        _column$className = column.className,\n        className = _column$className === void 0 ? '' : _column$className;\n    var _this$table = this.table,\n        transformCellText = _this$table.transformCellText,\n        rootPrefixCls = _this$table.prefixCls; // We should return undefined if no dataIndex is specified, but in order to\n    // be compatible with object-path's behavior, we return the record object instead.\n\n    var text;\n\n    if (typeof dataIndex === 'number') {\n      text = get(record, dataIndex);\n    } else if (!dataIndex || dataIndex.length === 0) {\n      text = record;\n    } else {\n      text = get(record, dataIndex);\n    }\n\n    var tdProps = {\n      onClick: this.handleClick\n    };\n    var colSpan;\n    var rowSpan;\n\n    if (customRender) {\n      text = customRender({\n        text: text,\n        record: record,\n        index: index,\n        column: column\n      });\n\n      if (isInvalidRenderCellText(text)) {\n        tdProps = text.props || text.attrs || tdProps;\n        var _tdProps = tdProps;\n        colSpan = _tdProps.colSpan;\n        rowSpan = _tdProps.rowSpan;\n        text = text.children;\n      }\n    }\n\n    if (column.customCell) {\n      tdProps = _extends(_extends({}, tdProps), column.customCell(record, index));\n    } // Fix https://github.com/ant-design/ant-design/issues/1202\n\n\n    if (isInvalidRenderCellText(text)) {\n      text = null;\n    }\n\n    if (transformCellText) {\n      text = transformCellText({\n        text: text,\n        column: column,\n        record: record,\n        index: index\n      });\n    }\n\n    var indentText = expandIcon ? _createVNode(\"span\", {\n      \"style\": {\n        paddingLeft: \"\".concat(indentSize * indent, \"px\")\n      },\n      \"class\": \"\".concat(prefixCls, \"-indent indent-level-\").concat(indent)\n    }, null) : null;\n\n    if (rowSpan === 0 || colSpan === 0) {\n      return null;\n    }\n\n    if (column.align) {\n      tdProps.style = _extends({\n        textAlign: column.align\n      }, tdProps.style);\n    }\n\n    var cellClassName = classNames(className, column.class, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-cell-ellipsis\"), !!column.ellipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-cell-break-word\"), !!column.width), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-left\"), isFixLeft), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-left-first\"), firstFixLeft), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-left-last\"), lastFixLeft), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-right\"), isFixRight), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-right-first\"), firstFixRight), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-right-last\"), lastFixRight), _classNames));\n\n    if (column.ellipsis) {\n      if (typeof text === 'string') {\n        tdProps.title = text;\n      } else if (text) {// const { props: textProps } = text;\n        // if (textProps && textProps.children && typeof textProps.children === 'string') {\n        //   tdProps.attrs.title = textProps.children;\n        // }\n      }\n    }\n\n    return _createVNode(BodyCell, _objectSpread(_objectSpread({\n      \"class\": cellClassName\n    }, tdProps), {}, {\n      style: _extends(_extends({}, tdProps.style || {}), fixedStyle)\n    }), {\n      default: function _default() {\n        return [indentText, expandIcon, toRaw(text)];\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/vc-table/src/TableCell.js"],"names":["_objectSpread","_defineProperty","_extends","createVNode","_createVNode","inject","toRaw","PropTypes","get","classNames","isValidElement","isInvalidRenderCellText","text","Object","prototype","toString","call","name","inheritAttrs","props","record","object","prefixCls","string","index","number","indent","indentSize","column","expandIcon","any","component","colIndex","setup","table","store","methods","handleClick","e","onCellClick","render","_classNames","BodyCell","fixedInfoList","fixedInfo","fixLeft","fixRight","firstFixLeft","lastFixLeft","firstFixRight","lastFixRight","fixedStyle","isFixLeft","isFixRight","position","left","concat","right","dataIndex","customRender","_column$className","className","_this$table","transformCellText","rootPrefixCls","length","tdProps","onClick","colSpan","rowSpan","attrs","_tdProps","children","customCell","indentText","paddingLeft","align","style","textAlign","cellClassName","class","ellipsis","width","title","default","_default"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { inject, toRaw } from 'vue';\nimport PropTypes from '../../_util/vue-types';\nimport get from 'lodash-es/get';\nimport classNames from '../../_util/classNames';\nimport { isValidElement } from '../../_util/props-util';\n\nfunction isInvalidRenderCellText(text) {\n  return text && !isValidElement(text) && Object.prototype.toString.call(text) === '[object Object]';\n}\n\nexport default {\n  name: 'TableCell',\n  inheritAttrs: false,\n  props: {\n    record: PropTypes.object,\n    prefixCls: PropTypes.string,\n    index: PropTypes.number,\n    indent: PropTypes.number,\n    indentSize: PropTypes.number,\n    column: PropTypes.object,\n    expandIcon: PropTypes.any,\n    component: PropTypes.any,\n    colIndex: PropTypes.number\n  },\n  setup: function setup() {\n    return {\n      table: inject('table', {}),\n      store: inject('table-store', {})\n    };\n  },\n  methods: {\n    handleClick: function handleClick(e) {\n      var record = this.record,\n          onCellClick = this.column.onCellClick;\n\n      if (onCellClick) {\n        onCellClick(record, e);\n      }\n    }\n  },\n  render: function render() {\n    var _classNames;\n\n    var record = this.record,\n        indentSize = this.indentSize,\n        prefixCls = this.prefixCls,\n        indent = this.indent,\n        index = this.index,\n        expandIcon = this.expandIcon,\n        column = this.column,\n        BodyCell = this.component;\n    var fixedInfoList = this.store.fixedInfoList || [];\n    var fixedInfo = fixedInfoList[this.colIndex] || {};\n    var fixLeft = fixedInfo.fixLeft,\n        fixRight = fixedInfo.fixRight,\n        firstFixLeft = fixedInfo.firstFixLeft,\n        lastFixLeft = fixedInfo.lastFixLeft,\n        firstFixRight = fixedInfo.firstFixRight,\n        lastFixRight = fixedInfo.lastFixRight; // ====================== Fixed =======================\n\n    var fixedStyle = {};\n    var isFixLeft = typeof fixLeft === 'number';\n    var isFixRight = typeof fixRight === 'number';\n\n    if (isFixLeft) {\n      fixedStyle.position = 'sticky';\n      fixedStyle.left = \"\".concat(fixLeft, \"px\");\n    }\n\n    if (isFixRight) {\n      fixedStyle.position = 'sticky';\n      fixedStyle.right = \"\".concat(fixRight, \"px\");\n    }\n\n    var dataIndex = column.dataIndex,\n        customRender = column.customRender,\n        _column$className = column.className,\n        className = _column$className === void 0 ? '' : _column$className;\n    var _this$table = this.table,\n        transformCellText = _this$table.transformCellText,\n        rootPrefixCls = _this$table.prefixCls; // We should return undefined if no dataIndex is specified, but in order to\n    // be compatible with object-path's behavior, we return the record object instead.\n\n    var text;\n\n    if (typeof dataIndex === 'number') {\n      text = get(record, dataIndex);\n    } else if (!dataIndex || dataIndex.length === 0) {\n      text = record;\n    } else {\n      text = get(record, dataIndex);\n    }\n\n    var tdProps = {\n      onClick: this.handleClick\n    };\n    var colSpan;\n    var rowSpan;\n\n    if (customRender) {\n      text = customRender({\n        text: text,\n        record: record,\n        index: index,\n        column: column\n      });\n\n      if (isInvalidRenderCellText(text)) {\n        tdProps = text.props || text.attrs || tdProps;\n        var _tdProps = tdProps;\n        colSpan = _tdProps.colSpan;\n        rowSpan = _tdProps.rowSpan;\n        text = text.children;\n      }\n    }\n\n    if (column.customCell) {\n      tdProps = _extends(_extends({}, tdProps), column.customCell(record, index));\n    } // Fix https://github.com/ant-design/ant-design/issues/1202\n\n\n    if (isInvalidRenderCellText(text)) {\n      text = null;\n    }\n\n    if (transformCellText) {\n      text = transformCellText({\n        text: text,\n        column: column,\n        record: record,\n        index: index\n      });\n    }\n\n    var indentText = expandIcon ? _createVNode(\"span\", {\n      \"style\": {\n        paddingLeft: \"\".concat(indentSize * indent, \"px\")\n      },\n      \"class\": \"\".concat(prefixCls, \"-indent indent-level-\").concat(indent)\n    }, null) : null;\n\n    if (rowSpan === 0 || colSpan === 0) {\n      return null;\n    }\n\n    if (column.align) {\n      tdProps.style = _extends({\n        textAlign: column.align\n      }, tdProps.style);\n    }\n\n    var cellClassName = classNames(className, column.class, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-cell-ellipsis\"), !!column.ellipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-cell-break-word\"), !!column.width), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-left\"), isFixLeft), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-left-first\"), firstFixLeft), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-left-last\"), lastFixLeft), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-right\"), isFixRight), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-right-first\"), firstFixRight), _defineProperty(_classNames, \"\".concat(rootPrefixCls, \"-cell-fix-right-last\"), lastFixRight), _classNames));\n\n    if (column.ellipsis) {\n      if (typeof text === 'string') {\n        tdProps.title = text;\n      } else if (text) {// const { props: textProps } = text;\n        // if (textProps && textProps.children && typeof textProps.children === 'string') {\n        //   tdProps.attrs.title = textProps.children;\n        // }\n      }\n    }\n\n    return _createVNode(BodyCell, _objectSpread(_objectSpread({\n      \"class\": cellClassName\n    }, tdProps), {}, {\n      style: _extends(_extends({}, tdProps.style || {}), fixedStyle)\n    }), {\n      default: function _default() {\n        return [indentText, expandIcon, toRaw(text)];\n      }\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}