{"ast":null,"code":"function onCompositionStart(e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd(e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) return;\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger(el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\nexport function addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nvar antInput = {\n  created: function created(el, binding) {\n    if (!binding.modifiers || !binding.modifiers.lazy) {\n      addEventListener(el, 'compositionstart', onCompositionStart);\n      addEventListener(el, 'compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when\n      // switching focus before confirming composition choice\n      // this also fixes the issue where some browsers e.g. iOS Chrome\n      // fires \"change\" instead of \"input\" on autocomplete.\n\n      addEventListener(el, 'change', onCompositionEnd);\n    }\n  }\n};\nexport default antInput;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/node_modules/ant-design-vue/es/_util/antInputDirective.js"],"names":["onCompositionStart","e","target","composing","onCompositionEnd","trigger","el","type","document","createEvent","initEvent","dispatchEvent","addEventListener","event","handler","options","antInput","created","binding","modifiers","lazy"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7BA,EAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,GAAqB,IAArB;AACD;;AAED,SAASC,gBAAT,CAA0BH,CAA1B,EAA6B;AAC3B;AACA,MAAI,CAACA,CAAC,CAACC,MAAF,CAASC,SAAd,EAAyB;AACzBF,EAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,GAAqB,KAArB;AACAE,EAAAA,OAAO,CAACJ,CAAC,CAACC,MAAH,EAAW,OAAX,CAAP;AACD;;AAED,SAASG,OAAT,CAAiBC,EAAjB,EAAqBC,IAArB,EAA2B;AACzB,MAAIN,CAAC,GAAGO,QAAQ,CAACC,WAAT,CAAqB,YAArB,CAAR;AACAR,EAAAA,CAAC,CAACS,SAAF,CAAYH,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB;AACAD,EAAAA,EAAE,CAACK,aAAH,CAAiBV,CAAjB;AACD;;AAED,OAAO,SAASW,gBAAT,CAA0BN,EAA1B,EAA8BO,KAA9B,EAAqCC,OAArC,EAA8CC,OAA9C,EAAuD;AAC5DT,EAAAA,EAAE,CAACM,gBAAH,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,OAApC;AACD;AACD,IAAIC,QAAQ,GAAG;AACbC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBX,EAAjB,EAAqBY,OAArB,EAA8B;AACrC,QAAI,CAACA,OAAO,CAACC,SAAT,IAAsB,CAACD,OAAO,CAACC,SAAR,CAAkBC,IAA7C,EAAmD;AACjDR,MAAAA,gBAAgB,CAACN,EAAD,EAAK,kBAAL,EAAyBN,kBAAzB,CAAhB;AACAY,MAAAA,gBAAgB,CAACN,EAAD,EAAK,gBAAL,EAAuBF,gBAAvB,CAAhB,CAFiD,CAES;AAC1D;AACA;AACA;;AAEAQ,MAAAA,gBAAgB,CAACN,EAAD,EAAK,QAAL,EAAeF,gBAAf,CAAhB;AACD;AACF;AAXY,CAAf;AAaA,eAAeY,QAAf","sourcesContent":["function onCompositionStart(e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd(e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) return;\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger(el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\nexport function addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nvar antInput = {\n  created: function created(el, binding) {\n    if (!binding.modifiers || !binding.modifiers.lazy) {\n      addEventListener(el, 'compositionstart', onCompositionStart);\n      addEventListener(el, 'compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when\n      // switching focus before confirming composition choice\n      // this also fixes the issue where some browsers e.g. iOS Chrome\n      // fires \"change\" instead of \"input\" on autocomplete.\n\n      addEventListener(el, 'change', onCompositionEnd);\n    }\n  }\n};\nexport default antInput;"]},"metadata":{},"sourceType":"module"}