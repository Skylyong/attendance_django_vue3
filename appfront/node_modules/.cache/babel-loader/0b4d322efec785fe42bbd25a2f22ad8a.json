{"ast":null,"code":"import { defineComponent, ref } from 'vue';\nimport { getworkerApplyHistory } from '../../api/api.js';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'userId',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'Jim',\n    value: 'Jim'\n  }, {\n    text: 'Submenu',\n    value: 'Submenu',\n    children: [{\n      text: 'Green',\n      value: 'Green'\n    }, {\n      text: 'Black',\n      value: 'Black'\n    }]\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['descend']\n}, {\n  title: 'Age',\n  dataIndex: 'id',\n  defaultSortOrder: 'descend',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London'\n  }, {\n    text: 'New York',\n    value: 'New York'\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: ['descend', 'ascend']\n}]; // const data = [{\n//   key: '',\n//   name: 'John Brown',\n//   age: 32,\n//   address: 'New York No. 1 Lake Park',\n// }, {\n//   key: '',\n//   name: 'Jim Green',\n//   age: 42,\n//   address: 'London No. 1 Lake Park',\n// }, {\n//   key: '',\n//   name: 'Joe Black',\n//   age: 32,\n//   address: 'Sidney No. 1 Lake Park',\n// }, {\n//   key: '',\n//   name: 'Jim Red',\n//   age: 32,\n//   address: 'London No. 2 Lake Park',\n// }];\n\nlet data = [];\nexport default defineComponent({\n  setup() {\n    let data1 = ref();\n\n    const onChange = (pagination, filters, sorter) => {\n      console.log('params', pagination, filters, sorter);\n    };\n\n    getworkerApplyHistory(2).then(response => {\n      if (response['code'] == 1) {\n        //    data.value = \n        data = response['data'];\n        console.log(data);\n      }\n    });\n    return {\n      data,\n      columns,\n      onChange\n    };\n  }\n\n});","map":{"version":3,"mappings":"AASA,SAASA,eAAT,EAA0BC,GAA1B,QAAqC,KAArC;AACA,SAAOC,qBAAP,QAAmC,kBAAnC;AACA,MAAMC,OAAM,GAAI,CAEZ;AACFC,OAAK,EAAE,MADL;AAEFC,WAAS,EAAE,QAFT;AAGFC,SAAO,EAAE,CAAC;AACRC,QAAI,EAAE,KADE;AAERC,SAAK,EAAE;AAFC,GAAD,EAGN;AACDD,QAAI,EAAE,KADL;AAEDC,SAAK,EAAE;AAFN,GAHM,EAOT;AACED,QAAI,EAAE,SADR;AAEEC,SAAK,EAAE,SAFT;AAGEC,YAAQ,EAAE,CAAC;AACTF,UAAI,EAAE,OADG;AAETC,WAAK,EAAE;AAFE,KAAD,EAGP;AACDD,UAAI,EAAE,OADL;AAEDC,WAAK,EAAE;AAFN,KAHO;AAHZ,GAPS,CAHP;AAqBF;AACA;AACAE,UAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBL,KAApB,MAA+B,CAvB1D;AAwBFM,QAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,CAAOK,MAAP,GAAgBD,CAAC,CAACJ,IAAF,CAAOK,MAxBvC;AAyBFC,gBAAc,EAAE,CAAC,SAAD;AAzBd,CAFY,EA8BhB;AACEd,OAAK,EAAE,KADT;AAEEC,WAAS,EAAE,IAFb;AAGEc,kBAAgB,EAAE,SAHpB;AAIEL,QAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,GAAF,GAAQJ,CAAC,CAACI;AAJ9B,CA9BgB,EAsChB;AACEhB,OAAK,EAAE,SADT;AAEEC,WAAS,EAAE,SAFb;AAGEC,SAAO,EAAE,CAAC;AACRC,QAAI,EAAE,QADE;AAERC,SAAK,EAAE;AAFC,GAAD,EAGN;AACDD,QAAI,EAAE,UADL;AAEDC,SAAK,EAAE;AAFN,GAHM,CAHX;AAUEa,gBAAc,EAAE,KAVlB;AAWEX,UAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACW,OAAP,CAAeT,OAAf,CAAuBL,KAAvB,MAAkC,CAXjE;AAYEM,QAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,OAAF,CAAUL,MAAV,GAAmBD,CAAC,CAACM,OAAF,CAAUL,MAZjD;AAaEC,gBAAc,EAAE,CAAC,SAAD,EAAY,QAAZ;AAblB,CAtCgB,CAAhB,C,CA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIK,IAAG,GAAI,EAAX;AAGA,eAAevB,eAAe,CAAC;AAC7BwB,OAAK,GAAG;AACJ,QAAIC,KAAI,GAAIxB,GAAG,EAAf;;AAEF,UAAMyB,QAAO,GAAI,CAACC,UAAD,EAAarB,OAAb,EAAsBQ,MAAtB,KAAiC;AAChDc,aAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,UAAtB,EAAkCrB,OAAlC,EAA2CQ,MAA3C;AACD,KAFD;;AAMAZ,yBAAqB,CAAC,CAAD,CAArB,CAAyB4B,IAAzB,CACGC,QAAO,IAAI;AACT,UAAIA,QAAQ,CAAC,MAAD,CAAR,IAAoB,CAAxB,EAA0B;AAC3B;AACAR,YAAG,GAAIQ,QAAQ,CAAC,MAAD,CAAf;AACAH,eAAO,CAACC,GAAR,CAAYN,IAAZ;AACC;AAEF,KARH;AAeA,WAAO;AACLA,UADK;AAELpB,aAFK;AAGLuB;AAHK,KAAP;AAKD;;AA9B4B,CAAD,CAA9B","names":["defineComponent","ref","getworkerApplyHistory","columns","title","dataIndex","filters","text","value","children","onFilter","record","name","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","age","filterMultiple","address","data","setup","data1","onChange","pagination","console","log","then","response"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/worker/workerApplyHistory.vue"],"sourcesContent":["<template>\n  <a-table :columns=\"columns\" :data-source=\"data\" @change=\"onChange\" />\n</template>\n\n\n\n\n\n<script>\nimport { defineComponent, ref } from 'vue';\nimport{getworkerApplyHistory} from '../../api/api.js'\nconst columns = [\n    \n    {\n  title: 'Name',\n  dataIndex: 'userId',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe',\n  }, {\n    text: 'Jim',\n    value: 'Jim',\n  }, \n  {\n    text: 'Submenu',\n    value: 'Submenu',\n    children: [{\n      text: 'Green',\n      value: 'Green',\n    }, {\n      text: 'Black',\n      value: 'Black',\n    }],\n  }],\n  // specify the condition of filtering result\n  // here is that finding the name started with `value`\n  onFilter: (value, record) => record.name.indexOf(value) === 0,\n  sorter: (a, b) => a.name.length - b.name.length,\n  sortDirections: ['descend'],\n}, \n\n{\n  title: 'Age',\n  dataIndex: 'id',\n  defaultSortOrder: 'descend',\n  sorter: (a, b) => a.age - b.age,\n},\n\n\n{\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London',\n  }, {\n    text: 'New York',\n    value: 'New York',\n  }],\n  filterMultiple: false,\n  onFilter: (value, record) => record.address.indexOf(value) === 0,\n  sorter: (a, b) => a.address.length - b.address.length,\n  sortDirections: ['descend', 'ascend'],\n}];\n\n\n\n\n\n\n\n// const data = [{\n//   key: '',\n//   name: 'John Brown',\n//   age: 32,\n//   address: 'New York No. 1 Lake Park',\n// }, {\n//   key: '',\n//   name: 'Jim Green',\n//   age: 42,\n//   address: 'London No. 1 Lake Park',\n// }, {\n//   key: '',\n//   name: 'Joe Black',\n//   age: 32,\n//   address: 'Sidney No. 1 Lake Park',\n// }, {\n//   key: '',\n//   name: 'Jim Red',\n//   age: 32,\n//   address: 'London No. 2 Lake Park',\n// }];\nlet data = []\n\n\nexport default defineComponent({\n  setup() {\n      let data1 = ref()\n     \n    const onChange = (pagination, filters, sorter) => {\n      console.log('params', pagination, filters, sorter);\n    };\n\n\n\n    getworkerApplyHistory(2).then (\n       response =>{\n         if (response['code'] == 1){\n        //    data.value = \n        data = response['data']\n        console.log(data)\n         }\n       \n       }\n       \n       )\n\n\n\n\n    return {\n      data,\n      columns,\n      onChange,\n    };\n  },\n\n});\n</script>"]},"metadata":{},"sourceType":"module"}