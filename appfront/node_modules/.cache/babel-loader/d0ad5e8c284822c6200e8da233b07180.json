{"ast":null,"code":"import { defineComponent, ref } from 'vue';\nexport default defineComponent({\n  components: {\n    CheckOutlined,\n    EditOutlined\n  },\n\n  setup() {\n    const handleTableChange = (pag, filters, sorter) => {\n      run({\n        results: pag.pageSize,\n        page: pag?.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    };\n\n    const editableData = reactive({});\n\n    const edit = key => {\n      editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n    };\n\n    let dataSource = ref();\n    let getid = localStorage.getItem(\"Userid\");\n    getworkerApplyHistory(getid).then(response => {\n      if (response['code'] == 1) {\n        //    data.value = \n        dataSource.value = response['data'];\n      }\n    });\n\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n\n    const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    return {\n      dataSource,\n      editableData,\n      save,\n      onDelete,\n      // pagination,\n      // loading,\n      columns,\n      handleTableChange\n    };\n  }\n\n}); // import{getworkerMessage} from '../../api/api.js'\n// import { defineComponent, ref } from 'vue';\n// export default defineComponent({\n//       setup() {\n//           let workerName = ref()\n//           let getid = localStorage.getItem(\"Userid\")\n//         getworkerMessage(getid).then (\n//        response =>{\n//          if (response['code'] == 1){\n//              console.log('1111111111',response['data'])\n//         workerName.value = response['data']\n//          }\n//        }\n//        )\n//           return {\n//               workerName\n//           };\n//       },\n// });","map":{"version":3,"mappings":"AAsCA,SAASA,eAAT,EAAyBC,GAAzB,QAAoC,KAApC;AAGA,eAAeD,eAAe,CAAC;AAC5BE,YAAU,EAAE;AACXC,iBADW;AAEXC;AAFW,GADgB;;AAK7BC,OAAK,GAAG;AAEN,UAAMC,iBAAgB,GAAI,CAACC,GAAD,EAAMC,OAAN,EAAeC,MAAf,KAA0B;AAClDC,SAAG,CAAC;AACFC,eAAO,EAAEJ,GAAG,CAACK,QADX;AAEFC,YAAI,EAAEN,GAAG,EAAEO,OAFT;AAGFC,iBAAS,EAAEN,MAAM,CAACO,KAHhB;AAIFC,iBAAS,EAAER,MAAM,CAACS,KAJhB;AAKF,WAAGV;AALD,OAAD,CAAH;AAOD,KARD;;AASG,UAAMW,YAAW,GAAIC,QAAQ,CAAC,EAAD,CAA7B;;AACC,UAAMC,IAAG,GAAIC,GAAE,IAAK;AACtBH,kBAAY,CAACG,GAAD,CAAZ,GAAoBC,SAAS,CAACC,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAG,IAAKL,GAAE,KAAMK,IAAI,CAACL,GAA7C,EAAkD,CAAlD,CAAD,CAA7B;AACD,KAFG;;AAIJ,QAAIE,UAAS,GAAIvB,GAAG,EAApB;AAEJ,QAAI2B,KAAI,GAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AACIC,yBAAqB,CAACH,KAAD,CAArB,CAA6BI,IAA7B,CACGC,QAAO,IAAI;AACT,UAAIA,QAAQ,CAAC,MAAD,CAAR,IAAoB,CAAxB,EAA0B;AAC3B;AACAT,kBAAU,CAACC,KAAX,GAAmBQ,QAAQ,CAAC,MAAD,CAA3B;AAEC;AAEF,KARH;;AAWH,UAAMC,IAAG,GAAIZ,GAAE,IAAK;AACfa,YAAM,CAACC,MAAP,CAAcZ,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAG,IAAKL,GAAE,KAAMK,IAAI,CAACL,GAA7C,EAAkD,CAAlD,CAAd,EAAoEH,YAAY,CAACG,GAAD,CAAhF;AACA,aAAOH,YAAY,CAACG,GAAD,CAAnB;AACD,KAHJ;;AAIC,UAAMe,QAAO,GAAIf,GAAE,IAAK;AACpBE,gBAAU,CAACC,KAAX,GAAmBD,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAG,IAAKA,IAAI,CAACL,GAAL,KAAaA,GAA7C,CAAnB;AACD,KAFH;;AAIE,WAAO;AACLE,gBADK;AAELL,kBAFK;AAGLe,UAHK;AAILG,cAJK;AAKL;AACA;AACAC,aAPK;AAQLhC;AARK,KAAP;AAUD;;AArD4B,CAAD,CAA9B,C,CA8EA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","names":["defineComponent","ref","components","CheckOutlined","EditOutlined","setup","handleTableChange","pag","filters","sorter","run","results","pageSize","page","current","sortField","field","sortOrder","order","editableData","reactive","edit","key","cloneDeep","dataSource","value","filter","item","getid","localStorage","getItem","getworkerApplyHistory","then","response","save","Object","assign","onDelete","columns"],"sourceRoot":"","sources":["/Users/lyong/Desktop/myproj/appfront/src/components/worker/workerAccount.vue"],"sourcesContent":["\n<template>\n  <a-descriptions title=\"个人信息\" bordered>\n    <a-descriptions-item label=\"Product\">Cloud Database</a-descriptions-item>\n    <a-descriptions-item label=\"Billing Mode\">Prepaid</a-descriptions-item>\n    <a-descriptions-item label=\"Automatic Renewal\">YES</a-descriptions-item>\n    <a-descriptions-item label=\"Order time\">2018-04-24 18:00:00</a-descriptions-item>\n    <a-descriptions-item label=\"Usage Time\" :span=\"2\">2019-04-24 18:00:00</a-descriptions-item>\n    <a-descriptions-item label=\"Status\" :span=\"3\">\n      <a-badge status=\"processing\" text=\"Running\" />\n    </a-descriptions-item>\n    <a-descriptions-item label=\"Negotiated Amount\">$80.00</a-descriptions-item>\n    <a-descriptions-item label=\"Discount\">$20.00</a-descriptions-item>\n    <a-descriptions-item label=\"Official Receipts\">$60.00</a-descriptions-item>\n    <a-descriptions-item label=\"Config Info\">\n      Data disk type: MongoDB\n      <br />\n      Database version: 3.4\n      <br />\n      Package: dds.mongo.mid\n      <br />\n      Storage space: 10 GB\n      <br />\n      Replication factor: 3\n      <br />\n      Region: East China 1\n      <br />\n    </a-descriptions-item>\n  </a-descriptions>\n</template>\n\n <script>\n\n\n\n\n\n\nimport { defineComponent,ref } from 'vue';\n\n\nexport default defineComponent({\n   components: {\n    CheckOutlined,\n    EditOutlined,\n  },\n  setup() {\n\n    const handleTableChange = (pag, filters, sorter) => {\n      run({\n        results: pag.pageSize,\n        page: pag?.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters,\n      });\n    };\n       const editableData = reactive({});\n        const edit = key => {\n      editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n    };\n\n    let dataSource = ref()\n\nlet getid = localStorage.getItem(\"Userid\");\n    getworkerApplyHistory(getid).then (\n       response =>{\n         if (response['code'] == 1){\n        //    data.value = \n        dataSource.value = response['data']\n        \n         }\n       \n       }\n       \n       )\n const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n  const onDelete = key => {\n      dataSource.value = dataSource.value.filter(item => item.key !== key);\n    };\n\n    return {\n      dataSource,\n      editableData,\n      save,\n      onDelete,\n      // pagination,\n      // loading,\n      columns,\n      handleTableChange,\n    };\n  },\n\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import{getworkerMessage} from '../../api/api.js'\n// import { defineComponent, ref } from 'vue';\n// export default defineComponent({\n\n//       setup() {\n//           let workerName = ref()\n//           let getid = localStorage.getItem(\"Userid\")\n//         getworkerMessage(getid).then (\n//        response =>{\n//          if (response['code'] == 1){\n//              console.log('1111111111',response['data'])\n//         workerName.value = response['data']\n        \n//          }\n       \n//        }\n//        )\n\n//           return {\n//               workerName\n//           };\n//       },\n// });\n\n \n\n    </script>"]},"metadata":{},"sourceType":"module"}