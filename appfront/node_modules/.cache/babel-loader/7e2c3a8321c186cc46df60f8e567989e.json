{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, computed, defineComponent } from \"vue\";\nimport { clamp, addUnit, addNumber, numericProp, getSizeStyle, preventDefault, stopPropagation, createNamespace, makeNumericProp } from \"../utils\";\nimport { useRect, useCustomFieldValue } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nconst [name, bem] = createNamespace(\"slider\");\nconst sliderProps = {\n  min: makeNumericProp(0),\n  max: makeNumericProp(100),\n  step: makeNumericProp(1),\n  range: Boolean,\n  reverse: Boolean,\n  disabled: Boolean,\n  readonly: Boolean,\n  vertical: Boolean,\n  barHeight: numericProp,\n  buttonSize: numericProp,\n  activeColor: String,\n  inactiveColor: String,\n  modelValue: {\n    type: [Number, Array],\n    default: 0\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: sliderProps,\n  emits: [\"change\", \"drag-end\", \"drag-start\", \"update:modelValue\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let buttonIndex;\n    let current;\n    let startValue;\n    const root = ref();\n    const dragStatus = ref();\n    const touch = useTouch();\n    const scope = computed(() => Number(props.max) - Number(props.min));\n    const wrapperStyle = computed(() => {\n      const crossAxis = props.vertical ? \"width\" : \"height\";\n      return {\n        background: props.inactiveColor,\n        [crossAxis]: addUnit(props.barHeight)\n      };\n    });\n\n    const isRange = val => props.range && Array.isArray(val);\n\n    const calcMainAxis = () => {\n      const {\n        modelValue,\n        min\n      } = props;\n\n      if (isRange(modelValue)) {\n        return `${(modelValue[1] - modelValue[0]) * 100 / scope.value}%`;\n      }\n\n      return `${(modelValue - Number(min)) * 100 / scope.value}%`;\n    };\n\n    const calcOffset = () => {\n      const {\n        modelValue,\n        min\n      } = props;\n\n      if (isRange(modelValue)) {\n        return `${(modelValue[0] - Number(min)) * 100 / scope.value}%`;\n      }\n\n      return \"0%\";\n    };\n\n    const barStyle = computed(() => {\n      const mainAxis = props.vertical ? \"height\" : \"width\";\n      const style = {\n        [mainAxis]: calcMainAxis(),\n        background: props.activeColor\n      };\n\n      if (dragStatus.value) {\n        style.transition = \"none\";\n      }\n\n      const getPositionKey = () => {\n        if (props.vertical) {\n          return props.reverse ? \"bottom\" : \"top\";\n        }\n\n        return props.reverse ? \"right\" : \"left\";\n      };\n\n      style[getPositionKey()] = calcOffset();\n      return style;\n    });\n\n    const format = value => {\n      const min = +props.min;\n      const max = +props.max;\n      const step = +props.step;\n      value = clamp(value, min, max);\n      const diff = Math.round((value - min) / step) * step;\n      return addNumber(min, diff);\n    };\n\n    const isSameValue = (newValue, oldValue) => JSON.stringify(newValue) === JSON.stringify(oldValue);\n\n    const handleRangeValue = value => {\n      var _a, _b;\n\n      const left = (_a = value[0]) != null ? _a : Number(props.min);\n      const right = (_b = value[1]) != null ? _b : Number(props.max);\n      return left > right ? [right, left] : [left, right];\n    };\n\n    const updateValue = (value, end) => {\n      if (isRange(value)) {\n        value = handleRangeValue(value).map(format);\n      } else {\n        value = format(value);\n      }\n\n      if (!isSameValue(value, props.modelValue)) {\n        emit(\"update:modelValue\", value);\n      }\n\n      if (end && !isSameValue(value, startValue)) {\n        emit(\"change\", value);\n      }\n    };\n\n    const onClick = event => {\n      event.stopPropagation();\n\n      if (props.disabled || props.readonly) {\n        return;\n      }\n\n      const {\n        min,\n        reverse,\n        vertical,\n        modelValue\n      } = props;\n      const rect = useRect(root);\n\n      const getDelta = () => {\n        if (vertical) {\n          if (reverse) {\n            return rect.bottom - event.clientY;\n          }\n\n          return event.clientY - rect.top;\n        }\n\n        if (reverse) {\n          return rect.right - event.clientX;\n        }\n\n        return event.clientX - rect.left;\n      };\n\n      const total = vertical ? rect.height : rect.width;\n      const value = Number(min) + getDelta() / total * scope.value;\n\n      if (isRange(modelValue)) {\n        const [left, right] = modelValue;\n        const middle = (left + right) / 2;\n\n        if (value <= middle) {\n          updateValue([value, right], true);\n        } else {\n          updateValue([left, value], true);\n        }\n      } else {\n        updateValue(value, true);\n      }\n    };\n\n    const onTouchStart = event => {\n      if (props.disabled || props.readonly) {\n        return;\n      }\n\n      touch.start(event);\n      current = props.modelValue;\n\n      if (isRange(current)) {\n        startValue = current.map(format);\n      } else {\n        startValue = format(current);\n      }\n\n      dragStatus.value = \"start\";\n    };\n\n    const onTouchMove = event => {\n      if (props.disabled || props.readonly) {\n        return;\n      }\n\n      if (dragStatus.value === \"start\") {\n        emit(\"drag-start\", event);\n      }\n\n      preventDefault(event, true);\n      touch.move(event);\n      dragStatus.value = \"dragging\";\n      const rect = useRect(root);\n      const delta = props.vertical ? touch.deltaY.value : touch.deltaX.value;\n      const total = props.vertical ? rect.height : rect.width;\n      let diff = delta / total * scope.value;\n\n      if (props.reverse) {\n        diff = -diff;\n      }\n\n      if (isRange(startValue)) {\n        const index = props.reverse ? 1 - buttonIndex : buttonIndex;\n        current[index] = startValue[index] + diff;\n      } else {\n        current = startValue + diff;\n      }\n\n      updateValue(current);\n    };\n\n    const onTouchEnd = event => {\n      if (props.disabled || props.readonly) {\n        return;\n      }\n\n      if (dragStatus.value === \"dragging\") {\n        updateValue(current, true);\n        emit(\"drag-end\", event);\n      }\n\n      dragStatus.value = \"\";\n    };\n\n    const getButtonClassName = index => {\n      if (typeof index === \"number\") {\n        const position = [\"left\", \"right\"];\n        return bem(`button-wrapper`, position[index]);\n      }\n\n      return bem(\"button-wrapper\", props.reverse ? \"left\" : \"right\");\n    };\n\n    const renderButtonContent = (value, index) => {\n      if (typeof index === \"number\") {\n        const slot = slots[index === 0 ? \"left-button\" : \"right-button\"];\n\n        if (slot) {\n          return slot({\n            value\n          });\n        }\n      }\n\n      if (slots.button) {\n        return slots.button({\n          value\n        });\n      }\n\n      return _createVNode(\"div\", {\n        \"class\": bem(\"button\"),\n        \"style\": getSizeStyle(props.buttonSize)\n      }, null);\n    };\n\n    const renderButton = index => {\n      const current2 = typeof index === \"number\" ? props.modelValue[index] : props.modelValue;\n      return _createVNode(\"div\", {\n        \"role\": \"slider\",\n        \"class\": getButtonClassName(index),\n        \"tabindex\": props.disabled ? void 0 : 0,\n        \"aria-valuemin\": props.min,\n        \"aria-valuenow\": current2,\n        \"aria-valuemax\": props.max,\n        \"aria-disabled\": props.disabled || void 0,\n        \"aria-readonly\": props.readonly || void 0,\n        \"aria-orientation\": props.vertical ? \"vertical\" : \"horizontal\",\n        \"onTouchstart\": event => {\n          if (typeof index === \"number\") {\n            buttonIndex = index;\n          }\n\n          onTouchStart(event);\n        },\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd,\n        \"onClick\": stopPropagation\n      }, [renderButtonContent(current2, index)]);\n    };\n\n    updateValue(props.modelValue);\n    useCustomFieldValue(() => props.modelValue);\n    return () => _createVNode(\"div\", {\n      \"ref\": root,\n      \"style\": wrapperStyle.value,\n      \"class\": bem({\n        vertical: props.vertical,\n        disabled: props.disabled\n      }),\n      \"onClick\": onClick\n    }, [_createVNode(\"div\", {\n      \"class\": bem(\"bar\"),\n      \"style\": barStyle.value\n    }, [props.range ? [renderButton(0), renderButton(1)] : renderButton()])]);\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vant/es/slider/Slider.js"],"names":["createVNode","_createVNode","ref","computed","defineComponent","clamp","addUnit","addNumber","numericProp","getSizeStyle","preventDefault","stopPropagation","createNamespace","makeNumericProp","useRect","useCustomFieldValue","useTouch","name","bem","sliderProps","min","max","step","range","Boolean","reverse","disabled","readonly","vertical","barHeight","buttonSize","activeColor","String","inactiveColor","modelValue","type","Number","Array","default","stdin_default","props","emits","setup","emit","slots","buttonIndex","current","startValue","root","dragStatus","touch","scope","wrapperStyle","crossAxis","background","isRange","val","isArray","calcMainAxis","value","calcOffset","barStyle","mainAxis","style","transition","getPositionKey","format","diff","Math","round","isSameValue","newValue","oldValue","JSON","stringify","handleRangeValue","_a","_b","left","right","updateValue","end","map","onClick","event","rect","getDelta","bottom","clientY","top","clientX","total","height","width","middle","onTouchStart","start","onTouchMove","move","delta","deltaY","deltaX","index","onTouchEnd","getButtonClassName","position","renderButtonContent","slot","button","renderButton","current2"],"mappings":"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","sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, computed, defineComponent } from \"vue\";\nimport { clamp, addUnit, addNumber, numericProp, getSizeStyle, preventDefault, stopPropagation, createNamespace, makeNumericProp } from \"../utils\";\nimport { useRect, useCustomFieldValue } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nconst [name, bem] = createNamespace(\"slider\");\nconst sliderProps = {\n  min: makeNumericProp(0),\n  max: makeNumericProp(100),\n  step: makeNumericProp(1),\n  range: Boolean,\n  reverse: Boolean,\n  disabled: Boolean,\n  readonly: Boolean,\n  vertical: Boolean,\n  barHeight: numericProp,\n  buttonSize: numericProp,\n  activeColor: String,\n  inactiveColor: String,\n  modelValue: {\n    type: [Number, Array],\n    default: 0\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: sliderProps,\n  emits: [\"change\", \"drag-end\", \"drag-start\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let buttonIndex;\n    let current;\n    let startValue;\n    const root = ref();\n    const dragStatus = ref();\n    const touch = useTouch();\n    const scope = computed(() => Number(props.max) - Number(props.min));\n    const wrapperStyle = computed(() => {\n      const crossAxis = props.vertical ? \"width\" : \"height\";\n      return {\n        background: props.inactiveColor,\n        [crossAxis]: addUnit(props.barHeight)\n      };\n    });\n    const isRange = (val) => props.range && Array.isArray(val);\n    const calcMainAxis = () => {\n      const {\n        modelValue,\n        min\n      } = props;\n      if (isRange(modelValue)) {\n        return `${(modelValue[1] - modelValue[0]) * 100 / scope.value}%`;\n      }\n      return `${(modelValue - Number(min)) * 100 / scope.value}%`;\n    };\n    const calcOffset = () => {\n      const {\n        modelValue,\n        min\n      } = props;\n      if (isRange(modelValue)) {\n        return `${(modelValue[0] - Number(min)) * 100 / scope.value}%`;\n      }\n      return \"0%\";\n    };\n    const barStyle = computed(() => {\n      const mainAxis = props.vertical ? \"height\" : \"width\";\n      const style = {\n        [mainAxis]: calcMainAxis(),\n        background: props.activeColor\n      };\n      if (dragStatus.value) {\n        style.transition = \"none\";\n      }\n      const getPositionKey = () => {\n        if (props.vertical) {\n          return props.reverse ? \"bottom\" : \"top\";\n        }\n        return props.reverse ? \"right\" : \"left\";\n      };\n      style[getPositionKey()] = calcOffset();\n      return style;\n    });\n    const format = (value) => {\n      const min = +props.min;\n      const max = +props.max;\n      const step = +props.step;\n      value = clamp(value, min, max);\n      const diff = Math.round((value - min) / step) * step;\n      return addNumber(min, diff);\n    };\n    const isSameValue = (newValue, oldValue) => JSON.stringify(newValue) === JSON.stringify(oldValue);\n    const handleRangeValue = (value) => {\n      var _a, _b;\n      const left = (_a = value[0]) != null ? _a : Number(props.min);\n      const right = (_b = value[1]) != null ? _b : Number(props.max);\n      return left > right ? [right, left] : [left, right];\n    };\n    const updateValue = (value, end) => {\n      if (isRange(value)) {\n        value = handleRangeValue(value).map(format);\n      } else {\n        value = format(value);\n      }\n      if (!isSameValue(value, props.modelValue)) {\n        emit(\"update:modelValue\", value);\n      }\n      if (end && !isSameValue(value, startValue)) {\n        emit(\"change\", value);\n      }\n    };\n    const onClick = (event) => {\n      event.stopPropagation();\n      if (props.disabled || props.readonly) {\n        return;\n      }\n      const {\n        min,\n        reverse,\n        vertical,\n        modelValue\n      } = props;\n      const rect = useRect(root);\n      const getDelta = () => {\n        if (vertical) {\n          if (reverse) {\n            return rect.bottom - event.clientY;\n          }\n          return event.clientY - rect.top;\n        }\n        if (reverse) {\n          return rect.right - event.clientX;\n        }\n        return event.clientX - rect.left;\n      };\n      const total = vertical ? rect.height : rect.width;\n      const value = Number(min) + getDelta() / total * scope.value;\n      if (isRange(modelValue)) {\n        const [left, right] = modelValue;\n        const middle = (left + right) / 2;\n        if (value <= middle) {\n          updateValue([value, right], true);\n        } else {\n          updateValue([left, value], true);\n        }\n      } else {\n        updateValue(value, true);\n      }\n    };\n    const onTouchStart = (event) => {\n      if (props.disabled || props.readonly) {\n        return;\n      }\n      touch.start(event);\n      current = props.modelValue;\n      if (isRange(current)) {\n        startValue = current.map(format);\n      } else {\n        startValue = format(current);\n      }\n      dragStatus.value = \"start\";\n    };\n    const onTouchMove = (event) => {\n      if (props.disabled || props.readonly) {\n        return;\n      }\n      if (dragStatus.value === \"start\") {\n        emit(\"drag-start\", event);\n      }\n      preventDefault(event, true);\n      touch.move(event);\n      dragStatus.value = \"dragging\";\n      const rect = useRect(root);\n      const delta = props.vertical ? touch.deltaY.value : touch.deltaX.value;\n      const total = props.vertical ? rect.height : rect.width;\n      let diff = delta / total * scope.value;\n      if (props.reverse) {\n        diff = -diff;\n      }\n      if (isRange(startValue)) {\n        const index = props.reverse ? 1 - buttonIndex : buttonIndex;\n        current[index] = startValue[index] + diff;\n      } else {\n        current = startValue + diff;\n      }\n      updateValue(current);\n    };\n    const onTouchEnd = (event) => {\n      if (props.disabled || props.readonly) {\n        return;\n      }\n      if (dragStatus.value === \"dragging\") {\n        updateValue(current, true);\n        emit(\"drag-end\", event);\n      }\n      dragStatus.value = \"\";\n    };\n    const getButtonClassName = (index) => {\n      if (typeof index === \"number\") {\n        const position = [\"left\", \"right\"];\n        return bem(`button-wrapper`, position[index]);\n      }\n      return bem(\"button-wrapper\", props.reverse ? \"left\" : \"right\");\n    };\n    const renderButtonContent = (value, index) => {\n      if (typeof index === \"number\") {\n        const slot = slots[index === 0 ? \"left-button\" : \"right-button\"];\n        if (slot) {\n          return slot({\n            value\n          });\n        }\n      }\n      if (slots.button) {\n        return slots.button({\n          value\n        });\n      }\n      return _createVNode(\"div\", {\n        \"class\": bem(\"button\"),\n        \"style\": getSizeStyle(props.buttonSize)\n      }, null);\n    };\n    const renderButton = (index) => {\n      const current2 = typeof index === \"number\" ? props.modelValue[index] : props.modelValue;\n      return _createVNode(\"div\", {\n        \"role\": \"slider\",\n        \"class\": getButtonClassName(index),\n        \"tabindex\": props.disabled ? void 0 : 0,\n        \"aria-valuemin\": props.min,\n        \"aria-valuenow\": current2,\n        \"aria-valuemax\": props.max,\n        \"aria-disabled\": props.disabled || void 0,\n        \"aria-readonly\": props.readonly || void 0,\n        \"aria-orientation\": props.vertical ? \"vertical\" : \"horizontal\",\n        \"onTouchstart\": (event) => {\n          if (typeof index === \"number\") {\n            buttonIndex = index;\n          }\n          onTouchStart(event);\n        },\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd,\n        \"onClick\": stopPropagation\n      }, [renderButtonContent(current2, index)]);\n    };\n    updateValue(props.modelValue);\n    useCustomFieldValue(() => props.modelValue);\n    return () => _createVNode(\"div\", {\n      \"ref\": root,\n      \"style\": wrapperStyle.value,\n      \"class\": bem({\n        vertical: props.vertical,\n        disabled: props.disabled\n      }),\n      \"onClick\": onClick\n    }, [_createVNode(\"div\", {\n      \"class\": bem(\"bar\"),\n      \"style\": barStyle.value\n    }, [props.range ? [renderButton(0), renderButton(1)] : renderButton()])]);\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}