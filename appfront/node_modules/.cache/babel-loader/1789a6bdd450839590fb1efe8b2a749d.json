{"ast":null,"code":"import { inject, nextTick } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { VXETable } from '../../v-x-e-table';\nimport { isColumnInfo, mergeBodyMethod, getCellValue } from '../../table/src/util';\nimport { parseFile, formatText } from '../../tools/utils';\nimport { warnLog, errLog } from '../../tools/log';\nimport { readLocalFile, handlePrint, saveLocalFile, createHtmlPage, getExportBlobByContent } from './util';\nvar htmlCellElem;\nvar csvBOM = '\\ufeff';\nvar enterSymbol = '\\r\\n';\n\nfunction defaultFilterExportColumn(column) {\n  return column.property || ['seq', 'checkbox', 'radio'].indexOf(column.type) > -1;\n}\n\nvar getConvertColumns = function (columns) {\n  var result = [];\n  columns.forEach(function (column) {\n    if (column.childNodes && column.childNodes.length) {\n      result.push(column);\n      result.push.apply(result, getConvertColumns(column.childNodes));\n    } else {\n      result.push(column);\n    }\n  });\n  return result;\n};\n\nvar convertToRows = function (originColumns) {\n  var maxLevel = 1;\n\n  var traverse = function (column, parent) {\n    if (parent) {\n      column._level = parent._level + 1;\n\n      if (maxLevel < column._level) {\n        maxLevel = column._level;\n      }\n    }\n\n    if (column.childNodes && column.childNodes.length) {\n      var colSpan_1 = 0;\n      column.childNodes.forEach(function (subColumn) {\n        traverse(subColumn, column);\n        colSpan_1 += subColumn._colSpan;\n      });\n      column._colSpan = colSpan_1;\n    } else {\n      column._colSpan = 1;\n    }\n  };\n\n  originColumns.forEach(function (column) {\n    column._level = 1;\n    traverse(column);\n  });\n  var rows = [];\n\n  for (var i = 0; i < maxLevel; i++) {\n    rows.push([]);\n  }\n\n  var allColumns = getConvertColumns(originColumns);\n  allColumns.forEach(function (column) {\n    if (column.childNodes && column.childNodes.length) {\n      column._rowSpan = 1;\n    } else {\n      column._rowSpan = maxLevel - column._level + 1;\n    }\n\n    rows[column._level - 1].push(column);\n  });\n  return rows;\n};\n\nfunction toTableBorder(border) {\n  if (border === true) {\n    return 'full';\n  }\n\n  if (border) {\n    return border;\n  }\n\n  return 'default';\n}\n\nfunction getBooleanValue(cellValue) {\n  return cellValue === 'TRUE' || cellValue === 'true' || cellValue === true;\n}\n\nfunction getHeaderTitle(opts, column) {\n  return (opts.original ? column.property : column.getTitle()) || '';\n}\n\nfunction getFooterData(opts, footerTableData) {\n  var footerFilterMethod = opts.footerFilterMethod;\n  return footerFilterMethod ? footerTableData.filter(function (items, index) {\n    return footerFilterMethod({\n      items: items,\n      $rowIndex: index\n    });\n  }) : footerTableData;\n}\n\nfunction getCsvCellTypeLabel(column, cellValue) {\n  if (cellValue) {\n    if (column.type === 'seq') {\n      return \"\\t\" + cellValue;\n    }\n\n    switch (column.cellType) {\n      case 'string':\n        if (!isNaN(cellValue)) {\n          return \"\\t\" + cellValue;\n        }\n\n        break;\n\n      case 'number':\n        break;\n\n      default:\n        if (cellValue.length >= 12 && !isNaN(cellValue)) {\n          return \"\\t\" + cellValue;\n        }\n\n        break;\n    }\n  }\n\n  return cellValue;\n}\n\nfunction toTxtCellLabel(val) {\n  if (/[\",\\s\\n]/.test(val)) {\n    return \"\\\"\" + val.replace(/\"/g, '\"\"') + \"\\\"\";\n  }\n\n  return val;\n}\n\nfunction getElementsByTagName(elem, qualifiedName) {\n  return elem.getElementsByTagName(qualifiedName);\n}\n\nfunction getTxtCellKey(now) {\n  return \"#\" + now + \"@\" + XEUtils.uniqueId();\n}\n\nfunction replaceTxtCell(cell, vMaps) {\n  return cell.replace(/#\\d+@\\d+/g, function (key) {\n    return XEUtils.hasOwnProp(vMaps, key) ? vMaps[key] : key;\n  });\n}\n\nfunction getTxtCellValue(val, vMaps) {\n  var rest = replaceTxtCell(val, vMaps);\n  return rest.replace(/^\"+$/g, function (qVal) {\n    return '\"'.repeat(Math.ceil(qVal.length / 2));\n  });\n}\n\nfunction parseCsvAndTxt(columns, content, cellSeparator) {\n  var list = content.split(enterSymbol);\n  var rows = [];\n  var fields = [];\n\n  if (list.length) {\n    var vMaps_1 = {};\n    var now_1 = Date.now();\n    list.forEach(function (rVal) {\n      if (rVal) {\n        var item_1 = {};\n        rVal = rVal.replace(/(\"\")|(\\n)/g, function (text, dVal) {\n          var key = getTxtCellKey(now_1);\n          vMaps_1[key] = dVal ? '\"' : '\\n';\n          return key;\n        }).replace(/\"(.*?)\"/g, function (text, cVal) {\n          var key = getTxtCellKey(now_1);\n          vMaps_1[key] = replaceTxtCell(cVal, vMaps_1);\n          return key;\n        });\n        var cells = rVal.split(cellSeparator);\n\n        if (!fields.length) {\n          fields = cells.map(function (val) {\n            return getTxtCellValue(val.trim(), vMaps_1);\n          });\n        } else {\n          cells.forEach(function (val, colIndex) {\n            if (colIndex < fields.length) {\n              item_1[fields[colIndex]] = getTxtCellValue(val.trim(), vMaps_1);\n            }\n          });\n          rows.push(item_1);\n        }\n      }\n    });\n  }\n\n  return {\n    fields: fields,\n    rows: rows\n  };\n}\n\nfunction parseCsv(columns, content) {\n  return parseCsvAndTxt(columns, content, ',');\n}\n\nfunction parseTxt(columns, content) {\n  return parseCsvAndTxt(columns, content, '\\t');\n}\n\nfunction parseHTML(columns, content) {\n  var domParser = new DOMParser();\n  var xmlDoc = domParser.parseFromString(content, 'text/html');\n  var bodyNodes = getElementsByTagName(xmlDoc, 'body');\n  var rows = [];\n  var fields = [];\n\n  if (bodyNodes.length) {\n    var tableNodes = getElementsByTagName(bodyNodes[0], 'table');\n\n    if (tableNodes.length) {\n      var theadNodes = getElementsByTagName(tableNodes[0], 'thead');\n\n      if (theadNodes.length) {\n        XEUtils.arrayEach(getElementsByTagName(theadNodes[0], 'tr'), function (rowNode) {\n          XEUtils.arrayEach(getElementsByTagName(rowNode, 'th'), function (cellNode) {\n            fields.push(cellNode.textContent);\n          });\n        });\n        var tbodyNodes = getElementsByTagName(tableNodes[0], 'tbody');\n\n        if (tbodyNodes.length) {\n          XEUtils.arrayEach(getElementsByTagName(tbodyNodes[0], 'tr'), function (rowNode) {\n            var item = {};\n            XEUtils.arrayEach(getElementsByTagName(rowNode, 'td'), function (cellNode, colIndex) {\n              if (fields[colIndex]) {\n                item[fields[colIndex]] = cellNode.textContent || '';\n              }\n            });\n            rows.push(item);\n          });\n        }\n      }\n    }\n  }\n\n  return {\n    fields: fields,\n    rows: rows\n  };\n}\n\nfunction parseXML(columns, content) {\n  var domParser = new DOMParser();\n  var xmlDoc = domParser.parseFromString(content, 'application/xml');\n  var sheetNodes = getElementsByTagName(xmlDoc, 'Worksheet');\n  var rows = [];\n  var fields = [];\n\n  if (sheetNodes.length) {\n    var tableNodes = getElementsByTagName(sheetNodes[0], 'Table');\n\n    if (tableNodes.length) {\n      var rowNodes = getElementsByTagName(tableNodes[0], 'Row');\n\n      if (rowNodes.length) {\n        XEUtils.arrayEach(getElementsByTagName(rowNodes[0], 'Cell'), function (cellNode) {\n          fields.push(cellNode.textContent);\n        });\n        XEUtils.arrayEach(rowNodes, function (rowNode, index) {\n          if (index) {\n            var item_2 = {};\n            var cellNodes = getElementsByTagName(rowNode, 'Cell');\n            XEUtils.arrayEach(cellNodes, function (cellNode, colIndex) {\n              if (fields[colIndex]) {\n                item_2[fields[colIndex]] = cellNode.textContent;\n              }\n            });\n            rows.push(item_2);\n          }\n        });\n      }\n    }\n  }\n\n  return {\n    fields: fields,\n    rows: rows\n  };\n}\n\nfunction clearColumnConvert(columns) {\n  XEUtils.eachTree(columns, function (column) {\n    delete column._level;\n    delete column._colSpan;\n    delete column._rowSpan;\n    delete column._children;\n    delete column.childNodes;\n  }, {\n    children: 'children'\n  });\n}\n/**\n * 检查导入的列是否完整\n * @param {Array} fields 字段名列表\n * @param {Array} rows 数据列表\n */\n\n\nfunction checkImportData(columns, fields) {\n  var tableFields = [];\n  columns.forEach(function (column) {\n    var field = column.property;\n\n    if (field) {\n      tableFields.push(field);\n    }\n  });\n  return fields.some(function (field) {\n    return tableFields.indexOf(field) > -1;\n  });\n}\n\nvar tableExportMethodKeys = ['exportData', 'importByFile', 'importData', 'saveFile', 'readFile', 'print', 'openImport', 'openExport', 'openPrint'];\nvar tableExportHook = {\n  setupTable: function ($xetable) {\n    var props = $xetable.props,\n        reactData = $xetable.reactData,\n        internalData = $xetable.internalData;\n\n    var _a = $xetable.getComputeMaps(),\n        computeTreeOpts = _a.computeTreeOpts,\n        computePrintOpts = _a.computePrintOpts,\n        computeExportOpts = _a.computeExportOpts,\n        computeImportOpts = _a.computeImportOpts,\n        computeCustomOpts = _a.computeCustomOpts,\n        computeSeqOpts = _a.computeSeqOpts,\n        computeRadioOpts = _a.computeRadioOpts,\n        computeCheckboxOpts = _a.computeCheckboxOpts;\n\n    var $xegrid = inject('$xegrid', null);\n\n    var hasTreeChildren = function (row) {\n      var treeOpts = computeTreeOpts.value;\n      return row[treeOpts.children] && row[treeOpts.children].length;\n    };\n\n    var getSeq = function (row, $rowIndex, column, $columnIndex) {\n      var seqOpts = computeSeqOpts.value;\n      var seqMethod = seqOpts.seqMethod || column.seqMethod;\n\n      if (seqMethod) {\n        return seqMethod({\n          row: row,\n          rowIndex: $xetable.getRowIndex(row),\n          $rowIndex: $rowIndex,\n          column: column,\n          columnIndex: $xetable.getColumnIndex(column),\n          $columnIndex: $columnIndex\n        });\n      }\n\n      return $xetable.getRowSeq(row);\n    };\n\n    var toBooleanValue = function (cellValue) {\n      return XEUtils.isBoolean(cellValue) ? cellValue ? 'TRUE' : 'FALSE' : cellValue;\n    };\n\n    var getLabelData = function (opts, columns, datas) {\n      var isAllExpand = opts.isAllExpand,\n          mode = opts.mode;\n      var treeConfig = props.treeConfig;\n      var radioOpts = computeRadioOpts.value;\n      var checkboxOpts = computeCheckboxOpts.value;\n      var treeOpts = computeTreeOpts.value;\n\n      if (!htmlCellElem) {\n        htmlCellElem = document.createElement('div');\n      }\n\n      if (treeConfig) {\n        // 如果是树表格只允许导出数据源\n        var rest_1 = [];\n        var expandMaps_1 = new Map();\n        XEUtils.eachTree(datas, function (item, $rowIndex, items, path, parent, nodes) {\n          var row = item._row || item;\n          var parentRow = parent && parent._row ? parent._row : parent;\n\n          if (isAllExpand || !parentRow || expandMaps_1.has(parentRow) && $xetable.isTreeExpandByRow(parentRow)) {\n            var hasRowChild = hasTreeChildren(row);\n            var item_3 = {\n              _row: row,\n              _level: nodes.length - 1,\n              _hasChild: hasRowChild,\n              _expand: hasRowChild && $xetable.isTreeExpandByRow(row)\n            };\n            columns.forEach(function (column, $columnIndex) {\n              var cellValue = '';\n              var renderOpts = column.editRender || column.cellRender;\n              var exportLabelMethod = column.exportMethod;\n\n              if (!exportLabelMethod && renderOpts && renderOpts.name) {\n                var compConf = VXETable.renderer.get(renderOpts.name);\n\n                if (compConf) {\n                  exportLabelMethod = compConf.exportMethod;\n                }\n              }\n\n              if (exportLabelMethod) {\n                cellValue = exportLabelMethod({\n                  $table: $xetable,\n                  row: row,\n                  column: column,\n                  options: opts\n                });\n              } else {\n                switch (column.type) {\n                  case 'seq':\n                    cellValue = mode === 'all' ? path.map(function (num, i) {\n                      return i % 2 === 0 ? Number(num) + 1 : '.';\n                    }).join('') : getSeq(row, $rowIndex, column, $columnIndex);\n                    break;\n\n                  case 'checkbox':\n                    cellValue = toBooleanValue($xetable.isCheckedByCheckboxRow(row));\n                    item_3._checkboxLabel = checkboxOpts.labelField ? XEUtils.get(row, checkboxOpts.labelField) : '';\n                    item_3._checkboxDisabled = checkboxOpts.checkMethod && !checkboxOpts.checkMethod({\n                      row: row\n                    });\n                    break;\n\n                  case 'radio':\n                    cellValue = toBooleanValue($xetable.isCheckedByRadioRow(row));\n                    item_3._radioLabel = radioOpts.labelField ? XEUtils.get(row, radioOpts.labelField) : '';\n                    item_3._radioDisabled = radioOpts.checkMethod && !radioOpts.checkMethod({\n                      row: row\n                    });\n                    break;\n\n                  default:\n                    if (opts.original) {\n                      cellValue = getCellValue(row, column);\n                    } else {\n                      cellValue = $xetable.getCellLabel(row, column);\n\n                      if (column.type === 'html') {\n                        htmlCellElem.innerHTML = cellValue;\n                        cellValue = htmlCellElem.innerText.trim();\n                      } else {\n                        var cell = $xetable.getCell(row, column);\n\n                        if (cell) {\n                          cellValue = cell.innerText.trim();\n                        }\n                      }\n                    }\n\n                }\n              }\n\n              item_3[column.id] = XEUtils.toValueString(cellValue);\n            });\n            expandMaps_1.set(row, 1);\n            rest_1.push(Object.assign(item_3, row));\n          }\n        }, treeOpts);\n        return rest_1;\n      }\n\n      return datas.map(function (row, $rowIndex) {\n        var item = {\n          _row: row\n        };\n        columns.forEach(function (column, $columnIndex) {\n          var cellValue = '';\n          var renderOpts = column.editRender || column.cellRender;\n          var exportLabelMethod = column.exportMethod;\n\n          if (!exportLabelMethod && renderOpts && renderOpts.name) {\n            var compConf = VXETable.renderer.get(renderOpts.name);\n\n            if (compConf) {\n              exportLabelMethod = compConf.exportMethod;\n            }\n          }\n\n          if (exportLabelMethod) {\n            cellValue = exportLabelMethod({\n              $table: $xetable,\n              row: row,\n              column: column,\n              options: opts\n            });\n          } else {\n            switch (column.type) {\n              case 'seq':\n                cellValue = mode === 'all' ? $rowIndex + 1 : getSeq(row, $rowIndex, column, $columnIndex);\n                break;\n\n              case 'checkbox':\n                cellValue = toBooleanValue($xetable.isCheckedByCheckboxRow(row));\n                item._checkboxLabel = checkboxOpts.labelField ? XEUtils.get(row, checkboxOpts.labelField) : '';\n                item._checkboxDisabled = checkboxOpts.checkMethod && !checkboxOpts.checkMethod({\n                  row: row\n                });\n                break;\n\n              case 'radio':\n                cellValue = toBooleanValue($xetable.isCheckedByRadioRow(row));\n                item._radioLabel = radioOpts.labelField ? XEUtils.get(row, radioOpts.labelField) : '';\n                item._radioDisabled = radioOpts.checkMethod && !radioOpts.checkMethod({\n                  row: row\n                });\n                break;\n\n              default:\n                if (opts.original) {\n                  cellValue = getCellValue(row, column);\n                } else {\n                  cellValue = $xetable.getCellLabel(row, column);\n\n                  if (column.type === 'html') {\n                    htmlCellElem.innerHTML = cellValue;\n                    cellValue = htmlCellElem.innerText.trim();\n                  } else {\n                    var cell = $xetable.getCell(row, column);\n\n                    if (cell) {\n                      cellValue = cell.innerText.trim();\n                    }\n                  }\n                }\n\n            }\n          }\n\n          item[column.id] = XEUtils.toValueString(cellValue);\n        });\n        return item;\n      });\n    };\n\n    var getExportData = function (opts) {\n      var columns = opts.columns,\n          dataFilterMethod = opts.dataFilterMethod;\n      var datas = opts.data;\n\n      if (dataFilterMethod) {\n        datas = datas.filter(function (row, index) {\n          return dataFilterMethod({\n            row: row,\n            $rowIndex: index\n          });\n        });\n      }\n\n      return getLabelData(opts, columns, datas);\n    };\n\n    var getFooterCellValue = function (opts, items, column) {\n      var renderOpts = column.editRender || column.cellRender;\n      var exportLabelMethod = column.footerExportMethod;\n\n      if (!exportLabelMethod && renderOpts && renderOpts.name) {\n        var compConf = VXETable.renderer.get(renderOpts.name);\n\n        if (compConf) {\n          exportLabelMethod = compConf.footerExportMethod;\n        }\n      }\n\n      var _columnIndex = $xetable.getVTColumnIndex(column);\n\n      var cellValue = exportLabelMethod ? exportLabelMethod({\n        $table: $xetable,\n        items: items,\n        itemIndex: _columnIndex,\n        _columnIndex: _columnIndex,\n        column: column,\n        options: opts\n      }) : XEUtils.toValueString(items[_columnIndex]);\n      return cellValue;\n    };\n\n    var toCsv = function (opts, columns, datas) {\n      var content = csvBOM;\n\n      if (opts.isHeader) {\n        content += columns.map(function (column) {\n          return toTxtCellLabel(getHeaderTitle(opts, column));\n        }).join(',') + enterSymbol;\n      }\n\n      datas.forEach(function (row) {\n        content += columns.map(function (column) {\n          return toTxtCellLabel(getCsvCellTypeLabel(column, row[column.id]));\n        }).join(',') + enterSymbol;\n      });\n\n      if (opts.isFooter) {\n        var footerTableData = reactData.footerTableData;\n        var footers = getFooterData(opts, footerTableData);\n        footers.forEach(function (rows) {\n          content += columns.map(function (column) {\n            return toTxtCellLabel(getFooterCellValue(opts, rows, column));\n          }).join(',') + enterSymbol;\n        });\n      }\n\n      return content;\n    };\n\n    var toTxt = function (opts, columns, datas) {\n      var content = '';\n\n      if (opts.isHeader) {\n        content += columns.map(function (column) {\n          return toTxtCellLabel(getHeaderTitle(opts, column));\n        }).join('\\t') + enterSymbol;\n      }\n\n      datas.forEach(function (row) {\n        content += columns.map(function (column) {\n          return toTxtCellLabel(row[column.id]);\n        }).join('\\t') + enterSymbol;\n      });\n\n      if (opts.isFooter) {\n        var footerTableData = reactData.footerTableData;\n        var footers = getFooterData(opts, footerTableData);\n        footers.forEach(function (rows) {\n          content += columns.map(function (column) {\n            return toTxtCellLabel(getFooterCellValue(opts, rows, column));\n          }).join(',') + enterSymbol;\n        });\n      }\n\n      return content;\n    };\n\n    var hasEllipsis = function (column, property, allColumnOverflow) {\n      var columnOverflow = column[property];\n      var headOverflow = XEUtils.isUndefined(columnOverflow) || XEUtils.isNull(columnOverflow) ? allColumnOverflow : columnOverflow;\n      var showEllipsis = headOverflow === 'ellipsis';\n      var showTitle = headOverflow === 'title';\n      var showTooltip = headOverflow === true || headOverflow === 'tooltip';\n      var isEllipsis = showTitle || showTooltip || showEllipsis; // 虚拟滚动不支持动态高度\n\n      var scrollXLoad = reactData.scrollXLoad,\n          scrollYLoad = reactData.scrollYLoad;\n\n      if ((scrollXLoad || scrollYLoad) && !isEllipsis) {\n        isEllipsis = true;\n      }\n\n      return isEllipsis;\n    };\n\n    var toHtml = function (opts, columns, datas) {\n      var id = props.id,\n          border = props.border,\n          treeConfig = props.treeConfig,\n          allHeaderAlign = props.headerAlign,\n          allAlign = props.align,\n          allFooterAlign = props.footerAlign,\n          allColumnOverflow = props.showOverflow,\n          allColumnHeaderOverflow = props.showHeaderOverflow;\n      var isAllSelected = reactData.isAllSelected,\n          isIndeterminate = reactData.isIndeterminate,\n          mergeList = reactData.mergeList;\n      var treeOpts = computeTreeOpts.value;\n      var isPrint = opts.print,\n          isHeader = opts.isHeader,\n          isFooter = opts.isFooter,\n          isColgroup = opts.isColgroup,\n          isMerge = opts.isMerge,\n          colgroups = opts.colgroups,\n          original = opts.original;\n      var allCls = 'check-all';\n      var clss = ['vxe-table', \"border--\" + toTableBorder(border), isPrint ? 'is--print' : '', isHeader ? 'is--header' : ''].filter(function (cls) {\n        return cls;\n      });\n      var tables = [\"<table class=\\\"\" + clss.join(' ') + \"\\\" border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\", \"<colgroup>\" + columns.map(function (column) {\n        return \"<col style=\\\"width:\" + column.renderWidth + \"px\\\">\";\n      }).join('') + \"</colgroup>\"];\n\n      if (isHeader) {\n        tables.push('<thead>');\n\n        if (isColgroup && !original) {\n          colgroups.forEach(function (cols) {\n            tables.push(\"<tr>\" + cols.map(function (column) {\n              var headAlign = column.headerAlign || column.align || allHeaderAlign || allAlign;\n              var classNames = hasEllipsis(column, 'showHeaderOverflow', allColumnHeaderOverflow) ? ['col--ellipsis'] : [];\n              var cellTitle = getHeaderTitle(opts, column);\n              var childWidth = 0;\n              var countChild = 0;\n              XEUtils.eachTree([column], function (item) {\n                if (!item.childNodes || !column.childNodes.length) {\n                  countChild++;\n                }\n\n                childWidth += item.renderWidth;\n              }, {\n                children: 'childNodes'\n              });\n              var cellWidth = childWidth - countChild;\n\n              if (headAlign) {\n                classNames.push(\"col--\" + headAlign);\n              }\n\n              if (column.type === 'checkbox') {\n                return \"<th class=\\\"\" + classNames.join(' ') + \"\\\" colspan=\\\"\" + column._colSpan + \"\\\" rowspan=\\\"\" + column._rowSpan + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + cellWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" class=\\\"\" + allCls + \"\\\" \" + (isAllSelected ? 'checked' : '') + \"><span>\" + cellTitle + \"</span></div></th>\";\n              }\n\n              return \"<th class=\\\"\" + classNames.join(' ') + \"\\\" colspan=\\\"\" + column._colSpan + \"\\\" rowspan=\\\"\" + column._rowSpan + \"\\\" title=\\\"\" + cellTitle + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + cellWidth + \"px\\\"\") + \"><span>\" + formatText(cellTitle, true) + \"</span></div></th>\";\n            }).join('') + \"</tr>\");\n          });\n        } else {\n          tables.push(\"<tr>\" + columns.map(function (column) {\n            var headAlign = column.headerAlign || column.align || allHeaderAlign || allAlign;\n            var classNames = hasEllipsis(column, 'showHeaderOverflow', allColumnHeaderOverflow) ? ['col--ellipsis'] : [];\n            var cellTitle = getHeaderTitle(opts, column);\n\n            if (headAlign) {\n              classNames.push(\"col--\" + headAlign);\n            }\n\n            if (column.type === 'checkbox') {\n              return \"<th class=\\\"\" + classNames.join(' ') + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" class=\\\"\" + allCls + \"\\\" \" + (isAllSelected ? 'checked' : '') + \"><span>\" + cellTitle + \"</span></div></th>\";\n            }\n\n            return \"<th class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellTitle + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><span>\" + formatText(cellTitle, true) + \"</span></div></th>\";\n          }).join('') + \"</tr>\");\n        }\n\n        tables.push('</thead>');\n      }\n\n      if (datas.length) {\n        tables.push('<tbody>');\n\n        if (treeConfig) {\n          datas.forEach(function (item) {\n            tables.push('<tr>' + columns.map(function (column) {\n              var cellAlign = column.align || allAlign;\n              var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];\n              var cellValue = item[column.id];\n\n              if (cellAlign) {\n                classNames.push(\"col--\" + cellAlign);\n              }\n\n              if (column.treeNode) {\n                var treeIcon = '';\n\n                if (item._hasChild) {\n                  treeIcon = \"<i class=\\\"\" + (item._expand ? 'vxe-table--tree-fold-icon' : 'vxe-table--tree-unfold-icon') + \"\\\"></i>\";\n                }\n\n                classNames.push('vxe-table--tree-node');\n\n                if (column.type === 'radio') {\n                  return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><div class=\\\"vxe-table--tree-node-wrapper\\\" style=\\\"padding-left: \" + item._level * treeOpts.indent + \"px\\\"><div class=\\\"vxe-table--tree-icon-wrapper\\\">\" + treeIcon + \"</div><div class=\\\"vxe-table--tree-cell\\\"><input type=\\\"radio\\\" name=\\\"radio_\" + id + \"\\\" \" + (item._radioDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._radioLabel + \"</span></div></div></div></td>\";\n                } else if (column.type === 'checkbox') {\n                  return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><div class=\\\"vxe-table--tree-node-wrapper\\\" style=\\\"padding-left: \" + item._level * treeOpts.indent + \"px\\\"><div class=\\\"vxe-table--tree-icon-wrapper\\\">\" + treeIcon + \"</div><div class=\\\"vxe-table--tree-cell\\\"><input type=\\\"checkbox\\\" \" + (item._checkboxDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._checkboxLabel + \"</span></div></div></div></td>\";\n                }\n\n                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><div class=\\\"vxe-table--tree-node-wrapper\\\" style=\\\"padding-left: \" + item._level * treeOpts.indent + \"px\\\"><div class=\\\"vxe-table--tree-icon-wrapper\\\">\" + treeIcon + \"</div><div class=\\\"vxe-table--tree-cell\\\">\" + cellValue + \"</div></div></div></td>\";\n              }\n\n              if (column.type === 'radio') {\n                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"radio\\\" name=\\\"radio_\" + id + \"\\\" \" + (item._radioDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._radioLabel + \"</span></div></td>\";\n              } else if (column.type === 'checkbox') {\n                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" \" + (item._checkboxDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._checkboxLabel + \"</span></div></td>\";\n              }\n\n              return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \">\" + formatText(cellValue, true) + \"</div></td>\";\n            }).join('') + '</tr>');\n          });\n        } else {\n          datas.forEach(function (item) {\n            tables.push('<tr>' + columns.map(function (column) {\n              var cellAlign = column.align || allAlign;\n              var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];\n              var cellValue = item[column.id];\n              var rowSpan = 1;\n              var colSpan = 1;\n\n              if (isMerge && mergeList.length) {\n                var _rowIndex = $xetable.getVTRowIndex(item._row);\n\n                var _columnIndex = $xetable.getVTColumnIndex(column);\n\n                var spanRest = mergeBodyMethod(mergeList, _rowIndex, _columnIndex);\n\n                if (spanRest) {\n                  var rowspan = spanRest.rowspan,\n                      colspan = spanRest.colspan;\n\n                  if (!rowspan || !colspan) {\n                    return '';\n                  }\n\n                  if (rowspan > 1) {\n                    rowSpan = rowspan;\n                  }\n\n                  if (colspan > 1) {\n                    colSpan = colspan;\n                  }\n                }\n              }\n\n              if (cellAlign) {\n                classNames.push(\"col--\" + cellAlign);\n              }\n\n              if (column.type === 'radio') {\n                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" rowspan=\\\"\" + rowSpan + \"\\\" colspan=\\\"\" + colSpan + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"radio\\\" name=\\\"radio_\" + id + \"\\\" \" + (item._radioDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._radioLabel + \"</span></div></td>\";\n              } else if (column.type === 'checkbox') {\n                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" rowspan=\\\"\" + rowSpan + \"\\\" colspan=\\\"\" + colSpan + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" \" + (item._checkboxDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._checkboxLabel + \"</span></div></td>\";\n              }\n\n              return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" rowspan=\\\"\" + rowSpan + \"\\\" colspan=\\\"\" + colSpan + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \">\" + formatText(cellValue, true) + \"</div></td>\";\n            }).join('') + '</tr>');\n          });\n        }\n\n        tables.push('</tbody>');\n      }\n\n      if (isFooter) {\n        var footerTableData = reactData.footerTableData;\n        var footers = getFooterData(opts, footerTableData);\n\n        if (footers.length) {\n          tables.push('<tfoot>');\n          footers.forEach(function (rows) {\n            tables.push(\"<tr>\" + columns.map(function (column) {\n              var footAlign = column.footerAlign || column.align || allFooterAlign || allAlign;\n              var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];\n              var cellValue = getFooterCellValue(opts, rows, column);\n\n              if (footAlign) {\n                classNames.push(\"col--\" + footAlign);\n              }\n\n              return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \">\" + formatText(cellValue, true) + \"</div></td>\";\n            }).join('') + \"</tr>\");\n          });\n          tables.push('</tfoot>');\n        }\n      } // 是否半选状态\n\n\n      var script = !isAllSelected && isIndeterminate ? \"<script>(function(){var a=document.querySelector(\\\".\" + allCls + \"\\\");if(a){a.indeterminate=true}})()</script>\" : '';\n      tables.push('</table>', script);\n      return isPrint ? tables.join('') : createHtmlPage(opts, tables.join(''));\n    };\n\n    var toXML = function (opts, columns, datas) {\n      var xml = ['<?xml version=\"1.0\"?>', '<?mso-application progid=\"Excel.Sheet\"?>', '<Workbook xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:html=\"http://www.w3.org/TR/REC-html40\">', '<DocumentProperties xmlns=\"urn:schemas-microsoft-com:office:office\">', '<Version>16.00</Version>', '</DocumentProperties>', '<ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\">', '<WindowHeight>7920</WindowHeight>', '<WindowWidth>21570</WindowWidth>', '<WindowTopX>32767</WindowTopX>', '<WindowTopY>32767</WindowTopY>', '<ProtectStructure>False</ProtectStructure>', '<ProtectWindows>False</ProtectWindows>', '</ExcelWorkbook>', \"<Worksheet ss:Name=\\\"\" + opts.sheetName + \"\\\">\", '<Table>', columns.map(function (column) {\n        return \"<Column ss:Width=\\\"\" + column.renderWidth + \"\\\"/>\";\n      }).join('')].join('');\n\n      if (opts.isHeader) {\n        xml += \"<Row>\" + columns.map(function (column) {\n          return \"<Cell><Data ss:Type=\\\"String\\\">\" + getHeaderTitle(opts, column) + \"</Data></Cell>\";\n        }).join('') + \"</Row>\";\n      }\n\n      datas.forEach(function (row) {\n        xml += '<Row>' + columns.map(function (column) {\n          return \"<Cell><Data ss:Type=\\\"String\\\">\" + row[column.id] + \"</Data></Cell>\";\n        }).join('') + '</Row>';\n      });\n\n      if (opts.isFooter) {\n        var footerTableData = reactData.footerTableData;\n        var footers = getFooterData(opts, footerTableData);\n        footers.forEach(function (rows) {\n          xml += \"<Row>\" + columns.map(function (column) {\n            return \"<Cell><Data ss:Type=\\\"String\\\">\" + getFooterCellValue(opts, rows, column) + \"</Data></Cell>\";\n          }).join('') + \"</Row>\";\n        });\n      }\n\n      return xml + \"</Table></Worksheet></Workbook>\";\n    };\n\n    var getContent = function (opts, columns, datas) {\n      if (columns.length) {\n        switch (opts.type) {\n          case 'csv':\n            return toCsv(opts, columns, datas);\n\n          case 'txt':\n            return toTxt(opts, columns, datas);\n\n          case 'html':\n            return toHtml(opts, columns, datas);\n\n          case 'xml':\n            return toXML(opts, columns, datas);\n        }\n      }\n\n      return '';\n    };\n\n    var downloadFile = function (opts, content) {\n      var filename = opts.filename,\n          type = opts.type,\n          download = opts.download;\n\n      if (!download) {\n        var blob = getExportBlobByContent(content, opts);\n        return Promise.resolve({\n          type: type,\n          content: content,\n          blob: blob\n        });\n      }\n\n      saveLocalFile({\n        filename: filename,\n        type: type,\n        content: content\n      }).then(function () {\n        if (opts.message !== false) {\n          // 检测弹窗模块\n          if (process.env.NODE_ENV === 'development') {\n            if (!VXETable.modal) {\n              errLog('vxe.error.reqModule', ['Modal']);\n            }\n          }\n\n          VXETable.modal.message({\n            content: GlobalConfig.i18n('vxe.table.expSuccess'),\n            status: 'success'\n          });\n        }\n      });\n    };\n\n    var handleExport = function (opts) {\n      var remote = opts.remote,\n          columns = opts.columns,\n          colgroups = opts.colgroups,\n          exportMethod = opts.exportMethod,\n          afterExportMethod = opts.afterExportMethod;\n      return new Promise(function (resolve) {\n        if (remote) {\n          var params = {\n            options: opts,\n            $table: $xetable,\n            $grid: $xegrid\n          };\n          resolve(exportMethod ? exportMethod(params) : params);\n        } else {\n          var datas_1 = getExportData(opts);\n          resolve($xetable.preventEvent(null, 'event.export', {\n            options: opts,\n            columns: columns,\n            colgroups: colgroups,\n            datas: datas_1\n          }, function () {\n            return downloadFile(opts, getContent(opts, columns, datas_1));\n          }));\n        }\n      }).then(function (params) {\n        clearColumnConvert(columns);\n\n        if (!opts.print) {\n          if (afterExportMethod) {\n            afterExportMethod({\n              status: true,\n              options: opts,\n              $table: $xetable,\n              $grid: $xegrid\n            });\n          }\n        }\n\n        return Object.assign({\n          status: true\n        }, params);\n      }).catch(function () {\n        clearColumnConvert(columns);\n\n        if (!opts.print) {\n          if (afterExportMethod) {\n            afterExportMethod({\n              status: false,\n              options: opts,\n              $table: $xetable,\n              $grid: $xegrid\n            });\n          }\n        }\n\n        var params = {\n          status: false\n        };\n        return Promise.reject(params);\n      });\n    };\n\n    var handleImport = function (content, opts) {\n      var tableFullColumn = internalData.tableFullColumn,\n          _importResolve = internalData._importResolve,\n          _importReject = internalData._importReject;\n      var rest = {\n        fields: [],\n        rows: []\n      };\n\n      switch (opts.type) {\n        case 'csv':\n          rest = parseCsv(tableFullColumn, content);\n          break;\n\n        case 'txt':\n          rest = parseTxt(tableFullColumn, content);\n          break;\n\n        case 'html':\n          rest = parseHTML(tableFullColumn, content);\n          break;\n\n        case 'xml':\n          rest = parseXML(tableFullColumn, content);\n          break;\n      }\n\n      var fields = rest.fields,\n          rows = rest.rows;\n      var status = checkImportData(tableFullColumn, fields);\n\n      if (status) {\n        $xetable.createData(rows).then(function (data) {\n          var loadRest;\n\n          if (opts.mode === 'insert') {\n            loadRest = $xetable.insert(data);\n          } else {\n            loadRest = $xetable.reloadData(data);\n          }\n\n          if (opts.message !== false) {\n            // 检测弹窗模块\n            if (process.env.NODE_ENV === 'development') {\n              if (!VXETable.modal) {\n                errLog('vxe.error.reqModule', ['Modal']);\n              }\n            }\n\n            VXETable.modal.message({\n              content: GlobalConfig.i18n('vxe.table.impSuccess', [rows.length]),\n              status: 'success'\n            });\n          }\n\n          return loadRest.then(function () {\n            if (_importResolve) {\n              _importResolve({\n                status: true\n              });\n            }\n          });\n        });\n      } else if (opts.message !== false) {\n        // 检测弹窗模块\n        if (process.env.NODE_ENV === 'development') {\n          if (!VXETable.modal) {\n            errLog('vxe.error.reqModule', ['Modal']);\n          }\n        }\n\n        VXETable.modal.message({\n          content: GlobalConfig.i18n('vxe.error.impFields'),\n          status: 'error'\n        });\n\n        if (_importReject) {\n          _importReject({\n            status: false\n          });\n        }\n      }\n    };\n\n    var handleFileImport = function (file, opts) {\n      var importMethod = opts.importMethod,\n          afterImportMethod = opts.afterImportMethod;\n\n      var _a = parseFile(file),\n          type = _a.type,\n          filename = _a.filename; // 检查类型，如果为自定义导出，则不需要校验类型\n\n\n      if (!importMethod && !XEUtils.includes(VXETable.config.importTypes, type)) {\n        if (opts.message !== false) {\n          // 检测弹窗模块\n          if (process.env.NODE_ENV === 'development') {\n            if (!VXETable.modal) {\n              errLog('vxe.error.reqModule', ['Modal']);\n            }\n          }\n\n          VXETable.modal.message({\n            content: GlobalConfig.i18n('vxe.error.notType', [type]),\n            status: 'error'\n          });\n        }\n\n        var params = {\n          status: false\n        };\n        return Promise.reject(params);\n      }\n\n      var rest = new Promise(function (resolve, reject) {\n        var _importResolve = function (params) {\n          resolve(params);\n          internalData._importResolve = null;\n          internalData._importReject = null;\n        };\n\n        var _importReject = function (params) {\n          reject(params);\n          internalData._importResolve = null;\n          internalData._importReject = null;\n        };\n\n        internalData._importResolve = _importResolve;\n        internalData._importReject = _importReject;\n\n        if (window.FileReader) {\n          var options_1 = Object.assign({\n            mode: 'insert'\n          }, opts, {\n            type: type,\n            filename: filename\n          });\n\n          if (options_1.remote) {\n            if (importMethod) {\n              Promise.resolve(importMethod({\n                file: file,\n                options: options_1,\n                $table: $xetable\n              })).then(function () {\n                _importResolve({\n                  status: true\n                });\n              }).catch(function () {\n                _importResolve({\n                  status: true\n                });\n              });\n            } else {\n              _importResolve({\n                status: true\n              });\n            }\n          } else {\n            var tableFullColumn = internalData.tableFullColumn;\n            $xetable.preventEvent(null, 'event.import', {\n              file: file,\n              options: options_1,\n              columns: tableFullColumn\n            }, function () {\n              var reader = new FileReader();\n\n              reader.onerror = function () {\n                errLog('vxe.error.notType', [type]);\n\n                _importReject({\n                  status: false\n                });\n              };\n\n              reader.onload = function (e) {\n                handleImport(e.target.result, options_1);\n              };\n\n              reader.readAsText(file, options_1.encoding || 'UTF-8');\n            });\n          }\n        } else {\n          // 不支持的浏览器\n          if (process.env.NODE_ENV === 'development') {\n            errLog('vxe.error.notExp');\n          }\n\n          _importResolve({\n            status: true\n          });\n        }\n      });\n      return rest.then(function () {\n        if (afterImportMethod) {\n          afterImportMethod({\n            status: true,\n            options: opts,\n            $table: $xetable\n          });\n        }\n      }).catch(function (e) {\n        if (afterImportMethod) {\n          afterImportMethod({\n            status: false,\n            options: opts,\n            $table: $xetable\n          });\n        }\n\n        return Promise.reject(e);\n      });\n    };\n\n    var handleExportAndPrint = function (options, isPrint) {\n      var treeConfig = props.treeConfig,\n          showHeader = props.showHeader,\n          showFooter = props.showFooter;\n      var initStore = reactData.initStore,\n          mergeList = reactData.mergeList,\n          isGroup = reactData.isGroup,\n          footerTableData = reactData.footerTableData,\n          exportStore = reactData.exportStore,\n          exportParams = reactData.exportParams;\n      var collectColumn = internalData.collectColumn;\n      var hasTree = treeConfig;\n      var customOpts = computeCustomOpts.value;\n      var selectRecords = $xetable.getCheckboxRecords();\n      var hasFooter = !!footerTableData.length;\n      var hasMerge = !hasTree && mergeList.length;\n      var defOpts = Object.assign({\n        message: true,\n        isHeader: showHeader,\n        isFooter: showFooter\n      }, options);\n      var types = defOpts.types || VXETable.config.exportTypes;\n      var modes = defOpts.modes;\n      var checkMethod = customOpts.checkMethod;\n      var exportColumns = collectColumn.slice(0);\n      var columns = defOpts.columns; // 处理类型\n\n      var typeList = types.map(function (value) {\n        return {\n          value: value,\n          label: \"vxe.export.types.\" + value\n        };\n      });\n      var modeList = modes.map(function (value) {\n        return {\n          value: value,\n          label: \"vxe.export.modes.\" + value\n        };\n      }); // 默认选中\n\n      XEUtils.eachTree(exportColumns, function (column, index, items, path, parent) {\n        var isColGroup = column.children && column.children.length;\n\n        if (isColGroup || defaultFilterExportColumn(column)) {\n          column.checked = columns ? columns.some(function (item) {\n            if (isColumnInfo(item)) {\n              return column === item;\n            } else if (XEUtils.isString(item)) {\n              return column.field === item;\n            } else {\n              var colid = item.id || item.colId;\n              var type = item.type;\n              var field = item.property || item.field;\n\n              if (colid) {\n                return column.id === colid;\n              } else if (field && type) {\n                return column.property === field && column.type === type;\n              } else if (field) {\n                return column.property === field;\n              } else if (type) {\n                return column.type === type;\n              }\n            }\n          }) : column.visible;\n          column.halfChecked = false;\n          column.disabled = parent && parent.disabled || (checkMethod ? !checkMethod({\n            column: column\n          }) : false);\n        }\n      }); // 更新条件\n\n      Object.assign(exportStore, {\n        columns: exportColumns,\n        typeList: typeList,\n        modeList: modeList,\n        hasFooter: hasFooter,\n        hasMerge: hasMerge,\n        hasTree: hasTree,\n        isPrint: isPrint,\n        hasColgroup: isGroup,\n        visible: true\n      }); // 默认参数\n\n      if (!initStore.export) {\n        Object.assign(exportParams, {\n          mode: selectRecords.length ? 'selected' : 'current'\n        }, defOpts);\n      }\n\n      if (modes.indexOf(exportParams.mode) === -1) {\n        exportParams.mode = modes[0];\n      }\n\n      if (types.indexOf(exportParams.type) === -1) {\n        exportParams.type = types[0];\n      }\n\n      initStore.export = true;\n      return nextTick();\n    };\n\n    var exportMethods = {\n      /**\n       * 导出文件，支持 csv/html/xml/txt\n       * 如果是树表格，则默认是导出所有节点\n       * 如果是启用了虚拟滚动，则只能导出数据源，可以配合 dataFilterMethod 函数自行转换数据\n       * @param {Object} options 参数\n       */\n      exportData: function (options) {\n        var treeConfig = props.treeConfig;\n        var isGroup = reactData.isGroup,\n            tableGroupColumn = reactData.tableGroupColumn;\n        var tableFullColumn = internalData.tableFullColumn,\n            afterFullData = internalData.afterFullData;\n        var exportOpts = computeExportOpts.value;\n        var treeOpts = computeTreeOpts.value;\n        var opts = Object.assign({\n          // filename: '',\n          // sheetName: '',\n          // original: false,\n          // message: false,\n          isHeader: true,\n          isFooter: true,\n          isColgroup: true,\n          // isMerge: false,\n          // isAllExpand: false,\n          download: true,\n          type: 'csv',\n          mode: 'current' // data: null,\n          // remote: false,\n          // dataFilterMethod: null,\n          // footerFilterMethod: null,\n          // exportMethod: null,\n          // columnFilterMethod: null,\n          // beforeExportMethod: null,\n          // afterExportMethod: null\n\n        }, exportOpts, {\n          print: false\n        }, options);\n        var type = opts.type,\n            mode = opts.mode,\n            columns = opts.columns,\n            original = opts.original,\n            beforeExportMethod = opts.beforeExportMethod;\n        var groups = [];\n        var customCols = columns && columns.length ? columns : null;\n        var columnFilterMethod = opts.columnFilterMethod; // 如果设置源数据，则默认导出设置了字段的列\n\n        if (!customCols && !columnFilterMethod) {\n          columnFilterMethod = original ? function (_a) {\n            var column = _a.column;\n            return column.property;\n          } : function (_a) {\n            var column = _a.column;\n            return defaultFilterExportColumn(column);\n          };\n        }\n\n        if (customCols) {\n          groups = XEUtils.searchTree(XEUtils.mapTree(customCols, function (item) {\n            var targetColumn;\n\n            if (item) {\n              if (isColumnInfo(item)) {\n                targetColumn = item;\n              } else if (XEUtils.isString(item)) {\n                targetColumn = $xetable.getColumnByField(item);\n              } else {\n                var colid = item.id || item.colId;\n                var type_1 = item.type;\n                var field_1 = item.property || item.field;\n\n                if (colid) {\n                  targetColumn = $xetable.getColumnById(colid);\n                } else if (field_1 && type_1) {\n                  targetColumn = tableFullColumn.find(function (column) {\n                    return column.property === field_1 && column.type === type_1;\n                  });\n                } else if (field_1) {\n                  targetColumn = $xetable.getColumnByField(field_1);\n                } else if (type_1) {\n                  targetColumn = tableFullColumn.find(function (column) {\n                    return column.type === type_1;\n                  });\n                }\n              }\n\n              return targetColumn || {};\n            }\n          }, {\n            children: 'childNodes',\n            mapChildren: '_children'\n          }), function (column, index) {\n            return isColumnInfo(column) && (!columnFilterMethod || columnFilterMethod({\n              column: column,\n              $columnIndex: index\n            }));\n          }, {\n            children: '_children',\n            mapChildren: 'childNodes',\n            original: true\n          });\n        } else {\n          groups = XEUtils.searchTree(isGroup ? tableGroupColumn : tableFullColumn, function (column, index) {\n            return column.visible && (!columnFilterMethod || columnFilterMethod({\n              column: column,\n              $columnIndex: index\n            }));\n          }, {\n            children: 'children',\n            mapChildren: 'childNodes',\n            original: true\n          });\n        } // 获取所有列\n\n\n        var cols = [];\n        XEUtils.eachTree(groups, function (column) {\n          var isColGroup = column.children && column.children.length;\n\n          if (!isColGroup) {\n            cols.push(column);\n          }\n        }, {\n          children: 'childNodes'\n        }); // 构建分组层级\n\n        opts.columns = cols;\n        opts.colgroups = convertToRows(groups);\n\n        if (!opts.filename) {\n          opts.filename = GlobalConfig.i18n(opts.original ? 'vxe.table.expOriginFilename' : 'vxe.table.expFilename', [XEUtils.toDateString(Date.now(), 'yyyyMMddHHmmss')]);\n        }\n\n        if (!opts.sheetName) {\n          opts.sheetName = document.title;\n        } // 检查类型，如果为自定义导出，则不需要校验类型\n\n\n        if (!opts.exportMethod && !XEUtils.includes(VXETable.config.exportTypes, type)) {\n          if (process.env.NODE_ENV === 'development') {\n            errLog('vxe.error.notType', [type]);\n          }\n\n          var params = {\n            status: false\n          };\n          return Promise.reject(params);\n        }\n\n        if (!opts.print) {\n          if (beforeExportMethod) {\n            beforeExportMethod({\n              options: opts,\n              $table: $xetable,\n              $grid: $xegrid\n            });\n          }\n        }\n\n        if (!opts.data) {\n          opts.data = afterFullData;\n\n          if (mode === 'selected') {\n            var selectRecords_1 = $xetable.getCheckboxRecords();\n\n            if (['html', 'pdf'].indexOf(type) > -1 && treeConfig) {\n              opts.data = XEUtils.searchTree($xetable.getTableData().fullData, function (item) {\n                return $xetable.findRowIndexOf(selectRecords_1, item) > -1;\n              }, Object.assign({}, treeOpts, {\n                data: '_row'\n              }));\n            } else {\n              opts.data = selectRecords_1;\n            }\n          } else if (mode === 'all') {\n            if (process.env.NODE_ENV === 'development') {\n              if (!$xegrid) {\n                warnLog('vxe.error.errProp', ['all', 'mode=current,selected']);\n              }\n            }\n\n            if ($xegrid && !opts.remote) {\n              var gridReactData = $xegrid.reactData;\n              var computeProxyOpts = $xegrid.getComputeMaps().computeProxyOpts;\n              var proxyOpts = computeProxyOpts.value;\n              var beforeQueryAll = proxyOpts.beforeQueryAll,\n                  afterQueryAll_1 = proxyOpts.afterQueryAll,\n                  _a = proxyOpts.ajax,\n                  ajax = _a === void 0 ? {} : _a,\n                  _b = proxyOpts.props,\n                  props_1 = _b === void 0 ? {} : _b;\n              var ajaxMethods = ajax.queryAll;\n\n              if (process.env.NODE_ENV === 'development') {\n                if (!ajaxMethods) {\n                  warnLog('vxe.error.notFunc', ['proxy-config.ajax.queryAll']);\n                }\n              }\n\n              if (ajaxMethods) {\n                var params_1 = {\n                  $table: $xetable,\n                  $grid: $xegrid,\n                  sort: gridReactData.sortData,\n                  filters: gridReactData.filterData,\n                  form: gridReactData.formData,\n                  target: ajaxMethods,\n                  options: opts\n                };\n                return Promise.resolve((beforeQueryAll || ajaxMethods)(params_1)).catch(function (e) {\n                  return e;\n                }).then(function (rest) {\n                  opts.data = (props_1.list ? XEUtils.get(rest, props_1.list) : rest) || [];\n\n                  if (afterQueryAll_1) {\n                    afterQueryAll_1(params_1);\n                  }\n\n                  return handleExport(opts);\n                });\n              }\n            }\n          }\n        }\n\n        return handleExport(opts);\n      },\n      importByFile: function (file, options) {\n        var opts = Object.assign({}, options);\n        var beforeImportMethod = opts.beforeImportMethod;\n\n        if (beforeImportMethod) {\n          beforeImportMethod({\n            options: opts,\n            $table: $xetable\n          });\n        }\n\n        return handleFileImport(file, opts);\n      },\n      importData: function (options) {\n        var importOpts = computeImportOpts.value;\n        var opts = Object.assign({\n          types: VXETable.config.importTypes // beforeImportMethod: null,\n          // afterImportMethod: null\n\n        }, importOpts, options);\n        var beforeImportMethod = opts.beforeImportMethod,\n            afterImportMethod = opts.afterImportMethod;\n\n        if (beforeImportMethod) {\n          beforeImportMethod({\n            options: opts,\n            $table: $xetable\n          });\n        }\n\n        return readLocalFile(opts).catch(function (e) {\n          if (afterImportMethod) {\n            afterImportMethod({\n              status: false,\n              options: opts,\n              $table: $xetable\n            });\n          }\n\n          return Promise.reject(e);\n        }).then(function (params) {\n          var file = params.file;\n          return handleFileImport(file, opts);\n        });\n      },\n      saveFile: function (options) {\n        return saveLocalFile(options);\n      },\n      readFile: function (options) {\n        return readLocalFile(options);\n      },\n      print: function (options) {\n        var printOpts = computePrintOpts.value;\n        var opts = Object.assign({\n          original: false // beforePrintMethod\n\n        }, printOpts, options, {\n          type: 'html',\n          download: false,\n          remote: false,\n          print: true\n        });\n\n        if (!opts.sheetName) {\n          opts.sheetName = document.title;\n        }\n\n        return new Promise(function (resolve) {\n          if (opts.content) {\n            resolve(handlePrint($xetable, opts, opts.content));\n          } else {\n            resolve(exportMethods.exportData(opts).then(function (_a) {\n              var content = _a.content;\n              return handlePrint($xetable, opts, content);\n            }));\n          }\n        });\n      },\n      openImport: function (options) {\n        var treeConfig = props.treeConfig,\n            importConfig = props.importConfig;\n        var initStore = reactData.initStore,\n            importStore = reactData.importStore,\n            importParams = reactData.importParams;\n        var importOpts = computeImportOpts.value;\n        var defOpts = Object.assign({\n          mode: 'insert',\n          message: true,\n          types: VXETable.config.importTypes\n        }, options, importOpts);\n        var types = defOpts.types;\n        var isTree = !!treeConfig;\n\n        if (isTree) {\n          if (defOpts.message) {\n            VXETable.modal.message({\n              content: GlobalConfig.i18n('vxe.error.treeNotImp'),\n              status: 'error'\n            });\n          }\n\n          return;\n        }\n\n        if (!importConfig) {\n          errLog('vxe.error.reqProp', ['import-config']);\n        } // 处理类型\n\n\n        var typeList = types.map(function (value) {\n          return {\n            value: value,\n            label: \"vxe.export.types.\" + value\n          };\n        });\n        var modeList = defOpts.modes.map(function (value) {\n          return {\n            value: value,\n            label: \"vxe.import.modes.\" + value\n          };\n        });\n        Object.assign(importStore, {\n          file: null,\n          type: '',\n          filename: '',\n          modeList: modeList,\n          typeList: typeList,\n          visible: true\n        });\n        Object.assign(importParams, defOpts);\n        initStore.import = true;\n      },\n      openExport: function (options) {\n        var exportOpts = computeExportOpts.value;\n\n        if (process.env.NODE_ENV === 'development') {\n          if (!props.exportConfig) {\n            errLog('vxe.error.reqProp', ['export-config']);\n          }\n        }\n\n        handleExportAndPrint(Object.assign({}, exportOpts, options));\n      },\n      openPrint: function (options) {\n        var printOpts = computePrintOpts.value;\n\n        if (process.env.NODE_ENV === 'development') {\n          if (!props.printConfig) {\n            errLog('vxe.error.reqProp', ['print-config']);\n          }\n        }\n\n        handleExportAndPrint(Object.assign({}, printOpts, options), true);\n      }\n    };\n    return exportMethods;\n  },\n  setupGrid: function ($xegrid) {\n    return $xegrid.extendTableMethods(tableExportMethodKeys);\n  }\n};\nexport default tableExportHook;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/vxe-table/es/export/src/hook.js"],"names":["inject","nextTick","XEUtils","GlobalConfig","VXETable","isColumnInfo","mergeBodyMethod","getCellValue","parseFile","formatText","warnLog","errLog","readLocalFile","handlePrint","saveLocalFile","createHtmlPage","getExportBlobByContent","htmlCellElem","csvBOM","enterSymbol","defaultFilterExportColumn","column","property","indexOf","type","getConvertColumns","columns","result","forEach","childNodes","length","push","apply","convertToRows","originColumns","maxLevel","traverse","parent","_level","colSpan_1","subColumn","_colSpan","rows","i","allColumns","_rowSpan","toTableBorder","border","getBooleanValue","cellValue","getHeaderTitle","opts","original","getTitle","getFooterData","footerTableData","footerFilterMethod","filter","items","index","$rowIndex","getCsvCellTypeLabel","cellType","isNaN","toTxtCellLabel","val","test","replace","getElementsByTagName","elem","qualifiedName","getTxtCellKey","now","uniqueId","replaceTxtCell","cell","vMaps","key","hasOwnProp","getTxtCellValue","rest","qVal","repeat","Math","ceil","parseCsvAndTxt","content","cellSeparator","list","split","fields","vMaps_1","now_1","Date","rVal","item_1","text","dVal","cVal","cells","map","trim","colIndex","parseCsv","parseTxt","parseHTML","domParser","DOMParser","xmlDoc","parseFromString","bodyNodes","tableNodes","theadNodes","arrayEach","rowNode","cellNode","textContent","tbodyNodes","item","parseXML","sheetNodes","rowNodes","item_2","cellNodes","clearColumnConvert","eachTree","_children","children","checkImportData","tableFields","field","some","tableExportMethodKeys","tableExportHook","setupTable","$xetable","props","reactData","internalData","_a","getComputeMaps","computeTreeOpts","computePrintOpts","computeExportOpts","computeImportOpts","computeCustomOpts","computeSeqOpts","computeRadioOpts","computeCheckboxOpts","$xegrid","hasTreeChildren","row","treeOpts","value","getSeq","$columnIndex","seqOpts","seqMethod","rowIndex","getRowIndex","columnIndex","getColumnIndex","getRowSeq","toBooleanValue","isBoolean","getLabelData","datas","isAllExpand","mode","treeConfig","radioOpts","checkboxOpts","document","createElement","rest_1","expandMaps_1","Map","path","nodes","_row","parentRow","has","isTreeExpandByRow","hasRowChild","item_3","_hasChild","_expand","renderOpts","editRender","cellRender","exportLabelMethod","exportMethod","name","compConf","renderer","get","$table","options","num","Number","join","isCheckedByCheckboxRow","_checkboxLabel","labelField","_checkboxDisabled","checkMethod","isCheckedByRadioRow","_radioLabel","_radioDisabled","getCellLabel","innerHTML","innerText","getCell","id","toValueString","set","Object","assign","getExportData","dataFilterMethod","data","getFooterCellValue","footerExportMethod","_columnIndex","getVTColumnIndex","itemIndex","toCsv","isHeader","isFooter","footers","toTxt","hasEllipsis","allColumnOverflow","columnOverflow","headOverflow","isUndefined","isNull","showEllipsis","showTitle","showTooltip","isEllipsis","scrollXLoad","scrollYLoad","toHtml","allHeaderAlign","headerAlign","allAlign","align","allFooterAlign","footerAlign","showOverflow","allColumnHeaderOverflow","showHeaderOverflow","isAllSelected","isIndeterminate","mergeList","isPrint","print","isColgroup","isMerge","colgroups","allCls","clss","cls","tables","renderWidth","cols","headAlign","classNames","cellTitle","childWidth","countChild","cellWidth","cellAlign","treeNode","treeIcon","indent","rowSpan","colSpan","_rowIndex","getVTRowIndex","spanRest","rowspan","colspan","footAlign","script","toXML","xml","sheetName","getContent","downloadFile","filename","download","blob","Promise","resolve","then","message","process","env","NODE_ENV","modal","i18n","status","handleExport","remote","afterExportMethod","params","$grid","datas_1","preventEvent","catch","reject","handleImport","tableFullColumn","_importResolve","_importReject","createData","loadRest","insert","reloadData","handleFileImport","file","importMethod","afterImportMethod","includes","config","importTypes","window","FileReader","options_1","reader","onerror","onload","e","target","readAsText","encoding","handleExportAndPrint","showHeader","showFooter","initStore","isGroup","exportStore","exportParams","collectColumn","hasTree","customOpts","selectRecords","getCheckboxRecords","hasFooter","hasMerge","defOpts","types","exportTypes","modes","exportColumns","slice","typeList","label","modeList","isColGroup","checked","isString","colid","colId","visible","halfChecked","disabled","hasColgroup","export","exportMethods","exportData","tableGroupColumn","afterFullData","exportOpts","beforeExportMethod","groups","customCols","columnFilterMethod","searchTree","mapTree","targetColumn","getColumnByField","type_1","field_1","getColumnById","find","mapChildren","toDateString","title","selectRecords_1","getTableData","fullData","findRowIndexOf","gridReactData","computeProxyOpts","proxyOpts","beforeQueryAll","afterQueryAll_1","afterQueryAll","ajax","_b","props_1","ajaxMethods","queryAll","params_1","sort","sortData","filters","filterData","form","formData","importByFile","beforeImportMethod","importData","importOpts","saveFile","readFile","printOpts","openImport","importConfig","importStore","importParams","isTree","import","openExport","exportConfig","openPrint","printConfig","setupGrid","extendTableMethods"],"mappings":"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","sourcesContent":["import { inject, nextTick } from 'vue';\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../../v-x-e-table/src/conf';\nimport { VXETable } from '../../v-x-e-table';\nimport { isColumnInfo, mergeBodyMethod, getCellValue } from '../../table/src/util';\nimport { parseFile, formatText } from '../../tools/utils';\nimport { warnLog, errLog } from '../../tools/log';\nimport { readLocalFile, handlePrint, saveLocalFile, createHtmlPage, getExportBlobByContent } from './util';\nvar htmlCellElem;\nvar csvBOM = '\\ufeff';\nvar enterSymbol = '\\r\\n';\nfunction defaultFilterExportColumn(column) {\n    return column.property || ['seq', 'checkbox', 'radio'].indexOf(column.type) > -1;\n}\nvar getConvertColumns = function (columns) {\n    var result = [];\n    columns.forEach(function (column) {\n        if (column.childNodes && column.childNodes.length) {\n            result.push(column);\n            result.push.apply(result, getConvertColumns(column.childNodes));\n        }\n        else {\n            result.push(column);\n        }\n    });\n    return result;\n};\nvar convertToRows = function (originColumns) {\n    var maxLevel = 1;\n    var traverse = function (column, parent) {\n        if (parent) {\n            column._level = parent._level + 1;\n            if (maxLevel < column._level) {\n                maxLevel = column._level;\n            }\n        }\n        if (column.childNodes && column.childNodes.length) {\n            var colSpan_1 = 0;\n            column.childNodes.forEach(function (subColumn) {\n                traverse(subColumn, column);\n                colSpan_1 += subColumn._colSpan;\n            });\n            column._colSpan = colSpan_1;\n        }\n        else {\n            column._colSpan = 1;\n        }\n    };\n    originColumns.forEach(function (column) {\n        column._level = 1;\n        traverse(column);\n    });\n    var rows = [];\n    for (var i = 0; i < maxLevel; i++) {\n        rows.push([]);\n    }\n    var allColumns = getConvertColumns(originColumns);\n    allColumns.forEach(function (column) {\n        if (column.childNodes && column.childNodes.length) {\n            column._rowSpan = 1;\n        }\n        else {\n            column._rowSpan = maxLevel - column._level + 1;\n        }\n        rows[column._level - 1].push(column);\n    });\n    return rows;\n};\nfunction toTableBorder(border) {\n    if (border === true) {\n        return 'full';\n    }\n    if (border) {\n        return border;\n    }\n    return 'default';\n}\nfunction getBooleanValue(cellValue) {\n    return cellValue === 'TRUE' || cellValue === 'true' || cellValue === true;\n}\nfunction getHeaderTitle(opts, column) {\n    return (opts.original ? column.property : column.getTitle()) || '';\n}\nfunction getFooterData(opts, footerTableData) {\n    var footerFilterMethod = opts.footerFilterMethod;\n    return footerFilterMethod ? footerTableData.filter(function (items, index) { return footerFilterMethod({ items: items, $rowIndex: index }); }) : footerTableData;\n}\nfunction getCsvCellTypeLabel(column, cellValue) {\n    if (cellValue) {\n        if (column.type === 'seq') {\n            return \"\\t\" + cellValue;\n        }\n        switch (column.cellType) {\n            case 'string':\n                if (!isNaN(cellValue)) {\n                    return \"\\t\" + cellValue;\n                }\n                break;\n            case 'number':\n                break;\n            default:\n                if (cellValue.length >= 12 && !isNaN(cellValue)) {\n                    return \"\\t\" + cellValue;\n                }\n                break;\n        }\n    }\n    return cellValue;\n}\nfunction toTxtCellLabel(val) {\n    if (/[\",\\s\\n]/.test(val)) {\n        return \"\\\"\" + val.replace(/\"/g, '\"\"') + \"\\\"\";\n    }\n    return val;\n}\nfunction getElementsByTagName(elem, qualifiedName) {\n    return elem.getElementsByTagName(qualifiedName);\n}\nfunction getTxtCellKey(now) {\n    return \"#\" + now + \"@\" + XEUtils.uniqueId();\n}\nfunction replaceTxtCell(cell, vMaps) {\n    return cell.replace(/#\\d+@\\d+/g, function (key) { return XEUtils.hasOwnProp(vMaps, key) ? vMaps[key] : key; });\n}\nfunction getTxtCellValue(val, vMaps) {\n    var rest = replaceTxtCell(val, vMaps);\n    return rest.replace(/^\"+$/g, function (qVal) { return '\"'.repeat(Math.ceil(qVal.length / 2)); });\n}\nfunction parseCsvAndTxt(columns, content, cellSeparator) {\n    var list = content.split(enterSymbol);\n    var rows = [];\n    var fields = [];\n    if (list.length) {\n        var vMaps_1 = {};\n        var now_1 = Date.now();\n        list.forEach(function (rVal) {\n            if (rVal) {\n                var item_1 = {};\n                rVal = rVal.replace(/(\"\")|(\\n)/g, function (text, dVal) {\n                    var key = getTxtCellKey(now_1);\n                    vMaps_1[key] = dVal ? '\"' : '\\n';\n                    return key;\n                }).replace(/\"(.*?)\"/g, function (text, cVal) {\n                    var key = getTxtCellKey(now_1);\n                    vMaps_1[key] = replaceTxtCell(cVal, vMaps_1);\n                    return key;\n                });\n                var cells = rVal.split(cellSeparator);\n                if (!fields.length) {\n                    fields = cells.map(function (val) { return getTxtCellValue(val.trim(), vMaps_1); });\n                }\n                else {\n                    cells.forEach(function (val, colIndex) {\n                        if (colIndex < fields.length) {\n                            item_1[fields[colIndex]] = getTxtCellValue(val.trim(), vMaps_1);\n                        }\n                    });\n                    rows.push(item_1);\n                }\n            }\n        });\n    }\n    return { fields: fields, rows: rows };\n}\nfunction parseCsv(columns, content) {\n    return parseCsvAndTxt(columns, content, ',');\n}\nfunction parseTxt(columns, content) {\n    return parseCsvAndTxt(columns, content, '\\t');\n}\nfunction parseHTML(columns, content) {\n    var domParser = new DOMParser();\n    var xmlDoc = domParser.parseFromString(content, 'text/html');\n    var bodyNodes = getElementsByTagName(xmlDoc, 'body');\n    var rows = [];\n    var fields = [];\n    if (bodyNodes.length) {\n        var tableNodes = getElementsByTagName(bodyNodes[0], 'table');\n        if (tableNodes.length) {\n            var theadNodes = getElementsByTagName(tableNodes[0], 'thead');\n            if (theadNodes.length) {\n                XEUtils.arrayEach(getElementsByTagName(theadNodes[0], 'tr'), function (rowNode) {\n                    XEUtils.arrayEach(getElementsByTagName(rowNode, 'th'), function (cellNode) {\n                        fields.push(cellNode.textContent);\n                    });\n                });\n                var tbodyNodes = getElementsByTagName(tableNodes[0], 'tbody');\n                if (tbodyNodes.length) {\n                    XEUtils.arrayEach(getElementsByTagName(tbodyNodes[0], 'tr'), function (rowNode) {\n                        var item = {};\n                        XEUtils.arrayEach(getElementsByTagName(rowNode, 'td'), function (cellNode, colIndex) {\n                            if (fields[colIndex]) {\n                                item[fields[colIndex]] = cellNode.textContent || '';\n                            }\n                        });\n                        rows.push(item);\n                    });\n                }\n            }\n        }\n    }\n    return { fields: fields, rows: rows };\n}\nfunction parseXML(columns, content) {\n    var domParser = new DOMParser();\n    var xmlDoc = domParser.parseFromString(content, 'application/xml');\n    var sheetNodes = getElementsByTagName(xmlDoc, 'Worksheet');\n    var rows = [];\n    var fields = [];\n    if (sheetNodes.length) {\n        var tableNodes = getElementsByTagName(sheetNodes[0], 'Table');\n        if (tableNodes.length) {\n            var rowNodes = getElementsByTagName(tableNodes[0], 'Row');\n            if (rowNodes.length) {\n                XEUtils.arrayEach(getElementsByTagName(rowNodes[0], 'Cell'), function (cellNode) {\n                    fields.push(cellNode.textContent);\n                });\n                XEUtils.arrayEach(rowNodes, function (rowNode, index) {\n                    if (index) {\n                        var item_2 = {};\n                        var cellNodes = getElementsByTagName(rowNode, 'Cell');\n                        XEUtils.arrayEach(cellNodes, function (cellNode, colIndex) {\n                            if (fields[colIndex]) {\n                                item_2[fields[colIndex]] = cellNode.textContent;\n                            }\n                        });\n                        rows.push(item_2);\n                    }\n                });\n            }\n        }\n    }\n    return { fields: fields, rows: rows };\n}\nfunction clearColumnConvert(columns) {\n    XEUtils.eachTree(columns, function (column) {\n        delete column._level;\n        delete column._colSpan;\n        delete column._rowSpan;\n        delete column._children;\n        delete column.childNodes;\n    }, { children: 'children' });\n}\n/**\n * 检查导入的列是否完整\n * @param {Array} fields 字段名列表\n * @param {Array} rows 数据列表\n */\nfunction checkImportData(columns, fields) {\n    var tableFields = [];\n    columns.forEach(function (column) {\n        var field = column.property;\n        if (field) {\n            tableFields.push(field);\n        }\n    });\n    return fields.some(function (field) { return tableFields.indexOf(field) > -1; });\n}\nvar tableExportMethodKeys = ['exportData', 'importByFile', 'importData', 'saveFile', 'readFile', 'print', 'openImport', 'openExport', 'openPrint'];\nvar tableExportHook = {\n    setupTable: function ($xetable) {\n        var props = $xetable.props, reactData = $xetable.reactData, internalData = $xetable.internalData;\n        var _a = $xetable.getComputeMaps(), computeTreeOpts = _a.computeTreeOpts, computePrintOpts = _a.computePrintOpts, computeExportOpts = _a.computeExportOpts, computeImportOpts = _a.computeImportOpts, computeCustomOpts = _a.computeCustomOpts, computeSeqOpts = _a.computeSeqOpts, computeRadioOpts = _a.computeRadioOpts, computeCheckboxOpts = _a.computeCheckboxOpts;\n        var $xegrid = inject('$xegrid', null);\n        var hasTreeChildren = function (row) {\n            var treeOpts = computeTreeOpts.value;\n            return row[treeOpts.children] && row[treeOpts.children].length;\n        };\n        var getSeq = function (row, $rowIndex, column, $columnIndex) {\n            var seqOpts = computeSeqOpts.value;\n            var seqMethod = seqOpts.seqMethod || column.seqMethod;\n            if (seqMethod) {\n                return seqMethod({\n                    row: row,\n                    rowIndex: $xetable.getRowIndex(row),\n                    $rowIndex: $rowIndex,\n                    column: column,\n                    columnIndex: $xetable.getColumnIndex(column),\n                    $columnIndex: $columnIndex\n                });\n            }\n            return $xetable.getRowSeq(row);\n        };\n        var toBooleanValue = function (cellValue) {\n            return XEUtils.isBoolean(cellValue) ? (cellValue ? 'TRUE' : 'FALSE') : cellValue;\n        };\n        var getLabelData = function (opts, columns, datas) {\n            var isAllExpand = opts.isAllExpand, mode = opts.mode;\n            var treeConfig = props.treeConfig;\n            var radioOpts = computeRadioOpts.value;\n            var checkboxOpts = computeCheckboxOpts.value;\n            var treeOpts = computeTreeOpts.value;\n            if (!htmlCellElem) {\n                htmlCellElem = document.createElement('div');\n            }\n            if (treeConfig) {\n                // 如果是树表格只允许导出数据源\n                var rest_1 = [];\n                var expandMaps_1 = new Map();\n                XEUtils.eachTree(datas, function (item, $rowIndex, items, path, parent, nodes) {\n                    var row = item._row || item;\n                    var parentRow = parent && parent._row ? parent._row : parent;\n                    if ((isAllExpand || !parentRow || (expandMaps_1.has(parentRow) && $xetable.isTreeExpandByRow(parentRow)))) {\n                        var hasRowChild = hasTreeChildren(row);\n                        var item_3 = {\n                            _row: row,\n                            _level: nodes.length - 1,\n                            _hasChild: hasRowChild,\n                            _expand: hasRowChild && $xetable.isTreeExpandByRow(row)\n                        };\n                        columns.forEach(function (column, $columnIndex) {\n                            var cellValue = '';\n                            var renderOpts = column.editRender || column.cellRender;\n                            var exportLabelMethod = column.exportMethod;\n                            if (!exportLabelMethod && renderOpts && renderOpts.name) {\n                                var compConf = VXETable.renderer.get(renderOpts.name);\n                                if (compConf) {\n                                    exportLabelMethod = compConf.exportMethod;\n                                }\n                            }\n                            if (exportLabelMethod) {\n                                cellValue = exportLabelMethod({ $table: $xetable, row: row, column: column, options: opts });\n                            }\n                            else {\n                                switch (column.type) {\n                                    case 'seq':\n                                        cellValue = mode === 'all' ? path.map(function (num, i) { return i % 2 === 0 ? (Number(num) + 1) : '.'; }).join('') : getSeq(row, $rowIndex, column, $columnIndex);\n                                        break;\n                                    case 'checkbox':\n                                        cellValue = toBooleanValue($xetable.isCheckedByCheckboxRow(row));\n                                        item_3._checkboxLabel = checkboxOpts.labelField ? XEUtils.get(row, checkboxOpts.labelField) : '';\n                                        item_3._checkboxDisabled = checkboxOpts.checkMethod && !checkboxOpts.checkMethod({ row: row });\n                                        break;\n                                    case 'radio':\n                                        cellValue = toBooleanValue($xetable.isCheckedByRadioRow(row));\n                                        item_3._radioLabel = radioOpts.labelField ? XEUtils.get(row, radioOpts.labelField) : '';\n                                        item_3._radioDisabled = radioOpts.checkMethod && !radioOpts.checkMethod({ row: row });\n                                        break;\n                                    default:\n                                        if (opts.original) {\n                                            cellValue = getCellValue(row, column);\n                                        }\n                                        else {\n                                            cellValue = $xetable.getCellLabel(row, column);\n                                            if (column.type === 'html') {\n                                                htmlCellElem.innerHTML = cellValue;\n                                                cellValue = htmlCellElem.innerText.trim();\n                                            }\n                                            else {\n                                                var cell = $xetable.getCell(row, column);\n                                                if (cell) {\n                                                    cellValue = cell.innerText.trim();\n                                                }\n                                            }\n                                        }\n                                }\n                            }\n                            item_3[column.id] = XEUtils.toValueString(cellValue);\n                        });\n                        expandMaps_1.set(row, 1);\n                        rest_1.push(Object.assign(item_3, row));\n                    }\n                }, treeOpts);\n                return rest_1;\n            }\n            return datas.map(function (row, $rowIndex) {\n                var item = {\n                    _row: row\n                };\n                columns.forEach(function (column, $columnIndex) {\n                    var cellValue = '';\n                    var renderOpts = column.editRender || column.cellRender;\n                    var exportLabelMethod = column.exportMethod;\n                    if (!exportLabelMethod && renderOpts && renderOpts.name) {\n                        var compConf = VXETable.renderer.get(renderOpts.name);\n                        if (compConf) {\n                            exportLabelMethod = compConf.exportMethod;\n                        }\n                    }\n                    if (exportLabelMethod) {\n                        cellValue = exportLabelMethod({ $table: $xetable, row: row, column: column, options: opts });\n                    }\n                    else {\n                        switch (column.type) {\n                            case 'seq':\n                                cellValue = mode === 'all' ? $rowIndex + 1 : getSeq(row, $rowIndex, column, $columnIndex);\n                                break;\n                            case 'checkbox':\n                                cellValue = toBooleanValue($xetable.isCheckedByCheckboxRow(row));\n                                item._checkboxLabel = checkboxOpts.labelField ? XEUtils.get(row, checkboxOpts.labelField) : '';\n                                item._checkboxDisabled = checkboxOpts.checkMethod && !checkboxOpts.checkMethod({ row: row });\n                                break;\n                            case 'radio':\n                                cellValue = toBooleanValue($xetable.isCheckedByRadioRow(row));\n                                item._radioLabel = radioOpts.labelField ? XEUtils.get(row, radioOpts.labelField) : '';\n                                item._radioDisabled = radioOpts.checkMethod && !radioOpts.checkMethod({ row: row });\n                                break;\n                            default:\n                                if (opts.original) {\n                                    cellValue = getCellValue(row, column);\n                                }\n                                else {\n                                    cellValue = $xetable.getCellLabel(row, column);\n                                    if (column.type === 'html') {\n                                        htmlCellElem.innerHTML = cellValue;\n                                        cellValue = htmlCellElem.innerText.trim();\n                                    }\n                                    else {\n                                        var cell = $xetable.getCell(row, column);\n                                        if (cell) {\n                                            cellValue = cell.innerText.trim();\n                                        }\n                                    }\n                                }\n                        }\n                    }\n                    item[column.id] = XEUtils.toValueString(cellValue);\n                });\n                return item;\n            });\n        };\n        var getExportData = function (opts) {\n            var columns = opts.columns, dataFilterMethod = opts.dataFilterMethod;\n            var datas = opts.data;\n            if (dataFilterMethod) {\n                datas = datas.filter(function (row, index) { return dataFilterMethod({ row: row, $rowIndex: index }); });\n            }\n            return getLabelData(opts, columns, datas);\n        };\n        var getFooterCellValue = function (opts, items, column) {\n            var renderOpts = column.editRender || column.cellRender;\n            var exportLabelMethod = column.footerExportMethod;\n            if (!exportLabelMethod && renderOpts && renderOpts.name) {\n                var compConf = VXETable.renderer.get(renderOpts.name);\n                if (compConf) {\n                    exportLabelMethod = compConf.footerExportMethod;\n                }\n            }\n            var _columnIndex = $xetable.getVTColumnIndex(column);\n            var cellValue = exportLabelMethod ? exportLabelMethod({ $table: $xetable, items: items, itemIndex: _columnIndex, _columnIndex: _columnIndex, column: column, options: opts }) : XEUtils.toValueString(items[_columnIndex]);\n            return cellValue;\n        };\n        var toCsv = function (opts, columns, datas) {\n            var content = csvBOM;\n            if (opts.isHeader) {\n                content += columns.map(function (column) { return toTxtCellLabel(getHeaderTitle(opts, column)); }).join(',') + enterSymbol;\n            }\n            datas.forEach(function (row) {\n                content += columns.map(function (column) { return toTxtCellLabel(getCsvCellTypeLabel(column, row[column.id])); }).join(',') + enterSymbol;\n            });\n            if (opts.isFooter) {\n                var footerTableData = reactData.footerTableData;\n                var footers = getFooterData(opts, footerTableData);\n                footers.forEach(function (rows) {\n                    content += columns.map(function (column) { return toTxtCellLabel(getFooterCellValue(opts, rows, column)); }).join(',') + enterSymbol;\n                });\n            }\n            return content;\n        };\n        var toTxt = function (opts, columns, datas) {\n            var content = '';\n            if (opts.isHeader) {\n                content += columns.map(function (column) { return toTxtCellLabel(getHeaderTitle(opts, column)); }).join('\\t') + enterSymbol;\n            }\n            datas.forEach(function (row) {\n                content += columns.map(function (column) { return toTxtCellLabel(row[column.id]); }).join('\\t') + enterSymbol;\n            });\n            if (opts.isFooter) {\n                var footerTableData = reactData.footerTableData;\n                var footers = getFooterData(opts, footerTableData);\n                footers.forEach(function (rows) {\n                    content += columns.map(function (column) { return toTxtCellLabel(getFooterCellValue(opts, rows, column)); }).join(',') + enterSymbol;\n                });\n            }\n            return content;\n        };\n        var hasEllipsis = function (column, property, allColumnOverflow) {\n            var columnOverflow = column[property];\n            var headOverflow = XEUtils.isUndefined(columnOverflow) || XEUtils.isNull(columnOverflow) ? allColumnOverflow : columnOverflow;\n            var showEllipsis = headOverflow === 'ellipsis';\n            var showTitle = headOverflow === 'title';\n            var showTooltip = headOverflow === true || headOverflow === 'tooltip';\n            var isEllipsis = showTitle || showTooltip || showEllipsis;\n            // 虚拟滚动不支持动态高度\n            var scrollXLoad = reactData.scrollXLoad, scrollYLoad = reactData.scrollYLoad;\n            if ((scrollXLoad || scrollYLoad) && !isEllipsis) {\n                isEllipsis = true;\n            }\n            return isEllipsis;\n        };\n        var toHtml = function (opts, columns, datas) {\n            var id = props.id, border = props.border, treeConfig = props.treeConfig, allHeaderAlign = props.headerAlign, allAlign = props.align, allFooterAlign = props.footerAlign, allColumnOverflow = props.showOverflow, allColumnHeaderOverflow = props.showHeaderOverflow;\n            var isAllSelected = reactData.isAllSelected, isIndeterminate = reactData.isIndeterminate, mergeList = reactData.mergeList;\n            var treeOpts = computeTreeOpts.value;\n            var isPrint = opts.print, isHeader = opts.isHeader, isFooter = opts.isFooter, isColgroup = opts.isColgroup, isMerge = opts.isMerge, colgroups = opts.colgroups, original = opts.original;\n            var allCls = 'check-all';\n            var clss = [\n                'vxe-table',\n                \"border--\" + toTableBorder(border),\n                isPrint ? 'is--print' : '',\n                isHeader ? 'is--header' : ''\n            ].filter(function (cls) { return cls; });\n            var tables = [\n                \"<table class=\\\"\" + clss.join(' ') + \"\\\" border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\",\n                \"<colgroup>\" + columns.map(function (column) { return \"<col style=\\\"width:\" + column.renderWidth + \"px\\\">\"; }).join('') + \"</colgroup>\"\n            ];\n            if (isHeader) {\n                tables.push('<thead>');\n                if (isColgroup && !original) {\n                    colgroups.forEach(function (cols) {\n                        tables.push(\"<tr>\" + cols.map(function (column) {\n                            var headAlign = column.headerAlign || column.align || allHeaderAlign || allAlign;\n                            var classNames = hasEllipsis(column, 'showHeaderOverflow', allColumnHeaderOverflow) ? ['col--ellipsis'] : [];\n                            var cellTitle = getHeaderTitle(opts, column);\n                            var childWidth = 0;\n                            var countChild = 0;\n                            XEUtils.eachTree([column], function (item) {\n                                if (!item.childNodes || !column.childNodes.length) {\n                                    countChild++;\n                                }\n                                childWidth += item.renderWidth;\n                            }, { children: 'childNodes' });\n                            var cellWidth = childWidth - countChild;\n                            if (headAlign) {\n                                classNames.push(\"col--\" + headAlign);\n                            }\n                            if (column.type === 'checkbox') {\n                                return \"<th class=\\\"\" + classNames.join(' ') + \"\\\" colspan=\\\"\" + column._colSpan + \"\\\" rowspan=\\\"\" + column._rowSpan + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + cellWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" class=\\\"\" + allCls + \"\\\" \" + (isAllSelected ? 'checked' : '') + \"><span>\" + cellTitle + \"</span></div></th>\";\n                            }\n                            return \"<th class=\\\"\" + classNames.join(' ') + \"\\\" colspan=\\\"\" + column._colSpan + \"\\\" rowspan=\\\"\" + column._rowSpan + \"\\\" title=\\\"\" + cellTitle + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + cellWidth + \"px\\\"\") + \"><span>\" + formatText(cellTitle, true) + \"</span></div></th>\";\n                        }).join('') + \"</tr>\");\n                    });\n                }\n                else {\n                    tables.push(\"<tr>\" + columns.map(function (column) {\n                        var headAlign = column.headerAlign || column.align || allHeaderAlign || allAlign;\n                        var classNames = hasEllipsis(column, 'showHeaderOverflow', allColumnHeaderOverflow) ? ['col--ellipsis'] : [];\n                        var cellTitle = getHeaderTitle(opts, column);\n                        if (headAlign) {\n                            classNames.push(\"col--\" + headAlign);\n                        }\n                        if (column.type === 'checkbox') {\n                            return \"<th class=\\\"\" + classNames.join(' ') + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" class=\\\"\" + allCls + \"\\\" \" + (isAllSelected ? 'checked' : '') + \"><span>\" + cellTitle + \"</span></div></th>\";\n                        }\n                        return \"<th class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellTitle + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><span>\" + formatText(cellTitle, true) + \"</span></div></th>\";\n                    }).join('') + \"</tr>\");\n                }\n                tables.push('</thead>');\n            }\n            if (datas.length) {\n                tables.push('<tbody>');\n                if (treeConfig) {\n                    datas.forEach(function (item) {\n                        tables.push('<tr>' + columns.map(function (column) {\n                            var cellAlign = column.align || allAlign;\n                            var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];\n                            var cellValue = item[column.id];\n                            if (cellAlign) {\n                                classNames.push(\"col--\" + cellAlign);\n                            }\n                            if (column.treeNode) {\n                                var treeIcon = '';\n                                if (item._hasChild) {\n                                    treeIcon = \"<i class=\\\"\" + (item._expand ? 'vxe-table--tree-fold-icon' : 'vxe-table--tree-unfold-icon') + \"\\\"></i>\";\n                                }\n                                classNames.push('vxe-table--tree-node');\n                                if (column.type === 'radio') {\n                                    return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><div class=\\\"vxe-table--tree-node-wrapper\\\" style=\\\"padding-left: \" + item._level * treeOpts.indent + \"px\\\"><div class=\\\"vxe-table--tree-icon-wrapper\\\">\" + treeIcon + \"</div><div class=\\\"vxe-table--tree-cell\\\"><input type=\\\"radio\\\" name=\\\"radio_\" + id + \"\\\" \" + (item._radioDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._radioLabel + \"</span></div></div></div></td>\";\n                                }\n                                else if (column.type === 'checkbox') {\n                                    return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><div class=\\\"vxe-table--tree-node-wrapper\\\" style=\\\"padding-left: \" + item._level * treeOpts.indent + \"px\\\"><div class=\\\"vxe-table--tree-icon-wrapper\\\">\" + treeIcon + \"</div><div class=\\\"vxe-table--tree-cell\\\"><input type=\\\"checkbox\\\" \" + (item._checkboxDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._checkboxLabel + \"</span></div></div></div></td>\";\n                                }\n                                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><div class=\\\"vxe-table--tree-node-wrapper\\\" style=\\\"padding-left: \" + item._level * treeOpts.indent + \"px\\\"><div class=\\\"vxe-table--tree-icon-wrapper\\\">\" + treeIcon + \"</div><div class=\\\"vxe-table--tree-cell\\\">\" + cellValue + \"</div></div></div></td>\";\n                            }\n                            if (column.type === 'radio') {\n                                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"radio\\\" name=\\\"radio_\" + id + \"\\\" \" + (item._radioDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._radioLabel + \"</span></div></td>\";\n                            }\n                            else if (column.type === 'checkbox') {\n                                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" \" + (item._checkboxDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._checkboxLabel + \"</span></div></td>\";\n                            }\n                            return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \">\" + formatText(cellValue, true) + \"</div></td>\";\n                        }).join('') + '</tr>');\n                    });\n                }\n                else {\n                    datas.forEach(function (item) {\n                        tables.push('<tr>' + columns.map(function (column) {\n                            var cellAlign = column.align || allAlign;\n                            var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];\n                            var cellValue = item[column.id];\n                            var rowSpan = 1;\n                            var colSpan = 1;\n                            if (isMerge && mergeList.length) {\n                                var _rowIndex = $xetable.getVTRowIndex(item._row);\n                                var _columnIndex = $xetable.getVTColumnIndex(column);\n                                var spanRest = mergeBodyMethod(mergeList, _rowIndex, _columnIndex);\n                                if (spanRest) {\n                                    var rowspan = spanRest.rowspan, colspan = spanRest.colspan;\n                                    if (!rowspan || !colspan) {\n                                        return '';\n                                    }\n                                    if (rowspan > 1) {\n                                        rowSpan = rowspan;\n                                    }\n                                    if (colspan > 1) {\n                                        colSpan = colspan;\n                                    }\n                                }\n                            }\n                            if (cellAlign) {\n                                classNames.push(\"col--\" + cellAlign);\n                            }\n                            if (column.type === 'radio') {\n                                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" rowspan=\\\"\" + rowSpan + \"\\\" colspan=\\\"\" + colSpan + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"radio\\\" name=\\\"radio_\" + id + \"\\\" \" + (item._radioDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._radioLabel + \"</span></div></td>\";\n                            }\n                            else if (column.type === 'checkbox') {\n                                return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" rowspan=\\\"\" + rowSpan + \"\\\" colspan=\\\"\" + colSpan + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \"><input type=\\\"checkbox\\\" \" + (item._checkboxDisabled ? 'disabled ' : '') + (getBooleanValue(cellValue) ? 'checked' : '') + \"><span>\" + item._checkboxLabel + \"</span></div></td>\";\n                            }\n                            return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" rowspan=\\\"\" + rowSpan + \"\\\" colspan=\\\"\" + colSpan + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \">\" + formatText(cellValue, true) + \"</div></td>\";\n                        }).join('') + '</tr>');\n                    });\n                }\n                tables.push('</tbody>');\n            }\n            if (isFooter) {\n                var footerTableData = reactData.footerTableData;\n                var footers = getFooterData(opts, footerTableData);\n                if (footers.length) {\n                    tables.push('<tfoot>');\n                    footers.forEach(function (rows) {\n                        tables.push(\"<tr>\" + columns.map(function (column) {\n                            var footAlign = column.footerAlign || column.align || allFooterAlign || allAlign;\n                            var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];\n                            var cellValue = getFooterCellValue(opts, rows, column);\n                            if (footAlign) {\n                                classNames.push(\"col--\" + footAlign);\n                            }\n                            return \"<td class=\\\"\" + classNames.join(' ') + \"\\\" title=\\\"\" + cellValue + \"\\\"><div \" + (isPrint ? '' : \"style=\\\"width: \" + column.renderWidth + \"px\\\"\") + \">\" + formatText(cellValue, true) + \"</div></td>\";\n                        }).join('') + \"</tr>\");\n                    });\n                    tables.push('</tfoot>');\n                }\n            }\n            // 是否半选状态\n            var script = !isAllSelected && isIndeterminate ? \"<script>(function(){var a=document.querySelector(\\\".\" + allCls + \"\\\");if(a){a.indeterminate=true}})()</script>\" : '';\n            tables.push('</table>', script);\n            return isPrint ? tables.join('') : createHtmlPage(opts, tables.join(''));\n        };\n        var toXML = function (opts, columns, datas) {\n            var xml = [\n                '<?xml version=\"1.0\"?>',\n                '<?mso-application progid=\"Excel.Sheet\"?>',\n                '<Workbook xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:html=\"http://www.w3.org/TR/REC-html40\">',\n                '<DocumentProperties xmlns=\"urn:schemas-microsoft-com:office:office\">',\n                '<Version>16.00</Version>',\n                '</DocumentProperties>',\n                '<ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\">',\n                '<WindowHeight>7920</WindowHeight>',\n                '<WindowWidth>21570</WindowWidth>',\n                '<WindowTopX>32767</WindowTopX>',\n                '<WindowTopY>32767</WindowTopY>',\n                '<ProtectStructure>False</ProtectStructure>',\n                '<ProtectWindows>False</ProtectWindows>',\n                '</ExcelWorkbook>',\n                \"<Worksheet ss:Name=\\\"\" + opts.sheetName + \"\\\">\",\n                '<Table>',\n                columns.map(function (column) { return \"<Column ss:Width=\\\"\" + column.renderWidth + \"\\\"/>\"; }).join('')\n            ].join('');\n            if (opts.isHeader) {\n                xml += \"<Row>\" + columns.map(function (column) { return \"<Cell><Data ss:Type=\\\"String\\\">\" + getHeaderTitle(opts, column) + \"</Data></Cell>\"; }).join('') + \"</Row>\";\n            }\n            datas.forEach(function (row) {\n                xml += '<Row>' + columns.map(function (column) { return \"<Cell><Data ss:Type=\\\"String\\\">\" + row[column.id] + \"</Data></Cell>\"; }).join('') + '</Row>';\n            });\n            if (opts.isFooter) {\n                var footerTableData = reactData.footerTableData;\n                var footers = getFooterData(opts, footerTableData);\n                footers.forEach(function (rows) {\n                    xml += \"<Row>\" + columns.map(function (column) { return \"<Cell><Data ss:Type=\\\"String\\\">\" + getFooterCellValue(opts, rows, column) + \"</Data></Cell>\"; }).join('') + \"</Row>\";\n                });\n            }\n            return xml + \"</Table></Worksheet></Workbook>\";\n        };\n        var getContent = function (opts, columns, datas) {\n            if (columns.length) {\n                switch (opts.type) {\n                    case 'csv':\n                        return toCsv(opts, columns, datas);\n                    case 'txt':\n                        return toTxt(opts, columns, datas);\n                    case 'html':\n                        return toHtml(opts, columns, datas);\n                    case 'xml':\n                        return toXML(opts, columns, datas);\n                }\n            }\n            return '';\n        };\n        var downloadFile = function (opts, content) {\n            var filename = opts.filename, type = opts.type, download = opts.download;\n            if (!download) {\n                var blob = getExportBlobByContent(content, opts);\n                return Promise.resolve({ type: type, content: content, blob: blob });\n            }\n            saveLocalFile({ filename: filename, type: type, content: content }).then(function () {\n                if (opts.message !== false) {\n                    // 检测弹窗模块\n                    if (process.env.NODE_ENV === 'development') {\n                        if (!VXETable.modal) {\n                            errLog('vxe.error.reqModule', ['Modal']);\n                        }\n                    }\n                    VXETable.modal.message({ content: GlobalConfig.i18n('vxe.table.expSuccess'), status: 'success' });\n                }\n            });\n        };\n        var handleExport = function (opts) {\n            var remote = opts.remote, columns = opts.columns, colgroups = opts.colgroups, exportMethod = opts.exportMethod, afterExportMethod = opts.afterExportMethod;\n            return new Promise(function (resolve) {\n                if (remote) {\n                    var params = { options: opts, $table: $xetable, $grid: $xegrid };\n                    resolve(exportMethod ? exportMethod(params) : params);\n                }\n                else {\n                    var datas_1 = getExportData(opts);\n                    resolve($xetable.preventEvent(null, 'event.export', { options: opts, columns: columns, colgroups: colgroups, datas: datas_1 }, function () {\n                        return downloadFile(opts, getContent(opts, columns, datas_1));\n                    }));\n                }\n            }).then(function (params) {\n                clearColumnConvert(columns);\n                if (!opts.print) {\n                    if (afterExportMethod) {\n                        afterExportMethod({ status: true, options: opts, $table: $xetable, $grid: $xegrid });\n                    }\n                }\n                return Object.assign({ status: true }, params);\n            }).catch(function () {\n                clearColumnConvert(columns);\n                if (!opts.print) {\n                    if (afterExportMethod) {\n                        afterExportMethod({ status: false, options: opts, $table: $xetable, $grid: $xegrid });\n                    }\n                }\n                var params = { status: false };\n                return Promise.reject(params);\n            });\n        };\n        var handleImport = function (content, opts) {\n            var tableFullColumn = internalData.tableFullColumn, _importResolve = internalData._importResolve, _importReject = internalData._importReject;\n            var rest = { fields: [], rows: [] };\n            switch (opts.type) {\n                case 'csv':\n                    rest = parseCsv(tableFullColumn, content);\n                    break;\n                case 'txt':\n                    rest = parseTxt(tableFullColumn, content);\n                    break;\n                case 'html':\n                    rest = parseHTML(tableFullColumn, content);\n                    break;\n                case 'xml':\n                    rest = parseXML(tableFullColumn, content);\n                    break;\n            }\n            var fields = rest.fields, rows = rest.rows;\n            var status = checkImportData(tableFullColumn, fields);\n            if (status) {\n                $xetable.createData(rows)\n                    .then(function (data) {\n                    var loadRest;\n                    if (opts.mode === 'insert') {\n                        loadRest = $xetable.insert(data);\n                    }\n                    else {\n                        loadRest = $xetable.reloadData(data);\n                    }\n                    if (opts.message !== false) {\n                        // 检测弹窗模块\n                        if (process.env.NODE_ENV === 'development') {\n                            if (!VXETable.modal) {\n                                errLog('vxe.error.reqModule', ['Modal']);\n                            }\n                        }\n                        VXETable.modal.message({ content: GlobalConfig.i18n('vxe.table.impSuccess', [rows.length]), status: 'success' });\n                    }\n                    return loadRest.then(function () {\n                        if (_importResolve) {\n                            _importResolve({ status: true });\n                        }\n                    });\n                });\n            }\n            else if (opts.message !== false) {\n                // 检测弹窗模块\n                if (process.env.NODE_ENV === 'development') {\n                    if (!VXETable.modal) {\n                        errLog('vxe.error.reqModule', ['Modal']);\n                    }\n                }\n                VXETable.modal.message({ content: GlobalConfig.i18n('vxe.error.impFields'), status: 'error' });\n                if (_importReject) {\n                    _importReject({ status: false });\n                }\n            }\n        };\n        var handleFileImport = function (file, opts) {\n            var importMethod = opts.importMethod, afterImportMethod = opts.afterImportMethod;\n            var _a = parseFile(file), type = _a.type, filename = _a.filename;\n            // 检查类型，如果为自定义导出，则不需要校验类型\n            if (!importMethod && !XEUtils.includes(VXETable.config.importTypes, type)) {\n                if (opts.message !== false) {\n                    // 检测弹窗模块\n                    if (process.env.NODE_ENV === 'development') {\n                        if (!VXETable.modal) {\n                            errLog('vxe.error.reqModule', ['Modal']);\n                        }\n                    }\n                    VXETable.modal.message({ content: GlobalConfig.i18n('vxe.error.notType', [type]), status: 'error' });\n                }\n                var params = { status: false };\n                return Promise.reject(params);\n            }\n            var rest = new Promise(function (resolve, reject) {\n                var _importResolve = function (params) {\n                    resolve(params);\n                    internalData._importResolve = null;\n                    internalData._importReject = null;\n                };\n                var _importReject = function (params) {\n                    reject(params);\n                    internalData._importResolve = null;\n                    internalData._importReject = null;\n                };\n                internalData._importResolve = _importResolve;\n                internalData._importReject = _importReject;\n                if (window.FileReader) {\n                    var options_1 = Object.assign({ mode: 'insert' }, opts, { type: type, filename: filename });\n                    if (options_1.remote) {\n                        if (importMethod) {\n                            Promise.resolve(importMethod({ file: file, options: options_1, $table: $xetable })).then(function () {\n                                _importResolve({ status: true });\n                            }).catch(function () {\n                                _importResolve({ status: true });\n                            });\n                        }\n                        else {\n                            _importResolve({ status: true });\n                        }\n                    }\n                    else {\n                        var tableFullColumn = internalData.tableFullColumn;\n                        $xetable.preventEvent(null, 'event.import', { file: file, options: options_1, columns: tableFullColumn }, function () {\n                            var reader = new FileReader();\n                            reader.onerror = function () {\n                                errLog('vxe.error.notType', [type]);\n                                _importReject({ status: false });\n                            };\n                            reader.onload = function (e) {\n                                handleImport(e.target.result, options_1);\n                            };\n                            reader.readAsText(file, options_1.encoding || 'UTF-8');\n                        });\n                    }\n                }\n                else {\n                    // 不支持的浏览器\n                    if (process.env.NODE_ENV === 'development') {\n                        errLog('vxe.error.notExp');\n                    }\n                    _importResolve({ status: true });\n                }\n            });\n            return rest.then(function () {\n                if (afterImportMethod) {\n                    afterImportMethod({ status: true, options: opts, $table: $xetable });\n                }\n            }).catch(function (e) {\n                if (afterImportMethod) {\n                    afterImportMethod({ status: false, options: opts, $table: $xetable });\n                }\n                return Promise.reject(e);\n            });\n        };\n        var handleExportAndPrint = function (options, isPrint) {\n            var treeConfig = props.treeConfig, showHeader = props.showHeader, showFooter = props.showFooter;\n            var initStore = reactData.initStore, mergeList = reactData.mergeList, isGroup = reactData.isGroup, footerTableData = reactData.footerTableData, exportStore = reactData.exportStore, exportParams = reactData.exportParams;\n            var collectColumn = internalData.collectColumn;\n            var hasTree = treeConfig;\n            var customOpts = computeCustomOpts.value;\n            var selectRecords = $xetable.getCheckboxRecords();\n            var hasFooter = !!footerTableData.length;\n            var hasMerge = !hasTree && mergeList.length;\n            var defOpts = Object.assign({ message: true, isHeader: showHeader, isFooter: showFooter }, options);\n            var types = defOpts.types || VXETable.config.exportTypes;\n            var modes = defOpts.modes;\n            var checkMethod = customOpts.checkMethod;\n            var exportColumns = collectColumn.slice(0);\n            var columns = defOpts.columns;\n            // 处理类型\n            var typeList = types.map(function (value) {\n                return {\n                    value: value,\n                    label: \"vxe.export.types.\" + value\n                };\n            });\n            var modeList = modes.map(function (value) {\n                return {\n                    value: value,\n                    label: \"vxe.export.modes.\" + value\n                };\n            });\n            // 默认选中\n            XEUtils.eachTree(exportColumns, function (column, index, items, path, parent) {\n                var isColGroup = column.children && column.children.length;\n                if (isColGroup || defaultFilterExportColumn(column)) {\n                    column.checked = columns ? columns.some(function (item) {\n                        if (isColumnInfo(item)) {\n                            return column === item;\n                        }\n                        else if (XEUtils.isString(item)) {\n                            return column.field === item;\n                        }\n                        else {\n                            var colid = item.id || item.colId;\n                            var type = item.type;\n                            var field = item.property || item.field;\n                            if (colid) {\n                                return column.id === colid;\n                            }\n                            else if (field && type) {\n                                return column.property === field && column.type === type;\n                            }\n                            else if (field) {\n                                return column.property === field;\n                            }\n                            else if (type) {\n                                return column.type === type;\n                            }\n                        }\n                    }) : column.visible;\n                    column.halfChecked = false;\n                    column.disabled = (parent && parent.disabled) || (checkMethod ? !checkMethod({ column: column }) : false);\n                }\n            });\n            // 更新条件\n            Object.assign(exportStore, {\n                columns: exportColumns,\n                typeList: typeList,\n                modeList: modeList,\n                hasFooter: hasFooter,\n                hasMerge: hasMerge,\n                hasTree: hasTree,\n                isPrint: isPrint,\n                hasColgroup: isGroup,\n                visible: true\n            });\n            // 默认参数\n            if (!initStore.export) {\n                Object.assign(exportParams, {\n                    mode: selectRecords.length ? 'selected' : 'current'\n                }, defOpts);\n            }\n            if (modes.indexOf(exportParams.mode) === -1) {\n                exportParams.mode = modes[0];\n            }\n            if (types.indexOf(exportParams.type) === -1) {\n                exportParams.type = types[0];\n            }\n            initStore.export = true;\n            return nextTick();\n        };\n        var exportMethods = {\n            /**\n             * 导出文件，支持 csv/html/xml/txt\n             * 如果是树表格，则默认是导出所有节点\n             * 如果是启用了虚拟滚动，则只能导出数据源，可以配合 dataFilterMethod 函数自行转换数据\n             * @param {Object} options 参数\n             */\n            exportData: function (options) {\n                var treeConfig = props.treeConfig;\n                var isGroup = reactData.isGroup, tableGroupColumn = reactData.tableGroupColumn;\n                var tableFullColumn = internalData.tableFullColumn, afterFullData = internalData.afterFullData;\n                var exportOpts = computeExportOpts.value;\n                var treeOpts = computeTreeOpts.value;\n                var opts = Object.assign({\n                    // filename: '',\n                    // sheetName: '',\n                    // original: false,\n                    // message: false,\n                    isHeader: true,\n                    isFooter: true,\n                    isColgroup: true,\n                    // isMerge: false,\n                    // isAllExpand: false,\n                    download: true,\n                    type: 'csv',\n                    mode: 'current'\n                    // data: null,\n                    // remote: false,\n                    // dataFilterMethod: null,\n                    // footerFilterMethod: null,\n                    // exportMethod: null,\n                    // columnFilterMethod: null,\n                    // beforeExportMethod: null,\n                    // afterExportMethod: null\n                }, exportOpts, {\n                    print: false\n                }, options);\n                var type = opts.type, mode = opts.mode, columns = opts.columns, original = opts.original, beforeExportMethod = opts.beforeExportMethod;\n                var groups = [];\n                var customCols = columns && columns.length ? columns : null;\n                var columnFilterMethod = opts.columnFilterMethod;\n                // 如果设置源数据，则默认导出设置了字段的列\n                if (!customCols && !columnFilterMethod) {\n                    columnFilterMethod = original ? function (_a) {\n                        var column = _a.column;\n                        return column.property;\n                    } : function (_a) {\n                        var column = _a.column;\n                        return defaultFilterExportColumn(column);\n                    };\n                }\n                if (customCols) {\n                    groups = XEUtils.searchTree(XEUtils.mapTree(customCols, function (item) {\n                        var targetColumn;\n                        if (item) {\n                            if (isColumnInfo(item)) {\n                                targetColumn = item;\n                            }\n                            else if (XEUtils.isString(item)) {\n                                targetColumn = $xetable.getColumnByField(item);\n                            }\n                            else {\n                                var colid = item.id || item.colId;\n                                var type_1 = item.type;\n                                var field_1 = item.property || item.field;\n                                if (colid) {\n                                    targetColumn = $xetable.getColumnById(colid);\n                                }\n                                else if (field_1 && type_1) {\n                                    targetColumn = tableFullColumn.find(function (column) { return column.property === field_1 && column.type === type_1; });\n                                }\n                                else if (field_1) {\n                                    targetColumn = $xetable.getColumnByField(field_1);\n                                }\n                                else if (type_1) {\n                                    targetColumn = tableFullColumn.find(function (column) { return column.type === type_1; });\n                                }\n                            }\n                            return targetColumn || {};\n                        }\n                    }, {\n                        children: 'childNodes',\n                        mapChildren: '_children'\n                    }), function (column, index) { return isColumnInfo(column) && (!columnFilterMethod || columnFilterMethod({ column: column, $columnIndex: index })); }, {\n                        children: '_children',\n                        mapChildren: 'childNodes',\n                        original: true\n                    });\n                }\n                else {\n                    groups = XEUtils.searchTree(isGroup ? tableGroupColumn : tableFullColumn, function (column, index) { return column.visible && (!columnFilterMethod || columnFilterMethod({ column: column, $columnIndex: index })); }, { children: 'children', mapChildren: 'childNodes', original: true });\n                }\n                // 获取所有列\n                var cols = [];\n                XEUtils.eachTree(groups, function (column) {\n                    var isColGroup = column.children && column.children.length;\n                    if (!isColGroup) {\n                        cols.push(column);\n                    }\n                }, { children: 'childNodes' });\n                // 构建分组层级\n                opts.columns = cols;\n                opts.colgroups = convertToRows(groups);\n                if (!opts.filename) {\n                    opts.filename = GlobalConfig.i18n(opts.original ? 'vxe.table.expOriginFilename' : 'vxe.table.expFilename', [XEUtils.toDateString(Date.now(), 'yyyyMMddHHmmss')]);\n                }\n                if (!opts.sheetName) {\n                    opts.sheetName = document.title;\n                }\n                // 检查类型，如果为自定义导出，则不需要校验类型\n                if (!opts.exportMethod && !XEUtils.includes(VXETable.config.exportTypes, type)) {\n                    if (process.env.NODE_ENV === 'development') {\n                        errLog('vxe.error.notType', [type]);\n                    }\n                    var params = { status: false };\n                    return Promise.reject(params);\n                }\n                if (!opts.print) {\n                    if (beforeExportMethod) {\n                        beforeExportMethod({ options: opts, $table: $xetable, $grid: $xegrid });\n                    }\n                }\n                if (!opts.data) {\n                    opts.data = afterFullData;\n                    if (mode === 'selected') {\n                        var selectRecords_1 = $xetable.getCheckboxRecords();\n                        if (['html', 'pdf'].indexOf(type) > -1 && treeConfig) {\n                            opts.data = XEUtils.searchTree($xetable.getTableData().fullData, function (item) { return $xetable.findRowIndexOf(selectRecords_1, item) > -1; }, Object.assign({}, treeOpts, { data: '_row' }));\n                        }\n                        else {\n                            opts.data = selectRecords_1;\n                        }\n                    }\n                    else if (mode === 'all') {\n                        if (process.env.NODE_ENV === 'development') {\n                            if (!$xegrid) {\n                                warnLog('vxe.error.errProp', ['all', 'mode=current,selected']);\n                            }\n                        }\n                        if ($xegrid && !opts.remote) {\n                            var gridReactData = $xegrid.reactData;\n                            var computeProxyOpts = $xegrid.getComputeMaps().computeProxyOpts;\n                            var proxyOpts = computeProxyOpts.value;\n                            var beforeQueryAll = proxyOpts.beforeQueryAll, afterQueryAll_1 = proxyOpts.afterQueryAll, _a = proxyOpts.ajax, ajax = _a === void 0 ? {} : _a, _b = proxyOpts.props, props_1 = _b === void 0 ? {} : _b;\n                            var ajaxMethods = ajax.queryAll;\n                            if (process.env.NODE_ENV === 'development') {\n                                if (!ajaxMethods) {\n                                    warnLog('vxe.error.notFunc', ['proxy-config.ajax.queryAll']);\n                                }\n                            }\n                            if (ajaxMethods) {\n                                var params_1 = {\n                                    $table: $xetable,\n                                    $grid: $xegrid,\n                                    sort: gridReactData.sortData,\n                                    filters: gridReactData.filterData,\n                                    form: gridReactData.formData,\n                                    target: ajaxMethods,\n                                    options: opts\n                                };\n                                return Promise.resolve((beforeQueryAll || ajaxMethods)(params_1))\n                                    .catch(function (e) { return e; })\n                                    .then(function (rest) {\n                                    opts.data = (props_1.list ? XEUtils.get(rest, props_1.list) : rest) || [];\n                                    if (afterQueryAll_1) {\n                                        afterQueryAll_1(params_1);\n                                    }\n                                    return handleExport(opts);\n                                });\n                            }\n                        }\n                    }\n                }\n                return handleExport(opts);\n            },\n            importByFile: function (file, options) {\n                var opts = Object.assign({}, options);\n                var beforeImportMethod = opts.beforeImportMethod;\n                if (beforeImportMethod) {\n                    beforeImportMethod({ options: opts, $table: $xetable });\n                }\n                return handleFileImport(file, opts);\n            },\n            importData: function (options) {\n                var importOpts = computeImportOpts.value;\n                var opts = Object.assign({\n                    types: VXETable.config.importTypes\n                    // beforeImportMethod: null,\n                    // afterImportMethod: null\n                }, importOpts, options);\n                var beforeImportMethod = opts.beforeImportMethod, afterImportMethod = opts.afterImportMethod;\n                if (beforeImportMethod) {\n                    beforeImportMethod({ options: opts, $table: $xetable });\n                }\n                return readLocalFile(opts).catch(function (e) {\n                    if (afterImportMethod) {\n                        afterImportMethod({ status: false, options: opts, $table: $xetable });\n                    }\n                    return Promise.reject(e);\n                }).then(function (params) {\n                    var file = params.file;\n                    return handleFileImport(file, opts);\n                });\n            },\n            saveFile: function (options) {\n                return saveLocalFile(options);\n            },\n            readFile: function (options) {\n                return readLocalFile(options);\n            },\n            print: function (options) {\n                var printOpts = computePrintOpts.value;\n                var opts = Object.assign({\n                    original: false\n                    // beforePrintMethod\n                }, printOpts, options, {\n                    type: 'html',\n                    download: false,\n                    remote: false,\n                    print: true\n                });\n                if (!opts.sheetName) {\n                    opts.sheetName = document.title;\n                }\n                return new Promise(function (resolve) {\n                    if (opts.content) {\n                        resolve(handlePrint($xetable, opts, opts.content));\n                    }\n                    else {\n                        resolve(exportMethods.exportData(opts).then(function (_a) {\n                            var content = _a.content;\n                            return handlePrint($xetable, opts, content);\n                        }));\n                    }\n                });\n            },\n            openImport: function (options) {\n                var treeConfig = props.treeConfig, importConfig = props.importConfig;\n                var initStore = reactData.initStore, importStore = reactData.importStore, importParams = reactData.importParams;\n                var importOpts = computeImportOpts.value;\n                var defOpts = Object.assign({ mode: 'insert', message: true, types: VXETable.config.importTypes }, options, importOpts);\n                var types = defOpts.types;\n                var isTree = !!treeConfig;\n                if (isTree) {\n                    if (defOpts.message) {\n                        VXETable.modal.message({ content: GlobalConfig.i18n('vxe.error.treeNotImp'), status: 'error' });\n                    }\n                    return;\n                }\n                if (!importConfig) {\n                    errLog('vxe.error.reqProp', ['import-config']);\n                }\n                // 处理类型\n                var typeList = types.map(function (value) {\n                    return {\n                        value: value,\n                        label: \"vxe.export.types.\" + value\n                    };\n                });\n                var modeList = defOpts.modes.map(function (value) {\n                    return {\n                        value: value,\n                        label: \"vxe.import.modes.\" + value\n                    };\n                });\n                Object.assign(importStore, {\n                    file: null,\n                    type: '',\n                    filename: '',\n                    modeList: modeList,\n                    typeList: typeList,\n                    visible: true\n                });\n                Object.assign(importParams, defOpts);\n                initStore.import = true;\n            },\n            openExport: function (options) {\n                var exportOpts = computeExportOpts.value;\n                if (process.env.NODE_ENV === 'development') {\n                    if (!props.exportConfig) {\n                        errLog('vxe.error.reqProp', ['export-config']);\n                    }\n                }\n                handleExportAndPrint(Object.assign({}, exportOpts, options));\n            },\n            openPrint: function (options) {\n                var printOpts = computePrintOpts.value;\n                if (process.env.NODE_ENV === 'development') {\n                    if (!props.printConfig) {\n                        errLog('vxe.error.reqProp', ['print-config']);\n                    }\n                }\n                handleExportAndPrint(Object.assign({}, printOpts, options), true);\n            }\n        };\n        return exportMethods;\n    },\n    setupGrid: function ($xegrid) {\n        return $xegrid.extendTableMethods(tableExportMethodKeys);\n    }\n};\nexport default tableExportHook;\n"]},"metadata":{},"sourceType":"module"}