{"ast":null,"code":"var helperCreateTreeFunc = require('./helperCreateTreeFunc');\n\nvar arrayEach = require('./arrayEach');\n\nvar assign = require('./assign');\n\nfunction searchTreeItem(parentAllow, parent, obj, iterate, context, path, node, parseChildren, opts) {\n  var paths, nodes, rest, isAllow, hasChild;\n  var rests = [];\n  var hasOriginal = opts.original;\n  var sourceData = opts.data;\n  var mapChildren = opts.mapChildren || parseChildren;\n  arrayEach(obj, function (item, index) {\n    paths = path.concat(['' + index]);\n    nodes = node.concat([item]);\n    isAllow = parentAllow || iterate.call(context, item, index, obj, paths, parent, nodes);\n    hasChild = parseChildren && item[parseChildren];\n\n    if (isAllow || hasChild) {\n      if (hasOriginal) {\n        rest = item;\n      } else {\n        rest = assign({}, item);\n\n        if (sourceData) {\n          rest[sourceData] = item;\n        }\n      }\n\n      rest[mapChildren] = searchTreeItem(isAllow, item, item[parseChildren], iterate, context, paths, nodes, parseChildren, opts);\n\n      if (isAllow || rest[mapChildren].length) {\n        rests.push(rest);\n      }\n    } else if (isAllow) {\n      rests.push(rest);\n    }\n  });\n  return rests;\n}\n/**\r\n  * 从树结构中根据回调查找数据\r\n  *\r\n  * @param {Object} obj 对象/数组\r\n  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调\r\n  * @param {Object} options {children: 'children'}\r\n  * @param {Object} context 上下文\r\n  * @return {Array}\r\n  */\n\n\nvar searchTree = helperCreateTreeFunc(function (parent, obj, iterate, context, path, nodes, parseChildren, opts) {\n  return searchTreeItem(0, parent, obj, iterate, context, path, nodes, parseChildren, opts);\n});\nmodule.exports = searchTree;","map":{"version":3,"sources":["/Users/lyong/Desktop/myproj/appfront/node_modules/xe-utils/searchTree.js"],"names":["helperCreateTreeFunc","require","arrayEach","assign","searchTreeItem","parentAllow","parent","obj","iterate","context","path","node","parseChildren","opts","paths","nodes","rest","isAllow","hasChild","rests","hasOriginal","original","sourceData","data","mapChildren","item","index","concat","call","length","push","searchTree","module","exports"],"mappings":"AAAA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASG,cAAT,CAAyBC,WAAzB,EAAsCC,MAAtC,EAA8CC,GAA9C,EAAmDC,OAAnD,EAA4DC,OAA5D,EAAqEC,IAArE,EAA2EC,IAA3E,EAAiFC,aAAjF,EAAgGC,IAAhG,EAAsG;AACpG,MAAIC,KAAJ,EAAWC,KAAX,EAAkBC,IAAlB,EAAwBC,OAAxB,EAAiCC,QAAjC;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAGP,IAAI,CAACQ,QAAvB;AACA,MAAIC,UAAU,GAAGT,IAAI,CAACU,IAAtB;AACA,MAAIC,WAAW,GAAGX,IAAI,CAACW,WAAL,IAAoBZ,aAAtC;AACAV,EAAAA,SAAS,CAACK,GAAD,EAAM,UAAUkB,IAAV,EAAgBC,KAAhB,EAAuB;AACpCZ,IAAAA,KAAK,GAAGJ,IAAI,CAACiB,MAAL,CAAY,CAAC,KAAKD,KAAN,CAAZ,CAAR;AACAX,IAAAA,KAAK,GAAGJ,IAAI,CAACgB,MAAL,CAAY,CAACF,IAAD,CAAZ,CAAR;AACAR,IAAAA,OAAO,GAAGZ,WAAW,IAAIG,OAAO,CAACoB,IAAR,CAAanB,OAAb,EAAsBgB,IAAtB,EAA4BC,KAA5B,EAAmCnB,GAAnC,EAAwCO,KAAxC,EAA+CR,MAA/C,EAAuDS,KAAvD,CAAzB;AACAG,IAAAA,QAAQ,GAAGN,aAAa,IAAIa,IAAI,CAACb,aAAD,CAAhC;;AACA,QAAIK,OAAO,IAAIC,QAAf,EAAyB;AACvB,UAAIE,WAAJ,EAAiB;AACfJ,QAAAA,IAAI,GAAGS,IAAP;AACD,OAFD,MAEO;AACLT,QAAAA,IAAI,GAAGb,MAAM,CAAC,EAAD,EAAKsB,IAAL,CAAb;;AACA,YAAIH,UAAJ,EAAgB;AACdN,UAAAA,IAAI,CAACM,UAAD,CAAJ,GAAmBG,IAAnB;AACD;AACF;;AACDT,MAAAA,IAAI,CAACQ,WAAD,CAAJ,GAAoBpB,cAAc,CAACa,OAAD,EAAUQ,IAAV,EAAgBA,IAAI,CAACb,aAAD,CAApB,EAAqCJ,OAArC,EAA8CC,OAA9C,EAAuDK,KAAvD,EAA8DC,KAA9D,EAAqEH,aAArE,EAAoFC,IAApF,CAAlC;;AACA,UAAII,OAAO,IAAID,IAAI,CAACQ,WAAD,CAAJ,CAAkBK,MAAjC,EAAyC;AACvCV,QAAAA,KAAK,CAACW,IAAN,CAAWd,IAAX;AACD;AACF,KAbD,MAaO,IAAIC,OAAJ,EAAa;AAClBE,MAAAA,KAAK,CAACW,IAAN,CAAWd,IAAX;AACD;AACF,GArBQ,CAAT;AAsBA,SAAOG,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIY,UAAU,GAAG/B,oBAAoB,CAAC,UAAUM,MAAV,EAAkBC,GAAlB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CK,KAA/C,EAAsDH,aAAtD,EAAqEC,IAArE,EAA2E;AAC/G,SAAOT,cAAc,CAAC,CAAD,EAAIE,MAAJ,EAAYC,GAAZ,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,IAAnC,EAAyCK,KAAzC,EAAgDH,aAAhD,EAA+DC,IAA/D,CAArB;AACD,CAFoC,CAArC;AAIAmB,MAAM,CAACC,OAAP,GAAiBF,UAAjB","sourcesContent":["var helperCreateTreeFunc = require('./helperCreateTreeFunc')\r\n\r\nvar arrayEach = require('./arrayEach')\r\n\r\nvar assign = require('./assign')\r\n\r\nfunction searchTreeItem (parentAllow, parent, obj, iterate, context, path, node, parseChildren, opts) {\r\n  var paths, nodes, rest, isAllow, hasChild\r\n  var rests = []\r\n  var hasOriginal = opts.original\r\n  var sourceData = opts.data\r\n  var mapChildren = opts.mapChildren || parseChildren\r\n  arrayEach(obj, function (item, index) {\r\n    paths = path.concat(['' + index])\r\n    nodes = node.concat([item])\r\n    isAllow = parentAllow || iterate.call(context, item, index, obj, paths, parent, nodes)\r\n    hasChild = parseChildren && item[parseChildren]\r\n    if (isAllow || hasChild) {\r\n      if (hasOriginal) {\r\n        rest = item\r\n      } else {\r\n        rest = assign({}, item)\r\n        if (sourceData) {\r\n          rest[sourceData] = item\r\n        }\r\n      }\r\n      rest[mapChildren] = searchTreeItem(isAllow, item, item[parseChildren], iterate, context, paths, nodes, parseChildren, opts)\r\n      if (isAllow || rest[mapChildren].length) {\r\n        rests.push(rest)\r\n      }\r\n    } else if (isAllow) {\r\n      rests.push(rest)\r\n    }\r\n  })\r\n  return rests\r\n}\r\n\r\n/**\r\n  * 从树结构中根据回调查找数据\r\n  *\r\n  * @param {Object} obj 对象/数组\r\n  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调\r\n  * @param {Object} options {children: 'children'}\r\n  * @param {Object} context 上下文\r\n  * @return {Array}\r\n  */\r\nvar searchTree = helperCreateTreeFunc(function (parent, obj, iterate, context, path, nodes, parseChildren, opts) {\r\n  return searchTreeItem(0, parent, obj, iterate, context, path, nodes, parseChildren, opts)\r\n})\r\n\r\nmodule.exports = searchTree\r\n"]},"metadata":{},"sourceType":"script"}